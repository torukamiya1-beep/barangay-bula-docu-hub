"use strict";(self["webpackChunkbosfdr"]=self["webpackChunkbosfdr"]||[]).push([[447],{1447:function(e,t,a){a.r(t),a.d(t,{default:function(){return ce}});var s=a(6768),n=a(4232),r=a(5130);const i={class:"admin-activity-logs"},o={class:"dashboard-container"},l={class:"container-fluid p-4"},d={class:"row mb-4"},c={class:"col-12"},u={class:"d-flex justify-content-between align-items-center flex-wrap"},p={class:"d-flex gap-2"},g=["disabled"],m={class:"row mb-4"},h={class:"col-12"},y={class:"card shadow"},f={class:"card-header d-flex justify-content-between align-items-center"},b=["aria-expanded"],v={class:"row"},L={class:"col-md-3 mb-3"},w={class:"col-md-3 mb-3"},k={class:"col-md-3 mb-3"},_={class:"col-md-3 mb-3"},C={class:"row"},S={class:"col-md-3 mb-3"},A={class:"col-md-3 mb-3"},T={class:"col-md-3 mb-3"},$={class:"col-md-3 mb-3"},P={class:"text-end"},D={class:"row"},U={class:"col-12"},x={class:"card shadow"},E={class:"card-body"},R={key:0,class:"text-center py-4"},q={key:1,class:"text-center py-5"},F={key:2,class:"table-responsive"},I={class:"table table-hover"},M={class:"fw-bold"},j={class:"text-muted small"},O={class:"text-muted small"},N={class:"activity-cell"},B={key:0,class:"badge bg-info text-white"},X={key:1,class:"text-muted"},z={key:1,class:"text-muted"},J={class:"small"},V=["onClick"],W={key:3,class:"d-flex justify-content-between align-items-center mt-3"},H={class:"text-muted"},K={class:"pagination pagination-sm mb-0"},G=["disabled"],Q=["onClick"],Y=["disabled"];function Z(e,t,a,Z,ee,te){const ae=(0,s.g2)("AdminHeader"),se=(0,s.g2)("AdminSidebar");return(0,s.uX)(),(0,s.CE)("div",i,[(0,s.bF)(ae,{userName:ee.adminData?.first_name||"Admin",showUserDropdown:ee.showUserDropdown,sidebarCollapsed:ee.sidebarCollapsed,activeMenu:te.activeMenu,onSidebarToggle:te.handleSidebarToggle,onUserDropdownToggle:te.handleUserDropdownToggle,onMenuAction:te.handleMenuAction,onLogout:te.handleLogout},null,8,["userName","showUserDropdown","sidebarCollapsed","activeMenu","onSidebarToggle","onUserDropdownToggle","onMenuAction","onLogout"]),(0,s.Lk)("div",{class:(0,n.C4)(["mobile-overlay",{active:!ee.sidebarCollapsed&&ee.isMobile}]),onClick:t[0]||(t[0]=(...e)=>te.closeMobileSidebar&&te.closeMobileSidebar(...e))},null,2),(0,s.Lk)("div",o,[(0,s.bF)(se,{collapsed:ee.sidebarCollapsed,activeMenu:te.activeMenu,onMenuChange:te.handleMenuChange,onLogout:te.handleLogout,onToggleSidebar:te.handleSidebarToggle},null,8,["collapsed","activeMenu","onMenuChange","onLogout","onToggleSidebar"]),(0,s.Lk)("main",{class:(0,n.C4)(["main-content",{"sidebar-collapsed":ee.sidebarCollapsed}])},[(0,s.Lk)("div",l,[(0,s.Lk)("div",d,[(0,s.Lk)("div",c,[(0,s.Lk)("div",u,[(0,s.Lk)("div",p,[(0,s.Lk)("button",{class:"btn btn-outline-success btn-sm",onClick:t[1]||(t[1]=(...e)=>te.loadLogs&&te.loadLogs(...e)),disabled:ee.loading},[(0,s.Lk)("i",{class:(0,n.C4)(["fas fa-sync-alt me-1",{"fa-spin":ee.loading}])},null,2),t[17]||(t[17]=(0,s.eW)(" Refresh "))],8,g),(0,s.Lk)("button",{class:"btn btn-success btn-sm",onClick:t[2]||(t[2]=(...e)=>te.exportLogs&&te.exportLogs(...e))},t[18]||(t[18]=[(0,s.Lk)("i",{class:"fas fa-download me-1"},null,-1),(0,s.eW)(" Export ")])),(0,s.Lk)("button",{class:"btn btn-info btn-sm",onClick:t[3]||(t[3]=(...e)=>te.printLogs&&te.printLogs(...e))},t[19]||(t[19]=[(0,s.Lk)("i",{class:"fas fa-print me-1"},null,-1),(0,s.eW)(" Print ")]))])])])]),(0,s.Lk)("div",m,[(0,s.Lk)("div",h,[(0,s.Lk)("div",y,[(0,s.Lk)("div",f,[t[20]||(t[20]=(0,s.Lk)("h6",{class:"mb-0"},[(0,s.Lk)("i",{class:"fas fa-filter me-2"}),(0,s.eW)(" Activity Filters ")],-1)),(0,s.Lk)("button",{class:"btn btn-sm btn-outline-primary",onClick:t[4]||(t[4]=(...e)=>te.toggleFilters&&te.toggleFilters(...e)),"aria-expanded":ee.filtersExpanded,"aria-controls":"filtersCollapse"},[(0,s.Lk)("i",{class:(0,n.C4)(["fas",ee.filtersExpanded?"fa-chevron-up":"fa-chevron-down"])},null,2),(0,s.eW)(" "+(0,n.v_)(ee.filtersExpanded?"Hide":"Show")+" Filters ",1)],8,b)]),(0,s.Lk)("div",{class:(0,n.C4)(["card-body",{collapse:!ee.filtersExpanded}]),id:"filtersCollapse"},[(0,s.Lk)("div",v,[(0,s.Lk)("div",L,[t[21]||(t[21]=(0,s.Lk)("label",{class:"form-label"},"Date From",-1)),(0,s.bo)((0,s.Lk)("input",{type:"date",class:"form-control","onUpdate:modelValue":t[5]||(t[5]=e=>ee.filters.dateFrom=e)},null,512),[[r.Jo,ee.filters.dateFrom]])]),(0,s.Lk)("div",w,[t[22]||(t[22]=(0,s.Lk)("label",{class:"form-label"},"Date To",-1)),(0,s.bo)((0,s.Lk)("input",{type:"date",class:"form-control","onUpdate:modelValue":t[6]||(t[6]=e=>ee.filters.dateTo=e)},null,512),[[r.Jo,ee.filters.dateTo]])]),(0,s.Lk)("div",k,[t[24]||(t[24]=(0,s.Lk)("label",{class:"form-label"},"Activity Type",-1)),(0,s.bo)((0,s.Lk)("select",{class:"form-select","onUpdate:modelValue":t[7]||(t[7]=e=>ee.filters.type=e)},t[23]||(t[23]=[(0,s.Fv)('<option value="" data-v-d0c4a8e4>All Types</option><option value="login" data-v-d0c4a8e4>Login</option><option value="logout" data-v-d0c4a8e4>Logout</option><option value="document_request" data-v-d0c4a8e4>Document Request</option><option value="status_change" data-v-d0c4a8e4>Status Change</option><option value="approval" data-v-d0c4a8e4>Approval</option><option value="rejection" data-v-d0c4a8e4>Rejection</option><option value="user_management" data-v-d0c4a8e4>User Management</option><option value="payment" data-v-d0c4a8e4>Payment</option><option value="system" data-v-d0c4a8e4>System</option><option value="error" data-v-d0c4a8e4>Error</option>',11)]),512),[[r.u1,ee.filters.type]])]),(0,s.Lk)("div",_,[t[26]||(t[26]=(0,s.Lk)("label",{class:"form-label"},"User Type",-1)),(0,s.bo)((0,s.Lk)("select",{class:"form-select","onUpdate:modelValue":t[8]||(t[8]=e=>ee.filters.userType=e)},t[25]||(t[25]=[(0,s.Fv)('<option value="" data-v-d0c4a8e4>All User Types</option><option value="admin" data-v-d0c4a8e4>Administrator</option><option value="employee" data-v-d0c4a8e4>Employee</option><option value="client" data-v-d0c4a8e4>Client</option><option value="system" data-v-d0c4a8e4>System</option>',5)]),512),[[r.u1,ee.filters.userType]])])]),(0,s.Lk)("div",C,[(0,s.Lk)("div",S,[t[28]||(t[28]=(0,s.Lk)("label",{class:"form-label"},"Document Type",-1)),(0,s.bo)((0,s.Lk)("select",{class:"form-select","onUpdate:modelValue":t[9]||(t[9]=e=>ee.filters.documentType=e)},t[27]||(t[27]=[(0,s.Lk)("option",{value:""},"All Document Types",-1),(0,s.Lk)("option",{value:"Cedula"},"Cedula",-1),(0,s.Lk)("option",{value:"Barangay Clearance"},"Barangay Clearance",-1)]),512),[[r.u1,ee.filters.documentType]])]),(0,s.Lk)("div",A,[t[30]||(t[30]=(0,s.Lk)("label",{class:"form-label"},"Status Changes",-1)),(0,s.bo)((0,s.Lk)("select",{class:"form-select","onUpdate:modelValue":t[10]||(t[10]=e=>ee.filters.statusChange=e)},t[29]||(t[29]=[(0,s.Fv)('<option value="" data-v-d0c4a8e4>All Status Changes</option><option value="pending" data-v-d0c4a8e4>To Pending</option><option value="approved" data-v-d0c4a8e4>To Approved</option><option value="processing" data-v-d0c4a8e4>To Processing</option><option value="ready_for_pickup" data-v-d0c4a8e4>To Ready for Pickup</option><option value="completed" data-v-d0c4a8e4>To Completed</option><option value="rejected" data-v-d0c4a8e4>To Rejected</option><option value="cancelled" data-v-d0c4a8e4>To Cancelled</option>',8)]),512),[[r.u1,ee.filters.statusChange]])]),(0,s.Lk)("div",T,[t[31]||(t[31]=(0,s.Lk)("label",{class:"form-label"},"User Search",-1)),(0,s.bo)((0,s.Lk)("input",{type:"text",class:"form-control",placeholder:"Search by user name...","onUpdate:modelValue":t[11]||(t[11]=e=>ee.filters.user=e)},null,512),[[r.Jo,ee.filters.user]])]),(0,s.Lk)("div",$,[t[32]||(t[32]=(0,s.Lk)("label",{class:"form-label"},"IP Address",-1)),(0,s.bo)((0,s.Lk)("input",{type:"text",class:"form-control",placeholder:"Search by IP...","onUpdate:modelValue":t[12]||(t[12]=e=>ee.filters.ipAddress=e)},null,512),[[r.Jo,ee.filters.ipAddress]])])]),(0,s.Lk)("div",P,[(0,s.Lk)("button",{class:"btn btn-primary btn-sm",onClick:t[13]||(t[13]=(...e)=>te.applyFilters&&te.applyFilters(...e))},t[33]||(t[33]=[(0,s.Lk)("i",{class:"fas fa-filter me-1"},null,-1),(0,s.eW)(" Apply Filters ")])),(0,s.Lk)("button",{class:"btn btn-outline-secondary btn-sm ms-2",onClick:t[14]||(t[14]=(...e)=>te.clearFilters&&te.clearFilters(...e))},t[34]||(t[34]=[(0,s.Lk)("i",{class:"fas fa-times me-1"},null,-1),(0,s.eW)(" Clear ")]))])],2)])])]),(0,s.Lk)("div",D,[(0,s.Lk)("div",U,[(0,s.Lk)("div",x,[t[39]||(t[39]=(0,s.Lk)("div",{class:"card-header py-3"},[(0,s.Lk)("h6",{class:"m-0 font-weight-bold text-primary"},[(0,s.Lk)("i",{class:"fas fa-list me-2"}),(0,s.eW)(" Activity Log Entries ")])],-1)),(0,s.Lk)("div",E,[ee.loading?((0,s.uX)(),(0,s.CE)("div",R,t[35]||(t[35]=[(0,s.Lk)("div",{class:"spinner-border text-primary",role:"status"},[(0,s.Lk)("span",{class:"visually-hidden"},"Loading...")],-1),(0,s.Lk)("p",{class:"text-muted mt-2"},"Loading activity logs...",-1)]))):0===ee.filteredLogs.length?((0,s.uX)(),(0,s.CE)("div",q,t[36]||(t[36]=[(0,s.Lk)("i",{class:"fas fa-clipboard-list fa-3x text-gray-300 mb-3"},null,-1),(0,s.Lk)("h5",{class:"text-gray-600"},"No activity logs found",-1),(0,s.Lk)("p",{class:"text-muted"},"No activities match your current filters.",-1)]))):((0,s.uX)(),(0,s.CE)("div",F,[(0,s.Lk)("table",I,[t[38]||(t[38]=(0,s.Lk)("thead",{class:"table-light"},[(0,s.Lk)("tr",null,[(0,s.Lk)("th",null,"Timestamp"),(0,s.Lk)("th",null,"User"),(0,s.Lk)("th",null,"Activity"),(0,s.Lk)("th",null,"Type"),(0,s.Lk)("th",null,"Document"),(0,s.Lk)("th",null,"Status"),(0,s.Lk)("th",null,"IP Address"),(0,s.Lk)("th",null,"Details")])],-1)),(0,s.Lk)("tbody",null,[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(te.paginatedLogs,(e=>((0,s.uX)(),(0,s.CE)("tr",{key:e.id},[(0,s.Lk)("td",null,(0,n.v_)(te.formatDateTime(e.timestamp)),1),(0,s.Lk)("td",null,[(0,s.Lk)("div",null,[(0,s.Lk)("div",M,(0,n.v_)(e.user_name),1),(0,s.Lk)("div",j,(0,n.v_)(e.user_role),1),(0,s.Lk)("div",O,[(0,s.Lk)("span",{class:(0,n.C4)(["badge badge-outline",te.getUserTypeBadgeClass(e.user_type)])},(0,n.v_)(te.formatUserType(e.user_type)),3)])])]),(0,s.Lk)("td",null,[(0,s.Lk)("div",N,(0,n.v_)(e.activity),1)]),(0,s.Lk)("td",null,[(0,s.Lk)("span",{class:(0,n.C4)(["badge",te.getTypeBadgeClass(e.type)])},(0,n.v_)(te.formatType(e.type)),3)]),(0,s.Lk)("td",null,[e.document_type?((0,s.uX)(),(0,s.CE)("span",B,(0,n.v_)(e.document_type),1)):((0,s.uX)(),(0,s.CE)("span",X,"-"))]),(0,s.Lk)("td",null,[e.status_change?((0,s.uX)(),(0,s.CE)("span",{key:0,class:(0,n.C4)(["badge",te.getStatusBadgeClass(e.status_change)])},(0,n.v_)(te.formatStatus(e.status_change)),3)):((0,s.uX)(),(0,s.CE)("span",z,"-"))]),(0,s.Lk)("td",null,[(0,s.Lk)("code",J,(0,n.v_)(e.ip_address),1)]),(0,s.Lk)("td",null,[(0,s.Lk)("button",{class:"btn btn-outline-info btn-sm",onClick:t=>te.viewDetails(e),title:"View Details"},t[37]||(t[37]=[(0,s.Lk)("i",{class:"fas fa-eye"},null,-1)]),8,V)])])))),128))])])])),te.totalPages>1?((0,s.uX)(),(0,s.CE)("div",W,[(0,s.Lk)("div",H," Showing "+(0,n.v_)((ee.currentPage-1)*ee.itemsPerPage+1)+" to "+(0,n.v_)(Math.min(ee.currentPage*ee.itemsPerPage,ee.filteredLogs.length))+" of "+(0,n.v_)(ee.filteredLogs.length)+" entries ",1),(0,s.Lk)("nav",null,[(0,s.Lk)("ul",K,[(0,s.Lk)("li",{class:(0,n.C4)(["page-item",{disabled:1===ee.currentPage}])},[(0,s.Lk)("button",{class:"page-link",onClick:t[15]||(t[15]=e=>te.changePage(ee.currentPage-1)),disabled:1===ee.currentPage}," Previous ",8,G)],2),((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(te.visiblePages,(e=>((0,s.uX)(),(0,s.CE)("li",{key:e,class:(0,n.C4)(["page-item",{active:e===ee.currentPage}])},[(0,s.Lk)("button",{class:"page-link",onClick:t=>te.changePage(e)},(0,n.v_)(e),9,Q)],2)))),128)),(0,s.Lk)("li",{class:(0,n.C4)(["page-item",{disabled:ee.currentPage===te.totalPages}])},[(0,s.Lk)("button",{class:"page-link",onClick:t[16]||(t[16]=e=>te.changePage(ee.currentPage+1)),disabled:ee.currentPage===te.totalPages}," Next ",8,Y)],2)])])])):(0,s.Q3)("",!0)])])])])])],2)])])}a(4114),a(8111),a(2489),a(1701);var ee=a(3237),te=a(2944),ae=a(9197),se=a(4300);class ne{async getActivityLogs(e={},t=1,a=20){try{const s=new URLSearchParams({page:t.toString(),limit:a.toString(),...Object.fromEntries(Object.entries(e).filter((([,e])=>""!==e&&null!==e&&void 0!==e)))}),n=await se["default"].get(`/admin/activity-logs?${s}`);return n.data}catch(s){throw this.handleError(s)}}async getComprehensiveActivityLogs(e={},t=1,a=50){try{const s=new URLSearchParams({page:t.toString(),limit:a.toString(),...Object.fromEntries(Object.entries(e).filter((([,e])=>""!==e&&null!==e&&void 0!==e)))}),n=await se["default"].get(`/admin/activity-logs/comprehensive?${s}`);return n.data}catch(s){throw this.handleError(s)}}async getRecentActivity(e=10){try{const t=await se["default"].get(`/admin/dashboard/activity?limit=${e}`);return t.data}catch(t){throw this.handleError(t)}}async getActivityLogDetails(e){try{const t=await se["default"].get(`/admin/activity-logs/${e}`);return t.data}catch(t){throw this.handleError(t)}}async exportActivityLogs(e={}){try{const t=new URLSearchParams(Object.fromEntries(Object.entries(e).filter((([,e])=>""!==e&&null!==e&&void 0!==e)))),a=await se["default"].get(`/admin/activity-logs/export?${t}`,{responseType:"blob"});return a.data}catch(t){throw this.handleError(t)}}async getActivityStats(e="week"){try{const t=await se["default"].get(`/admin/activity-logs/stats?period=${e}`);return t.data}catch(t){throw this.handleError(t)}}transformStatusHistoryToActivityLogs(e){return e.map((e=>({id:e.id,timestamp:e.changed_at,user_name:e.changed_by_name||"System",user_role:this.getUserRole(e.changed_by_name),user_type:this.getUserType(e.changed_by_name),activity:this.generateActivityDescription(e),type:"status_change",document_type:e.document_type,status_change:e.new_status,ip_address:e.ip_address||"N/A",details:this.generateDetailedDescription(e)})))}generateActivityDescription(e){const t=e.old_status?`changed status from "${e.old_status}" to "${e.new_status}"`:`set status to "${e.new_status}"`;return`${e.changed_by_name||"System"} ${t} for ${e.document_type} request ${e.request_number}`}generateDetailedDescription(e){let t=`Request: ${e.request_number}\n`;return t+=`Document Type: ${e.document_type}\n`,t+=`Client: ${e.client_name||"Unknown"}\n`,e.old_status?t+=`Status Changed: ${e.old_status} → ${e.new_status}\n`:t+=`Status Set: ${e.new_status}\n`,e.change_reason&&(t+=`Reason: ${e.change_reason}\n`),t+=`Changed At: ${new Date(e.changed_at).toLocaleString()}\n`,t+=`Changed By: ${e.changed_by_name||"System"}`,t}getUserRole(e){return e&&"System"!==e?"Administrator":"System"}getUserType(e){return e&&"System"!==e?"admin":"system"}handleError(e){return console.error("ActivityLogService error:",e),e.response?{success:!1,message:e.response.data?.message||"An error occurred",errors:e.response.data?.errors||[],status:e.response.status}:{success:!1,message:e.message||"Network error occurred",errors:[],status:0}}parseError(e){return this.handleError(e)}}var re=new ne,ie=a(9699),oe={name:"AdminActivityLogs",components:{AdminHeader:ee.A,AdminSidebar:te.A},data(){return{sidebarCollapsed:!1,showUserDropdown:!1,isMobile:!1,adminData:null,loading:!1,logs:[],filteredLogs:[],currentPage:1,itemsPerPage:20,filtersExpanded:!1,filters:{dateFrom:"",dateTo:"",type:"",userType:"",documentType:"",statusChange:"",user:"",ipAddress:""}}},computed:{activeMenu(){const e=this.$route.path;return e.includes("/admin/users")?"users":e.includes("/admin/requests")?"requests":e.includes("/admin/reports")?"reports":e.includes("/admin/settings")?"settings":e.includes("/admin/activity-logs")?"activity":e.includes("/admin/profile")?"profile":"dashboard"},paginatedLogs(){const e=(this.currentPage-1)*this.itemsPerPage,t=e+this.itemsPerPage;return this.filteredLogs.slice(e,t)},totalPages(){return Math.ceil(this.filteredLogs.length/this.itemsPerPage)},visiblePages(){const e=[],t=Math.max(1,this.currentPage-2),a=Math.min(this.totalPages,this.currentPage+2);for(let s=t;s<=a;s++)e.push(s);return e}},async mounted(){if(!ae["default"].isLoggedIn()||"admin"!==ae["default"].getUserType())return void this.$router.push("/login");this.initializeUI();const e=new Date,t=new Date(e.getTime()-2592e6);this.filters.dateTo=e.toISOString().split("T")[0],this.filters.dateFrom=t.toISOString().split("T")[0],await this.loadAdminProfile(),await this.loadLogs()},beforeUnmount(){this.handleResize&&window.removeEventListener("resize",this.handleResize)},methods:{initializeUI(){if(this.isMobile=window.innerWidth<=768,this.isMobile)this.sidebarCollapsed=!0;else{const e=localStorage.getItem("adminSidebarCollapsed");this.sidebarCollapsed=!!e&&JSON.parse(e)}this.handleResize=()=>{const e=this.isMobile;if(this.isMobile=window.innerWidth<=768,this.isMobile&&!e)this.sidebarCollapsed=!0;else if(!this.isMobile&&e){const e=localStorage.getItem("adminSidebarCollapsed");this.sidebarCollapsed=!!e&&JSON.parse(e)}},window.addEventListener("resize",this.handleResize)},handleSidebarToggle(){this.sidebarCollapsed=!this.sidebarCollapsed,localStorage.setItem("adminSidebarCollapsed",JSON.stringify(this.sidebarCollapsed))},handleMenuChange(e){const t={dashboard:"/admin/dashboard",users:"/admin/users",requests:"/admin/requests",reports:"/admin/reports",settings:"/admin/settings",activity:"/admin/activity-logs",profile:"/admin/profile"};this.isMobile&&(this.sidebarCollapsed=!0),t[e]&&this.$router.push(t[e])},handleUserDropdownToggle(){this.showUserDropdown=!this.showUserDropdown},handleMenuAction(e){"profile"===e?this.$router.push("/admin/profile"):"settings"===e&&this.$router.push("/admin/settings"),this.showUserDropdown=!1},closeMobileSidebar(){this.isMobile&&(this.sidebarCollapsed=!0)},handleLogout(){ae["default"].logout(),this.$router.push("/login")},async loadAdminProfile(){try{const e=ae["default"].getCurrentUser();e&&e.profile?this.adminData=e.profile:this.adminData={first_name:e?.username||"Admin",role:e?.role||"admin"}}catch(e){console.error("Failed to load admin profile:",e);const t=ae["default"].getCurrentUser();this.adminData={first_name:t?.username||"Admin",role:t?.role||"admin"}}},async loadLogs(){this.loading=!0;try{console.log("🔄 Loading activity logs...");let s=null;try{console.log("🔄 Loading from comprehensive activity logs API...");const e=await re.getComprehensiveActivityLogs(this.filters,1,100);if(!(e.success&&e.data&&e.data.activities&&e.data.activities.length>0))throw new Error("Comprehensive API returned no data");console.log("✅ Loaded data from comprehensive activity logs API:",e.data.activities.length,"records"),s=e.data.activities}catch(e){console.log("⚠️  Comprehensive activity logs API failed:",e.message);try{console.log("🔄 Fallback: Loading from legacy activity logs API...");const e=await re.getActivityLogs(this.filters,1,100);e.success&&e.data&&e.data.activities&&e.data.activities.length>0&&(console.log("✅ Loaded data from legacy activity logs API:",e.data.activities.length,"records"),s=e.data.activities)}catch(t){console.log("⚠️  Legacy activity logs API failed:",t.message);try{console.log("🔄 Final fallback: Loading from adminDocumentService...");const e=await ie.A.getRecentActivity(100);e.success&&e.data&&e.data.length>0&&(console.log("✅ Loaded data from adminDocumentService:",e.data.length,"records"),s=e.data.map((e=>({id:e.id,timestamp:e.changed_at,user_name:e.changed_by_name||"System",user_role:this.determineUserRole(e.changed_by_name),user_type:this.determineUserType(e.changed_by_name),activity:this.generateActivityDescription(e),type:"status_change",document_type:e.document_type,status_change:e.new_status,ip_address:"N/A",details:this.generateDetailedDescription(e)}))))}catch(a){console.log("⚠️  AdminDocumentService final fallback failed:",a.message)}}}s&&s.length>0?(this.logs=s,console.log("✅ Successfully loaded activity logs:",this.logs.length,"records")):(console.log("⚠️  No real activity data available, showing system status"),this.logs=[{id:1,timestamp:(new Date).toISOString(),user_name:"System",user_role:"System",user_type:"system",activity:"Activity logging system initialized",type:"info",document_type:null,status_change:null,ip_address:"N/A",details:"The activity logging system is properly configured. Real activity data will appear here when:\n• Users log in/out of the system\n• Document requests are submitted\n• Status changes are made by administrators\n• Administrative actions are performed\n\nCurrent database status: 15 activity records available in audit_logs table, 6 records in request_status_history table."},{id:2,timestamp:new Date(Date.now()-6e4).toISOString(),user_name:"System",user_role:"System",user_type:"system",activity:"Backend services status check",type:"info",document_type:null,status_change:null,ip_address:"N/A",details:"Backend API endpoints are configured and ready:\n• /api/admin/activity-logs/comprehensive - Primary endpoint (audit_logs table)\n• /api/admin/activity-logs - Legacy endpoint (request_status_history table)\n• /api/admin/documents/recent-activity - Fallback endpoint\n\nIf you see this message, it means the frontend is working but unable to connect to the backend services. Please ensure the backend server is running on port 7000."}]),this.filteredLogs=[...this.logs],this.applyFilters()}catch(s){console.error("Failed to load activity logs:",s),this.logs=[{id:1,timestamp:(new Date).toISOString(),user_name:"System",user_role:"System",user_type:"system",activity:"Activity logs service unavailable",type:"error",document_type:null,status_change:null,ip_address:"N/A",details:"Unable to load activity logs from server. Please check your connection and try again."}],this.filteredLogs=[...this.logs]}finally{this.loading=!1}},applyFilters(){let e=[...this.logs];if(this.filters.dateFrom&&(e=e.filter((e=>new Date(e.timestamp)>=new Date(this.filters.dateFrom)))),this.filters.dateTo&&(e=e.filter((e=>new Date(e.timestamp)<=new Date(this.filters.dateTo+"T23:59:59")))),this.filters.type&&(e=e.filter((e=>e.type===this.filters.type))),this.filters.userType&&(e=e.filter((e=>e.user_type===this.filters.userType))),this.filters.documentType&&(e=e.filter((e=>e.document_type===this.filters.documentType))),this.filters.statusChange&&(e=e.filter((e=>e.status_change===this.filters.statusChange))),this.filters.user){const t=this.filters.user.toLowerCase();e=e.filter((e=>e.user_name.toLowerCase().includes(t)||e.user_role.toLowerCase().includes(t)))}if(this.filters.ipAddress){const t=this.filters.ipAddress.toLowerCase();e=e.filter((e=>e.ip_address.toLowerCase().includes(t)))}this.filteredLogs=e,this.currentPage=1},clearFilters(){this.filters={dateFrom:"",dateTo:"",type:"",userType:"",documentType:"",statusChange:"",user:"",ipAddress:""},this.filteredLogs=[...this.logs],this.currentPage=1},toggleFilters(){this.filtersExpanded=!this.filtersExpanded},changePage(e){e>=1&&e<=this.totalPages&&(this.currentPage=e)},getInitials(e){return e?e.split(" ").map((e=>e.charAt(0))).join("").toUpperCase().slice(0,2):"?"},getTypeBadgeClass(e){const t={login:"bg-success",logout:"bg-secondary",document_request:"bg-warning",status_change:"bg-primary",approval:"bg-success",rejection:"bg-danger",payment:"bg-info",user_management:"bg-purple",system:"bg-info",error:"bg-danger"};return t[e]||"bg-secondary"},getUserTypeBadgeClass(e){const t={admin:"badge-admin",employee:"badge-employee",client:"badge-client",system:"badge-system"};return t[e]||"badge-secondary"},getStatusBadgeClass(e){const t={pending:"bg-warning text-dark",approved:"bg-success",processing:"bg-primary",ready_for_pickup:"bg-info",completed:"bg-success",rejected:"bg-danger",cancelled:"bg-secondary"};return t[e]||"bg-secondary"},formatType(e){return e.replace(/_/g," ").replace(/\b\w/g,(e=>e.toUpperCase()))},formatUserType(e){const t={admin:"Administrator",employee:"Employee",client:"Client",system:"System"};return t[e]||e},formatStatus(e){return e.replace(/_/g," ").replace(/\b\w/g,(e=>e.toUpperCase()))},determineUserRole(e){return e&&"System"!==e?"Administrator":"System"},determineUserType(e){return e&&"System"!==e?"admin":"system"},generateActivityDescription(e){const t=e.old_status?`changed status from "${e.old_status}" to "${e.new_status}"`:`set status to "${e.new_status}"`;return`${e.changed_by_name||"System"} ${t} for ${e.document_type} request ${e.request_number}`},generateDetailedDescription(e){let t=`Request: ${e.request_number}\n`;return t+=`Document Type: ${e.document_type}\n`,t+=`Client: ${e.client_name||"Unknown"}\n`,e.old_status?t+=`Status Changed: ${e.old_status} → ${e.new_status}\n`:t+=`Status Set: ${e.new_status}\n`,e.change_reason&&(t+=`Reason: ${e.change_reason}\n`),t+=`Changed At: ${new Date(e.changed_at).toLocaleString()}\n`,t+=`Changed By: ${e.changed_by_name||"System"}`,t},formatDateTime(e){if(!e)return"";const t=new Date(e);return t.toLocaleString("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})},viewDetails(e){const t=`\nActivity Log Details\n\nTimestamp: ${this.formatDateTime(e.timestamp)}\nUser: ${e.user_name} (${e.user_role})\nUser Type: ${this.formatUserType(e.user_type)}\nActivity: ${e.activity}\nType: ${this.formatType(e.type)}\nDocument Type: ${e.document_type||"N/A"}\nStatus Change: ${e.status_change?this.formatStatus(e.status_change):"N/A"}\nIP Address: ${e.ip_address}\n\nDetails:\n${e.details}\n      `.trim();alert(t)},exportLogs(){try{const e=["Timestamp","User Name","User Type","Activity","Type","Document Type","Status Change","IP Address","Details"],t=[e.join(","),...this.filteredLogs.map((e=>[this.formatDateTime(e.timestamp),`"${e.user_name}"`,e.user_type||"",`"${e.activity}"`,e.type,e.document_type||"",e.status_change||"",e.ip_address,`"${e.details}"`].join(",")))].join("\n"),a=new Blob([t],{type:"text/csv;charset=utf-8;"}),s=document.createElement("a"),n=URL.createObjectURL(a);s.setAttribute("href",n),s.setAttribute("download",`activity-logs-${(new Date).toISOString().split("T")[0]}.csv`),s.style.visibility="hidden",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n),console.log("Activity logs exported successfully")}catch(e){console.error("Failed to export logs:",e),alert("Failed to export activity logs. Please try again.")}},printLogs(){try{const e=`\n          <html>\n            <head>\n              <title>Activity Logs Report</title>\n              <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                .header { text-align: center; margin-bottom: 30px; }\n                .filters { margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 5px; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; font-size: 12px; }\n                th { background-color: #f2f2f2; font-weight: bold; }\n                .timestamp { white-space: nowrap; }\n                .activity { max-width: 200px; word-wrap: break-word; }\n                .details { max-width: 300px; word-wrap: break-word; }\n                .badge { padding: 2px 6px; border-radius: 3px; font-size: 10px; }\n                .badge-login { background: #d4edda; color: #155724; }\n                .badge-logout { background: #d1ecf1; color: #0c5460; }\n                .badge-document_request { background: #fff3cd; color: #856404; }\n                .badge-status_change { background: #cce5ff; color: #004085; }\n                .badge-approval { background: #d4edda; color: #155724; }\n                .badge-rejection { background: #f8d7da; color: #721c24; }\n                .badge-payment { background: #e2e3e5; color: #383d41; }\n                .badge-user_management { background: #ffeaa7; color: #6c5ce7; }\n                .badge-system { background: #74b9ff; color: #0984e3; }\n                .badge-error { background: #fd79a8; color: #e84393; }\n                @media print {\n                  body { margin: 0; }\n                  .no-print { display: none; }\n                }\n              </style>\n            </head>\n            <body>\n              <div class="header">\n                <h1>Activity Logs Report</h1>\n                <p>Generated on: ${(new Date).toLocaleString()}</p>\n                <p>Total Records: ${this.filteredLogs.length}</p>\n              </div>\n\n              <div class="filters">\n                <h3>Applied Filters:</h3>\n                <p><strong>Date Range:</strong> ${this.filters.dateFrom||"All"} to ${this.filters.dateTo||"All"}</p>\n                <p><strong>Activity Type:</strong> ${this.filters.type||"All"}</p>\n                <p><strong>User Type:</strong> ${this.filters.userType||"All"}</p>\n                <p><strong>Document Type:</strong> ${this.filters.documentType||"All"}</p>\n                <p><strong>Status Change:</strong> ${this.filters.statusChange||"All"}</p>\n                <p><strong>User Search:</strong> ${this.filters.user||"None"}</p>\n                <p><strong>IP Address:</strong> ${this.filters.ipAddress||"All"}</p>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>User</th>\n                    <th>Activity</th>\n                    <th>Type</th>\n                    <th>Document</th>\n                    <th>Status</th>\n                    <th>IP Address</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.filteredLogs.map((e=>`\n                    <tr>\n                      <td class="timestamp">${this.formatDateTime(e.timestamp)}</td>\n                      <td>\n                        <strong>${e.user_name}</strong><br>\n                        <small>${e.user_role}</small>\n                      </td>\n                      <td class="activity">${e.activity}</td>\n                      <td><span class="badge badge-${e.type}">${this.formatType(e.type)}</span></td>\n                      <td>${e.document_type||"-"}</td>\n                      <td>${e.status_change||"-"}</td>\n                      <td>${e.ip_address}</td>\n                      <td class="details">${e.details}</td>\n                    </tr>\n                  `)).join("")}\n                </tbody>\n              </table>\n            </body>\n          </html>\n        `,t=window.open("","_blank");t.document.write(e),t.document.close(),t.focus(),t.print(),t.close()}catch(e){console.error("Failed to print logs:",e),alert("Failed to print activity logs. Please try again.")}}}},le=a(1241);const de=(0,le.A)(oe,[["render",Z],["__scopeId","data-v-d0c4a8e4"]]);var ce=de},9699:function(e,t,a){var s=a(4300);class n{async getDashboardStats(){try{const e=await s["default"].get("/admin/documents/dashboard/stats");return e.data}catch(e){throw this.handleError(e)}}async getRecentActivity(e=10){try{const t=await s["default"].get(`/admin/documents/dashboard/recent?limit=${e}`);return t.data}catch(t){throw this.handleError(t)}}async getAllRequests(e={}){try{const t=new URLSearchParams(e).toString(),a=await s["default"].get(`/admin/documents/requests?${t}`);return a.data}catch(t){throw this.handleError(t)}}async getRequestDetails(e){try{const t=await s["default"].get(`/admin/documents/requests/${e}`);return t.data}catch(t){throw this.handleError(t)}}async getRequestHistory(e){try{const t=await s["default"].get(`/admin/documents/requests/${e}/history`);return t.data}catch(t){throw this.handleError(t)}}async getStatusOptions(){try{const e=await s["default"].get("/admin/documents/status-options");return e.data}catch(e){throw this.handleError(e)}}async getDocumentTypes(){try{const e=await s["default"].get("/admin/documents/document-types");return e.data}catch(e){throw this.handleError(e)}}async updateRequestStatus(e,t){try{const a=await s["default"].put(`/admin/documents/requests/${e}/status`,t);return a.data}catch(a){throw this.handleError(a)}}async approveRequest(e,t={}){try{const a=await s["default"].post(`/admin/documents/requests/${e}/approve`,t);return a.data}catch(a){throw this.handleError(a)}}async rejectRequest(e,t){try{const a=await s["default"].post(`/admin/documents/requests/${e}/reject`,t);return a.data}catch(a){throw this.handleError(a)}}async markAsProcessing(e,t={}){try{const a=await s["default"].post(`/admin/documents/requests/${e}/process`,t);return a.data}catch(a){throw this.handleError(a)}}async markAsCompleted(e,t={}){try{const a=await s["default"].post(`/admin/documents/requests/${e}/complete`,t);return a.data}catch(a){throw this.handleError(a)}}async bulkUpdateRequests(e){try{const t=await s["default"].post("/admin/documents/requests/bulk-update",e);return t.data}catch(t){throw this.handleError(t)}}async exportRequests(e={}){try{const t=new URLSearchParams(e).toString(),a=await s["default"].get(`/admin/documents/requests/export?${t}`,{responseType:"text"});return a.data}catch(t){throw this.handleError(t)}}downloadCSV(e,t="document_requests.csv"){const a=new Blob([e],{type:"text/csv;charset=utf-8;"}),s=document.createElement("a"),n=URL.createObjectURL(a);s.setAttribute("href",n),s.setAttribute("download",t),s.style.visibility="hidden",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}async getAnalyticsData(e="month"){try{const t=await s["default"].get(`/admin/documents/analytics?period=${e}`);return t.data}catch(t){throw this.handleError(t)}}async generateReport(e,t={}){try{const a=new URLSearchParams(t).toString(),n=await s["default"].get(`/admin/documents/reports/${e}?${a}`,{responseType:"csv"===t.format?"text":"json"});return n.data}catch(a){throw this.handleError(a)}}async verifyInPersonPayment(e,t){try{const a=await s["default"].post(`/admin/documents/requests/${e}/verify-payment`,t);return a.data}catch(a){throw this.handleError(a)}}async schedulePickup(e,t){try{const a=await s["default"].post(`/admin/documents/requests/${e}/schedule-pickup`,t);return a.data}catch(a){throw this.handleError(a)}}async confirmPickup(e,t){try{const a=await s["default"].post(`/admin/documents/requests/${e}/confirm-pickup`,t);return a.data}catch(a){throw this.handleError(a)}}async downloadReport(e,t={}){try{const a=await this.generateReport(e,{...t,format:"csv"}),s=`${e}_report_${(new Date).toISOString().split("T")[0]}.csv`;this.downloadCSV(a,s)}catch(a){throw this.handleError(a)}}formatStatus(e){return e?e.replace(/_/g," ").replace(/\b\w/g,(e=>e.toUpperCase())):"Unknown"}getStatusColor(e){const t={pending:"warning",under_review:"info",additional_info_required:"secondary",approved:"success",processing:"primary",ready_for_pickup:"info",completed:"success",cancelled:"secondary",rejected:"danger"};return t[e]||"secondary"}handleError(e){if(e.response){const t=e.response.data?.message||"An error occurred",a=e.response.data?.errors||[];return new Error(JSON.stringify({message:t,errors:a,status:e.response.status}))}return e.request?new Error(JSON.stringify({message:"Network error. Please check your connection.",errors:[],status:0})):new Error(JSON.stringify({message:e.message||"An unexpected error occurred",errors:[],status:0}))}parseError(e){try{return JSON.parse(e.message)}catch{return{message:e.message,errors:[],status:0}}}}t.A=new n}}]);