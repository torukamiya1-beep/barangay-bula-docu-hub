"use strict";(self["webpackChunkbosfdr"]=self["webpackChunkbosfdr"]||[]).push([[674],{2674:function(t,a,r){r.r(a);r(8111),r(3579),r(4979);var e=r(4300);class s{async registerAccount(t){try{const a=await e["default"].post("/admin/auth/register-account",t);return a.data}catch(a){throw this.handleError(a)}}async completeRegistration(t,a){try{const r=await e["default"].post(`/admin/auth/complete-registration/${t}`,a);return r.data}catch(r){throw this.handleError(r)}}async verifyEmail(t,a){try{const r=await e["default"].post("/admin/auth/verify-email",{email:t,otp:a});return r.data}catch(r){throw this.handleError(r)}}async resendVerificationEmail(t){try{const a=await e["default"].post("/admin/auth/resend-verification",{email:t});return a.data}catch(a){throw this.handleError(a)}}async login(t){try{const a=await e["default"].post("/admin/auth/login",t);return a.data.success&&a.data.data.token&&(localStorage.setItem("adminToken",a.data.data.token),localStorage.setItem("adminData",JSON.stringify(a.data.data.admin))),a.data}catch(a){throw this.handleError(a)}}async getProfile(){try{const t=await e["default"].get("/admin/auth/profile");return t.data.success&&t.data.data&&localStorage.setItem("adminData",JSON.stringify(t.data.data)),t.data}catch(t){throw this.handleError(t)}}async updateProfile(t){try{const a=await e["default"].put("/admin/auth/profile",t);return a.data.success&&a.data.data&&localStorage.setItem("adminData",JSON.stringify(a.data.data)),a.data}catch(a){throw this.handleError(a)}}async changePassword(t){try{const a=await e["default"].put("/admin/auth/change-password",t);return a.data}catch(a){throw this.handleError(a)}}async sendPasswordReset(t){try{const a=await e["default"].post("/admin/auth/forgot-password",{email:t});return a.data}catch(a){throw this.handleError(a)}}async resetPassword(t,a){try{const r=await e["default"].post("/admin/auth/reset-password",{token:t,newPassword:a});return r.data}catch(r){throw this.handleError(r)}}async getDashboardStats(){try{const t=await e["default"].get("/admin/dashboard/stats");return t.data}catch(t){throw this.handleError(t)}}async getRecentActivity(t=10){try{const a=await e["default"].get(`/admin/dashboard/activity?limit=${t}`);return a.data}catch(a){throw this.handleError(a)}}async getNotifications(t=20){try{const a=await e["default"].get(`/admin/notifications?limit=${t}`);return a.data}catch(a){throw this.handleError(a)}}async markNotificationAsRead(t){try{const a=await e["default"].put(`/admin/notifications/${t}/read`);return a.data}catch(a){throw this.handleError(a)}}async markAllNotificationsAsRead(){try{const t=await e["default"].put("/admin/notifications/read-all");return t.data}catch(t){throw this.handleError(t)}}async logout(){try{await e["default"].post("/admin/auth/logout")}catch(t){console.error("Logout API error:",t)}finally{this.clearAuthData()}}clearAuthData(){localStorage.removeItem("adminToken"),localStorage.removeItem("adminData")}isLoggedIn(){const t=localStorage.getItem("adminToken");return!!t}isAuthenticated(){const t=localStorage.getItem("adminToken"),a=this.getAdminData();if(!t||!a)return!1;try{const a=t.split(".");if(3!==a.length)return!1;const r=JSON.parse(atob(a[1])),e=Math.floor(Date.now()/1e3);return r.exp&&r.exp<e?(this.clearAuthData(),!1):"admin"===r.type||(this.clearAuthData(),!1)}catch(r){return console.error("Token validation error:",r),this.clearAuthData(),!1}}hasRole(t){const a=this.getAdminData();return!(!a||!this.isAuthenticated())&&("admin"===a.role||a.role===t)}hasAnyRole(t){return Array.isArray(t)?t.some((t=>this.hasRole(t))):this.hasRole(t)}getAdminData(){const t=localStorage.getItem("adminData");return t?JSON.parse(t):null}getToken(){return localStorage.getItem("adminToken")}async sendOTP(t,a="registration",r=""){try{const s=await e["default"].post("/otp/send",{email:t,purpose:a,firstName:r});return s.data}catch(s){throw this.handleError(s)}}async verifyOTP(t,a,r="registration"){try{const s=await e["default"].post("/otp/verify",{email:t,otp:a,purpose:r});return s.data}catch(s){throw this.handleError(s)}}async resendOTP(t,a="registration",r=""){try{const s=await e["default"].post("/otp/resend",{email:t,purpose:a,firstName:r});return s.data}catch(s){throw this.handleError(s)}}initializeAuth(){this.getToken()}handleError(t){if(t.response){const a=t.response.data?.message||"An error occurred",r=t.response.data?.errors||[];return new Error(JSON.stringify({message:a,errors:r,status:t.response.status}))}return t.request?new Error(JSON.stringify({message:"Network error. Please check your connection.",errors:[],status:0})):new Error(JSON.stringify({message:t.message||"An unexpected error occurred",errors:[],status:0}))}parseError(t){try{return JSON.parse(t.message)}catch{return{message:t.message,errors:[],status:0}}}}a["default"]=new s}}]);