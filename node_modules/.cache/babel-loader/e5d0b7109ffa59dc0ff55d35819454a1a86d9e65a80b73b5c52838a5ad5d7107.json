{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport AuthorizedPickupDocumentsModal from './AuthorizedPickupDocumentsModal.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminDocumentService from '@/services/adminDocumentService';\nimport api from '@/services/api';\nimport { Modal } from 'bootstrap';\nimport notificationService from '@/services/notificationService';\nimport { jsPDF } from 'jspdf';\n// Import jspdf-autotable plugin - v5.x uses named export\nimport autoTable from 'jspdf-autotable';\nexport default {\n  name: 'RequestHistory',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    AuthorizedPickupDocumentsModal\n  },\n  data() {\n    return {\n      // UI State\n      loading: true,\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      errorMessage: '',\n      viewMode: 'table',\n      // 'card' or 'table' - default to table view\n\n      // Request Management Data\n      requests: [],\n      selectedRequests: [],\n      currentRequest: null,\n      statusOptions: [],\n      selectedRequestForPickup: null,\n      processingPickupAction: false,\n      // Pagination\n      pagination: {\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: 0,\n        itemsPerPage: 10\n      },\n      // Filters - Show all historical documents (completed and cancelled)\n      filters: {\n        status: '',\n        // Empty to show all statuses including completed and cancelled\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      },\n      // PDF Export Form\n      pdfExportForm: {\n        reportType: 'daily',\n        selectedDate: '',\n        selectedWeek: '',\n        selectedMonth: '',\n        loading: false\n      },\n      // Statistics\n      requestStats: {\n        total: 0,\n        pending: 0,\n        approved: 0,\n        completed: 0,\n        thisMonth: 0\n      },\n      // Document Types and Status Options\n      documentTypes: [],\n      searchTimeout: null,\n      // UI State\n      showFilters: false,\n      showBulkActions: false,\n      showRequestDetails: false,\n      showRejectForm: false,\n      showQuickReject: false,\n      showQuickApprove: false,\n      // Verification Modal\n      currentVerification: null,\n      verificationForm: {\n        status: 'pending',\n        notes: ''\n      },\n      showImageModal: false,\n      selectedImage: null,\n      bulkAction: '',\n      documentUrls: {},\n      // Store blob URLs for documents\n      loadingDocuments: new Set(),\n      // Track which documents are currently loading\n      failedDocuments: new Set(),\n      // Track which documents failed to load\n      imageLoadingInModal: false,\n      // Track if modal image is loading\n      modalImageError: false,\n      // Track if modal image failed\n\n      // Status Update Forms\n      statusUpdateForm: {\n        status_id: ''\n      },\n      rejectForm: {\n        reason: ''\n      },\n      quickRejectForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForReject: null,\n      quickApproveForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForApprove: null,\n      // Payment verification form\n      paymentVerificationForm: {\n        amount_received: '',\n        receipt_number: '',\n        loading: false,\n        error: ''\n      },\n      // Pickup scheduling form\n      pickupScheduleForm: {\n        scheduled_date: '',\n        scheduled_time_start: '',\n        scheduled_time_end: '',\n        loading: false,\n        error: ''\n      },\n      // Real-time features\n      refreshInterval: null,\n      autoRefreshEnabled: true,\n      refreshRate: 30000,\n      // 30 seconds\n      lastRefresh: null\n    };\n  },\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadComponentData();\n\n    // Initialize PDF export form with default values\n    this.initializePDFExportForm();\n\n    // Initialize real-time features\n    this.initializeRealTimeFeatures();\n  },\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    // Clean up real-time features\n    this.cleanupRealTimeFeatures();\n\n    // Clean up blob URLs to prevent memory leaks\n    this.cleanupDocumentUrls();\n  },\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/history')) return 'history';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      // Load saved sidebar state (only on desktop)\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true; // Always collapsed on mobile\n      }\n\n      // Setup resize listener\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true; // Collapse when switching to mobile\n        } else if (!this.isMobile && wasMobile) {\n          // Restore saved state when switching to desktop\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n    // Initialize PDF export form with default values\n    initializePDFExportForm() {\n      // Set default date to today\n      this.pdfExportForm.selectedDate = this.getCurrentDate();\n\n      // Set default week to current week\n      this.pdfExportForm.selectedWeek = this.getCurrentWeek();\n\n      // Set default month to current month\n      this.pdfExportForm.selectedMonth = this.getCurrentMonth();\n    },\n    // Sidebar toggle\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n    // Menu navigation\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'history': '/admin/history',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      // Close sidebar on mobile after navigation\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n    // User dropdown toggle\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    // Handle opening request modal from notifications\n    async handleOpenRequestModal(modalData) {\n      console.log('🔔 AdminRequests: Opening request modal from notification:', modalData);\n      try {\n        const {\n          requestId,\n          focusTab\n        } = modalData;\n        if (!requestId) {\n          console.error('❌ No request ID provided for modal');\n          return;\n        }\n\n        // Use the existing viewRequestDetails method to open the modal\n        await this.viewRequestDetails(requestId);\n\n        // If a specific tab should be focused, handle that after modal opens\n        if (focusTab) {\n          // Wait a bit for the modal to fully render\n          setTimeout(() => {\n            this.focusModalTab(focusTab);\n          }, 300);\n        }\n        console.log('✅ Request modal opened successfully');\n      } catch (error) {\n        console.error('❌ Error opening request modal:', error);\n        // Show error message to user\n        this.showErrorMessage('Failed to open request details');\n      }\n    },\n    // Focus on a specific tab in the request details modal\n    focusModalTab(tabName) {\n      try {\n        console.log('🎯 Focusing on modal tab:', tabName);\n\n        // Map tab names to actual tab elements or actions\n        const tabMappings = {\n          'payment': () => {\n            // Focus on payment section in the modal\n            const paymentSection = document.querySelector('#requestDetailsModal .payment-section');\n            if (paymentSection) {\n              paymentSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              paymentSection.classList.add('highlight-section');\n              setTimeout(() => paymentSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'status': () => {\n            // Focus on status section\n            const statusSection = document.querySelector('#requestDetailsModal .status-section');\n            if (statusSection) {\n              statusSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              statusSection.classList.add('highlight-section');\n              setTimeout(() => statusSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'documents': () => {\n            // Focus on documents section\n            const documentsSection = document.querySelector('#requestDetailsModal .documents-section');\n            if (documentsSection) {\n              documentsSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              documentsSection.classList.add('highlight-section');\n              setTimeout(() => documentsSection.classList.remove('highlight-section'), 2000);\n            }\n          }\n        };\n        const focusAction = tabMappings[tabName];\n        if (focusAction) {\n          focusAction();\n        } else {\n          console.log('⚠️ Unknown tab name:', tabName);\n        }\n      } catch (error) {\n        console.error('❌ Error focusing modal tab:', error);\n      }\n    },\n    // Menu actions\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n    // Close mobile sidebar\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n    // Logout\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n    // Load admin profile\n    async loadAdminProfile() {\n      try {\n        const currentUser = unifiedAuthService.getCurrentUser();\n        if (currentUser && currentUser.profile) {\n          this.adminData = currentUser.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: currentUser?.username || 'Admin',\n            role: currentUser?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const currentUser = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: currentUser?.username || 'Admin',\n          role: currentUser?.role || 'admin'\n        };\n      }\n    },\n    // Load all component data\n    async loadComponentData() {\n      this.loading = true;\n      try {\n        await Promise.all([this.loadAdminProfile(), this.loadStatusOptions(), this.loadDocumentTypes(), this.loadRequests(), this.loadDashboardStats()]);\n      } catch (error) {\n        console.error('Failed to load component data:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request data';\n        if (errorData.status === 401) {\n          unifiedAuthService.logout();\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    // Load status options\n    async loadStatusOptions() {\n      try {\n        console.log('🔄 Loading status options...');\n        const response = await adminDocumentService.getStatusOptions();\n        console.log('📋 Status options response:', response);\n        if (response.success) {\n          this.statusOptions = response.data || [];\n          console.log('✅ Status options loaded:', this.statusOptions);\n        } else {\n          console.error('❌ Failed to load status options:', response.message);\n          this.statusOptions = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading status options:', error);\n        this.statusOptions = [];\n        this.showToast('Error', 'Failed to load status options', 'error');\n      }\n    },\n    // Load document types\n    async loadDocumentTypes() {\n      try {\n        console.log('🔄 Loading document types...');\n        const response = await adminDocumentService.getDocumentTypes();\n        console.log('📋 Document types response:', response);\n        if (response.success) {\n          this.documentTypes = response.data || [];\n          console.log('✅ Document types loaded:', this.documentTypes);\n        } else {\n          console.error('❌ Failed to load document types:', response.message);\n          this.documentTypes = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading document types:', error);\n        this.documentTypes = [];\n        this.showToast('Error', 'Failed to load document types', 'error');\n      }\n    },\n    // Load dashboard statistics\n    async loadDashboardStats() {\n      try {\n        console.log('🔄 Loading dashboard stats...');\n        const response = await adminDocumentService.getDashboardStats();\n        console.log('📊 Dashboard stats response:', response);\n        if (response.success) {\n          // Map the backend response structure to frontend expectations\n          const data = response.data;\n          this.requestStats = {\n            total: data.overview?.total_requests || 0,\n            pending: data.overview?.pending_requests || 0,\n            approved: data.overview?.approved_requests || 0,\n            completed: data.overview?.completed_requests || 0,\n            thisMonth: data.time_based?.today_requests || 0\n          };\n          console.log('✅ Request stats updated:', this.requestStats);\n        } else {\n          console.error('❌ Failed to load dashboard stats:', response.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading dashboard stats:', error);\n        // Set default values on error\n        this.requestStats = {\n          total: 0,\n          pending: 0,\n          approved: 0,\n          completed: 0,\n          thisMonth: 0\n        };\n      }\n    },\n    // Load requests with current filters and pagination\n    // NOTE: RequestHistory.vue shows HISTORICAL requests only (completed and cancelled)\n    // For active request management, see AdminRequests.vue\n    async loadRequests() {\n      try {\n        // Load both completed and cancelled requests for historical view\n        const params = {\n          page: this.pagination.currentPage,\n          limit: this.pagination.itemsPerPage,\n          // Remove fixed status filter to get all requests, then filter client-side\n          priority: this.filters.priority,\n          search: this.filters.search,\n          date_from: this.filters.date_from,\n          date_to: this.filters.date_to\n        };\n\n        // Apply document type filter if specified\n        if (this.filters.document_type) {\n          params.document_type = this.filters.document_type;\n        }\n\n        // Apply status filter if specified (allows filtering by specific status)\n        if (this.filters.status) {\n          params.status = this.filters.status;\n        }\n        console.log('🔍 RequestHistory: Loading historical requests (completed and cancelled)...');\n        console.log('📋 RequestHistory: Params:', params);\n        const response = await adminDocumentService.getAllRequests(params);\n        console.log('📥 RequestHistory: API response:', response);\n        if (response.success) {\n          // Filter to show only completed and cancelled requests for historical view\n          const allRequests = response.data.requests || [];\n          const historicalRequests = allRequests.filter(request => {\n            const statusName = request.status_name.toLowerCase();\n            return statusName === 'completed' || statusName === 'cancelled';\n          });\n          this.requests = historicalRequests;\n          console.log('✅ RequestHistory: Loaded historical requests:', this.requests.length, 'requests');\n          console.log('📊 RequestHistory: Breakdown - Total:', allRequests.length, 'Historical:', historicalRequests.length);\n          if (this.requests.length > 0) {\n            console.log('📋 RequestHistory: First request:', this.requests[0]);\n          }\n          this.pagination = {\n            currentPage: response.data.pagination?.current_page || 1,\n            totalPages: response.data.pagination?.total_pages || 1,\n            totalItems: historicalRequests.length,\n            // Update to reflect filtered count\n            itemsPerPage: response.data.pagination?.per_page || 10\n          };\n        } else {\n          console.error('❌ RequestHistory: API returned unsuccessful response:', response);\n        }\n      } catch (error) {\n        console.error('❌ RequestHistory: Failed to load requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load requests';\n        this.requests = [];\n      }\n    },\n    // Filter and search methods\n    applyFilters() {\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n    // Debounced search method\n    debouncedSearch() {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = setTimeout(() => {\n        this.applyFilters();\n      }, 300);\n    },\n    clearFilters() {\n      this.filters = {\n        status: '',\n        // Remove fixed completed status filter to show all historical documents\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      };\n      this.applyFilters();\n    },\n    // Pagination methods\n    changePage(page) {\n      if (page >= 1 && page <= this.pagination.totalPages) {\n        this.pagination.currentPage = page;\n        this.loadRequests();\n      }\n    },\n    changeItemsPerPage(itemsPerPage) {\n      this.pagination.itemsPerPage = itemsPerPage;\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    },\n    // Request selection methods\n    toggleRequestSelection(requestId) {\n      const index = this.selectedRequests.indexOf(requestId);\n      if (index > -1) {\n        this.selectedRequests.splice(index, 1);\n      } else {\n        this.selectedRequests.push(requestId);\n      }\n    },\n    selectAllRequests() {\n      if (this.selectedRequests.length === this.requests.length) {\n        this.selectedRequests = [];\n      } else {\n        this.selectedRequests = this.requests.map(r => r.id);\n      }\n    },\n    // Request details\n    async viewRequestDetails(requestId) {\n      console.log('🚀 View details clicked for request ID:', requestId);\n      try {\n        const response = await adminDocumentService.getRequestDetails(requestId);\n        console.log('📋 API Response received:', response);\n        if (response.success) {\n          console.log('✅ Response successful, data:', response.data);\n\n          // Debug client profile fields\n          const data = response.data;\n          console.log('🎯 COMPLETE RESPONSE DATA:', data);\n          console.log('🎯 ALL DATA KEYS:', Object.keys(data));\n          console.log('🎯 CLIENT PROFILE FIELDS DEBUG:');\n          console.log('   Birth Date:', data.client_birth_date);\n          console.log('   Gender:', data.client_gender);\n          console.log('   Civil Status ID:', data.client_civil_status_id);\n          console.log('   Nationality:', data.client_nationality);\n          console.log('   Years of Residency:', data.client_years_of_residency);\n          console.log('   Months of Residency:', data.client_months_of_residency);\n\n          // Check if fields exist with different names\n          console.log('🔍 SEARCHING FOR SIMILAR FIELDS:');\n          Object.keys(data).forEach(key => {\n            if (key.includes('birth') || key.includes('gender') || key.includes('civil') || key.includes('nationality') || key.includes('residency')) {\n              console.log(`   Found: ${key} = ${data[key]}`);\n            }\n          });\n          this.currentRequest = response.data;\n          this.showRequestDetails = true;\n          // Reset forms\n          this.statusUpdateForm = {\n            status_id: ''\n          };\n          this.rejectForm = {\n            reason: ''\n          };\n          this.showRejectForm = false;\n          console.log('📋 Request details loaded:', response.data);\n\n          // Load document URLs for images\n          if (response.data.uploaded_documents && response.data.uploaded_documents.length > 0) {\n            this.loadDocumentUrls(response.data.uploaded_documents);\n          }\n          this.showToast('Success', `Request details loaded for ${response.data.request_number}`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to load request details:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request details';\n        this.showToast('Error', 'Failed to load request details', 'error');\n      }\n    },\n    // Refresh request details\n    async refreshRequestDetails() {\n      if (this.currentRequest) {\n        await this.viewRequestDetails(this.currentRequest.id);\n      }\n    },\n    // Update request status from modal\n    async updateRequestStatusFromModal() {\n      console.log('🔄 Updating request status...');\n      console.log('📋 Status form data:', this.statusUpdateForm);\n      console.log('📋 Current request:', this.currentRequest);\n      if (!this.statusUpdateForm.status_id || !this.currentRequest) {\n        console.error('❌ Missing required data for status update');\n        this.showToast('Error', 'Please select a status to update', 'error');\n        return;\n      }\n\n      // Enhanced debugging for status validation\n      const currentStatus = this.currentRequest.status_name;\n      const newStatusId = this.statusUpdateForm.status_id;\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      console.log('🔍 Status validation debug:');\n      console.log('   Current status:', currentStatus);\n      console.log('   New status ID:', newStatusId, '(type:', typeof newStatusId, ')');\n      console.log('   New status object:', newStatus);\n      console.log('   Available transitions:', this.getAllowedStatusTransitions(currentStatus.toLowerCase()));\n      console.log('   Available status options:', this.getAvailableStatusOptions());\n      console.log('   All status options:', this.statusOptions);\n      if (!this.isValidStatusChange(currentStatus, newStatusId)) {\n        console.error('❌ Invalid status change attempted');\n        console.error('   From:', currentStatus, 'To:', newStatus?.status_name);\n        this.showToast('Error', 'This status change is not allowed', 'error');\n        return;\n      }\n      try {\n        const updateData = {\n          status_id: parseInt(this.statusUpdateForm.status_id)\n        };\n        console.log('📤 Sending status update:', updateData);\n        const response = await adminDocumentService.updateRequestStatus(this.currentRequest.id, updateData);\n        console.log('📥 Status update response:', response);\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n          // Reset form\n          this.statusUpdateForm = {\n            status_id: ''\n          };\n\n          // Show success message\n          this.errorMessage = '';\n          this.showToast('Success', 'Request status updated successfully', 'success');\n        } else {\n          console.error('❌ Status update failed:', response.message);\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error updating request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n    // Reject request from modal\n    async rejectRequestFromModal() {\n      if (!this.currentRequest || !this.rejectForm.reason.trim()) return;\n      try {\n        const response = await adminDocumentService.rejectRequest(this.currentRequest.id, {\n          reason: this.rejectForm.reason\n        });\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n          this.rejectForm = {\n            reason: ''\n          };\n          this.showRejectForm = false;\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n    // Status update methods\n    async updateRequestStatus(requestId, statusId, reason = '') {\n      try {\n        const response = await adminDocumentService.updateRequestStatus(requestId, {\n          status_id: statusId,\n          reason: reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to update request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n      }\n    },\n    async approveRequest(requestId, reason = '') {\n      try {\n        const response = await adminDocumentService.approveRequest(requestId, {\n          reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to approve request';\n      }\n    },\n    async rejectRequest(requestId, reason) {\n      if (!reason || reason.trim() === '') {\n        this.errorMessage = 'Rejection reason is required';\n        return;\n      }\n      try {\n        const response = await adminDocumentService.rejectRequest(requestId, {\n          reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n    // Quick approval/rejection methods\n    canApprove(request) {\n      // Can approve if 'approved' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('approved');\n    },\n    canReject(request) {\n      // Can reject if 'rejected' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('rejected');\n    },\n    // Helper method to get status explanation for disabled buttons\n    getStatusExplanation(request, action) {\n      const status = request.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(status);\n      if (action === 'approve') {\n        if (allowedTransitions.includes('approved')) {\n          return 'Click to approve this request';\n        } else if (status === 'approved') {\n          return 'This request has already been approved';\n        } else if (status === 'rejected') {\n          return 'Rejected requests can be resubmitted, not directly approved';\n        } else if (status === 'completed') {\n          return 'This request has already been completed';\n        } else {\n          return `Cannot approve from ${this.formatStatus(status)} status`;\n        }\n      } else if (action === 'reject') {\n        if (allowedTransitions.includes('rejected')) {\n          return 'Click to reject this request';\n        } else if (status === 'rejected') {\n          return 'This request has already been rejected';\n        } else if (status === 'completed') {\n          return 'Cannot reject a completed request';\n        } else {\n          return `Cannot reject from ${this.formatStatus(status)} status`;\n        }\n      }\n      return `Request status: ${this.formatStatus(status)}`;\n    },\n    // Check if status change is valid\n    isValidStatusChange(currentStatus, newStatusId) {\n      if (!currentStatus || !newStatusId) return false;\n\n      // Find the new status name\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      if (!newStatus) return false;\n      const currentStatusName = currentStatus.toLowerCase();\n      const newStatusName = newStatus.status_name.toLowerCase();\n\n      // Same status - no change needed\n      if (currentStatusName === newStatusName) {\n        return false;\n      }\n\n      // Check if transition is allowed based on workflow rules\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatusName);\n      return allowedTransitions.includes(newStatusName);\n    },\n    // Check if request needs payment verification\n    needsPaymentVerification(request) {\n      return request.status_name === 'payment_pending' && request.payment_method && !request.payment_method.includes('PayMongo') && request.payment_status !== 'paid';\n    },\n    // Check if pickup can be scheduled\n    canSchedulePickup(request) {\n      return request.status_name === 'ready_for_pickup';\n    },\n    // Get payment status color\n    getPaymentStatusColor(status) {\n      const colors = {\n        'pending': 'bg-warning',\n        'processing': 'bg-info',\n        'paid': 'bg-success',\n        'failed': 'bg-danger',\n        'refunded': 'bg-secondary',\n        'cancelled': 'bg-dark'\n      };\n      return colors[status] || 'bg-secondary';\n    },\n    // Format payment status\n    formatPaymentStatus(status) {\n      const statuses = {\n        'pending': 'Pending',\n        'processing': 'Processing',\n        'paid': 'Paid',\n        'failed': 'Failed',\n        'refunded': 'Refunded',\n        'cancelled': 'Cancelled'\n      };\n      return statuses[status] || 'Unknown';\n    },\n    // Get tomorrow's date for pickup scheduling\n    getTomorrowDate() {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return tomorrow.toISOString().split('T')[0];\n    },\n    // Validate pickup form\n    isPickupFormValid() {\n      return this.pickupScheduleForm.scheduled_date && this.pickupScheduleForm.scheduled_time_start && this.pickupScheduleForm.scheduled_time_end && this.pickupScheduleForm.scheduled_time_start < this.pickupScheduleForm.scheduled_time_end;\n    },\n    // Get filtered status options based on current status\n    getAvailableStatusOptions() {\n      if (!this.currentRequest || !this.statusOptions) return [];\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n\n      // Only these states are truly final (cannot be changed)\n      const finalStates = ['completed', 'cancelled'];\n\n      // If current status is final, no changes allowed\n      if (finalStates.includes(currentStatus)) {\n        return [];\n      }\n\n      // Define allowed transitions based on current status\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Return only allowed status options\n      return this.statusOptions.filter(status => allowedTransitions.includes(status.status_name.toLowerCase()));\n    },\n    // Define allowed status transitions based on government workflow best practices\n    // This must match the backend validateStatusTransition logic exactly\n    getAllowedStatusTransitions(currentStatus) {\n      // Check if current request uses cash payment - enhanced detection\n      const isCashPayment = this.currentRequest && (this.currentRequest.payment_method === 'Cash Payment' || this.currentRequest.payment_method === 'Cash' || this.currentRequest.payment_method_code === 'CASH' || this.currentRequest.payment_method_id === 1 ||\n      // Assuming cash is ID 1\n      !this.currentRequest.is_online_payment);\n      console.log('🔍 Cash payment detection:', {\n        payment_method: this.currentRequest?.payment_method,\n        payment_method_code: this.currentRequest?.payment_method_code,\n        payment_method_id: this.currentRequest?.payment_method_id,\n        is_online_payment: this.currentRequest?.is_online_payment,\n        isCashPayment: isCashPayment\n      });\n      const transitions = {\n        // Simplified workflow matching actual database statuses\n        'pending': ['approved', 'cancelled', 'rejected'],\n        'under_review': ['approved', 'rejected', 'cancelled'],\n        'approved': isCashPayment ? ['payment_confirmed', 'processing', 'cancelled'] // Cash payments can go directly to processing\n        : ['payment_confirmed', 'cancelled'],\n        // Online payments go through PayMongo webhook to payment_confirmed\n        'payment_confirmed': ['processing'],\n        // Automatic transition after payment\n        'processing': ['ready_for_pickup'],\n        // Processing can only complete successfully\n        'ready_for_pickup': ['completed', 'cancelled'],\n        // Simplified - direct completion\n        'rejected': ['pending', 'under_review'],\n        // Allow resubmission after corrections\n        // Final states - no transitions allowed\n        'completed': [],\n        'cancelled': []\n      };\n      return transitions[currentStatus] || [];\n    },\n    // Get title for update button based on validation state\n    getUpdateButtonTitle() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Please select a new status';\n      }\n      if (!this.isValidStatusChange(this.currentRequest.status_name, this.statusUpdateForm.status_id)) {\n        return 'Invalid status change';\n      }\n      return 'Update request status';\n    },\n    // Get dynamic button text based on selected status\n    getActionButtonText() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Update Status';\n      }\n      const selectedStatus = this.statusOptions.find(s => s.id === parseInt(this.statusUpdateForm.status_id));\n      if (!selectedStatus) {\n        return 'Update Status';\n      }\n      const statusName = selectedStatus.status_name.toLowerCase();\n\n      // Special button text for common actions\n      switch (statusName) {\n        case 'approved':\n          return 'Approve Request';\n        case 'rejected':\n          return 'Reject Request';\n        case 'under_review':\n          return 'Move to Review';\n        case 'processing':\n          return 'Start Processing';\n        case 'ready_for_pickup':\n          return 'Mark Ready for Pickup';\n        case 'completed':\n          return 'Complete Request';\n        default:\n          return `Update to ${selectedStatus.status_name}`;\n      }\n    },\n    async quickApprove(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.approveRequest(request.id, {\n          reason: 'Quick approval from admin interface'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${request.request_number} approved successfully`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to approve request', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n    showQuickRejectModal(request) {\n      console.log('🚀 Quick reject clicked for request:', request);\n      this.selectedRequestForReject = request;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickReject = true;\n    },\n    closeQuickRejectModal() {\n      this.showQuickReject = false;\n      this.selectedRequestForReject = null;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n    },\n    async confirmQuickReject() {\n      this.quickRejectForm.loading = true;\n      this.quickRejectForm.error = '';\n      try {\n        const response = await adminDocumentService.rejectRequest(this.selectedRequestForReject.id, {\n          reason: 'Request rejected by admin'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForReject.request_number} rejected successfully`, 'success');\n          this.closeQuickRejectModal();\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickRejectForm.error = errorData.message || 'Failed to reject request';\n      } finally {\n        this.quickRejectForm.loading = false;\n      }\n    },\n    showQuickApproveModal(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n      this.selectedRequestForApprove = request;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickApprove = true;\n    },\n    closeQuickApproveModal() {\n      this.showQuickApprove = false;\n      this.selectedRequestForApprove = null;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n    },\n    async confirmQuickApprove() {\n      this.quickApproveForm.loading = true;\n      this.quickApproveForm.error = '';\n      try {\n        const response = await adminDocumentService.approveRequest(this.selectedRequestForApprove.id, {\n          reason: 'Quick approval from admin interface'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForApprove.request_number} approved successfully`, 'success');\n          this.closeQuickApproveModal();\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickApproveForm.error = errorData.message || 'Failed to approve request';\n      } finally {\n        this.quickApproveForm.loading = false;\n      }\n    },\n    // Bulk operations\n    async performBulkAction() {\n      if (this.selectedRequests.length === 0) {\n        this.errorMessage = 'Please select at least one request';\n        return;\n      }\n      if (!this.bulkAction) {\n        this.errorMessage = 'Please select a bulk action';\n        return;\n      }\n      try {\n        const response = await adminDocumentService.bulkUpdateRequests({\n          request_ids: this.selectedRequests,\n          status_id: parseInt(this.bulkAction)\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.selectedRequests = [];\n          this.bulkAction = '';\n          this.showBulkActions = false;\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to perform bulk action:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to perform bulk action';\n      }\n    },\n    // Export functionality\n    async exportRequests() {\n      try {\n        const csvData = await adminDocumentService.exportRequests(this.filters);\n        const filename = `document_requests_${new Date().toISOString().split('T')[0]}.csv`;\n        adminDocumentService.downloadCSV(csvData, filename);\n      } catch (error) {\n        console.error('Failed to export requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to export requests';\n      }\n    },\n    // PDF Export functionality\n    async exportToPDF() {\n      if (!this.isPDFExportValid()) {\n        this.showToast('Error', 'Please select a valid date range for the report', 'error');\n        return;\n      }\n      try {\n        this.pdfExportForm.loading = true;\n\n        // Get filtered data based on report type\n        const reportData = await this.getReportData();\n        if (!reportData || reportData.length === 0) {\n          this.showToast('Warning', 'No data found for the selected date range', 'warning');\n          return;\n        }\n\n        // Generate PDF\n        const pdf = new jsPDF();\n        this.generatePDFReport(pdf, reportData);\n\n        // Download PDF\n        const filename = this.getPDFFilename();\n        pdf.save(filename);\n        this.showToast('Success', 'PDF report generated successfully', 'success');\n      } catch (error) {\n        console.error('Failed to generate PDF report:', error);\n        this.showToast('Error', 'Failed to generate PDF report', 'error');\n      } finally {\n        this.pdfExportForm.loading = false;\n      }\n    },\n    // Get report data based on selected filters\n    async getReportData() {\n      const reportFilters = {\n        ...this.filters\n      };\n\n      // Set date range based on report type\n      const dateRange = this.getDateRangeForReport();\n      reportFilters.date_from = dateRange.from;\n      reportFilters.date_to = dateRange.to;\n      try {\n        console.log('📊 Fetching report data with filters:', reportFilters);\n        const response = await adminDocumentService.getAllRequests({\n          ...reportFilters,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n        console.log('📊 Raw API response:', response);\n        if (response.success && response.data.requests) {\n          const allRequests = response.data.requests;\n          console.log('📊 All requests from API:', allRequests);\n\n          // Log sample request structure for debugging\n          if (allRequests.length > 0) {\n            console.log('📊 Sample request structure:', {\n              request_number: allRequests[0].request_number,\n              total_document_fee: allRequests[0].total_document_fee,\n              total_fee: allRequests[0].total_fee,\n              amount: allRequests[0].amount,\n              all_fields: Object.keys(allRequests[0])\n            });\n          }\n\n          // Filter to only show completed and cancelled requests (historical data)\n          const filteredRequests = allRequests.filter(request => ['completed', 'cancelled'].includes(request.status_name.toLowerCase()));\n          console.log('📊 Filtered requests for PDF:', filteredRequests);\n          return filteredRequests;\n        }\n        return [];\n      } catch (error) {\n        console.error('Failed to fetch report data:', error);\n        throw error;\n      }\n    },\n    // Get date range based on report type and selected values\n    getDateRangeForReport() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return {\n            from: selectedDate,\n            to: selectedDate\n          };\n        case 'weekly':\n          if (selectedWeek) {\n            const [year, week] = selectedWeek.split('-W');\n            const startDate = this.getDateFromWeek(parseInt(year), parseInt(week));\n            const endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n        case 'monthly':\n          if (selectedMonth) {\n            const [year, month] = selectedMonth.split('-');\n            const startDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n            const endDate = new Date(parseInt(year), parseInt(month), 0);\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n      }\n      return {\n        from: '',\n        to: ''\n      };\n    },\n    // Generate PDF report content\n    generatePDFReport(pdf, data) {\n      const dateRange = this.getDateRangeForReport();\n\n      // Document Header with improved styling\n      pdf.setFontSize(24);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80); // Dark blue-gray\n      pdf.text('BARANGAY DOCUMENT REQUEST HISTORY', 105, 25, {\n        align: 'center'\n      });\n\n      // Decorative line under header\n      pdf.setDrawColor(52, 152, 219); // Blue line\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n\n      // Report type and metadata section\n      pdf.setFontSize(14);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(0, 0, 0);\n      const reportTitle = this.getReportTitle();\n      pdf.text(reportTitle, 20, 45);\n\n      // Date range with improved formatting\n      pdf.setFontSize(11);\n      pdf.setFont('helvetica', 'normal');\n      const dateRangeText = this.getDateRangeText(dateRange);\n      pdf.text(`Report Period: ${dateRangeText}`, 20, 55);\n\n      // Generated date\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      pdf.text(`Generated: ${generatedDate}`, 20, 65);\n\n      // Summary statistics with improved layout\n      const stats = this.calculateReportStats(data);\n\n      // Summary box background\n      pdf.setFillColor(248, 249, 250); // Light gray background\n      pdf.setDrawColor(206, 212, 218); // Border color\n      pdf.roundedRect(20, 75, 170, 35, 3, 3, 'FD'); // Rounded rectangle with fill and border\n\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(52, 58, 64);\n      pdf.text('SUMMARY STATISTICS', 25, 85);\n      pdf.setFontSize(10);\n      pdf.setFont('helvetica', 'normal');\n\n      // Statistics in columns\n      pdf.text(`Total Requests: ${stats.total}`, 25, 95);\n      pdf.text(`Completed: ${stats.completed}`, 80, 95);\n      pdf.text(`Cancelled: ${stats.cancelled}`, 135, 95);\n\n      // Add percentage if there are requests\n      if (stats.total > 0) {\n        const completionRate = Math.round(stats.completed / stats.total * 100);\n        pdf.text(`Completion Rate: ${completionRate}%`, 25, 105);\n      }\n\n      // Generate table with improved design (matching AdminReports.vue styling)\n      if (data && data.length > 0) {\n        const tableData = data.slice(0, 100).map(request => [request.request_number || 'N/A', request.client_name || 'N/A', request.document_type || 'N/A', this.formatStatus(request.status_name) || 'N/A', this.formatCurrencyForPDF(this.getAmountForPDF(request)), this.formatDateForPDF(request.requested_at) || 'N/A']);\n\n        // Use autoTable function (v5.x syntax) with AdminReports.vue styling\n        try {\n          console.log('🔧 Calling autoTable function');\n          autoTable(pdf, {\n            head: [['Request #', 'Client Name', 'Document Type', 'Status', 'Amount', 'Date']],\n            body: tableData,\n            startY: 125,\n            theme: 'grid',\n            headStyles: {\n              fillColor: [52, 152, 219],\n              textColor: 255,\n              fontStyle: 'bold',\n              fontSize: 8\n            },\n            styles: {\n              fontSize: 7,\n              cellPadding: 3,\n              overflow: 'linebreak',\n              cellWidth: 'wrap'\n            },\n            columnStyles: {\n              0: {\n                cellWidth: 30,\n                halign: 'center'\n              },\n              // Request #\n              1: {\n                cellWidth: 35,\n                overflow: 'linebreak'\n              },\n              // Client Name (wrappable)\n              2: {\n                cellWidth: 38,\n                overflow: 'linebreak'\n              },\n              // Document Type (wrappable)\n              3: {\n                cellWidth: 22,\n                halign: 'center'\n              },\n              // Status\n              4: {\n                cellWidth: 20,\n                halign: 'right'\n              },\n              // Amount\n              5: {\n                cellWidth: 25,\n                halign: 'center'\n              } // Date\n            }\n          });\n          console.log('✅ AutoTable completed successfully');\n        } catch (autoTableError) {\n          console.error('❌ AutoTable call failed:', autoTableError);\n          throw new Error(`AutoTable failed: ${autoTableError.message}`);\n        }\n      }\n\n      // Add professional footer\n      this.addPDFFooter(pdf);\n    },\n    // Fallback method to generate table manually using native jsPDF\n    generateManualTable(pdf, data) {\n      let yPosition = 125;\n      const lineHeight = 14;\n      const headerHeight = 12;\n\n      // Improved column positioning and widths - matching autoTable\n      const columns = [{\n        x: 22,\n        width: 30,\n        align: 'center'\n      },\n      // Request Number\n      {\n        x: 54,\n        width: 35,\n        align: 'left'\n      },\n      // Client Name\n      {\n        x: 91,\n        width: 38,\n        align: 'left'\n      },\n      // Document Type\n      {\n        x: 131,\n        width: 22,\n        align: 'center'\n      },\n      // Status\n      {\n        x: 155,\n        width: 20,\n        align: 'right'\n      },\n      // Amount (smaller)\n      {\n        x: 177,\n        width: 25,\n        align: 'center'\n      } // Date\n      ];\n\n      // Header background first (draw background before text)\n      pdf.setFillColor(52, 152, 219); // Professional blue\n      pdf.rect(20, yPosition - 10, 170, headerHeight, 'F');\n\n      // Header border on top of background\n      pdf.setDrawColor(206, 212, 218);\n      pdf.setLineWidth(0.5);\n      pdf.rect(20, yPosition - 10, 170, headerHeight, 'D');\n\n      // Header text styling\n      pdf.setFontSize(9);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(255, 255, 255); // White text\n\n      // Header text positioning - improved to prevent overlap\n      const headers = ['Request Number', 'Client Name', 'Document Type', 'Status', 'Amount', 'Date'];\n      const headerY = yPosition - 4; // Better vertical positioning\n\n      headers.forEach((header, index) => {\n        const col = columns[index];\n        let textX;\n        let align = 'left';\n        if (col.align === 'center') {\n          textX = col.x + col.width / 2;\n          align = 'center';\n        } else if (col.align === 'right') {\n          textX = col.x + col.width - 2;\n          align = 'right';\n        } else {\n          textX = col.x + 2;\n          align = 'left';\n        }\n        pdf.text(header, textX, headerY, {\n          align: align\n        });\n      });\n      yPosition += 6; // More space after header to prevent overlap\n\n      // Reset text color and font for data rows\n      pdf.setTextColor(33, 37, 41); // Dark gray\n      pdf.setFont('helvetica', 'normal');\n      pdf.setFontSize(8.5); // Slightly smaller but readable\n\n      // Table rows with improved formatting\n      data.forEach((request, index) => {\n        // Alternate row background\n        if (index % 2 === 1) {\n          pdf.setFillColor(248, 249, 250); // Very light gray\n          pdf.rect(20, yPosition - 8, 170, lineHeight, 'F');\n        }\n\n        // Row border\n        pdf.setDrawColor(206, 212, 218);\n        pdf.rect(20, yPosition - 8, 170, lineHeight, 'D');\n\n        // Row data with proper formatting\n        const rowData = [request.request_number || 'N/A', this.truncateText(request.client_name || 'N/A', 18), this.truncateText(request.document_type || 'N/A', 20), this.formatStatus(request.status_name) || 'N/A', this.formatCurrencyForPDF(this.getAmountForPDF(request)), this.formatDateForPDF(request.requested_at) || 'N/A'];\n        rowData.forEach((cellData, colIndex) => {\n          const col = columns[colIndex];\n          const text = String(cellData);\n          if (col.align === 'center') {\n            pdf.text(text, col.x + col.width / 2, yPosition, {\n              align: 'center'\n            });\n          } else if (col.align === 'right') {\n            pdf.text(text, col.x + col.width - 2, yPosition, {\n              align: 'right'\n            });\n          } else {\n            pdf.text(text, col.x + 2, yPosition);\n          }\n        });\n        yPosition += lineHeight;\n\n        // Add new page if needed\n        if (yPosition > 260) {\n          pdf.addPage();\n          yPosition = 30;\n\n          // Repeat header on new page\n          pdf.setFillColor(52, 152, 219);\n          pdf.rect(20, yPosition - 10, 170, headerHeight, 'F');\n          pdf.setTextColor(255, 255, 255);\n          pdf.setFont('helvetica', 'bold');\n          pdf.setFontSize(9);\n          headers.forEach((header, index) => {\n            const col = columns[index];\n            if (col.align === 'center') {\n              pdf.text(header, col.x + col.width / 2, yPosition - 3, {\n                align: 'center'\n              });\n            } else if (col.align === 'right') {\n              pdf.text(header, col.x + col.width - 2, yPosition - 3, {\n                align: 'right'\n              });\n            } else {\n              pdf.text(header, col.x + 2, yPosition - 3);\n            }\n          });\n          yPosition += 4;\n          pdf.setTextColor(33, 37, 41);\n          pdf.setFont('helvetica', 'normal');\n          pdf.setFontSize(8.5);\n        }\n      });\n\n      // Add footer to manual table as well\n      this.addPDFFooter(pdf);\n    },\n    // Add professional footer to PDF\n    addPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(206, 212, 218);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(8);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(108, 117, 125); // Gray text\n\n        // Left side - Document info\n        pdf.text('Barangay Document Management System', 20, 285);\n        pdf.text('Official Document Request Report', 20, 290);\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, {\n          align: 'right'\n        });\n        pdf.text(`Generated: ${new Date().toLocaleDateString()}`, 190, 290, {\n          align: 'right'\n        });\n      }\n    },\n    // Helper method to truncate text for table cells\n    truncateText(text, maxLength) {\n      if (!text) return '';\n      return text.length > maxLength ? text.substring(0, maxLength - 3) + '...' : text;\n    },\n    // Format date specifically for PDF display (month and day only)\n    formatDateForPDF(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      // Show only month and day (no year to save space)\n      const month = date.toLocaleDateString('en-US', {\n        month: 'short'\n      });\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${month} ${day}`;\n    },\n    // Format currency specifically for PDF (compact format, no PHP prefix)\n    formatCurrencyForPDF(amount) {\n      // Debug logging to trace amount values\n      console.log('💰 formatCurrencyForPDF input:', {\n        original: amount,\n        type: typeof amount,\n        parsed: parseFloat(amount),\n        isNaN: isNaN(parseFloat(amount))\n      });\n      const numAmount = parseFloat(amount) || 0;\n      const formatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n      const result = formatter.format(numAmount);\n      console.log('💰 formatCurrencyForPDF result:', result);\n      return result;\n    },\n    // Enhanced method to extract amount from request data\n    getAmountForPDF(request) {\n      // Debug the entire request object structure\n      console.log('📊 getAmountForPDF - Full request object:', request);\n\n      // Try multiple possible field names in order of preference\n      const possibleAmountFields = ['total_document_fee', 'total_fee', 'amount', 'document_fee', 'fee'];\n      let amount = 0;\n      let foundField = null;\n      for (const field of possibleAmountFields) {\n        if (request[field] !== undefined && request[field] !== null) {\n          const fieldValue = parseFloat(request[field]);\n          if (!isNaN(fieldValue) && fieldValue > 0) {\n            amount = fieldValue;\n            foundField = field;\n            break;\n          }\n        }\n      }\n      console.log('💰 getAmountForPDF result:', {\n        request_number: request.request_number,\n        found_field: foundField,\n        amount: amount,\n        all_fields: possibleAmountFields.reduce((acc, field) => {\n          acc[field] = request[field];\n          return acc;\n        }, {})\n      });\n      return amount;\n    },\n    // Method to disable debug logging for production\n    disablePDFDebugLogging() {\n      // Override console.log for PDF-related debugging\n      const originalLog = console.log;\n      console.log = function (...args) {\n        if (args.length > 0 && typeof args[0] === 'string' && (args[0].includes('💰') || args[0].includes('📊'))) {\n          return; // Skip PDF debug logs\n        }\n        originalLog.apply(console, args);\n      };\n    },\n    // Helper methods for PDF export\n    isPDFExportValid() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return selectedDate !== '';\n        case 'weekly':\n          return selectedWeek !== '';\n        case 'monthly':\n          return selectedMonth !== '';\n        default:\n          return false;\n      }\n    },\n    getPDFFilename() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      const timestamp = new Date().toISOString().split('T')[0];\n      switch (reportType) {\n        case 'daily':\n          return `daily_report_${selectedDate}_${timestamp}.pdf`;\n        case 'weekly':\n          return `weekly_report_${selectedWeek}_${timestamp}.pdf`;\n        case 'monthly':\n          return `monthly_report_${selectedMonth}_${timestamp}.pdf`;\n        default:\n          return `report_${timestamp}.pdf`;\n      }\n    },\n    getReportTitle() {\n      const {\n        reportType\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return 'Daily Document Request Report';\n        case 'weekly':\n          return 'Weekly Document Request Report';\n        case 'monthly':\n          return 'Monthly Document Request Report';\n        default:\n          return 'Document Request Report';\n      }\n    },\n    getDateRangeText(dateRange) {\n      if (dateRange.from === dateRange.to) {\n        return this.formatDate(dateRange.from);\n      }\n      return `${this.formatDate(dateRange.from)} to ${this.formatDate(dateRange.to)}`;\n    },\n    calculateReportStats(data) {\n      return {\n        total: data.length,\n        completed: data.filter(r => r.status_name.toLowerCase() === 'completed').length,\n        cancelled: data.filter(r => r.status_name.toLowerCase() === 'cancelled').length\n      };\n    },\n    getDateFromWeek(year, week) {\n      const simple = new Date(year, 0, 1 + (week - 1) * 7);\n      const dow = simple.getDay();\n      const ISOweekStart = simple;\n      if (dow <= 4) {\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n      } else {\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n      }\n      return ISOweekStart;\n    },\n    // Date helper methods for form validation\n    getCurrentDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n    getCurrentWeek() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const week = this.getWeekNumber(now);\n      return `${year}-W${week.toString().padStart(2, '0')}`;\n    },\n    getCurrentMonth() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = (now.getMonth() + 1).toString().padStart(2, '0');\n      return `${year}-${month}`;\n    },\n    getWeekNumber(date) {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      const dayNum = d.getUTCDay() || 7;\n      d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n    },\n    // Verify in-person payment\n    async verifyInPersonPayment() {\n      if (!this.paymentVerificationForm.amount_received || !this.currentRequest) {\n        this.showToast('Error', 'Please enter the amount received', 'error');\n        return;\n      }\n      const totalFee = parseFloat(this.currentRequest.total_document_fee || this.currentRequest.total_fee);\n      const amountReceived = parseFloat(this.paymentVerificationForm.amount_received);\n      if (amountReceived < totalFee) {\n        this.showToast('Error', `Insufficient payment. Required: ${this.formatCurrency(totalFee)}`, 'error');\n        return;\n      }\n      this.paymentVerificationForm.loading = true;\n      this.paymentVerificationForm.error = '';\n      try {\n        const paymentData = {\n          amount_received: amountReceived,\n          payment_method_id: this.currentRequest.payment_method_id || 1,\n          // Default to cash\n          receipt_number: this.paymentVerificationForm.receipt_number\n        };\n        const response = await adminDocumentService.verifyInPersonPayment(this.currentRequest.id, paymentData);\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.paymentVerificationForm = {\n            amount_received: '',\n            receipt_number: '',\n            loading: false,\n            error: ''\n          };\n          this.showToast('Success', 'Payment verified successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to verify payment:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.paymentVerificationForm.error = errorData.message || 'Failed to verify payment';\n        this.showToast('Error', errorData.message || 'Failed to verify payment', 'error');\n      } finally {\n        this.paymentVerificationForm.loading = false;\n      }\n    },\n    // Schedule pickup appointment\n    async schedulePickup() {\n      if (!this.isPickupFormValid() || !this.currentRequest) {\n        this.showToast('Error', 'Please fill in all required fields', 'error');\n        return;\n      }\n      this.pickupScheduleForm.loading = true;\n      this.pickupScheduleForm.error = '';\n      try {\n        const scheduleData = {\n          scheduled_date: this.pickupScheduleForm.scheduled_date,\n          scheduled_time_start: this.pickupScheduleForm.scheduled_time_start,\n          scheduled_time_end: this.pickupScheduleForm.scheduled_time_end\n        };\n        const response = await adminDocumentService.schedulePickup(this.currentRequest.id, scheduleData);\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.pickupScheduleForm = {\n            scheduled_date: '',\n            scheduled_time_start: '',\n            scheduled_time_end: '',\n            loading: false,\n            error: ''\n          };\n          this.showToast('Success', 'Pickup scheduled successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to schedule pickup:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.pickupScheduleForm.error = errorData.message || 'Failed to schedule pickup';\n        this.showToast('Error', errorData.message || 'Failed to schedule pickup', 'error');\n      } finally {\n        this.pickupScheduleForm.loading = false;\n      }\n    },\n    // Utility methods\n    formatStatus(status) {\n      return adminDocumentService.formatStatus(status);\n    },\n    getStatusColor(status) {\n      return adminDocumentService.getStatusColor(status);\n    },\n    // Enhanced fee display method with debugging\n    getDisplayFee(request) {\n      const totalDocumentFee = parseFloat(request.total_document_fee);\n      const totalFee = parseFloat(request.total_fee);\n\n      // Debug logging for Cedula requests\n      if (request.document_type === 'Cedula') {\n        console.log(`🔍 Cedula Fee Debug - Request ${request.request_number}:`, {\n          total_document_fee: request.total_document_fee,\n          total_fee: request.total_fee,\n          parsed_total_document_fee: totalDocumentFee,\n          parsed_total_fee: totalFee,\n          will_display: totalDocumentFee || totalFee || 0\n        });\n      }\n\n      // Prioritize total_document_fee, fallback to total_fee\n      return totalDocumentFee || totalFee || 0;\n    },\n    // Check if request has convenience fee\n    hasConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return totalFee > baseFee && baseFee > 0;\n    },\n    // Get base document fee (without convenience fee)\n    getBaseFee(request) {\n      const documentType = request.document_type;\n      const totalFee = this.getDisplayFee(request);\n\n      // For Cedula requests, calculate the actual document fee\n      if (documentType === 'Cedula') {\n        // If total is ₱100.00, the base fee is likely ₱30.00 (with ₱70.00 convenience fee)\n        if (totalFee === 100.00) {\n          return 30.00; // Standard Cedula fee for ₱20K income\n        }\n        // For other amounts, assume no convenience fee for now\n        return totalFee;\n      }\n\n      // For other document types, check if convenience fee was applied\n      const PAYMONGO_MINIMUM = 100.00;\n      if (totalFee === PAYMONGO_MINIMUM && documentType !== 'Barangay Clearance') {\n        // Likely has convenience fee - estimate base fee\n        return totalFee - (PAYMONGO_MINIMUM - totalFee);\n      }\n      return totalFee;\n    },\n    // Get convenience fee amount\n    getConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return Math.max(0, totalFee - baseFee);\n    },\n    // Get convenience fee explanation\n    getConvenienceFeeExplanation(request) {\n      const convenienceFee = this.getConvenienceFee(request);\n      if (convenienceFee > 0) {\n        return `PayMongo requires a minimum payment of ₱100.00. A convenience fee of ₱${convenienceFee.toFixed(2)} was added to meet this requirement.`;\n      }\n      return '';\n    },\n    formatDate(dateString) {\n      console.log('🗓️ formatDate called with:', dateString);\n      if (!dateString) {\n        console.log('🗓️ formatDate: No date provided, returning null');\n        return null;\n      }\n      const date = new Date(dateString);\n      const formatted = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      console.log('🗓️ formatDate result:', formatted);\n      return formatted;\n    },\n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-PH', {\n        style: 'currency',\n        currency: 'PHP'\n      }).format(amount || 0);\n    },\n    formatDateTime(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    // Get formatted changed by name for status history\n    getChangedByName(history) {\n      // If the reason starts with \"SYSTEM:\", show \"System\" regardless of changed_by_name\n      if (history.change_reason && history.change_reason.startsWith('SYSTEM:')) {\n        return 'System';\n      }\n      return history.changed_by_name || 'System';\n    },\n    // Get formatted reason for status history\n    getFormattedReason(reason) {\n      if (!reason) return '';\n      // Remove \"SYSTEM:\" prefix if present\n      if (reason.startsWith('SYSTEM:')) {\n        return reason.substring(7).trim(); // Remove \"SYSTEM:\" and trim whitespace\n      }\n      return reason;\n    },\n    // New helper methods for complete client information\n    getClientFullName(request) {\n      if (!request) return 'Not provided';\n      const parts = [request.client_first_name, request.client_middle_name, request.client_last_name, request.client_suffix].filter(Boolean);\n      return parts.length > 0 ? parts.join(' ') : request.client_name || 'Not provided';\n    },\n    getClientFullAddress(request) {\n      if (!request) return null;\n      const parts = [request.client_house_number, request.client_street, request.client_subdivision, request.client_barangay, request.client_city_municipality || request.client_city, request.client_province].filter(Boolean);\n      return parts.length > 0 ? parts.join(', ') : request.client_address || null;\n    },\n    formatGender(gender) {\n      if (!gender) {\n        return null;\n      }\n      return gender.charAt(0).toUpperCase() + gender.slice(1);\n    },\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || null;\n    },\n    // New helper methods for third-party requests\n    formatRelationship(relationship) {\n      if (!relationship) return 'Not specified';\n      const relationships = {\n        'spouse': 'Spouse',\n        'child': 'Child',\n        'parent': 'Parent',\n        'sibling': 'Sibling',\n        'relative': 'Other Relative',\n        'friend': 'Friend',\n        'colleague': 'Colleague',\n        // 'other': 'Other',\n        'self': 'Self'\n      };\n      return relationships[relationship] || relationship.charAt(0).toUpperCase() + relationship.slice(1);\n    },\n    formatAuthorizationStatus(status) {\n      if (!status) return 'Pending';\n      const statuses = {\n        'pending': 'Pending Verification',\n        'verified': 'Verified',\n        'rejected': 'Rejected'\n      };\n      return statuses[status] || status.charAt(0).toUpperCase() + status.slice(1);\n    },\n    getAuthorizationStatusClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n    getAuthorizationStatusIcon(status) {\n      const icons = {\n        'pending': 'fa-clock',\n        'verified': 'fa-check-circle',\n        'rejected': 'fa-times-circle'\n      };\n      return icons[status] || 'fa-question-circle';\n    },\n    // Authorization verification methods\n    async verifyAuthorization(requestId, isApproved) {\n      try {\n        // This would call a new API endpoint for authorization verification\n        // const response = await adminDocumentService.verifyAuthorization(requestId, {\n        //   isApproved,\n        //   notes: isApproved ? 'Authorization verified and approved' : 'Authorization rejected'\n        // });\n\n        // For now, show a placeholder message\n        this.showToast('Authorization ' + (isApproved ? 'Approved' : 'Rejected'), `Pickup authorization has been ${isApproved ? 'approved' : 'rejected'}`, isApproved ? 'success' : 'warning');\n\n        // Refresh the request details\n        await this.refreshRequestDetails();\n      } catch (error) {\n        console.error('Failed to verify authorization:', error);\n        this.errorMessage = 'Failed to verify authorization. Please try again.';\n      }\n    },\n    getResidencyDisplay(request) {\n      if (!request) return null;\n      const years = request.client_years_of_residency;\n      const months = request.client_months_of_residency;\n      if (!years && !months) return null; // Return null so the template can handle \"Not provided\"\n\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n      return parts.join(' and ');\n    },\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    },\n    // Real-time features\n    async initializeRealTimeFeatures() {\n      console.log('Initializing real-time features for AdminRequests');\n      try {\n        // Initialize notification service\n        await notificationService.init('admin');\n\n        // Listen for request-related notifications\n        notificationService.on('notification', this.handleRealTimeNotification);\n        notificationService.on('request_status_changed', this.handleStatusChange);\n        notificationService.on('new_request', this.handleNewRequest);\n\n        // Start auto-refresh if enabled\n        if (this.autoRefreshEnabled) {\n          this.startAutoRefresh();\n        }\n      } catch (error) {\n        console.error('Failed to initialize real-time features:', error);\n      }\n    },\n    cleanupRealTimeFeatures() {\n      console.log('Cleaning up real-time features for AdminRequests');\n\n      // Remove notification listeners\n      notificationService.off('notification', this.handleRealTimeNotification);\n      notificationService.off('request_status_changed', this.handleStatusChange);\n      notificationService.off('new_request', this.handleNewRequest);\n\n      // Cleanup (simplified)\n      notificationService.cleanup();\n\n      // Stop auto-refresh\n      this.stopAutoRefresh();\n    },\n    startAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n      }\n      this.refreshInterval = setInterval(() => {\n        if (this.autoRefreshEnabled && !this.loading) {\n          console.log('Auto-refreshing requests data...');\n          this.refreshRequestsData();\n        }\n      }, this.refreshRate);\n      console.log(`Auto-refresh started with ${this.refreshRate / 1000}s interval`);\n    },\n    stopAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n        this.refreshInterval = null;\n        console.log('Auto-refresh stopped');\n      }\n    },\n    toggleAutoRefresh() {\n      this.autoRefreshEnabled = !this.autoRefreshEnabled;\n      if (this.autoRefreshEnabled) {\n        this.startAutoRefresh();\n      } else {\n        this.stopAutoRefresh();\n      }\n    },\n    async refreshRequestsData() {\n      try {\n        this.lastRefresh = new Date();\n\n        // Refresh requests list\n        await this.loadRequests();\n\n        // Refresh statistics\n        await this.loadDashboardStats();\n\n        // If request details modal is open, refresh it\n        if (this.showRequestDetails && this.currentRequest) {\n          await this.refreshRequestDetails();\n        }\n        console.log('Requests data refreshed successfully');\n      } catch (error) {\n        console.error('Failed to refresh requests data:', error);\n      }\n    },\n    handleRealTimeNotification(notification) {\n      console.log('Real-time notification received:', notification);\n\n      // Handle different notification types\n      switch (notification.type) {\n        case 'request_status_changed':\n          this.handleStatusChange(notification.data);\n          break;\n        case 'new_request':\n          this.handleNewRequest(notification.data);\n          break;\n        case 'request_updated':\n          this.handleRequestUpdate(notification.data);\n          break;\n        case 'unread_count_update':\n        case 'heartbeat':\n          // Polling system notifications - handled by notification service\n          break;\n        default:\n          // Only log unknown types, not system types\n          if (!['unread_count_update', 'heartbeat'].includes(notification.type)) {\n            console.log('Unhandled notification type:', notification.type);\n          }\n      }\n    },\n    handleStatusChange(data) {\n      console.log('🔄 Request status changed:', data);\n      console.log('🔍 Data properties:', {\n        request_id: data.request_id,\n        new_status: data.new_status,\n        payment_status: data.payment_status,\n        amount: data.amount\n      });\n\n      // Update the request in the list if it exists\n      const requestId = data.request_id;\n      if (!requestId) {\n        console.warn('⚠️ No request_id in status change data');\n        return;\n      }\n      const requestIndex = this.requests.findIndex(req => req.id == requestId);\n      if (requestIndex !== -1) {\n        console.log(`📝 Updating request #${data.request_id} in the list`);\n\n        // Update the specific request in the list for immediate UI update\n        const updatedRequest = {\n          ...this.requests[requestIndex]\n        };\n\n        // Map the status based on the new status\n        if (data.new_status === 'payment_confirmed') {\n          updatedRequest.status_name = 'Payment Confirmed';\n          updatedRequest.status_id = 11;\n          updatedRequest.payment_status = 'paid';\n        } else if (data.new_status === 'payment_failed') {\n          updatedRequest.status_name = 'Payment Failed';\n          updatedRequest.payment_status = 'failed';\n        }\n\n        // Update the timestamp\n        updatedRequest.updated_at = data.timestamp || new Date().toISOString();\n\n        // Replace the request in the array\n        this.$set(this.requests, requestIndex, updatedRequest);\n\n        // Also refresh data in background to ensure consistency\n        setTimeout(() => {\n          this.refreshRequestsData();\n        }, 1000);\n        console.log(`✅ Request #${data.request_id} updated in real-time`);\n      } else {\n        console.log(`📄 Request #${data.request_id} not in current view, refreshing data`);\n        // If request is not in current view, just refresh\n        this.refreshRequestsData();\n      }\n\n      // Show toast notification with payment-specific message\n      const toastRequestId = data.request_id || 'Unknown';\n      const newStatus = data.new_status || 'unknown';\n      let title = 'Status Update';\n      let message = `Request #${toastRequestId} status changed`;\n      let type = 'info';\n      if (newStatus === 'payment_confirmed') {\n        title = 'Payment Confirmed';\n        message = `Payment confirmed for request #${toastRequestId}`;\n        type = 'success';\n      } else if (newStatus === 'payment_failed') {\n        title = 'Payment Failed';\n        message = `Payment failed for request #${toastRequestId}`;\n        type = 'error';\n      }\n      console.log('🔔 Showing toast:', {\n        title,\n        message,\n        type\n      });\n      this.showToast(title, message, type);\n    },\n    handleNewRequest(data) {\n      console.log('New request received:', data);\n\n      // Refresh requests to show the new request\n      this.refreshRequestsData();\n\n      // Show toast notification\n      this.showToast('New Request', `New ${data.document_type} request received`, 'success');\n    },\n    handleRequestUpdate(data) {\n      console.log('Request updated:', data);\n\n      // If the updated request is currently being viewed, refresh details\n      if (this.currentRequest && this.currentRequest.id === data.request_id) {\n        this.refreshRequestDetails();\n      }\n\n      // Refresh the requests list\n      this.refreshRequestsData();\n    },\n    showToast(title, message, type = 'info') {\n      // Enhanced debugging\n      console.log('🔔 showToast called with:', {\n        title: title,\n        titleType: typeof title,\n        message: message,\n        messageType: typeof message,\n        type: type\n      });\n\n      // Handle undefined values\n      const safeTitle = title || 'Notification';\n      const safeMessage = message || 'No message provided';\n\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${safeTitle}: ${safeMessage}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${safeTitle}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${safeMessage}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n          }\n          .toast-success { border-left: 4px solid #28a745; }\n          .toast-error { border-left: 4px solid #dc3545; }\n          .toast-info { border-left: 4px solid #17a2b8; }\n          .toast-warning { border-left: 4px solid #ffc107; }\n          @keyframes slideIn {\n            from { transform: translateX(100%); opacity: 0; }\n            to { transform: translateX(0); opacity: 1; }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto-remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.style.animation = 'slideIn 0.3s ease reverse';\n          setTimeout(() => toast.remove(), 300);\n        }\n      }, 5000);\n    },\n    // Document handling methods\n    getDocumentTypeDisplayName(type) {\n      const displayNames = {\n        'government_id': 'Government ID',\n        'proof_of_residency': 'Proof of Residency',\n        'cedula': 'Community Tax Certificate (Cedula)',\n        'birth_certificate': 'Birth Certificate',\n        'marriage_certificate': 'Marriage Certificate',\n        'other': 'Other Document'\n      };\n      return displayNames[type] || type;\n    },\n    isImageFile(mimeType) {\n      return mimeType && (mimeType.startsWith('image/') || ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'].includes(mimeType));\n    },\n    isPdfFile(mimeType) {\n      return mimeType === 'application/pdf';\n    },\n    async loadDocumentUrls(documents) {\n      // Filter documents that need loading (images only, not already loaded/loading/failed)\n      const documentsToLoad = documents.filter(doc => this.isImageFile(doc.mime_type) && !this.documentUrls[doc.id] && !this.loadingDocuments.has(doc.id) && !this.failedDocuments.has(doc.id));\n      if (documentsToLoad.length === 0) return;\n\n      // Load documents in parallel with concurrency limit\n      const CONCURRENT_LIMIT = 3;\n      const chunks = this.chunkArray(documentsToLoad, CONCURRENT_LIMIT);\n      for (const chunk of chunks) {\n        await Promise.allSettled(chunk.map(document => this.loadSingleDocument(document)));\n      }\n    },\n    async loadSingleDocument(document, isForModal = false) {\n      const docId = document.id;\n      try {\n        // Mark as loading\n        this.loadingDocuments.add(docId);\n        if (isForModal) this.imageLoadingInModal = true;\n\n        // Use authenticated API call to get the document\n        const response = await api.get(`/documents/view/${docId}`, {\n          responseType: 'blob',\n          timeout: 15000,\n          // Increased timeout for large images\n          onDownloadProgress: progressEvent => {\n            // Optional: Could emit progress events here\n            if (progressEvent.lengthComputable) {\n              const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n              console.log(`Loading ${docId}: ${percentCompleted}%`);\n            }\n          }\n        });\n\n        // Validate response\n        if (!response.data || response.data.size === 0) {\n          throw new Error('Empty response received');\n        }\n\n        // Check file size and optimize if needed\n        const blob = response.data;\n        const optimizedBlob = await this.optimizeImageBlob(blob, document.mime_type, isForModal);\n\n        // Create blob URL using requestIdleCallback for better performance\n        await this.createBlobUrlWhenIdle(docId, optimizedBlob);\n\n        // Remove from failed set if it was there\n        this.failedDocuments.delete(docId);\n        if (isForModal) this.modalImageError = false;\n      } catch (error) {\n        console.warn(`Failed to load document ${docId}:`, error.message);\n        this.failedDocuments.add(docId);\n        if (isForModal) this.modalImageError = true;\n\n        // Optionally retry after a delay for network errors\n        if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED') {\n          setTimeout(() => {\n            this.failedDocuments.delete(docId);\n          }, 30000); // Retry after 30 seconds\n        }\n      } finally {\n        // Remove from loading set\n        this.loadingDocuments.delete(docId);\n        if (isForModal) this.imageLoadingInModal = false;\n      }\n    },\n    chunkArray(array, size) {\n      const chunks = [];\n      for (let i = 0; i < array.length; i += size) {\n        chunks.push(array.slice(i, i + size));\n      }\n      return chunks;\n    },\n    async getDocumentUrl(document) {\n      // This method is now deprecated in favor of loadDocumentUrls\n      // Keeping for backward compatibility\n      if (this.documentUrls[document.id]) {\n        return this.documentUrls[document.id];\n      }\n      return null;\n    },\n    formatFileSize(bytes) {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n    async openImageModal(document) {\n      // Prevent multiple rapid clicks\n      if (this.imageLoadingInModal) return;\n\n      // Don't open modal if document failed to load and we're not retrying\n      if (this.failedDocuments.has(document.id)) {\n        return;\n      }\n\n      // Set modal state immediately for responsiveness\n      this.selectedImage = document;\n      this.showImageModal = true;\n      this.modalImageError = false;\n\n      // Use nextTick to ensure DOM is updated before heavy operations\n      await this.$nextTick();\n\n      // If image isn't loaded yet, try to load it with modal optimization\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id)) {\n        await this.loadSingleDocument(document, true);\n      }\n    },\n    async retryLoadDocument(document) {\n      // Remove from failed set and retry loading\n      this.failedDocuments.delete(document.id);\n      this.modalImageError = false;\n      await this.loadSingleDocument(document, true);\n    },\n    onModalImageLoad() {\n      // Called when modal image finishes loading\n      this.imageLoadingInModal = false;\n    },\n    cleanupDocumentUrls() {\n      // Revoke all blob URLs to prevent memory leaks\n      Object.values(this.documentUrls).forEach(url => {\n        if (url) URL.revokeObjectURL(url);\n      });\n\n      // Clear all tracking sets and objects\n      this.documentUrls = {};\n      this.loadingDocuments.clear();\n      this.failedDocuments.clear();\n    },\n    preloadImage(document) {\n      // Preload image on hover for better UX\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id) && !this.failedDocuments.has(document.id)) {\n        this.loadSingleDocument(document, false);\n      }\n    },\n    async optimizeImageBlob(blob, mimeType, isForModal = false) {\n      // For very large images, we might want to resize them\n      const MAX_SIZE = isForModal ? 5 * 1024 * 1024 : 2 * 1024 * 1024; // 5MB for modal, 2MB for preview\n\n      if (blob.size <= MAX_SIZE) {\n        return blob; // No optimization needed\n      }\n      try {\n        // Create image element for resizing\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        return new Promise(resolve => {\n          img.onload = () => {\n            // Calculate new dimensions (maintain aspect ratio)\n            const maxDimension = isForModal ? 1920 : 800;\n            let {\n              width,\n              height\n            } = img;\n            if (width > height && width > maxDimension) {\n              height = height * maxDimension / width;\n              width = maxDimension;\n            } else if (height > maxDimension) {\n              width = width * maxDimension / height;\n              height = maxDimension;\n            }\n\n            // Set canvas size and draw resized image\n            canvas.width = width;\n            canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n\n            // Convert to blob with compression\n            canvas.toBlob(optimizedBlob => {\n              resolve(optimizedBlob || blob); // Fallback to original if optimization fails\n            }, mimeType, 0.85 // 85% quality\n            );\n          };\n          img.onerror = () => resolve(blob); // Fallback to original\n          img.src = URL.createObjectURL(blob);\n        });\n      } catch (error) {\n        console.warn('Image optimization failed:', error);\n        return blob; // Fallback to original\n      }\n    },\n    async createBlobUrlWhenIdle(docId, blob) {\n      return new Promise(resolve => {\n        const createUrl = () => {\n          this.documentUrls[docId] = URL.createObjectURL(blob);\n          resolve();\n        };\n\n        // Use requestIdleCallback if available, otherwise use setTimeout\n        if (window.requestIdleCallback) {\n          window.requestIdleCallback(createUrl, {\n            timeout: 1000\n          });\n        } else {\n          setTimeout(createUrl, 0);\n        }\n      });\n    },\n    closeImageModal() {\n      // Prevent rapid clicking during image loading\n      if (this.imageLoadingInModal) return;\n      this.showImageModal = false;\n      this.selectedImage = null;\n      this.imageLoadingInModal = false;\n      this.modalImageError = false;\n    },\n    async downloadDocument(documentFile) {\n      try {\n        // Use authenticated API call to download the document\n        const response = await api.get(`/documents/download/${documentFile.id}`, {\n          responseType: 'blob'\n        });\n\n        // Create a download link\n        const blob = new Blob([response.data], {\n          type: documentFile.mime_type\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = documentFile.document_name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Failed to download document:', error);\n        this.showToast('Error', 'Failed to download document', 'error');\n      }\n    },\n    handleImageError(event) {\n      console.error('Failed to load image:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n\n      // Show error message\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'text-center text-muted p-3';\n      errorDiv.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><br>Failed to load image';\n      event.target.parentNode.appendChild(errorDiv);\n    },\n    // Beneficiary verification status methods\n    getBeneficiaryVerificationStatusClass(status) {\n      switch (status) {\n        case 'approved':\n          return 'bg-success';\n        case 'rejected':\n          return 'bg-danger';\n        case 'pending':\n        default:\n          return 'bg-warning';\n      }\n    },\n    getBeneficiaryVerificationStatusText(status) {\n      switch (status) {\n        case 'approved':\n          return 'Verified';\n        case 'rejected':\n          return 'Rejected';\n        case 'pending':\n        default:\n          return 'Pending';\n      }\n    },\n    // View verification image\n    async viewVerificationImage(requestId, imageType) {\n      try {\n        // Find the request to get the filename - check both requests list and currentRequest\n        let request = this.requests.find(r => r.id === requestId);\n\n        // If not found in requests list, check if it's the current request being viewed\n        if (!request && this.currentRequest && this.currentRequest.id === requestId) {\n          request = this.currentRequest;\n        }\n        if (!request) {\n          this.showToast('Error', 'Request not found', 'error');\n          return;\n        }\n        let filename = '';\n        let documentType = '';\n        switch (imageType) {\n          case 'beneficiary':\n            // Handle both list view (beneficiary_verification_image) and detail view (beneficiary.verification_image_path)\n            filename = request.beneficiary_verification_image || request.beneficiary?.verification_image_path;\n            documentType = 'beneficiary';\n            // For beneficiary documents, we need the beneficiary ID, not the request ID\n            if (request.beneficiary?.id) {\n              requestId = request.beneficiary.id;\n            }\n            break;\n          case 'pickup-id':\n            filename = request.pickup_id_image || request.authorized_pickup?.id_image_path;\n            documentType = 'pickup-id';\n            break;\n          case 'pickup-auth':\n            filename = request.pickup_authorization_letter || request.authorized_pickup?.authorization_letter_path;\n            documentType = 'pickup-auth';\n            break;\n          default:\n            this.showToast('Error', 'Invalid image type', 'error');\n            return;\n        }\n        if (!filename) {\n          this.showToast('Error', 'No image available', 'error');\n          return;\n        }\n\n        // Extract just the filename from the path (handle both forward and back slashes)\n        const filenameOnly = filename.split(/[/\\\\]/).pop();\n\n        // Construct the URL for the verification document service\n        const imageUrl = `/verification-documents/serve/${documentType}/${requestId}/${filenameOnly}`;\n\n        // Fetch the image with authentication headers and display in modal\n        await this.displayImageInModal(imageUrl, `${documentType} verification image`);\n      } catch (error) {\n        console.error('Error viewing verification image:', error);\n        this.showToast('Error', 'Failed to view image', 'error');\n      }\n    },\n    // Display image in modal with authentication\n    async displayImageInModal(imageUrl, title) {\n      try {\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // Fetch the image with authentication headers\n        const response = await api.get(imageUrl, {\n          responseType: 'blob'\n        });\n\n        // Create object URL from blob\n        const imageObjectUrl = URL.createObjectURL(response.data);\n\n        // Create and show modal\n        const modalHtml = `\n          <div class=\"modal fade\" id=\"imageViewModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">${title}</h5>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body text-center\">\n                  <img src=\"${imageObjectUrl}\" class=\"img-fluid\" alt=\"${title}\" style=\"max-height: 70vh;\">\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;\n\n        // Remove existing modal if any\n        const existingModal = document.getElementById('imageViewModal');\n        if (existingModal) {\n          existingModal.remove();\n        }\n\n        // Add modal to DOM\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Show modal\n        const modal = new Modal(document.getElementById('imageViewModal'));\n        modal.show();\n\n        // Clean up object URL when modal is hidden\n        document.getElementById('imageViewModal').addEventListener('hidden.bs.modal', () => {\n          URL.revokeObjectURL(imageObjectUrl);\n          document.getElementById('imageViewModal').remove();\n        });\n      } catch (error) {\n        console.error('Error displaying image:', error);\n        this.showToast('Error', 'Failed to load image', 'error');\n      }\n    },\n    // View pickup documents in modal\n    async viewPickupDocuments(request) {\n      try {\n        // Set the selected request and show the modal\n        this.selectedRequestForPickup = request;\n\n        // Show modal\n        const modal = new Modal(document.getElementById('authorizedPickupDocumentsModal'));\n        modal.show();\n      } catch (error) {\n        console.error('Error opening pickup documents modal:', error);\n        this.showToast('Error', 'Failed to open documents modal', 'error');\n      }\n    },\n    // Verify pickup authorization\n    async verifyPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization verification\n        // const response = await adminDocumentService.verifyPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization verified successfully', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error verifying pickup authorization:', error);\n        this.showToast('Error', 'Failed to verify pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n    // Reject pickup authorization\n    async rejectPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization rejection\n        // const response = await adminDocumentService.rejectPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization rejected', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error rejecting pickup authorization:', error);\n        this.showToast('Error', 'Failed to reject pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n    // Update beneficiary verification status\n    async updateBeneficiaryVerificationStatus(beneficiaryId, status, notes = '') {\n      try {\n        const response = await this.$http.put(`/api/verification-documents/beneficiary/${beneficiaryId}/verification-status`, {\n          status,\n          notes\n        });\n        if (response.data.success) {\n          this.showToast('Success', 'Verification status updated successfully', 'success');\n          // Refresh the requests to show updated status\n          await this.loadRequests();\n        } else {\n          throw new Error(response.data.message || 'Failed to update verification status');\n        }\n      } catch (error) {\n        console.error('Error updating verification status:', error);\n        this.showToast('Error', error.response?.data?.message || 'Failed to update verification status', 'error');\n      }\n    },\n    // Open verification modal\n    openVerificationModal(request) {\n      this.currentVerification = {\n        requestId: request.id,\n        beneficiaryId: request.beneficiary_id,\n        beneficiary_name: request.beneficiary_name,\n        relationship: request.beneficiary_relationship,\n        image_url: request.beneficiary_verification_image ? `/verification-documents/serve/beneficiary/${request.id}/${request.beneficiary_verification_image.split('/').pop()}` : null,\n        current_status: request.beneficiary_verification_status\n      };\n      this.verificationForm = {\n        status: request.beneficiary_verification_status || 'pending',\n        notes: ''\n      };\n\n      // Show the modal\n      const modal = new Modal(document.getElementById('verificationModal'));\n      modal.show();\n    },\n    // Save verification status from modal\n    async saveVerificationStatus() {\n      if (!this.currentVerification) return;\n      try {\n        await this.updateBeneficiaryVerificationStatus(this.currentVerification.beneficiaryId, this.verificationForm.status, this.verificationForm.notes);\n\n        // Close the modal\n        const modal = Modal.getInstance(document.getElementById('verificationModal'));\n        modal.hide();\n\n        // Reset form\n        this.currentVerification = null;\n        this.verificationForm = {\n          status: 'pending',\n          notes: ''\n        };\n      } catch (error) {\n        // Error handling is done in updateBeneficiaryVerificationStatus\n      }\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","AuthorizedPickupDocumentsModal","unifiedAuthService","adminDocumentService","api","Modal","notificationService","jsPDF","autoTable","name","components","data","loading","sidebarCollapsed","showUserDropdown","isMobile","adminData","errorMessage","viewMode","requests","selectedRequests","currentRequest","statusOptions","selectedRequestForPickup","processingPickupAction","pagination","currentPage","totalPages","totalItems","itemsPerPage","filters","status","document_type","priority","search","date_from","date_to","pdfExportForm","reportType","selectedDate","selectedWeek","selectedMonth","requestStats","total","pending","approved","completed","thisMonth","documentTypes","searchTimeout","showFilters","showBulkActions","showRequestDetails","showRejectForm","showQuickReject","showQuickApprove","currentVerification","verificationForm","notes","showImageModal","selectedImage","bulkAction","documentUrls","loadingDocuments","Set","failedDocuments","imageLoadingInModal","modalImageError","statusUpdateForm","status_id","rejectForm","reason","quickRejectForm","error","selectedRequestForReject","quickApproveForm","selectedRequestForApprove","paymentVerificationForm","amount_received","receipt_number","pickupScheduleForm","scheduled_date","scheduled_time_start","scheduled_time_end","refreshInterval","autoRefreshEnabled","refreshRate","lastRefresh","mounted","isLoggedIn","getUserType","$router","push","initializeUI","loadComponentData","initializePDFExportForm","initializeRealTimeFeatures","beforeUnmount","handleResize","window","removeEventListener","cleanupRealTimeFeatures","cleanupDocumentUrls","computed","activeMenu","path","$route","includes","methods","innerWidth","saved","localStorage","getItem","JSON","parse","wasMobile","addEventListener","getCurrentDate","getCurrentWeek","getCurrentMonth","handleSidebarToggle","setItem","stringify","handleMenuChange","menu","routes","handleUserDropdownToggle","handleOpenRequestModal","modalData","console","log","requestId","focusTab","viewRequestDetails","setTimeout","focusModalTab","showErrorMessage","tabName","tabMappings","payment","paymentSection","document","querySelector","scrollIntoView","behavior","block","classList","add","remove","statusSection","documents","documentsSection","focusAction","handleMenuAction","action","closeMobileSidebar","handleLogout","logout","loadAdminProfile","currentUser","getCurrentUser","profile","first_name","username","role","Promise","all","loadStatusOptions","loadDocumentTypes","loadRequests","loadDashboardStats","errorData","parseError","message","response","getStatusOptions","success","showToast","getDocumentTypes","getDashboardStats","overview","total_requests","pending_requests","approved_requests","completed_requests","time_based","today_requests","params","page","limit","getAllRequests","allRequests","historicalRequests","filter","request","statusName","status_name","toLowerCase","length","current_page","total_pages","per_page","applyFilters","debouncedSearch","clearTimeout","clearFilters","changePage","changeItemsPerPage","goBack","toggleRequestSelection","index","indexOf","splice","selectAllRequests","map","r","id","getRequestDetails","Object","keys","client_birth_date","client_gender","client_civil_status_id","client_nationality","client_years_of_residency","client_months_of_residency","forEach","key","uploaded_documents","loadDocumentUrls","request_number","refreshRequestDetails","updateRequestStatusFromModal","currentStatus","newStatusId","newStatus","find","s","getAllowedStatusTransitions","getAvailableStatusOptions","isValidStatusChange","updateData","parseInt","updateRequestStatus","rejectRequestFromModal","trim","rejectRequest","statusId","approveRequest","canApprove","allowedTransitions","canReject","getStatusExplanation","formatStatus","currentStatusName","newStatusName","needsPaymentVerification","payment_method","payment_status","canSchedulePickup","getPaymentStatusColor","colors","formatPaymentStatus","statuses","getTomorrowDate","tomorrow","Date","setDate","getDate","toISOString","split","isPickupFormValid","finalStates","isCashPayment","payment_method_code","payment_method_id","is_online_payment","transitions","getUpdateButtonTitle","getActionButtonText","selectedStatus","quickApprove","showQuickRejectModal","closeQuickRejectModal","confirmQuickReject","showQuickApproveModal","closeQuickApproveModal","confirmQuickApprove","performBulkAction","bulkUpdateRequests","request_ids","exportRequests","csvData","filename","downloadCSV","exportToPDF","isPDFExportValid","reportData","getReportData","pdf","generatePDFReport","getPDFFilename","save","reportFilters","dateRange","getDateRangeForReport","from","to","total_document_fee","total_fee","amount","all_fields","filteredRequests","year","week","startDate","getDateFromWeek","endDate","month","setFontSize","setFont","setTextColor","text","align","setDrawColor","setLineWidth","line","reportTitle","getReportTitle","dateRangeText","getDateRangeText","generatedDate","toLocaleDateString","day","hour","minute","stats","calculateReportStats","setFillColor","roundedRect","cancelled","completionRate","Math","round","tableData","slice","client_name","formatCurrencyForPDF","getAmountForPDF","formatDateForPDF","requested_at","head","body","startY","theme","headStyles","fillColor","textColor","fontStyle","fontSize","styles","cellPadding","overflow","cellWidth","columnStyles","halign","autoTableError","Error","addPDFFooter","generateManualTable","yPosition","lineHeight","headerHeight","columns","x","width","rect","headers","headerY","header","col","textX","rowData","truncateText","cellData","colIndex","String","addPage","pageCount","internal","getNumberOfPages","i","setPage","maxLength","substring","dateString","date","toString","padStart","original","type","parsed","parseFloat","isNaN","numAmount","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","result","format","possibleAmountFields","foundField","field","undefined","fieldValue","found_field","reduce","acc","disablePDFDebugLogging","originalLog","args","apply","timestamp","formatDate","simple","dow","getDay","ISOweekStart","now","getFullYear","getWeekNumber","getMonth","d","UTC","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","verifyInPersonPayment","totalFee","amountReceived","formatCurrency","paymentData","schedulePickup","scheduleData","getStatusColor","getDisplayFee","totalDocumentFee","parsed_total_document_fee","parsed_total_fee","will_display","hasConvenienceFee","baseFee","getBaseFee","documentType","PAYMONGO_MINIMUM","getConvenienceFee","max","getConvenienceFeeExplanation","convenienceFee","toFixed","formatted","style","currency","formatDateTime","toLocaleString","getChangedByName","history","change_reason","startsWith","changed_by_name","getFormattedReason","getClientFullName","parts","client_first_name","client_middle_name","client_last_name","client_suffix","Boolean","join","getClientFullAddress","client_house_number","client_street","client_subdivision","client_barangay","client_city_municipality","client_city","client_province","client_address","formatGender","gender","charAt","toUpperCase","getCivilStatusName","formatRelationship","relationship","relationships","formatAuthorizationStatus","getAuthorizationStatusClass","classes","getAuthorizationStatusIcon","icons","verifyAuthorization","isApproved","getResidencyDisplay","years","months","formatTime","toLocaleTimeString","hour12","init","on","handleRealTimeNotification","handleStatusChange","handleNewRequest","startAutoRefresh","off","cleanup","stopAutoRefresh","clearInterval","setInterval","refreshRequestsData","toggleAutoRefresh","notification","handleRequestUpdate","request_id","new_status","warn","requestIndex","findIndex","req","updatedRequest","updated_at","$set","toastRequestId","title","titleType","messageType","safeTitle","safeMessage","toast","createElement","className","innerHTML","getElementById","textContent","appendChild","parentElement","animation","getDocumentTypeDisplayName","displayNames","isImageFile","mimeType","isPdfFile","documentsToLoad","doc","mime_type","has","CONCURRENT_LIMIT","chunks","chunkArray","chunk","allSettled","loadSingleDocument","isForModal","docId","get","responseType","timeout","onDownloadProgress","progressEvent","lengthComputable","percentCompleted","loaded","size","blob","optimizedBlob","optimizeImageBlob","createBlobUrlWhenIdle","delete","code","array","getDocumentUrl","formatFileSize","bytes","k","sizes","floor","pow","openImageModal","$nextTick","retryLoadDocument","onModalImageLoad","values","url","URL","revokeObjectURL","clear","preloadImage","MAX_SIZE","img","Image","canvas","ctx","getContext","resolve","onload","maxDimension","height","drawImage","toBlob","onerror","src","createObjectURL","createUrl","requestIdleCallback","closeImageModal","downloadDocument","documentFile","Blob","link","href","download","document_name","click","removeChild","handleImageError","event","target","display","errorDiv","parentNode","getBeneficiaryVerificationStatusClass","getBeneficiaryVerificationStatusText","viewVerificationImage","imageType","beneficiary_verification_image","beneficiary","verification_image_path","pickup_id_image","authorized_pickup","id_image_path","pickup_authorization_letter","authorization_letter_path","filenameOnly","pop","imageUrl","displayImageInModal","default","imageObjectUrl","modalHtml","existingModal","insertAdjacentHTML","modal","show","viewPickupDocuments","verifyPickupAuthorization","getInstance","hide","rejectPickupAuthorization","updateBeneficiaryVerificationStatus","beneficiaryId","$http","put","openVerificationModal","beneficiary_id","beneficiary_name","beneficiary_relationship","image_url","current_status","beneficiary_verification_status","saveVerificationStatus"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\RequestHistory.vue"],"sourcesContent":["<template>\n  <div class=\"request-history\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @open-request-modal=\"handleOpenRequestModal\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <!-- Loading State -->\n        <div v-if=\"loading\" class=\"d-flex justify-content-center align-items-center\" style=\"min-height: 400px;\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n\n        <!-- Main Content -->\n        <div v-else class=\"container-fluid py-4\">\n          <!-- Error Message -->\n          <div v-if=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n            {{ errorMessage }}\n            <button type=\"button\" class=\"btn-close\" @click=\"errorMessage = ''\" aria-label=\"Close\"></button>\n          </div>\n\n          <!-- Filters Panel -->\n          <div v-if=\"showFilters\" class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md-3 mb-3\">\n                  <label class=\"form-label\">Search</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"filters.search\"\n                    placeholder=\"Search by request number\"\n                    @input=\"debouncedSearch\"\n                    @keyup.enter=\"applyFilters\"\n                  >\n                </div>\n\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Document Type</label>\n                  <select class=\"form-select\" v-model=\"filters.document_type\" @change=\"applyFilters\">\n                    <option value=\"\">All Types</option>\n                    <option v-for=\"docType in documentTypes\" :key=\"docType.id\" :value=\"docType.type_name\">\n                      {{ docType.type_name }}\n                    </option>\n                  </select>\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Date From</label>\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    v-model=\"filters.date_from\"\n                    :max=\"getCurrentDate()\"\n                  >\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Date To</label>\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    v-model=\"filters.date_to\"\n                    :max=\"getCurrentDate()\"\n                  >\n                </div>\n                <div class=\"col-md-1 mb-3 d-flex align-items-end\">\n                  <div class=\"d-flex gap-1 w-100\">\n                    <button class=\"btn btn-primary btn-sm\" @click=\"applyFilters\">\n                      <i class=\"fas fa-search\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-secondary btn-sm\" @click=\"clearFilters\">\n                      <i class=\"fas fa-times\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <!-- PDF Export Section -->\n              <div class=\"row mt-3 pt-3 border-top\">\n                <div class=\"col-12\">\n                  <h6 class=\"mb-3\">\n                    <i class=\"fas fa-file-pdf text-danger me-2\"></i>\n                    PDF Export\n                  </h6>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                  <label class=\"form-label\">Report Type</label>\n                  <select class=\"form-select\" v-model=\"pdfExportForm.reportType\">\n                    <option value=\"daily\">Daily Report</option>\n                    <option value=\"weekly\">Weekly Report</option>\n                    <option value=\"monthly\">Monthly Report</option>\n                  </select>\n                </div>\n                <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'daily'\">\n                  <label class=\"form-label\">Select Date</label>\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    v-model=\"pdfExportForm.selectedDate\"\n                    :max=\"getCurrentDate()\"\n                  >\n                </div>\n                <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'weekly'\">\n                  <label class=\"form-label\">Select Week</label>\n                  <input\n                    type=\"week\"\n                    class=\"form-control\"\n                    v-model=\"pdfExportForm.selectedWeek\"\n                    :max=\"getCurrentWeek()\"\n                  >\n                </div>\n                <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'monthly'\">\n                  <label class=\"form-label\">Select Month</label>\n                  <input\n                    type=\"month\"\n                    class=\"form-control\"\n                    v-model=\"pdfExportForm.selectedMonth\"\n                    :max=\"getCurrentMonth()\"\n                  >\n                </div>\n                <div class=\"col-md-3 mb-3 d-flex align-items-end\">\n                  <button\n                    class=\"btn btn-danger\"\n                    @click=\"exportToPDF\"\n                    :disabled=\"!isPDFExportValid() || pdfExportForm.loading\"\n                  >\n                    <i class=\"fas fa-file-pdf me-1\" :class=\"{ 'fa-spin': pdfExportForm.loading }\"></i>\n                    {{ pdfExportForm.loading ? 'Generating...' : 'Export PDF' }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Note: Bulk Actions removed for history view as completed and cancelled requests should not be modified -->\n\n          <!-- View Toggle -->\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\n            <div class=\"d-flex align-items-center gap-3\">\n              <div class=\"d-flex align-items-center gap-2\">\n                <span class=\"text-muted small\">\n                  Showing {{ ((pagination.currentPage - 1) * pagination.itemsPerPage) + 1 }} -\n                  {{ Math.min(pagination.currentPage * pagination.itemsPerPage, pagination.totalItems) }}\n                  of {{ pagination.totalItems }} requests\n                </span>\n                <select class=\"form-select form-select-sm\" style=\"width: auto;\" v-model=\"pagination.itemsPerPage\" @change=\"changeItemsPerPage(pagination.itemsPerPage)\">\n                  <option value=\"10\">10 per page</option>\n                  <option value=\"25\">25 per page</option>\n                  <option value=\"50\">50 per page</option>\n                  <option value=\"100\">100 per page</option>\n                </select>\n              </div>\n                 <div class=\"d-flex gap-2 align-items-center\">\n                  <button class=\"btn btn-outline-primary btn-sm\" @click=\"showFilters = !showFilters\">\n                    <i class=\"fas fa-filter me-1\"></i>\n                    {{ showFilters ? 'Hide' : 'Show' }} Filters\n                  </button>\n                  <button\n                    class=\"btn btn-outline-danger btn-sm\"\n                    @click=\"exportToPDF\"\n                    :disabled=\"!isPDFExportValid() || pdfExportForm.loading\"\n                    title=\"Export PDF Report (configure in filters)\"\n                  >\n                    <i class=\"fas fa-file-pdf me-1\" :class=\"{ 'fa-spin': pdfExportForm.loading }\"></i>\n                    PDF\n                  </button>\n                </div>\n            </div>\n\n            <!-- Selection removed for history view -->\n          </div>\n\n          <!-- Card View -->\n          <div v-if=\"viewMode === 'card'\" class=\"requests-grid\">\n            <!-- Empty State -->\n            <div v-if=\"requests.length === 0\" class=\"empty-state text-center py-5\">\n              <div class=\"empty-state-icon mb-3\">\n                <i class=\"fas fa-inbox fa-4x text-muted\"></i>\n              </div>\n              <h5 class=\"text-muted mb-2\">No Historical Requests Found</h5>\n              <p class=\"text-muted\">There are no completed or cancelled document requests matching your current filters.</p>\n            </div>\n\n            <!-- Request Cards -->\n            <div v-else class=\"row g-4\">\n              <div v-for=\"request in requests\" :key=\"request.id\" class=\"col-xl-4 col-lg-6 col-md-6\">\n                <div class=\"request-card\" :class=\"{ 'cancelled-request': request.status_name.toLowerCase() === 'cancelled' }\">\n                  <!-- Card Header -->\n                  <div class=\"request-card-header\">\n                    <div class=\"d-flex justify-content-between align-items-start\">\n                      <div class=\"d-flex align-items-center gap-2\">\n                        <div class=\"request-number\">\n                          <span class=\"badge bg-success\">{{ request.request_number }}</span>\n                        </div>\n                        <!-- Cancelled Status Indicator -->\n                        <div v-if=\"request.status_name.toLowerCase() === 'cancelled'\" class=\"cancelled-indicator\">\n                          <span class=\"badge bg-danger\">\n                            <i class=\"fas fa-times-circle me-1\"></i>CANCELLED\n                          </span>\n                        </div>\n                      </div>\n                      <div class=\"request-actions-simple\">\n                        <button class=\"btn btn-sm btn-primary\" @click=\"viewRequestDetails(request.id)\" title=\"View & Manage Request\">\n                          <i class=\"fas fa-edit me-1\"></i>Manage\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Card Body -->\n                  <div class=\"request-card-body\">\n                    <!-- Client Info -->\n                    <div class=\"client-info mb-3\">\n                      <div class=\"d-flex align-items-center gap-2 mb-2\">\n                        <div class=\"client-avatar\">\n                          <i class=\"fas fa-user-circle fa-2x text-primary\"></i>\n                        </div>\n                        <div class=\"flex-grow-1\">\n                          <!-- Third-party request: Show beneficiary name prominently -->\n                          <div v-if=\"request.is_third_party_request && request.beneficiary_name\">\n                            <h6 class=\"mb-0 fw-bold text-success\">\n                              <i class=\"fas fa-user-friends me-1\"></i>\n                              {{ request.beneficiary_name }}\n                            </h6>\n                            <small class=\"text-muted\">\n                              Document for: {{ request.beneficiary_relationship || 'Family Member' }}\n                            </small>\n                            <div class=\"mt-1\">\n                              <small class=\"text-muted\">Requested by: {{ request.client_name }}</small>\n                            </div>\n                          </div>\n                          <!-- Self request: Show client name -->\n                          <div v-else>\n                            <h6 class=\"mb-0 fw-bold\">{{ request.client_name }}</h6>\n                            <small class=\"text-muted\">{{ request.client_email }}</small>\n                          </div>\n                        </div>\n                        <!-- Request type indicator -->\n                        <div class=\"request-type-badge\">\n                          <span v-if=\"request.is_third_party_request\" class=\"badge bg-info\">\n                            <i class=\"fas fa-users me-1\"></i>Family\n                          </span>\n                          <span v-else class=\"badge bg-secondary\">\n                            <i class=\"fas fa-user me-1\"></i>Self\n                          </span>\n                        </div>\n                      </div>\n\n                      <!-- Additional Client Details -->\n                      <div class=\"client-details-grid mt-2\">\n                        <div class=\"row g-1\">\n                          <div class=\"col-6\" v-if=\"request.client_birth_date\">\n                            <small class=\"text-muted d-block\">Date of Birth</small>\n                            <small class=\"fw-medium\">{{ formatDate(request.client_birth_date) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"request.client_gender\">\n                            <small class=\"text-muted d-block\">Gender</small>\n                            <small class=\"fw-medium\">{{ formatGender(request.client_gender) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"getCivilStatusName(request.client_civil_status_id)\">\n                            <small class=\"text-muted d-block\">Civil Status</small>\n                            <small class=\"fw-medium\">{{ getCivilStatusName(request.client_civil_status_id) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"request.client_nationality\">\n                            <small class=\"text-muted d-block\">Nationality</small>\n                            <small class=\"fw-medium\">{{ request.client_nationality }}</small>\n                          </div>\n                          <div class=\"col-12\" v-if=\"getResidencyDisplay(request)\">\n                            <small class=\"text-muted d-block\">Years of Residency</small>\n                            <small class=\"fw-medium\">{{ getResidencyDisplay(request) }}</small>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Third-Party Request Indicator -->\n                    <div v-if=\"request.is_third_party_request\" class=\"third-party-indicator mb-3\">\n                      <div class=\"alert alert-info py-2 px-3 mb-0\">\n                        <div class=\"d-flex align-items-center\">\n                          <i class=\"fas fa-users me-2\"></i>\n                          <div class=\"flex-grow-1\">\n                            <small class=\"fw-bold\">Third-Party Request</small>\n                            <div class=\"small text-muted\">\n                              Document for: <span class=\"fw-medium\">{{ request.beneficiary_name || 'Another person' }}</span>\n                              <span v-if=\"request.relationship_to_requestor && request.relationship_to_requestor !== 'self'\">\n                                ({{ formatRelationship(request.relationship_to_requestor) }})\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Family Member Verification Status -->\n                    <div v-if=\"request.is_third_party_request\" class=\"verification-status mb-3\">\n                      <div class=\"card border-0 bg-light\">\n                        <div class=\"card-body py-2 px-3\">\n                          <div class=\"d-flex align-items-center justify-content-between\">\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <i class=\"fas fa-id-card text-primary\"></i>\n                              <small class=\"fw-bold\">Family Verification</small>\n                            </div>\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <!-- Verification Status Badge -->\n                              <span class=\"badge\" :class=\"getBeneficiaryVerificationStatusClass(request.beneficiary_verification_status)\">\n                                {{ getBeneficiaryVerificationStatusText(request.beneficiary_verification_status) }}\n                              </span>\n                              <!-- View/Manage Verification Button -->\n                              <button\n                                v-if=\"request.beneficiary_verification_image\"\n                                class=\"btn btn-sm btn-outline-primary\"\n                                @click=\"openVerificationModal(request)\"\n                                title=\"Manage verification\"\n                              >\n                                <i class=\"fas fa-eye me-1\"></i>Review\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Authorized Pickup Indicator -->\n                    <div v-if=\"request.pickup_person_name\" class=\"pickup-indicator mb-3\">\n                      <div class=\"card border-0 bg-warning-subtle\">\n                        <div class=\"card-body py-2 px-3\">\n                          <div class=\"d-flex align-items-center justify-content-between mb-2\">\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <i class=\"fas fa-hand-paper text-warning\"></i>\n                              <small class=\"fw-bold\">Authorized Pickup</small>\n                            </div>\n                            <span class=\"badge\" :class=\"getAuthorizationStatusClass(request.pickup_authorization_verified ? 'verified' : 'pending')\">\n                              {{ request.pickup_authorization_verified ? 'Verified' : 'Pending' }}\n                            </span>\n                          </div>\n                          <div class=\"small text-muted mb-2\">\n                            Pickup by: <span class=\"fw-medium\">{{ request.pickup_person_name }}</span>\n                          </div>\n                          <!-- Pickup Documents -->\n                          <div class=\"d-flex gap-2\">\n                            <button\n                              v-if=\"request.pickup_id_image\"\n                              class=\"btn btn-sm btn-outline-secondary\"\n                              @click=\"viewVerificationImage(request.id, 'pickup-id')\"\n                              title=\"View pickup person's ID\"\n                            >\n                              <i class=\"fas fa-id-card me-1\"></i>ID\n                            </button>\n                            <button\n                              v-if=\"request.pickup_authorization_letter\"\n                              class=\"btn btn-sm btn-outline-secondary\"\n                              @click=\"viewVerificationImage(request.id, 'pickup-auth')\"\n                              title=\"View authorization letter\"\n                            >\n                              <i class=\"fas fa-file-signature me-1\"></i>Letter\n                            </button>\n                            <!-- View All Documents Button -->\n                            <button\n                              v-if=\"request.pickup_id_image || request.pickup_authorization_letter\"\n                              class=\"btn btn-sm btn-primary\"\n                              @click=\"viewPickupDocuments(request)\"\n                              title=\"View all pickup documents\"\n                            >\n                              <i class=\"fas fa-images me-1\"></i>View All\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Document Type -->\n                    <div class=\"document-type mb-3\">\n                      <div class=\"d-flex align-items-center gap-2\">\n                        <i class=\"fas fa-file-alt text-info\"></i>\n                        <span class=\"badge bg-info-subtle text-info-emphasis px-3 py-2\">\n                          {{ request.document_type }}\n                        </span>\n                      </div>\n                    </div>\n\n                    <!-- Status and Amount -->\n                    <div class=\"request-meta mb-3\">\n                      <div class=\"row g-2\">\n                        <div class=\"col-6\">\n                          <div class=\"meta-item\">\n                            <small class=\"text-muted d-block\">Status</small>\n                            <span class=\"badge\" :class=\"`bg-${getStatusColor(request.status_name)}`\">\n                              {{ formatStatus(request.status_name) }}\n                            </span>\n                          </div>\n                        </div>\n                        <div class=\"col-6\">\n                          <div class=\"meta-item\">\n                            <small class=\"text-muted d-block\">Amount</small>\n                            <div v-if=\"hasConvenienceFee(request)\">\n                              <div class=\"fee-breakdown\">\n                                <div class=\"base-fee\">\n                                  <small class=\"text-muted\">Document Fee:</small>\n                                  <span class=\"fw-bold text-primary\">{{ formatCurrency(getBaseFee(request)) }}</span>\n                                </div>\n                                <div class=\"convenience-fee\">\n                                  <small class=\"text-muted\">Convenience Fee:</small>\n                                  <span class=\"fw-bold text-warning\">{{ formatCurrency(getConvenienceFee(request)) }}</span>\n                                  <i class=\"fas fa-info-circle text-muted ms-1\"\n                                     :title=\"getConvenienceFeeExplanation(request)\"></i>\n                                </div>\n                                <div class=\"total-fee border-top pt-1\">\n                                  <small class=\"text-muted\">Total Payment:</small>\n                                  <span class=\"fw-bold text-success\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                                </div>\n                              </div>\n                            </div>\n                            <div v-else>\n                              <span class=\"fw-bold text-success\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Date -->\n                    <div class=\"request-date\">\n                      <small class=\"text-muted\">\n                        <i class=\"fas fa-calendar-alt me-1\"></i>\n                        Submitted {{ formatDate(request.requested_at) }}\n                      </small>\n                    </div>\n                  </div>\n\n                  <!-- Card Footer -->\n                  <div class=\"request-card-footer\">\n                    <div class=\"d-grid\">\n                      <button class=\"btn btn-sm btn-primary\" @click=\"viewRequestDetails(request.id)\">\n                        <i class=\"fas fa-edit me-1\"></i>Manage Request\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Table View -->\n          <div v-else class=\"modern-table-container\">\n\n            <!-- Empty State -->\n            <div v-if=\"requests.length === 0\" class=\"modern-table-empty\">\n              <div class=\"empty-content\">\n                <div class=\"empty-icon\">\n                  <i class=\"fas fa-inbox\"></i>\n                </div>\n                <h6 class=\"empty-title\">No Historical Requests Found</h6>\n                <p class=\"empty-text\">There are no completed or cancelled document requests matching your current filters.</p>\n              </div>\n            </div>\n\n            <!-- Modern Compact Table -->\n            <div v-else class=\"compact-table-wrapper\">\n              <!-- Table Header -->\n              <div class=\"compact-table-header\">\n                <div class=\"header-cell\">Request ID</div>\n                <div class=\"header-cell\">Client</div>\n                <div class=\"header-cell\">Document</div>\n                <div class=\"header-cell\">Status</div>\n                <div class=\"header-cell\">Amount</div>\n                <div class=\"header-cell\">Date Completed</div>\n                <div class=\"header-cell\">Actions</div>\n              </div>\n\n              <!-- Table Body -->\n              <div class=\"compact-table-body\">\n                <div v-for=\"request in requests\" :key=\"request.id\"\n                     class=\"compact-row\" :class=\"{ 'cancelled-request': request.status_name.toLowerCase() === 'cancelled' }\">\n\n                  <!-- Request ID -->\n                  <div class=\"row-cell request-id-cell\">\n                    <div class=\"request-id-content\">\n                      <span class=\"request-number\">{{ request.request_number }}</span>\n                      <!-- never show the actual ID from database -->\n                      <!-- <span class=\"request-id-small\">{{ request.id }}</span> -->\n                    </div>\n                  </div>\n\n                  <!-- Client -->\n                  <div class=\"row-cell client-cell\">\n                    <div class=\"client-compact\">\n                      <div class=\"client-avatar-tiny\">\n                        <i class=\"fas fa-user\"></i>\n                      </div>\n                      <div class=\"client-info-compact\">\n                        <div class=\"client-name-compact\">{{ request.client_name }}</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Document Type -->\n                  <div class=\"row-cell document-cell\">\n                    <span class=\"document-badge\">\n                      <i class=\"fas fa-file-alt\"></i>\n                      {{ request.document_type }}\n                    </span>\n                  </div>\n\n                  <!-- Status -->\n                  <div class=\"row-cell status-cell\">\n                    <span class=\"status-compact\" :class=\"`status-${getStatusColor(request.status_name)}`\">\n                      <i class=\"fas fa-circle\"></i>\n                      {{ formatStatus(request.status_name) }}\n                    </span>\n                  </div>\n\n                  <!-- Amount -->\n                  <div class=\"row-cell amount-cell\">\n                    <div v-if=\"hasConvenienceFee(request)\" class=\"amount-breakdown\">\n                      <div class=\"amount-compact\">{{ formatCurrency(getDisplayFee(request)) }}</div>\n                      <small class=\"text-muted d-block\">\n                        Base: {{ formatCurrency(getBaseFee(request)) }} +\n                        Conv: {{ formatCurrency(getConvenienceFee(request)) }}\n                      </small>\n                    </div>\n                    <div v-else>\n                      <span class=\"amount-compact\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                    </div>\n                  </div>\n\n                  <!-- Date -->\n                  <div class=\"row-cell date-cell\">\n                    <div class=\"date-compact\">\n                      <span class=\"date-main\">{{ formatDate(request.requested_at) }}</span>\n                      <span class=\"time-small\">{{ formatTime(request.requested_at) }}</span>\n                    </div>\n                  </div>\n\n                  <!-- Actions -->\n                  <div class=\"row-cell actions-cell\">\n                    <div class=\"actions-simple\">\n                      <button class=\"action-btn-sm primary-btn-sm\" @click=\"viewRequestDetails(request.id)\" title=\"View & Manage Request\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Pagination -->\n          <div v-if=\"pagination.totalPages > 1\" class=\"pagination-container\">\n              <nav aria-label=\"Requests pagination\">\n                <ul class=\"pagination pagination-sm justify-content-center mb-0\">\n                  <li class=\"page-item\" :class=\"{ disabled: pagination.currentPage === 1 }\">\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pagination.currentPage - 1)\">\n                      <i class=\"fas fa-chevron-left\"></i>\n                    </a>\n                  </li>\n                  <li\n                    v-for=\"page in Math.min(pagination.totalPages, 10)\"\n                    :key=\"page\"\n                    class=\"page-item\"\n                    :class=\"{ active: page === pagination.currentPage }\"\n                  >\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">{{ page }}</a>\n                  </li>\n                  <li class=\"page-item\" :class=\"{ disabled: pagination.currentPage === pagination.totalPages }\">\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pagination.currentPage + 1)\">\n                      <i class=\"fas fa-chevron-right\"></i>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n\n          <!-- Request Details Modal -->\n          <div v-if=\"showRequestDetails && currentRequest\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-file-alt me-2\"></i>\n                    Request Details - {{ currentRequest.request_number }}\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"showRequestDetails = false\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"row\">\n                    <!-- Request Information -->\n                    <div class=\"col-12\">\n                      <!-- Basic Information -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-info-circle me-2\"></i>Request Information</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Request Number</label>\n                                <p class=\"mb-0\">{{ currentRequest.request_number }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Document Type</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-info\">{{ currentRequest.document_type }}</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Purpose Category</label>\n                                <p class=\"mb-0\">{{ currentRequest.purpose_category }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Purpose Details</label>\n                                <p class=\"mb-0\">{{ currentRequest.purpose_details || 'Not specified' }}</p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Current Status</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"`bg-${getStatusColor(currentRequest.status_name)}`\">\n                                    {{ formatStatus(currentRequest.status_name) }}\n                                  </span>\n                                </p>\n                              </div>\n\n                              <!-- I will comment priority for now -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Priority</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"currentRequest.priority === 'high' ? 'bg-danger' : currentRequest.priority === 'medium' ? 'bg-warning' : 'bg-secondary'\">\n                                    {{ currentRequest.priority || 'Normal' }}\n                                  </span>\n                                </p>\n                              </div> -->\n\n                              <!-- I will comment priority for now  -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Delivery Method</label>\n                                <p class=\"mb-0\">{{ currentRequest.delivery_method || 'Pickup' }}</p>\n                              </div> -->\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date Submitted</label>\n                                <p class=\"mb-0\">{{ formatDateTime(currentRequest.requested_at) }}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Request Type Indicator -->\n                      <div v-if=\"currentRequest.is_third_party_request\" class=\"alert alert-info mb-4\">\n                        <div class=\"d-flex align-items-center\">\n                          <i class=\"fas fa-users me-2\"></i>\n                          <div>\n                            <strong>Third-Party Request</strong>\n                            <p class=\"mb-0 small\">This document is being requested on behalf of another person.</p>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Requestor Information (Person who submitted the request) -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-user-edit me-2\"></i>\n                            {{ currentRequest.is_third_party_request ? 'Requestor Information' : 'Client Information' }}\n                            <small class=\"text-muted ms-2\">\n                              {{ currentRequest.is_third_party_request ? '(Person who submitted this request)' : '' }}\n                            </small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Basic Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': getClientFullName(currentRequest) === 'Not provided' }\">\n                                  <span v-if=\"getClientFullName(currentRequest) !== 'Not provided'\">{{ getClientFullName(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Email Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_email }\">\n                                  <a v-if=\"currentRequest.client_email\" :href=\"`mailto:${currentRequest.client_email}`\">{{ currentRequest.client_email }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_phone }\">\n                                  <a v-if=\"currentRequest.client_phone\" :href=\"`tel:${currentRequest.client_phone}`\">{{ currentRequest.client_phone }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date of Birth</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_birth_date }\">\n                                  <span v-if=\"formatDate(currentRequest.client_birth_date)\">{{ formatDate(currentRequest.client_birth_date) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Gender</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_gender }\">\n                                  <span v-if=\"formatGender(currentRequest.client_gender)\">{{ formatGender(currentRequest.client_gender) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Civil Status</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_civil_status_id }\">\n                                  <span v-if=\"getCivilStatusName(currentRequest.client_civil_status_id)\">{{ getCivilStatusName(currentRequest.client_civil_status_id) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Address Information -->\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Complete Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !getClientFullAddress(currentRequest) }\">\n                                  <span v-if=\"getClientFullAddress(currentRequest)\">{{ getClientFullAddress(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Additional Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Nationality</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_nationality }\">\n                                  <span v-if=\"currentRequest.client_nationality\">{{ currentRequest.client_nationality }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Years of Residency</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !getResidencyDisplay(currentRequest) }\">\n                                  <span v-if=\"getResidencyDisplay(currentRequest)\">{{ getResidencyDisplay(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Beneficiary Information (Person the document is for) -->\n                      <div v-if=\"currentRequest.is_third_party_request && currentRequest.beneficiary\" class=\"card mb-4\">\n                        <div class=\"card-header bg-light\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-user-check me-2 text-primary\"></i>\n                            Document Beneficiary Information\n                            <small class=\"text-muted ms-2\">(Person this document is for)</small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Basic Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\">{{ currentRequest.beneficiary.full_name || 'Not provided' }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Email Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.email }\">\n                                  <a v-if=\"currentRequest.beneficiary.email\" :href=\"`mailto:${currentRequest.beneficiary.email}`\">{{ currentRequest.beneficiary.email }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.phone_number }\">\n                                  <a v-if=\"currentRequest.beneficiary.phone_number\" :href=\"`tel:${currentRequest.beneficiary.phone_number}`\">{{ currentRequest.beneficiary.phone_number }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date of Birth</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.birth_date }\">\n                                  <span v-if=\"formatDate(currentRequest.beneficiary.birth_date)\">{{ formatDate(currentRequest.beneficiary.birth_date) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Gender</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.gender }\">\n                                  <span v-if=\"formatGender(currentRequest.beneficiary.gender)\">{{ formatGender(currentRequest.beneficiary.gender) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Civil Status</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.civil_status_id }\">\n                                  <span v-if=\"getCivilStatusName(currentRequest.beneficiary.civil_status_id)\">{{ getCivilStatusName(currentRequest.beneficiary.civil_status_id) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Address Information -->\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Complete Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.address }\">\n                                  <span v-if=\"currentRequest.beneficiary.address\">{{ currentRequest.beneficiary.address }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Relationship and Additional Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Relationship to Requestor</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-info-subtle text-info-emphasis px-2 py-1\">\n                                    {{ formatRelationship(currentRequest.beneficiary.relationship_to_requestor) }}\n                                  </span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Nationality</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.nationality }\">\n                                  <span v-if=\"currentRequest.beneficiary.nationality\">{{ currentRequest.beneficiary.nationality }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n\n\n                          <!-- Verification Image -->\n                          <div v-if=\"currentRequest?.beneficiary?.verification_image_path\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Family Member Verification</label>\n                                <div class=\"d-flex align-items-center gap-3\">\n                                  <!-- I dont want to use or see the status for now in the frontend -->\n                                  <!-- <div class=\"verification-status\">\n                                    <span class=\"badge\" :class=\"getBeneficiaryVerificationStatusClass(currentRequest?.beneficiary?.verification_status)\">\n                                      {{ getBeneficiaryVerificationStatusText(currentRequest?.beneficiary?.verification_status) }}\n                                    </span>\n                                  </div> -->\n                                  <button\n                                    class=\"btn btn-outline-primary btn-sm\"\n                                    @click=\"viewVerificationImage(currentRequest.id, 'beneficiary')\"\n                                    title=\"View family member verification image\"\n                                  >\n                                    <i class=\"fas fa-eye me-1\"></i>View Verification Image\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Requestor Notes -->\n                          <!-- Ill comment this because I dont need this for now -->\n                          <!-- <div v-if=\"currentRequest.requestor_notes\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Additional Notes from Requestor</label>\n                                <div class=\"alert alert-light border\">\n                                  <i class=\"fas fa-sticky-note me-2 text-warning\"></i>\n                                  {{ currentRequest.requestor_notes }}\n                                </div>\n                              </div>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n\n                      <!-- Authorized Pickup Information -->\n                      <div v-if=\"currentRequest.authorized_pickup\" class=\"card mb-4\">\n                        <div class=\"card-header bg-warning-subtle\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-hand-paper me-2 text-warning\"></i>\n                            Authorized Pickup Person\n                            <small class=\"text-muted ms-2\">(Person authorized to collect the document)</small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\">{{ currentRequest.authorized_pickup.full_name || 'Not provided' }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.authorized_pickup.phone_number }\">\n                                  <a v-if=\"currentRequest.authorized_pickup.phone_number\" :href=\"`tel:${currentRequest.authorized_pickup.phone_number}`\">{{ currentRequest.authorized_pickup.phone_number }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Relationship to {{ currentRequest.is_third_party_request ? 'Beneficiary' : 'Requestor' }}</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-secondary-subtle text-secondary-emphasis px-2 py-1\">\n                                    {{ formatRelationship(currentRequest.authorized_pickup.relationship_to_beneficiary) }}\n                                  </span>\n                                </p>\n                              </div>\n\n                              <!-- ill comment this status for now because I dont really use it. Ill uncomment this in future -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Authorization Status</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"getAuthorizationStatusClass(currentRequest.authorized_pickup.verification_status)\">\n                                    <i class=\"fas\" :class=\"getAuthorizationStatusIcon(currentRequest.authorized_pickup.verification_status)\"></i>\n                                    {{ formatAuthorizationStatus(currentRequest.authorized_pickup.verification_status) }}\n                                  </span>\n                                </p>\n                              </div> -->\n\n                            </div>\n                            <div class=\"col-md-6\">\n                              <!-- View Documents Section -->\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Uploaded Documents</label>\n                                <div class=\"d-flex flex-column gap-2\">\n                                  <div v-if=\"currentRequest.authorized_pickup?.id_image_path || currentRequest.authorized_pickup?.authorization_letter_path\" class=\"document-actions\">\n                                    <button\n                                      class=\"btn btn-primary btn-sm w-100\"\n                                      @click=\"viewPickupDocuments(currentRequest)\"\n                                      title=\"View all pickup authorization documents\"\n                                    >\n                                      <i class=\"fas fa-images me-2\"></i>\n                                      View Authorization Documents\n                                    </button>\n                                    <div class=\"mt-2 small text-muted\">\n                                      <div v-if=\"currentRequest.authorized_pickup?.id_image_path\" class=\"d-flex align-items-center mb-1\">\n                                        <i class=\"fas fa-id-card me-2 text-info\"></i>\n                                        <span>ID Document Available</span>\n                                      </div>\n                                      <div v-if=\"currentRequest.authorized_pickup?.authorization_letter_path\" class=\"d-flex align-items-center\">\n                                        <i class=\"fas fa-file-signature me-2 text-warning\"></i>\n                                        <span>Authorization Letter Available</span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div v-else class=\"text-muted small\">\n                                    <i class=\"fas fa-exclamation-triangle me-2 text-warning\"></i>\n                                    No documents uploaded yet\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Authorization Actions -->\n                          <div v-if=\"currentRequest.authorized_pickup.verification_status === 'pending'\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"alert alert-warning\">\n                                <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                                <strong>Action Required:</strong> This pickup authorization needs to be verified before the document can be released.\n                              </div>\n                              <div class=\"d-flex gap-2\">\n                                <button class=\"btn btn-success btn-sm\" @click=\"verifyAuthorization(currentRequest.id, true)\">\n                                  <i class=\"fas fa-check me-1\"></i>\n                                  Verify & Approve\n                                </button>\n                                <button class=\"btn btn-danger btn-sm\" @click=\"verifyAuthorization(currentRequest.id, false)\">\n                                  <i class=\"fas fa-times me-1\"></i>\n                                  Reject Authorization\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Document-Specific Details -->\n                      <div v-if=\"currentRequest.specific_details\" class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-file-alt me-2\"></i>\n                            {{ currentRequest.document_type }} Application Details\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Cedula Application Details -->\n                          <div v-if=\"currentRequest.document_type === 'Cedula'\" class=\"cedula-details\">\n                            <!-- Income Information -->\n                            <div class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-primary mb-3\">\n                                  <i class=\"fas fa-money-bill-wave me-2\"></i>Income Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Annual Income</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.annual_income || 0) }}</p>\n                                    </div>\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Monthly Income</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.monthly_income || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Occupation</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.occupation || 'Not provided' }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.employer_name\">\n                                      <label class=\"form-label fw-bold\">Employer</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.employer_name }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Property Information -->\n                            <div v-if=\"currentRequest.specific_details.has_real_property || currentRequest.specific_details.property_assessed_value > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-success mb-3\">\n                                  <i class=\"fas fa-home me-2\"></i>Real Property Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Assessed Property Value</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.property_assessed_value || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.property_location\">\n                                      <label class=\"form-label fw-bold\">Property Location</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.property_location }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Personal Property Information -->\n                            <div v-if=\"currentRequest.specific_details.has_personal_property || currentRequest.specific_details.personal_property_value > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-info mb-3\">\n                                  <i class=\"fas fa-car me-2\"></i>Personal Property Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Personal Property Value</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.personal_property_value || 0) }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Business Information -->\n                            <div v-if=\"currentRequest.specific_details.business_name || currentRequest.specific_details.business_gross_receipts > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-warning mb-3\">\n                                  <i class=\"fas fa-briefcase me-2\"></i>Business/Professional Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_name\">\n                                      <label class=\"form-label fw-bold\">Business Name</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_name }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_type\">\n                                      <label class=\"form-label fw-bold\">Business Type</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_type }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Annual Gross Receipts/Professional Fees</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.business_gross_receipts || 0) }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_address\">\n                                      <label class=\"form-label fw-bold\">Business Address</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_address }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Tax Computation -->\n                            <div class=\"row\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-danger mb-3\">\n                                  <i class=\"fas fa-calculator me-2\"></i>Tax Computation\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Computed Tax</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.computed_tax || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Total Document Fee</label>\n                                      <p class=\"mb-0 text-success fw-bold\">{{ formatCurrency(currentRequest.total_document_fee || 0) }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Barangay Clearance Application Details -->\n                          <div v-else-if=\"currentRequest.document_type === 'Barangay Clearance'\" class=\"barangay-clearance-details\">\n                            <!-- Pending Cases Information -->\n                            <div class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-warning mb-3\">\n                                  <i class=\"fas fa-gavel me-2\"></i>Legal Status Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Pending Cases</label>\n                                      <p class=\"mb-0\">\n                                        <span class=\"badge\" :class=\"currentRequest.specific_details.has_pending_cases ? 'bg-warning' : 'bg-success'\">\n                                          {{ currentRequest.specific_details.has_pending_cases ? 'Has Pending Cases' : 'No Pending Cases' }}\n                                        </span>\n                                      </p>\n                                    </div>\n                                    <div v-if=\"currentRequest.specific_details.has_pending_cases && currentRequest.specific_details.pending_cases_details\" class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Pending Cases Details</label>\n                                      <div class=\"alert alert-warning\">\n                                        <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                                        {{ currentRequest.specific_details.pending_cases_details }}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.voter_registration_number\">\n                                      <label class=\"form-label fw-bold\">Voter Registration Number</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.voter_registration_number }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.precinct_number\">\n                                      <label class=\"form-label fw-bold\">Precinct Number</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.precinct_number }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Emergency Contact Information -->\n                            <div v-if=\"currentRequest.specific_details.emergency_contact_name\" class=\"row\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-info mb-3\">\n                                  <i class=\"fas fa-phone me-2\"></i>Emergency Contact Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Contact Name</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_name }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_relationship\">\n                                      <label class=\"form-label fw-bold\">Relationship</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_relationship }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_phone\">\n                                      <label class=\"form-label fw-bold\">Phone Number</label>\n                                      <p class=\"mb-0\">\n                                        <a :href=\"`tel:${currentRequest.specific_details.emergency_contact_phone}`\">\n                                          {{ currentRequest.specific_details.emergency_contact_phone }}\n                                        </a>\n                                      </p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_address\">\n                                      <label class=\"form-label fw-bold\">Address</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_address }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Uploaded Documents -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-paperclip me-2\"></i>Uploaded Documents</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div v-if=\"currentRequest.uploaded_documents && currentRequest.uploaded_documents.length > 0\">\n                            <div class=\"row g-3\">\n                              <div v-for=\"document in currentRequest.uploaded_documents\" :key=\"document.id\" class=\"col-md-4\">\n                                <div class=\"document-preview-card\">\n                                  <div class=\"document-preview-header\">\n                                    <div class=\"document-type-badge\">\n                                      <i class=\"fas fa-file-alt me-1\"></i>\n                                      {{ getDocumentTypeDisplayName(document.document_type) }}\n                                    </div>\n                                  </div>\n                                  <div class=\"document-preview-content\">\n                                    <!-- Image Preview -->\n                                    <div v-if=\"isImageFile(document.mime_type)\"\n                                         class=\"image-preview\"\n                                         @click=\"openImageModal(document)\"\n                                         @mouseenter=\"preloadImage(document)\">\n                                      <!-- Successfully loaded image -->\n                                      <img\n                                        v-if=\"documentUrls[document.id]\"\n                                        :src=\"documentUrls[document.id]\"\n                                        :alt=\"document.document_name\"\n                                        class=\"document-image\"\n                                        @error=\"handleImageError\"\n                                      />\n\n                                      <!-- Loading state -->\n                                      <div v-else-if=\"loadingDocuments.has(document.id)\" class=\"loading-placeholder\">\n                                        <i class=\"fas fa-spinner fa-spin\"></i>\n                                        <span>Loading image...</span>\n                                      </div>\n\n                                      <!-- Failed state with retry option -->\n                                      <div v-else-if=\"failedDocuments.has(document.id)\" class=\"error-placeholder\" @click.stop=\"retryLoadDocument(document)\">\n                                        <i class=\"fas fa-exclamation-triangle\"></i>\n                                        <span>Failed to load</span>\n                                        <small>Click to retry</small>\n                                      </div>\n\n                                      <!-- Initial state (not yet attempted) -->\n                                      <div v-else class=\"loading-placeholder\">\n                                        <i class=\"fas fa-image\"></i>\n                                        <span>Click to load</span>\n                                      </div>\n                                      <div class=\"image-overlay\">\n                                        <i class=\"fas fa-search-plus\"></i>\n                                        <span>Click to view</span>\n                                      </div>\n                                    </div>\n                                    <!-- PDF Preview -->\n                                    <div v-else-if=\"isPdfFile(document.mime_type)\" class=\"pdf-preview\">\n                                      <div class=\"pdf-icon\">\n                                        <i class=\"fas fa-file-pdf fa-3x text-danger\"></i>\n                                      </div>\n                                      <div class=\"pdf-info\">\n                                        <p class=\"mb-1 fw-bold\">{{ document.document_name }}</p>\n                                        <small class=\"text-muted\">{{ formatFileSize(document.file_size) }}</small>\n                                      </div>\n                                      <button\n                                        class=\"btn btn-sm btn-outline-primary mt-2\"\n                                        @click=\"downloadDocument(document)\"\n                                      >\n                                        <i class=\"fas fa-download me-1\"></i>Download\n                                      </button>\n                                    </div>\n                                    <!-- Other File Types -->\n                                    <div v-else class=\"file-preview\">\n                                      <div class=\"file-icon\">\n                                        <i class=\"fas fa-file fa-3x text-secondary\"></i>\n                                      </div>\n                                      <div class=\"file-info\">\n                                        <p class=\"mb-1 fw-bold\">{{ document.document_name }}</p>\n                                        <small class=\"text-muted\">{{ formatFileSize(document.file_size) }}</small>\n                                      </div>\n                                      <button\n                                        class=\"btn btn-sm btn-outline-primary mt-2\"\n                                        @click=\"downloadDocument(document)\"\n                                      >\n                                        <i class=\"fas fa-download me-1\"></i>Download\n                                      </button>\n                                    </div>\n                                  </div>\n                                  <div class=\"document-preview-footer\">\n                                    <small class=\"text-muted\">\n                                      <i class=\"fas fa-clock me-1\"></i>\n                                      Uploaded {{ formatDate(document.created_at) }}\n                                    </small>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div v-else class=\"no-documents\">\n                            <div class=\"text-center py-4\">\n                              <i class=\"fas fa-folder-open fa-3x text-muted mb-3\"></i>\n                              <h6 class=\"text-muted\">No Documents Uploaded</h6>\n                              <p class=\"text-muted mb-0\">\n                                <span v-if=\"currentRequest.document_type === 'Cedula'\">\n                                  Cedula requests typically don't require supporting documents.\n                                </span>\n                                <span v-else>\n                                  The client hasn't uploaded any supporting documents yet.\n                                </span>\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Status History Timeline -->\n                  <div class=\"card\">\n                    <div class=\"card-header\">\n                      <h6 class=\"mb-0\"><i class=\"fas fa-history me-2\"></i>Status History</h6>\n                    </div>\n                    <div class=\"card-body\">\n                      <div v-if=\"currentRequest.status_history && currentRequest.status_history.length > 0\" class=\"timeline\">\n                        <div\n                          v-for=\"(history, index) in currentRequest.status_history\"\n                          :key=\"history.id\"\n                          class=\"timeline-item\"\n                          :class=\"{ 'timeline-item-last': index === currentRequest.status_history.length - 1 }\"\n                        >\n                          <div class=\"timeline-marker\" :class=\"`bg-${getStatusColor(history.new_status_name)}`\">\n                            <i class=\"fas fa-circle\"></i>\n                          </div>\n                          <div class=\"timeline-content\">\n                            <div class=\"timeline-header\">\n                              <span class=\"badge\" :class=\"`bg-${getStatusColor(history.new_status_name)}`\">\n                                {{ formatStatus(history.new_status_name) }}\n                              </span>\n                              <small class=\"text-muted ms-2\">{{ formatDateTime(history.changed_at) }}</small>\n                            </div>\n                            <div class=\"timeline-body\">\n                              <p class=\"mb-1\">\n                                <strong>Changed by:</strong> {{ getChangedByName(history) }}\n                              </p>\n                              <p v-if=\"history.old_status_name\" class=\"mb-1\">\n                                <strong>From:</strong> {{ formatStatus(history.old_status_name) }}\n                              </p>\n                              <!-- I dont neeed reason for now -->\n                              <!-- <p v-if=\"history.change_reason\" class=\"mb-0\">\n                                <strong>Reason:</strong> {{ getFormattedReason(history.change_reason) }}\n                              </p> -->\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div v-else class=\"text-center text-muted py-3\">\n                        <i class=\"fas fa-history fa-2x mb-2\"></i>\n                        <p>No status history available</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"showRequestDetails = false\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Close\n                  </button>\n                  <button type=\"button\" class=\"btn btn-primary\" @click=\"refreshRequestDetails\">\n                    <i class=\"fas fa-sync-alt me-1\"></i>\n                    Refresh\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Quick Reject Modal -->\n          <div v-if=\"showQuickReject && selectedRequestForReject\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-times-circle text-danger me-2\"></i>\n                    Reject Request\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"closeQuickRejectModal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"alert alert-warning\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    You are about to reject this document request. This action will notify the client immediately.\n                  </div>\n\n                  <div class=\"mb-3\">\n                    <strong>Request Details:</strong>\n                    <ul class=\"list-unstyled mt-2\">\n                      <li><strong>Request Number:</strong> {{ selectedRequestForReject.request_number }}</li>\n                      <li><strong>Document Type:</strong> {{ selectedRequestForReject.document_type }}</li>\n                      <li><strong>Client:</strong> {{ selectedRequestForReject.client_name }}</li>\n                    </ul>\n                  </div>\n\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeQuickRejectModal\" :disabled=\"quickRejectForm.loading\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Cancel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger\" @click=\"confirmQuickReject\" :disabled=\"quickRejectForm.loading\">\n                    <i class=\"fas fa-times-circle me-1\"></i>\n                    <span v-if=\"quickRejectForm.loading\">\n                      <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                      Rejecting...\n                    </span>\n                    <span v-else>Reject Request</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Quick Approve Modal -->\n          <div v-if=\"showQuickApprove && selectedRequestForApprove\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-check-circle text-success me-2\"></i>\n                    Approve Request\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"closeQuickApproveModal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"alert alert-info\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    You are about to approve this document request. This action will notify the client immediately and move the request to the next processing stage.\n                  </div>\n\n                  <div class=\"mb-3\">\n                    <strong>Request Details:</strong>\n                    <ul class=\"list-unstyled mt-2\">\n                      <li><strong>Request Number:</strong> {{ selectedRequestForApprove.request_number }}</li>\n                      <li><strong>Document Type:</strong> {{ selectedRequestForApprove.document_type }}</li>\n                      <li><strong>Client:</strong> {{ selectedRequestForApprove.client_name }}</li>\n                    </ul>\n                  </div>\n\n                  <div v-if=\"quickApproveForm.error\" class=\"alert alert-danger\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    {{ quickApproveForm.error }}\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeQuickApproveModal\" :disabled=\"quickApproveForm.loading\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Cancel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"confirmQuickApprove\" :disabled=\"quickApproveForm.loading\">\n                    <i class=\"fas fa-check-circle me-1\"></i>\n                    <span v-if=\"quickApproveForm.loading\">\n                      <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                      Approving...\n                    </span>\n                    <span v-else>Approve Request</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n\n    <!-- Image Modal -->\n    <div v-if=\"showImageModal && selectedImage\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.8);\" @click.self=\"closeImageModal\">\n      <div class=\"modal-dialog modal-xl modal-dialog-centered\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header sticky-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-image me-2\"></i>\n              {{ selectedImage.document_name }}\n            </h5>\n            <div class=\"header-controls\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-light btn-sm me-2\"\n                @click=\"downloadDocument(selectedImage)\"\n                :disabled=\"!documentUrls[selectedImage.id] || imageLoadingInModal\"\n                title=\"Download\">\n                <i class=\"fas fa-download\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn-close btn-close-white\"\n                @click=\"closeImageModal\"\n                aria-label=\"Close\"\n                title=\"Close\">\n              </button>\n            </div>\n          </div>\n          <div class=\"modal-body text-center p-0\">\n            <div class=\"image-modal-container\">\n              <!-- Successfully loaded image -->\n              <img\n                v-if=\"documentUrls[selectedImage.id] && !imageLoadingInModal\"\n                :src=\"documentUrls[selectedImage.id]\"\n                :alt=\"selectedImage.document_name\"\n                class=\"modal-image\"\n                @error=\"handleImageError\"\n                @load=\"onModalImageLoad\"\n                loading=\"lazy\"\n              />\n\n              <!-- Loading state -->\n              <div v-else-if=\"imageLoadingInModal || loadingDocuments.has(selectedImage.id)\" class=\"loading-placeholder modal-loading\">\n                <div class=\"loading-content\">\n                  <i class=\"fas fa-spinner fa-spin fa-3x mb-3\"></i>\n                  <span class=\"loading-text\">Loading high-resolution image...</span>\n                  <div class=\"loading-progress mt-2\">\n                    <div class=\"progress-bar\"></div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Failed state -->\n              <div v-else-if=\"modalImageError || failedDocuments.has(selectedImage.id)\" class=\"error-placeholder modal-error\">\n                <i class=\"fas fa-exclamation-triangle fa-3x mb-3\"></i>\n                <span class=\"error-text\">Failed to load image</span>\n                <button\n                  class=\"btn btn-outline-light mt-3\"\n                  @click=\"retryLoadDocument(selectedImage)\"\n                  :disabled=\"imageLoadingInModal\">\n                  <i class=\"fas fa-redo me-2\"></i>Retry\n                </button>\n              </div>\n\n              <!-- Fallback -->\n              <div v-else class=\"loading-placeholder modal-loading\">\n                <i class=\"fas fa-image fa-3x mb-3\"></i>\n                <span class=\"loading-text\">Preparing image...</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"d-flex justify-content-between align-items-center w-100\">\n              <div class=\"image-info\">\n                <span class=\"badge bg-info me-2\">{{ getDocumentTypeDisplayName(selectedImage.document_type) }}</span>\n                <small class=\"text-muted\">\n                  {{ formatFileSize(selectedImage.file_size) }} •\n                  Uploaded {{ formatDate(selectedImage.created_at) }}\n                </small>\n              </div>\n              <div class=\"image-actions\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary me-2\"\n                  @click=\"downloadDocument(selectedImage)\"\n                  :disabled=\"!documentUrls[selectedImage.id] || imageLoadingInModal\">\n                  <i class=\"fas fa-download me-1\"></i>Download\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeImageModal\">\n                  <i class=\"fas fa-times me-1\"></i>Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Verification Status Modal -->\n    <div class=\"modal fade\" id=\"verificationModal\" tabindex=\"-1\" aria-labelledby=\"verificationModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"verificationModalLabel\">\n              <i class=\"fas fa-id-card me-2\"></i>\n              Family Member Verification\n            </h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div v-if=\"currentVerification\">\n              <!-- Beneficiary Information -->\n              <div class=\"card mb-3\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Beneficiary Information</h6>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <strong>Name:</strong> {{ currentVerification.beneficiary_name }}\n                    </div>\n                    <div class=\"col-md-6\">\n                      <strong>Relationship:</strong> {{ currentVerification.relationship }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Verification Image -->\n              <div class=\"card mb-3\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Verification Image</h6>\n                </div>\n                <div class=\"card-body text-center\">\n                  <img\n                    v-if=\"currentVerification.image_url\"\n                    :src=\"currentVerification.image_url\"\n                    class=\"img-fluid rounded border\"\n                    style=\"max-height: 400px;\"\n                    alt=\"Verification Image\"\n                  />\n                  <div v-else class=\"text-muted\">\n                    <i class=\"fas fa-image fa-3x mb-2\"></i>\n                    <p>No verification image available</p>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Verification Actions -->\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Verification Decision</h6>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <label class=\"form-label\">Status</label>\n                      <select v-model=\"verificationForm.status\" class=\"form-select\">\n                        <option value=\"pending\">Pending Review</option>\n                        <option value=\"approved\">Approved</option>\n                        <option value=\"rejected\">Rejected</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <label class=\"form-label\">Notes (Optional)</label>\n                      <textarea\n                        v-model=\"verificationForm.notes\"\n                        class=\"form-control\"\n                        rows=\"3\"\n                        placeholder=\"Add any notes about the verification decision...\"\n                      ></textarea>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              @click=\"saveVerificationStatus\"\n              :disabled=\"!verificationForm.status\"\n            >\n              <i class=\"fas fa-save me-1\"></i>\n              Save Decision\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Authorized Pickup Documents Modal Component -->\n    <AuthorizedPickupDocumentsModal\n      :request=\"selectedRequestForPickup\"\n      :processing=\"processingPickupAction\"\n      @verify=\"verifyPickupAuthorization\"\n      @reject=\"rejectPickupAuthorization\"\n    />\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport AuthorizedPickupDocumentsModal from './AuthorizedPickupDocumentsModal.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminDocumentService from '@/services/adminDocumentService';\nimport api from '@/services/api';\nimport { Modal } from 'bootstrap';\nimport notificationService from '@/services/notificationService';\nimport { jsPDF } from 'jspdf';\n// Import jspdf-autotable plugin - v5.x uses named export\nimport autoTable from 'jspdf-autotable';\n\nexport default {\n  name: 'RequestHistory',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    AuthorizedPickupDocumentsModal\n  },\n\n\n\n  data() {\n    return {\n      // UI State\n      loading: true,\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      errorMessage: '',\n      viewMode: 'table', // 'card' or 'table' - default to table view\n\n      // Request Management Data\n      requests: [],\n      selectedRequests: [],\n      currentRequest: null,\n      statusOptions: [],\n      selectedRequestForPickup: null,\n      processingPickupAction: false,\n\n      // Pagination\n      pagination: {\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: 0,\n        itemsPerPage: 10\n      },\n\n      // Filters - Show all historical documents (completed and cancelled)\n      filters: {\n        status: '', // Empty to show all statuses including completed and cancelled\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      },\n\n      // PDF Export Form\n      pdfExportForm: {\n        reportType: 'daily',\n        selectedDate: '',\n        selectedWeek: '',\n        selectedMonth: '',\n        loading: false\n      },\n\n      // Statistics\n      requestStats: {\n        total: 0,\n        pending: 0,\n        approved: 0,\n        completed: 0,\n        thisMonth: 0\n      },\n\n      // Document Types and Status Options\n      documentTypes: [],\n      searchTimeout: null,\n\n      // UI State\n      showFilters: false,\n      showBulkActions: false,\n      showRequestDetails: false,\n      showRejectForm: false,\n      showQuickReject: false,\n      showQuickApprove: false,\n\n      // Verification Modal\n      currentVerification: null,\n      verificationForm: {\n        status: 'pending',\n        notes: ''\n      },\n      showImageModal: false,\n      selectedImage: null,\n      bulkAction: '',\n      documentUrls: {}, // Store blob URLs for documents\n      loadingDocuments: new Set(), // Track which documents are currently loading\n      failedDocuments: new Set(), // Track which documents failed to load\n      imageLoadingInModal: false, // Track if modal image is loading\n      modalImageError: false, // Track if modal image failed\n\n      // Status Update Forms\n      statusUpdateForm: {\n        status_id: ''\n      },\n      rejectForm: {\n        reason: ''\n      },\n      quickRejectForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForReject: null,\n      quickApproveForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForApprove: null,\n\n      // Payment verification form\n      paymentVerificationForm: {\n        amount_received: '',\n        receipt_number: '',\n        loading: false,\n        error: ''\n      },\n\n      // Pickup scheduling form\n      pickupScheduleForm: {\n        scheduled_date: '',\n        scheduled_time_start: '',\n        scheduled_time_end: '',\n        loading: false,\n        error: ''\n      },\n\n      // Real-time features\n      refreshInterval: null,\n      autoRefreshEnabled: true,\n      refreshRate: 30000, // 30 seconds\n      lastRefresh: null\n    };\n  },\n\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadComponentData();\n\n    // Initialize PDF export form with default values\n    this.initializePDFExportForm();\n\n    // Initialize real-time features\n    this.initializeRealTimeFeatures();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    // Clean up real-time features\n    this.cleanupRealTimeFeatures();\n\n    // Clean up blob URLs to prevent memory leaks\n    this.cleanupDocumentUrls();\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/history')) return 'history';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      // Load saved sidebar state (only on desktop)\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true; // Always collapsed on mobile\n      }\n\n      // Setup resize listener\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true; // Collapse when switching to mobile\n        } else if (!this.isMobile && wasMobile) {\n          // Restore saved state when switching to desktop\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    // Initialize PDF export form with default values\n    initializePDFExportForm() {\n      // Set default date to today\n      this.pdfExportForm.selectedDate = this.getCurrentDate();\n\n      // Set default week to current week\n      this.pdfExportForm.selectedWeek = this.getCurrentWeek();\n\n      // Set default month to current month\n      this.pdfExportForm.selectedMonth = this.getCurrentMonth();\n    },\n\n    // Sidebar toggle\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    // Menu navigation\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'history': '/admin/history',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      // Close sidebar on mobile after navigation\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    // User dropdown toggle\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    // Handle opening request modal from notifications\n    async handleOpenRequestModal(modalData) {\n      console.log('🔔 AdminRequests: Opening request modal from notification:', modalData);\n\n      try {\n        const { requestId, focusTab } = modalData;\n\n        if (!requestId) {\n          console.error('❌ No request ID provided for modal');\n          return;\n        }\n\n        // Use the existing viewRequestDetails method to open the modal\n        await this.viewRequestDetails(requestId);\n\n        // If a specific tab should be focused, handle that after modal opens\n        if (focusTab) {\n          // Wait a bit for the modal to fully render\n          setTimeout(() => {\n            this.focusModalTab(focusTab);\n          }, 300);\n        }\n\n        console.log('✅ Request modal opened successfully');\n\n      } catch (error) {\n        console.error('❌ Error opening request modal:', error);\n        // Show error message to user\n        this.showErrorMessage('Failed to open request details');\n      }\n    },\n\n    // Focus on a specific tab in the request details modal\n    focusModalTab(tabName) {\n      try {\n        console.log('🎯 Focusing on modal tab:', tabName);\n\n        // Map tab names to actual tab elements or actions\n        const tabMappings = {\n          'payment': () => {\n            // Focus on payment section in the modal\n            const paymentSection = document.querySelector('#requestDetailsModal .payment-section');\n            if (paymentSection) {\n              paymentSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              paymentSection.classList.add('highlight-section');\n              setTimeout(() => paymentSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'status': () => {\n            // Focus on status section\n            const statusSection = document.querySelector('#requestDetailsModal .status-section');\n            if (statusSection) {\n              statusSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              statusSection.classList.add('highlight-section');\n              setTimeout(() => statusSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'documents': () => {\n            // Focus on documents section\n            const documentsSection = document.querySelector('#requestDetailsModal .documents-section');\n            if (documentsSection) {\n              documentsSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              documentsSection.classList.add('highlight-section');\n              setTimeout(() => documentsSection.classList.remove('highlight-section'), 2000);\n            }\n          }\n        };\n\n        const focusAction = tabMappings[tabName];\n        if (focusAction) {\n          focusAction();\n        } else {\n          console.log('⚠️ Unknown tab name:', tabName);\n        }\n\n      } catch (error) {\n        console.error('❌ Error focusing modal tab:', error);\n      }\n    },\n\n    // Menu actions\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    // Close mobile sidebar\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    // Logout\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    // Load admin profile\n    async loadAdminProfile() {\n      try {\n        const currentUser = unifiedAuthService.getCurrentUser();\n        if (currentUser && currentUser.profile) {\n          this.adminData = currentUser.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: currentUser?.username || 'Admin',\n            role: currentUser?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const currentUser = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: currentUser?.username || 'Admin',\n          role: currentUser?.role || 'admin'\n        };\n      }\n    },\n\n    // Load all component data\n    async loadComponentData() {\n      this.loading = true;\n      try {\n        await Promise.all([\n          this.loadAdminProfile(),\n          this.loadStatusOptions(),\n          this.loadDocumentTypes(),\n          this.loadRequests(),\n          this.loadDashboardStats()\n        ]);\n      } catch (error) {\n        console.error('Failed to load component data:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request data';\n\n        if (errorData.status === 401) {\n          unifiedAuthService.logout();\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // Load status options\n    async loadStatusOptions() {\n      try {\n        console.log('🔄 Loading status options...');\n        const response = await adminDocumentService.getStatusOptions();\n        console.log('📋 Status options response:', response);\n\n        if (response.success) {\n          this.statusOptions = response.data || [];\n          console.log('✅ Status options loaded:', this.statusOptions);\n        } else {\n          console.error('❌ Failed to load status options:', response.message);\n          this.statusOptions = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading status options:', error);\n        this.statusOptions = [];\n        this.showToast('Error', 'Failed to load status options', 'error');\n      }\n    },\n\n    // Load document types\n    async loadDocumentTypes() {\n      try {\n        console.log('🔄 Loading document types...');\n        const response = await adminDocumentService.getDocumentTypes();\n        console.log('📋 Document types response:', response);\n\n        if (response.success) {\n          this.documentTypes = response.data || [];\n          console.log('✅ Document types loaded:', this.documentTypes);\n        } else {\n          console.error('❌ Failed to load document types:', response.message);\n          this.documentTypes = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading document types:', error);\n        this.documentTypes = [];\n        this.showToast('Error', 'Failed to load document types', 'error');\n      }\n    },\n\n    // Load dashboard statistics\n    async loadDashboardStats() {\n      try {\n        console.log('🔄 Loading dashboard stats...');\n        const response = await adminDocumentService.getDashboardStats();\n        console.log('📊 Dashboard stats response:', response);\n\n        if (response.success) {\n          // Map the backend response structure to frontend expectations\n          const data = response.data;\n          this.requestStats = {\n            total: data.overview?.total_requests || 0,\n            pending: data.overview?.pending_requests || 0,\n            approved: data.overview?.approved_requests || 0,\n            completed: data.overview?.completed_requests || 0,\n            thisMonth: data.time_based?.today_requests || 0\n          };\n          console.log('✅ Request stats updated:', this.requestStats);\n        } else {\n          console.error('❌ Failed to load dashboard stats:', response.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading dashboard stats:', error);\n        // Set default values on error\n        this.requestStats = {\n          total: 0,\n          pending: 0,\n          approved: 0,\n          completed: 0,\n          thisMonth: 0\n        };\n      }\n    },\n\n    // Load requests with current filters and pagination\n    // NOTE: RequestHistory.vue shows HISTORICAL requests only (completed and cancelled)\n    // For active request management, see AdminRequests.vue\n    async loadRequests() {\n      try {\n        // Load both completed and cancelled requests for historical view\n        const params = {\n          page: this.pagination.currentPage,\n          limit: this.pagination.itemsPerPage,\n          // Remove fixed status filter to get all requests, then filter client-side\n          priority: this.filters.priority,\n          search: this.filters.search,\n          date_from: this.filters.date_from,\n          date_to: this.filters.date_to\n        };\n\n        // Apply document type filter if specified\n        if (this.filters.document_type) {\n          params.document_type = this.filters.document_type;\n        }\n\n        // Apply status filter if specified (allows filtering by specific status)\n        if (this.filters.status) {\n          params.status = this.filters.status;\n        }\n\n        console.log('🔍 RequestHistory: Loading historical requests (completed and cancelled)...');\n        console.log('📋 RequestHistory: Params:', params);\n\n        const response = await adminDocumentService.getAllRequests(params);\n        console.log('📥 RequestHistory: API response:', response);\n\n        if (response.success) {\n          // Filter to show only completed and cancelled requests for historical view\n          const allRequests = response.data.requests || [];\n          const historicalRequests = allRequests.filter(request => {\n            const statusName = request.status_name.toLowerCase();\n            return statusName === 'completed' || statusName === 'cancelled';\n          });\n\n          this.requests = historicalRequests;\n          console.log('✅ RequestHistory: Loaded historical requests:', this.requests.length, 'requests');\n          console.log('📊 RequestHistory: Breakdown - Total:', allRequests.length, 'Historical:', historicalRequests.length);\n\n          if (this.requests.length > 0) {\n            console.log('📋 RequestHistory: First request:', this.requests[0]);\n          }\n\n          this.pagination = {\n            currentPage: response.data.pagination?.current_page || 1,\n            totalPages: response.data.pagination?.total_pages || 1,\n            totalItems: historicalRequests.length, // Update to reflect filtered count\n            itemsPerPage: response.data.pagination?.per_page || 10\n          };\n        } else {\n          console.error('❌ RequestHistory: API returned unsuccessful response:', response);\n        }\n      } catch (error) {\n        console.error('❌ RequestHistory: Failed to load requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load requests';\n        this.requests = [];\n      }\n    },\n\n    // Filter and search methods\n    applyFilters() {\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n\n    // Debounced search method\n    debouncedSearch() {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = setTimeout(() => {\n        this.applyFilters();\n      }, 300);\n    },\n\n    clearFilters() {\n      this.filters = {\n        status: '', // Remove fixed completed status filter to show all historical documents\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      };\n      this.applyFilters();\n    },\n\n    // Pagination methods\n    changePage(page) {\n      if (page >= 1 && page <= this.pagination.totalPages) {\n        this.pagination.currentPage = page;\n        this.loadRequests();\n      }\n    },\n\n    changeItemsPerPage(itemsPerPage) {\n      this.pagination.itemsPerPage = itemsPerPage;\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    },\n\n    // Request selection methods\n    toggleRequestSelection(requestId) {\n      const index = this.selectedRequests.indexOf(requestId);\n      if (index > -1) {\n        this.selectedRequests.splice(index, 1);\n      } else {\n        this.selectedRequests.push(requestId);\n      }\n    },\n\n    selectAllRequests() {\n      if (this.selectedRequests.length === this.requests.length) {\n        this.selectedRequests = [];\n      } else {\n        this.selectedRequests = this.requests.map(r => r.id);\n      }\n    },\n\n    // Request details\n    async viewRequestDetails(requestId) {\n      console.log('🚀 View details clicked for request ID:', requestId);\n\n      try {\n        const response = await adminDocumentService.getRequestDetails(requestId);\n        console.log('📋 API Response received:', response);\n\n        if (response.success) {\n          console.log('✅ Response successful, data:', response.data);\n\n          // Debug client profile fields\n          const data = response.data;\n          console.log('🎯 COMPLETE RESPONSE DATA:', data);\n          console.log('🎯 ALL DATA KEYS:', Object.keys(data));\n          console.log('🎯 CLIENT PROFILE FIELDS DEBUG:');\n          console.log('   Birth Date:', data.client_birth_date);\n          console.log('   Gender:', data.client_gender);\n          console.log('   Civil Status ID:', data.client_civil_status_id);\n          console.log('   Nationality:', data.client_nationality);\n          console.log('   Years of Residency:', data.client_years_of_residency);\n          console.log('   Months of Residency:', data.client_months_of_residency);\n\n          // Check if fields exist with different names\n          console.log('🔍 SEARCHING FOR SIMILAR FIELDS:');\n          Object.keys(data).forEach(key => {\n            if (key.includes('birth') || key.includes('gender') || key.includes('civil') ||\n                key.includes('nationality') || key.includes('residency')) {\n              console.log(`   Found: ${key} = ${data[key]}`);\n            }\n          });\n\n          this.currentRequest = response.data;\n          this.showRequestDetails = true;\n          // Reset forms\n          this.statusUpdateForm = { status_id: '' };\n          this.rejectForm = { reason: '' };\n          this.showRejectForm = false;\n          console.log('📋 Request details loaded:', response.data);\n\n          // Load document URLs for images\n          if (response.data.uploaded_documents && response.data.uploaded_documents.length > 0) {\n            this.loadDocumentUrls(response.data.uploaded_documents);\n          }\n\n          this.showToast('Success', `Request details loaded for ${response.data.request_number}`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to load request details:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request details';\n        this.showToast('Error', 'Failed to load request details', 'error');\n      }\n    },\n\n    // Refresh request details\n    async refreshRequestDetails() {\n      if (this.currentRequest) {\n        await this.viewRequestDetails(this.currentRequest.id);\n      }\n    },\n\n    // Update request status from modal\n    async updateRequestStatusFromModal() {\n      console.log('🔄 Updating request status...');\n      console.log('📋 Status form data:', this.statusUpdateForm);\n      console.log('📋 Current request:', this.currentRequest);\n\n      if (!this.statusUpdateForm.status_id || !this.currentRequest) {\n        console.error('❌ Missing required data for status update');\n        this.showToast('Error', 'Please select a status to update', 'error');\n        return;\n      }\n\n      // Enhanced debugging for status validation\n      const currentStatus = this.currentRequest.status_name;\n      const newStatusId = this.statusUpdateForm.status_id;\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n\n      console.log('🔍 Status validation debug:');\n      console.log('   Current status:', currentStatus);\n      console.log('   New status ID:', newStatusId, '(type:', typeof newStatusId, ')');\n      console.log('   New status object:', newStatus);\n      console.log('   Available transitions:', this.getAllowedStatusTransitions(currentStatus.toLowerCase()));\n      console.log('   Available status options:', this.getAvailableStatusOptions());\n      console.log('   All status options:', this.statusOptions);\n\n      if (!this.isValidStatusChange(currentStatus, newStatusId)) {\n        console.error('❌ Invalid status change attempted');\n        console.error('   From:', currentStatus, 'To:', newStatus?.status_name);\n        this.showToast('Error', 'This status change is not allowed', 'error');\n        return;\n      }\n\n      try {\n        const updateData = {\n          status_id: parseInt(this.statusUpdateForm.status_id)\n        };\n\n        console.log('📤 Sending status update:', updateData);\n\n        const response = await adminDocumentService.updateRequestStatus(\n          this.currentRequest.id,\n          updateData\n        );\n\n        console.log('📥 Status update response:', response);\n\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n          // Reset form\n          this.statusUpdateForm = { status_id: '' };\n\n          // Show success message\n          this.errorMessage = '';\n          this.showToast('Success', 'Request status updated successfully', 'success');\n        } else {\n          console.error('❌ Status update failed:', response.message);\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error updating request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n\n\n\n    // Reject request from modal\n    async rejectRequestFromModal() {\n      if (!this.currentRequest || !this.rejectForm.reason.trim()) return;\n\n      try {\n        const response = await adminDocumentService.rejectRequest(\n          this.currentRequest.id,\n          { reason: this.rejectForm.reason }\n        );\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n          this.rejectForm = { reason: '' };\n          this.showRejectForm = false;\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n\n    // Status update methods\n    async updateRequestStatus(requestId, statusId, reason = '') {\n      try {\n        const response = await adminDocumentService.updateRequestStatus(requestId, {\n          status_id: statusId,\n          reason: reason\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to update request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n      }\n    },\n\n    async approveRequest(requestId, reason = '') {\n      try {\n        const response = await adminDocumentService.approveRequest(requestId, { reason });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to approve request';\n      }\n    },\n\n    async rejectRequest(requestId, reason) {\n      if (!reason || reason.trim() === '') {\n        this.errorMessage = 'Rejection reason is required';\n        return;\n      }\n\n      try {\n        const response = await adminDocumentService.rejectRequest(requestId, { reason });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n\n    // Quick approval/rejection methods\n    canApprove(request) {\n      // Can approve if 'approved' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('approved');\n    },\n\n    canReject(request) {\n      // Can reject if 'rejected' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('rejected');\n    },\n\n    // Helper method to get status explanation for disabled buttons\n    getStatusExplanation(request, action) {\n      const status = request.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(status);\n\n      if (action === 'approve') {\n        if (allowedTransitions.includes('approved')) {\n          return 'Click to approve this request';\n        } else if (status === 'approved') {\n          return 'This request has already been approved';\n        } else if (status === 'rejected') {\n          return 'Rejected requests can be resubmitted, not directly approved';\n        } else if (status === 'completed') {\n          return 'This request has already been completed';\n        } else {\n          return `Cannot approve from ${this.formatStatus(status)} status`;\n        }\n      } else if (action === 'reject') {\n        if (allowedTransitions.includes('rejected')) {\n          return 'Click to reject this request';\n        } else if (status === 'rejected') {\n          return 'This request has already been rejected';\n        } else if (status === 'completed') {\n          return 'Cannot reject a completed request';\n        } else {\n          return `Cannot reject from ${this.formatStatus(status)} status`;\n        }\n      }\n\n      return `Request status: ${this.formatStatus(status)}`;\n    },\n\n    // Check if status change is valid\n    isValidStatusChange(currentStatus, newStatusId) {\n      if (!currentStatus || !newStatusId) return false;\n\n      // Find the new status name\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      if (!newStatus) return false;\n\n      const currentStatusName = currentStatus.toLowerCase();\n      const newStatusName = newStatus.status_name.toLowerCase();\n\n      // Same status - no change needed\n      if (currentStatusName === newStatusName) {\n        return false;\n      }\n\n      // Check if transition is allowed based on workflow rules\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatusName);\n\n      return allowedTransitions.includes(newStatusName);\n    },\n\n    // Check if request needs payment verification\n    needsPaymentVerification(request) {\n      return request.status_name === 'payment_pending' &&\n             request.payment_method &&\n             !request.payment_method.includes('PayMongo') &&\n             request.payment_status !== 'paid';\n    },\n\n    // Check if pickup can be scheduled\n    canSchedulePickup(request) {\n      return request.status_name === 'ready_for_pickup';\n    },\n\n    // Get payment status color\n    getPaymentStatusColor(status) {\n      const colors = {\n        'pending': 'bg-warning',\n        'processing': 'bg-info',\n        'paid': 'bg-success',\n        'failed': 'bg-danger',\n        'refunded': 'bg-secondary',\n        'cancelled': 'bg-dark'\n      };\n      return colors[status] || 'bg-secondary';\n    },\n\n    // Format payment status\n    formatPaymentStatus(status) {\n      const statuses = {\n        'pending': 'Pending',\n        'processing': 'Processing',\n        'paid': 'Paid',\n        'failed': 'Failed',\n        'refunded': 'Refunded',\n        'cancelled': 'Cancelled'\n      };\n      return statuses[status] || 'Unknown';\n    },\n\n    // Get tomorrow's date for pickup scheduling\n    getTomorrowDate() {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return tomorrow.toISOString().split('T')[0];\n    },\n\n    // Validate pickup form\n    isPickupFormValid() {\n      return this.pickupScheduleForm.scheduled_date &&\n             this.pickupScheduleForm.scheduled_time_start &&\n             this.pickupScheduleForm.scheduled_time_end &&\n             this.pickupScheduleForm.scheduled_time_start < this.pickupScheduleForm.scheduled_time_end;\n    },\n\n    // Get filtered status options based on current status\n    getAvailableStatusOptions() {\n      if (!this.currentRequest || !this.statusOptions) return [];\n\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n\n      // Only these states are truly final (cannot be changed)\n      const finalStates = ['completed', 'cancelled'];\n\n      // If current status is final, no changes allowed\n      if (finalStates.includes(currentStatus)) {\n        return [];\n      }\n\n      // Define allowed transitions based on current status\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Return only allowed status options\n      return this.statusOptions.filter(status =>\n        allowedTransitions.includes(status.status_name.toLowerCase())\n      );\n    },\n\n    // Define allowed status transitions based on government workflow best practices\n    // This must match the backend validateStatusTransition logic exactly\n    getAllowedStatusTransitions(currentStatus) {\n      // Check if current request uses cash payment - enhanced detection\n      const isCashPayment = this.currentRequest &&\n        (this.currentRequest.payment_method === 'Cash Payment' ||\n         this.currentRequest.payment_method === 'Cash' ||\n         this.currentRequest.payment_method_code === 'CASH' ||\n         this.currentRequest.payment_method_id === 1 || // Assuming cash is ID 1\n         !this.currentRequest.is_online_payment);\n\n      console.log('🔍 Cash payment detection:', {\n        payment_method: this.currentRequest?.payment_method,\n        payment_method_code: this.currentRequest?.payment_method_code,\n        payment_method_id: this.currentRequest?.payment_method_id,\n        is_online_payment: this.currentRequest?.is_online_payment,\n        isCashPayment: isCashPayment\n      });\n\n      const transitions = {\n        // Simplified workflow matching actual database statuses\n        'pending': ['approved', 'cancelled', 'rejected'],\n        'under_review': ['approved', 'rejected', 'cancelled'],\n        'approved': isCashPayment\n          ? ['payment_confirmed', 'processing', 'cancelled'] // Cash payments can go directly to processing\n          : ['payment_confirmed', 'cancelled'], // Online payments go through PayMongo webhook to payment_confirmed\n        'payment_confirmed': ['processing'], // Automatic transition after payment\n        'processing': ['ready_for_pickup'], // Processing can only complete successfully\n        'ready_for_pickup': ['completed', 'cancelled'], // Simplified - direct completion\n        'rejected': ['pending', 'under_review'], // Allow resubmission after corrections\n        // Final states - no transitions allowed\n        'completed': [],\n        'cancelled': []\n      };\n\n      return transitions[currentStatus] || [];\n    },\n\n    // Get title for update button based on validation state\n    getUpdateButtonTitle() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Please select a new status';\n      }\n      if (!this.isValidStatusChange(this.currentRequest.status_name, this.statusUpdateForm.status_id)) {\n        return 'Invalid status change';\n      }\n      return 'Update request status';\n    },\n\n    // Get dynamic button text based on selected status\n    getActionButtonText() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Update Status';\n      }\n\n      const selectedStatus = this.statusOptions.find(s => s.id === parseInt(this.statusUpdateForm.status_id));\n      if (!selectedStatus) {\n        return 'Update Status';\n      }\n\n      const statusName = selectedStatus.status_name.toLowerCase();\n\n      // Special button text for common actions\n      switch (statusName) {\n        case 'approved':\n          return 'Approve Request';\n        case 'rejected':\n          return 'Reject Request';\n        case 'under_review':\n          return 'Move to Review';\n        case 'processing':\n          return 'Start Processing';\n        case 'ready_for_pickup':\n          return 'Mark Ready for Pickup';\n        case 'completed':\n          return 'Complete Request';\n        default:\n          return `Update to ${selectedStatus.status_name}`;\n      }\n    },\n\n    async quickApprove(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.approveRequest(request.id, {\n          reason: 'Quick approval from admin interface'\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${request.request_number} approved successfully`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to approve request', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    showQuickRejectModal(request) {\n      console.log('🚀 Quick reject clicked for request:', request);\n\n      this.selectedRequestForReject = request;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickReject = true;\n    },\n\n    closeQuickRejectModal() {\n      this.showQuickReject = false;\n      this.selectedRequestForReject = null;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n    },\n\n    async confirmQuickReject() {\n      this.quickRejectForm.loading = true;\n      this.quickRejectForm.error = '';\n\n      try {\n        const response = await adminDocumentService.rejectRequest(\n          this.selectedRequestForReject.id,\n          { reason: 'Request rejected by admin' }\n        );\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForReject.request_number} rejected successfully`, 'success');\n          this.closeQuickRejectModal();\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickRejectForm.error = errorData.message || 'Failed to reject request';\n      } finally {\n        this.quickRejectForm.loading = false;\n      }\n    },\n\n    showQuickApproveModal(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n\n      this.selectedRequestForApprove = request;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickApprove = true;\n    },\n\n    closeQuickApproveModal() {\n      this.showQuickApprove = false;\n      this.selectedRequestForApprove = null;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n    },\n\n    async confirmQuickApprove() {\n      this.quickApproveForm.loading = true;\n      this.quickApproveForm.error = '';\n\n      try {\n        const response = await adminDocumentService.approveRequest(\n          this.selectedRequestForApprove.id,\n          { reason: 'Quick approval from admin interface' }\n        );\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForApprove.request_number} approved successfully`, 'success');\n          this.closeQuickApproveModal();\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickApproveForm.error = errorData.message || 'Failed to approve request';\n      } finally {\n        this.quickApproveForm.loading = false;\n      }\n    },\n\n    // Bulk operations\n    async performBulkAction() {\n      if (this.selectedRequests.length === 0) {\n        this.errorMessage = 'Please select at least one request';\n        return;\n      }\n\n      if (!this.bulkAction) {\n        this.errorMessage = 'Please select a bulk action';\n        return;\n      }\n\n      try {\n        const response = await adminDocumentService.bulkUpdateRequests({\n          request_ids: this.selectedRequests,\n          status_id: parseInt(this.bulkAction)\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.selectedRequests = [];\n          this.bulkAction = '';\n          this.showBulkActions = false;\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to perform bulk action:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to perform bulk action';\n      }\n    },\n\n    // Export functionality\n    async exportRequests() {\n      try {\n        const csvData = await adminDocumentService.exportRequests(this.filters);\n        const filename = `document_requests_${new Date().toISOString().split('T')[0]}.csv`;\n        adminDocumentService.downloadCSV(csvData, filename);\n      } catch (error) {\n        console.error('Failed to export requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to export requests';\n      }\n    },\n\n    // PDF Export functionality\n    async exportToPDF() {\n      if (!this.isPDFExportValid()) {\n        this.showToast('Error', 'Please select a valid date range for the report', 'error');\n        return;\n      }\n\n      try {\n        this.pdfExportForm.loading = true;\n\n        // Get filtered data based on report type\n        const reportData = await this.getReportData();\n\n        if (!reportData || reportData.length === 0) {\n          this.showToast('Warning', 'No data found for the selected date range', 'warning');\n          return;\n        }\n\n        // Generate PDF\n        const pdf = new jsPDF();\n        this.generatePDFReport(pdf, reportData);\n\n        // Download PDF\n        const filename = this.getPDFFilename();\n        pdf.save(filename);\n\n        this.showToast('Success', 'PDF report generated successfully', 'success');\n      } catch (error) {\n        console.error('Failed to generate PDF report:', error);\n        this.showToast('Error', 'Failed to generate PDF report', 'error');\n      } finally {\n        this.pdfExportForm.loading = false;\n      }\n    },\n\n    // Get report data based on selected filters\n    async getReportData() {\n      const reportFilters = { ...this.filters };\n\n      // Set date range based on report type\n      const dateRange = this.getDateRangeForReport();\n      reportFilters.date_from = dateRange.from;\n      reportFilters.date_to = dateRange.to;\n\n      try {\n        console.log('📊 Fetching report data with filters:', reportFilters);\n\n        const response = await adminDocumentService.getAllRequests({\n          ...reportFilters,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n\n        console.log('📊 Raw API response:', response);\n\n        if (response.success && response.data.requests) {\n          const allRequests = response.data.requests;\n          console.log('📊 All requests from API:', allRequests);\n\n          // Log sample request structure for debugging\n          if (allRequests.length > 0) {\n            console.log('📊 Sample request structure:', {\n              request_number: allRequests[0].request_number,\n              total_document_fee: allRequests[0].total_document_fee,\n              total_fee: allRequests[0].total_fee,\n              amount: allRequests[0].amount,\n              all_fields: Object.keys(allRequests[0])\n            });\n          }\n\n          // Filter to only show completed and cancelled requests (historical data)\n          const filteredRequests = allRequests.filter(request =>\n            ['completed', 'cancelled'].includes(request.status_name.toLowerCase())\n          );\n\n          console.log('📊 Filtered requests for PDF:', filteredRequests);\n          return filteredRequests;\n        }\n        return [];\n      } catch (error) {\n        console.error('Failed to fetch report data:', error);\n        throw error;\n      }\n    },\n\n    // Get date range based on report type and selected values\n    getDateRangeForReport() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return {\n            from: selectedDate,\n            to: selectedDate\n          };\n\n        case 'weekly':\n          if (selectedWeek) {\n            const [year, week] = selectedWeek.split('-W');\n            const startDate = this.getDateFromWeek(parseInt(year), parseInt(week));\n            const endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n\n        case 'monthly':\n          if (selectedMonth) {\n            const [year, month] = selectedMonth.split('-');\n            const startDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n            const endDate = new Date(parseInt(year), parseInt(month), 0);\n\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n      }\n\n      return { from: '', to: '' };\n    },\n\n    // Generate PDF report content\n    generatePDFReport(pdf, data) {\n      const dateRange = this.getDateRangeForReport();\n\n      // Document Header with improved styling\n      pdf.setFontSize(24);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80); // Dark blue-gray\n      pdf.text('BARANGAY DOCUMENT REQUEST HISTORY', 105, 25, { align: 'center' });\n\n      // Decorative line under header\n      pdf.setDrawColor(52, 152, 219); // Blue line\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n\n      // Report type and metadata section\n      pdf.setFontSize(14);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(0, 0, 0);\n      const reportTitle = this.getReportTitle();\n      pdf.text(reportTitle, 20, 45);\n\n      // Date range with improved formatting\n      pdf.setFontSize(11);\n      pdf.setFont('helvetica', 'normal');\n      const dateRangeText = this.getDateRangeText(dateRange);\n      pdf.text(`Report Period: ${dateRangeText}`, 20, 55);\n\n      // Generated date\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      pdf.text(`Generated: ${generatedDate}`, 20, 65);\n\n      // Summary statistics with improved layout\n      const stats = this.calculateReportStats(data);\n\n      // Summary box background\n      pdf.setFillColor(248, 249, 250); // Light gray background\n      pdf.setDrawColor(206, 212, 218); // Border color\n      pdf.roundedRect(20, 75, 170, 35, 3, 3, 'FD'); // Rounded rectangle with fill and border\n\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(52, 58, 64);\n      pdf.text('SUMMARY STATISTICS', 25, 85);\n\n      pdf.setFontSize(10);\n      pdf.setFont('helvetica', 'normal');\n\n      // Statistics in columns\n      pdf.text(`Total Requests: ${stats.total}`, 25, 95);\n      pdf.text(`Completed: ${stats.completed}`, 80, 95);\n      pdf.text(`Cancelled: ${stats.cancelled}`, 135, 95);\n\n      // Add percentage if there are requests\n      if (stats.total > 0) {\n        const completionRate = Math.round((stats.completed / stats.total) * 100);\n        pdf.text(`Completion Rate: ${completionRate}%`, 25, 105);\n      }\n\n      // Generate table with improved design (matching AdminReports.vue styling)\n      if (data && data.length > 0) {\n        const tableData = data.slice(0, 100).map(request => [\n          request.request_number || 'N/A',\n          request.client_name || 'N/A',\n          request.document_type || 'N/A',\n          this.formatStatus(request.status_name) || 'N/A',\n          this.formatCurrencyForPDF(this.getAmountForPDF(request)),\n          this.formatDateForPDF(request.requested_at) || 'N/A'\n        ]);\n\n        // Use autoTable function (v5.x syntax) with AdminReports.vue styling\n        try {\n          console.log('🔧 Calling autoTable function');\n          autoTable(pdf, {\n            head: [['Request #', 'Client Name', 'Document Type', 'Status', 'Amount', 'Date']],\n            body: tableData,\n            startY: 125,\n            theme: 'grid',\n            headStyles: {\n              fillColor: [52, 152, 219],\n              textColor: 255,\n              fontStyle: 'bold',\n              fontSize: 8\n            },\n            styles: {\n              fontSize: 7,\n              cellPadding: 3,\n              overflow: 'linebreak',\n              cellWidth: 'wrap'\n            },\n            columnStyles: {\n              0: { cellWidth: 30, halign: 'center' },         // Request #\n              1: { cellWidth: 35, overflow: 'linebreak' },    // Client Name (wrappable)\n              2: { cellWidth: 38, overflow: 'linebreak' },    // Document Type (wrappable)\n              3: { cellWidth: 22, halign: 'center' },         // Status\n              4: { cellWidth: 20, halign: 'right' },          // Amount\n              5: { cellWidth: 25, halign: 'center' }          // Date\n            }\n          });\n          console.log('✅ AutoTable completed successfully');\n        } catch (autoTableError) {\n          console.error('❌ AutoTable call failed:', autoTableError);\n          throw new Error(`AutoTable failed: ${autoTableError.message}`);\n        }\n      }\n\n      // Add professional footer\n      this.addPDFFooter(pdf);\n    },\n\n    // Fallback method to generate table manually using native jsPDF\n    generateManualTable(pdf, data) {\n      let yPosition = 125;\n      const lineHeight = 14;\n      const headerHeight = 12;\n\n      // Improved column positioning and widths - matching autoTable\n      const columns = [\n        { x: 22, width: 30, align: 'center' },  // Request Number\n        { x: 54, width: 35, align: 'left' },    // Client Name\n        { x: 91, width: 38, align: 'left' },    // Document Type\n        { x: 131, width: 22, align: 'center' }, // Status\n        { x: 155, width: 20, align: 'right' },  // Amount (smaller)\n        { x: 177, width: 25, align: 'center' }  // Date\n      ];\n\n      // Header background first (draw background before text)\n      pdf.setFillColor(52, 152, 219); // Professional blue\n      pdf.rect(20, yPosition - 10, 170, headerHeight, 'F');\n\n      // Header border on top of background\n      pdf.setDrawColor(206, 212, 218);\n      pdf.setLineWidth(0.5);\n      pdf.rect(20, yPosition - 10, 170, headerHeight, 'D');\n\n      // Header text styling\n      pdf.setFontSize(9);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(255, 255, 255); // White text\n\n      // Header text positioning - improved to prevent overlap\n      const headers = ['Request Number', 'Client Name', 'Document Type', 'Status', 'Amount', 'Date'];\n      const headerY = yPosition - 4; // Better vertical positioning\n\n      headers.forEach((header, index) => {\n        const col = columns[index];\n        let textX;\n        let align = 'left';\n\n        if (col.align === 'center') {\n          textX = col.x + (col.width / 2);\n          align = 'center';\n        } else if (col.align === 'right') {\n          textX = col.x + col.width - 2;\n          align = 'right';\n        } else {\n          textX = col.x + 2;\n          align = 'left';\n        }\n\n        pdf.text(header, textX, headerY, { align: align });\n      });\n\n      yPosition += 6; // More space after header to prevent overlap\n\n      // Reset text color and font for data rows\n      pdf.setTextColor(33, 37, 41); // Dark gray\n      pdf.setFont('helvetica', 'normal');\n      pdf.setFontSize(8.5); // Slightly smaller but readable\n\n      // Table rows with improved formatting\n      data.forEach((request, index) => {\n        // Alternate row background\n        if (index % 2 === 1) {\n          pdf.setFillColor(248, 249, 250); // Very light gray\n          pdf.rect(20, yPosition - 8, 170, lineHeight, 'F');\n        }\n\n        // Row border\n        pdf.setDrawColor(206, 212, 218);\n        pdf.rect(20, yPosition - 8, 170, lineHeight, 'D');\n\n        // Row data with proper formatting\n        const rowData = [\n          request.request_number || 'N/A',\n          this.truncateText(request.client_name || 'N/A', 18),\n          this.truncateText(request.document_type || 'N/A', 20),\n          this.formatStatus(request.status_name) || 'N/A',\n          this.formatCurrencyForPDF(this.getAmountForPDF(request)),\n          this.formatDateForPDF(request.requested_at) || 'N/A'\n        ];\n\n        rowData.forEach((cellData, colIndex) => {\n          const col = columns[colIndex];\n          const text = String(cellData);\n\n          if (col.align === 'center') {\n            pdf.text(text, col.x + (col.width / 2), yPosition, { align: 'center' });\n          } else if (col.align === 'right') {\n            pdf.text(text, col.x + col.width - 2, yPosition, { align: 'right' });\n          } else {\n            pdf.text(text, col.x + 2, yPosition);\n          }\n        });\n\n        yPosition += lineHeight;\n\n        // Add new page if needed\n        if (yPosition > 260) {\n          pdf.addPage();\n          yPosition = 30;\n\n          // Repeat header on new page\n          pdf.setFillColor(52, 152, 219);\n          pdf.rect(20, yPosition - 10, 170, headerHeight, 'F');\n          pdf.setTextColor(255, 255, 255);\n          pdf.setFont('helvetica', 'bold');\n          pdf.setFontSize(9);\n\n          headers.forEach((header, index) => {\n            const col = columns[index];\n            if (col.align === 'center') {\n              pdf.text(header, col.x + (col.width / 2), yPosition - 3, { align: 'center' });\n            } else if (col.align === 'right') {\n              pdf.text(header, col.x + col.width - 2, yPosition - 3, { align: 'right' });\n            } else {\n              pdf.text(header, col.x + 2, yPosition - 3);\n            }\n          });\n\n          yPosition += 4;\n          pdf.setTextColor(33, 37, 41);\n          pdf.setFont('helvetica', 'normal');\n          pdf.setFontSize(8.5);\n        }\n      });\n\n      // Add footer to manual table as well\n      this.addPDFFooter(pdf);\n    },\n\n    // Add professional footer to PDF\n    addPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(206, 212, 218);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(8);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(108, 117, 125); // Gray text\n\n        // Left side - Document info\n        pdf.text('Barangay Document Management System', 20, 285);\n        pdf.text('Official Document Request Report', 20, 290);\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, { align: 'right' });\n        pdf.text(`Generated: ${new Date().toLocaleDateString()}`, 190, 290, { align: 'right' });\n      }\n    },\n\n    // Helper method to truncate text for table cells\n    truncateText(text, maxLength) {\n      if (!text) return '';\n      return text.length > maxLength ? text.substring(0, maxLength - 3) + '...' : text;\n    },\n\n    // Format date specifically for PDF display (month and day only)\n    formatDateForPDF(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      // Show only month and day (no year to save space)\n      const month = date.toLocaleDateString('en-US', { month: 'short' });\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${month} ${day}`;\n    },\n\n    // Format currency specifically for PDF (compact format, no PHP prefix)\n    formatCurrencyForPDF(amount) {\n      // Debug logging to trace amount values\n      console.log('💰 formatCurrencyForPDF input:', {\n        original: amount,\n        type: typeof amount,\n        parsed: parseFloat(amount),\n        isNaN: isNaN(parseFloat(amount))\n      });\n\n      const numAmount = parseFloat(amount) || 0;\n      const formatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n      const result = formatter.format(numAmount);\n\n      console.log('💰 formatCurrencyForPDF result:', result);\n      return result;\n    },\n\n    // Enhanced method to extract amount from request data\n    getAmountForPDF(request) {\n      // Debug the entire request object structure\n      console.log('📊 getAmountForPDF - Full request object:', request);\n\n      // Try multiple possible field names in order of preference\n      const possibleAmountFields = [\n        'total_document_fee',\n        'total_fee',\n        'amount',\n        'document_fee',\n        'fee'\n      ];\n\n      let amount = 0;\n      let foundField = null;\n\n      for (const field of possibleAmountFields) {\n        if (request[field] !== undefined && request[field] !== null) {\n          const fieldValue = parseFloat(request[field]);\n          if (!isNaN(fieldValue) && fieldValue > 0) {\n            amount = fieldValue;\n            foundField = field;\n            break;\n          }\n        }\n      }\n\n      console.log('💰 getAmountForPDF result:', {\n        request_number: request.request_number,\n        found_field: foundField,\n        amount: amount,\n        all_fields: possibleAmountFields.reduce((acc, field) => {\n          acc[field] = request[field];\n          return acc;\n        }, {})\n      });\n\n      return amount;\n    },\n\n    // Method to disable debug logging for production\n    disablePDFDebugLogging() {\n      // Override console.log for PDF-related debugging\n      const originalLog = console.log;\n      console.log = function(...args) {\n        if (args.length > 0 && typeof args[0] === 'string' &&\n            (args[0].includes('💰') || args[0].includes('📊'))) {\n          return; // Skip PDF debug logs\n        }\n        originalLog.apply(console, args);\n      };\n    },\n\n    // Helper methods for PDF export\n    isPDFExportValid() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return selectedDate !== '';\n        case 'weekly':\n          return selectedWeek !== '';\n        case 'monthly':\n          return selectedMonth !== '';\n        default:\n          return false;\n      }\n    },\n\n    getPDFFilename() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n      const timestamp = new Date().toISOString().split('T')[0];\n\n      switch (reportType) {\n        case 'daily':\n          return `daily_report_${selectedDate}_${timestamp}.pdf`;\n        case 'weekly':\n          return `weekly_report_${selectedWeek}_${timestamp}.pdf`;\n        case 'monthly':\n          return `monthly_report_${selectedMonth}_${timestamp}.pdf`;\n        default:\n          return `report_${timestamp}.pdf`;\n      }\n    },\n\n    getReportTitle() {\n      const { reportType } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return 'Daily Document Request Report';\n        case 'weekly':\n          return 'Weekly Document Request Report';\n        case 'monthly':\n          return 'Monthly Document Request Report';\n        default:\n          return 'Document Request Report';\n      }\n    },\n\n    getDateRangeText(dateRange) {\n      if (dateRange.from === dateRange.to) {\n        return this.formatDate(dateRange.from);\n      }\n      return `${this.formatDate(dateRange.from)} to ${this.formatDate(dateRange.to)}`;\n    },\n\n    calculateReportStats(data) {\n      return {\n        total: data.length,\n        completed: data.filter(r => r.status_name.toLowerCase() === 'completed').length,\n        cancelled: data.filter(r => r.status_name.toLowerCase() === 'cancelled').length\n      };\n    },\n\n    getDateFromWeek(year, week) {\n      const simple = new Date(year, 0, 1 + (week - 1) * 7);\n      const dow = simple.getDay();\n      const ISOweekStart = simple;\n      if (dow <= 4) {\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n      } else {\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n      }\n      return ISOweekStart;\n    },\n\n    // Date helper methods for form validation\n    getCurrentDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n\n    getCurrentWeek() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const week = this.getWeekNumber(now);\n      return `${year}-W${week.toString().padStart(2, '0')}`;\n    },\n\n    getCurrentMonth() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = (now.getMonth() + 1).toString().padStart(2, '0');\n      return `${year}-${month}`;\n    },\n\n    getWeekNumber(date) {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      const dayNum = d.getUTCDay() || 7;\n      d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    },\n\n    // Verify in-person payment\n    async verifyInPersonPayment() {\n      if (!this.paymentVerificationForm.amount_received || !this.currentRequest) {\n        this.showToast('Error', 'Please enter the amount received', 'error');\n        return;\n      }\n\n      const totalFee = parseFloat(this.currentRequest.total_document_fee || this.currentRequest.total_fee);\n      const amountReceived = parseFloat(this.paymentVerificationForm.amount_received);\n\n      if (amountReceived < totalFee) {\n        this.showToast('Error', `Insufficient payment. Required: ${this.formatCurrency(totalFee)}`, 'error');\n        return;\n      }\n\n      this.paymentVerificationForm.loading = true;\n      this.paymentVerificationForm.error = '';\n\n      try {\n        const paymentData = {\n          amount_received: amountReceived,\n          payment_method_id: this.currentRequest.payment_method_id || 1, // Default to cash\n          receipt_number: this.paymentVerificationForm.receipt_number\n        };\n\n        const response = await adminDocumentService.verifyInPersonPayment(this.currentRequest.id, paymentData);\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.paymentVerificationForm = {\n            amount_received: '',\n            receipt_number: '',\n            loading: false,\n            error: ''\n          };\n\n          this.showToast('Success', 'Payment verified successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to verify payment:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.paymentVerificationForm.error = errorData.message || 'Failed to verify payment';\n        this.showToast('Error', errorData.message || 'Failed to verify payment', 'error');\n      } finally {\n        this.paymentVerificationForm.loading = false;\n      }\n    },\n\n    // Schedule pickup appointment\n    async schedulePickup() {\n      if (!this.isPickupFormValid() || !this.currentRequest) {\n        this.showToast('Error', 'Please fill in all required fields', 'error');\n        return;\n      }\n\n      this.pickupScheduleForm.loading = true;\n      this.pickupScheduleForm.error = '';\n\n      try {\n        const scheduleData = {\n          scheduled_date: this.pickupScheduleForm.scheduled_date,\n          scheduled_time_start: this.pickupScheduleForm.scheduled_time_start,\n          scheduled_time_end: this.pickupScheduleForm.scheduled_time_end\n        };\n\n        const response = await adminDocumentService.schedulePickup(this.currentRequest.id, scheduleData);\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.pickupScheduleForm = {\n            scheduled_date: '',\n            scheduled_time_start: '',\n            scheduled_time_end: '',\n            loading: false,\n            error: ''\n          };\n\n          this.showToast('Success', 'Pickup scheduled successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to schedule pickup:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.pickupScheduleForm.error = errorData.message || 'Failed to schedule pickup';\n        this.showToast('Error', errorData.message || 'Failed to schedule pickup', 'error');\n      } finally {\n        this.pickupScheduleForm.loading = false;\n      }\n    },\n\n    // Utility methods\n    formatStatus(status) {\n      return adminDocumentService.formatStatus(status);\n    },\n\n    getStatusColor(status) {\n      return adminDocumentService.getStatusColor(status);\n    },\n\n    // Enhanced fee display method with debugging\n    getDisplayFee(request) {\n      const totalDocumentFee = parseFloat(request.total_document_fee);\n      const totalFee = parseFloat(request.total_fee);\n\n      // Debug logging for Cedula requests\n      if (request.document_type === 'Cedula') {\n        console.log(`🔍 Cedula Fee Debug - Request ${request.request_number}:`, {\n          total_document_fee: request.total_document_fee,\n          total_fee: request.total_fee,\n          parsed_total_document_fee: totalDocumentFee,\n          parsed_total_fee: totalFee,\n          will_display: totalDocumentFee || totalFee || 0\n        });\n      }\n\n      // Prioritize total_document_fee, fallback to total_fee\n      return totalDocumentFee || totalFee || 0;\n    },\n\n    // Check if request has convenience fee\n    hasConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return totalFee > baseFee && baseFee > 0;\n    },\n\n    // Get base document fee (without convenience fee)\n    getBaseFee(request) {\n      const documentType = request.document_type;\n      const totalFee = this.getDisplayFee(request);\n\n      // For Cedula requests, calculate the actual document fee\n      if (documentType === 'Cedula') {\n        // If total is ₱100.00, the base fee is likely ₱30.00 (with ₱70.00 convenience fee)\n        if (totalFee === 100.00) {\n          return 30.00; // Standard Cedula fee for ₱20K income\n        }\n        // For other amounts, assume no convenience fee for now\n        return totalFee;\n      }\n\n      // For other document types, check if convenience fee was applied\n      const PAYMONGO_MINIMUM = 100.00;\n      if (totalFee === PAYMONGO_MINIMUM && documentType !== 'Barangay Clearance') {\n        // Likely has convenience fee - estimate base fee\n        return totalFee - (PAYMONGO_MINIMUM - totalFee);\n      }\n\n      return totalFee;\n    },\n\n    // Get convenience fee amount\n    getConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return Math.max(0, totalFee - baseFee);\n    },\n\n    // Get convenience fee explanation\n    getConvenienceFeeExplanation(request) {\n      const convenienceFee = this.getConvenienceFee(request);\n      if (convenienceFee > 0) {\n        return `PayMongo requires a minimum payment of ₱100.00. A convenience fee of ₱${convenienceFee.toFixed(2)} was added to meet this requirement.`;\n      }\n      return '';\n    },\n\n    formatDate(dateString) {\n      console.log('🗓️ formatDate called with:', dateString);\n      if (!dateString) {\n        console.log('🗓️ formatDate: No date provided, returning null');\n        return null;\n      }\n      const date = new Date(dateString);\n      const formatted = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      console.log('🗓️ formatDate result:', formatted);\n      return formatted;\n    },\n\n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-PH', {\n        style: 'currency',\n        currency: 'PHP'\n      }).format(amount || 0);\n    },\n\n    formatDateTime(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    // Get formatted changed by name for status history\n    getChangedByName(history) {\n      // If the reason starts with \"SYSTEM:\", show \"System\" regardless of changed_by_name\n      if (history.change_reason && history.change_reason.startsWith('SYSTEM:')) {\n        return 'System';\n      }\n      return history.changed_by_name || 'System';\n    },\n\n    // Get formatted reason for status history\n    getFormattedReason(reason) {\n      if (!reason) return '';\n      // Remove \"SYSTEM:\" prefix if present\n      if (reason.startsWith('SYSTEM:')) {\n        return reason.substring(7).trim(); // Remove \"SYSTEM:\" and trim whitespace\n      }\n      return reason;\n    },\n\n    // New helper methods for complete client information\n    getClientFullName(request) {\n      if (!request) return 'Not provided';\n      const parts = [\n        request.client_first_name,\n        request.client_middle_name,\n        request.client_last_name,\n        request.client_suffix\n      ].filter(Boolean);\n      return parts.length > 0 ? parts.join(' ') : request.client_name || 'Not provided';\n    },\n\n    getClientFullAddress(request) {\n      if (!request) return null;\n      const parts = [\n        request.client_house_number,\n        request.client_street,\n        request.client_subdivision,\n        request.client_barangay,\n        request.client_city_municipality || request.client_city,\n        request.client_province\n      ].filter(Boolean);\n      return parts.length > 0 ? parts.join(', ') : (request.client_address || null);\n    },\n\n    formatGender(gender) {\n      if (!gender) {\n        return null;\n      }\n      return gender.charAt(0).toUpperCase() + gender.slice(1);\n    },\n\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || null;\n    },\n\n    // New helper methods for third-party requests\n    formatRelationship(relationship) {\n      if (!relationship) return 'Not specified';\n\n      const relationships = {\n        'spouse': 'Spouse',\n        'child': 'Child',\n        'parent': 'Parent',\n        'sibling': 'Sibling',\n        'relative': 'Other Relative',\n        'friend': 'Friend',\n        'colleague': 'Colleague',\n        // 'other': 'Other',\n        'self': 'Self'\n      };\n\n      return relationships[relationship] || relationship.charAt(0).toUpperCase() + relationship.slice(1);\n    },\n\n\n\n    formatAuthorizationStatus(status) {\n      if (!status) return 'Pending';\n\n      const statuses = {\n        'pending': 'Pending Verification',\n        'verified': 'Verified',\n        'rejected': 'Rejected'\n      };\n\n      return statuses[status] || status.charAt(0).toUpperCase() + status.slice(1);\n    },\n\n    getAuthorizationStatusClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n\n      return classes[status] || 'bg-secondary';\n    },\n\n    getAuthorizationStatusIcon(status) {\n      const icons = {\n        'pending': 'fa-clock',\n        'verified': 'fa-check-circle',\n        'rejected': 'fa-times-circle'\n      };\n\n      return icons[status] || 'fa-question-circle';\n    },\n\n    // Authorization verification methods\n    async verifyAuthorization(requestId, isApproved) {\n      try {\n        // This would call a new API endpoint for authorization verification\n        // const response = await adminDocumentService.verifyAuthorization(requestId, {\n        //   isApproved,\n        //   notes: isApproved ? 'Authorization verified and approved' : 'Authorization rejected'\n        // });\n\n        // For now, show a placeholder message\n        this.showToast(\n          'Authorization ' + (isApproved ? 'Approved' : 'Rejected'),\n          `Pickup authorization has been ${isApproved ? 'approved' : 'rejected'}`,\n          isApproved ? 'success' : 'warning'\n        );\n\n        // Refresh the request details\n        await this.refreshRequestDetails();\n\n      } catch (error) {\n        console.error('Failed to verify authorization:', error);\n        this.errorMessage = 'Failed to verify authorization. Please try again.';\n      }\n    },\n\n    getResidencyDisplay(request) {\n      if (!request) return null;\n      const years = request.client_years_of_residency;\n      const months = request.client_months_of_residency;\n\n      if (!years && !months) return null; // Return null so the template can handle \"Not provided\"\n\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n\n      return parts.join(' and ');\n    },\n\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    },\n\n    // Real-time features\n    async initializeRealTimeFeatures() {\n      console.log('Initializing real-time features for AdminRequests');\n\n      try {\n        // Initialize notification service\n        await notificationService.init('admin');\n\n        // Listen for request-related notifications\n        notificationService.on('notification', this.handleRealTimeNotification);\n        notificationService.on('request_status_changed', this.handleStatusChange);\n        notificationService.on('new_request', this.handleNewRequest);\n\n        // Start auto-refresh if enabled\n        if (this.autoRefreshEnabled) {\n          this.startAutoRefresh();\n        }\n      } catch (error) {\n        console.error('Failed to initialize real-time features:', error);\n      }\n    },\n\n    cleanupRealTimeFeatures() {\n      console.log('Cleaning up real-time features for AdminRequests');\n\n      // Remove notification listeners\n      notificationService.off('notification', this.handleRealTimeNotification);\n      notificationService.off('request_status_changed', this.handleStatusChange);\n      notificationService.off('new_request', this.handleNewRequest);\n\n      // Cleanup (simplified)\n      notificationService.cleanup();\n\n      // Stop auto-refresh\n      this.stopAutoRefresh();\n    },\n\n    startAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n      }\n\n      this.refreshInterval = setInterval(() => {\n        if (this.autoRefreshEnabled && !this.loading) {\n          console.log('Auto-refreshing requests data...');\n          this.refreshRequestsData();\n        }\n      }, this.refreshRate);\n\n      console.log(`Auto-refresh started with ${this.refreshRate / 1000}s interval`);\n    },\n\n    stopAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n        this.refreshInterval = null;\n        console.log('Auto-refresh stopped');\n      }\n    },\n\n    toggleAutoRefresh() {\n      this.autoRefreshEnabled = !this.autoRefreshEnabled;\n\n      if (this.autoRefreshEnabled) {\n        this.startAutoRefresh();\n      } else {\n        this.stopAutoRefresh();\n      }\n    },\n\n    async refreshRequestsData() {\n      try {\n        this.lastRefresh = new Date();\n\n        // Refresh requests list\n        await this.loadRequests();\n\n        // Refresh statistics\n        await this.loadDashboardStats();\n\n        // If request details modal is open, refresh it\n        if (this.showRequestDetails && this.currentRequest) {\n          await this.refreshRequestDetails();\n        }\n\n        console.log('Requests data refreshed successfully');\n      } catch (error) {\n        console.error('Failed to refresh requests data:', error);\n      }\n    },\n\n    handleRealTimeNotification(notification) {\n      console.log('Real-time notification received:', notification);\n\n      // Handle different notification types\n      switch (notification.type) {\n        case 'request_status_changed':\n          this.handleStatusChange(notification.data);\n          break;\n        case 'new_request':\n          this.handleNewRequest(notification.data);\n          break;\n        case 'request_updated':\n          this.handleRequestUpdate(notification.data);\n          break;\n        case 'unread_count_update':\n        case 'heartbeat':\n          // Polling system notifications - handled by notification service\n          break;\n        default:\n          // Only log unknown types, not system types\n          if (!['unread_count_update', 'heartbeat'].includes(notification.type)) {\n            console.log('Unhandled notification type:', notification.type);\n          }\n      }\n    },\n\n    handleStatusChange(data) {\n      console.log('🔄 Request status changed:', data);\n      console.log('🔍 Data properties:', {\n        request_id: data.request_id,\n        new_status: data.new_status,\n        payment_status: data.payment_status,\n        amount: data.amount\n      });\n\n      // Update the request in the list if it exists\n      const requestId = data.request_id;\n      if (!requestId) {\n        console.warn('⚠️ No request_id in status change data');\n        return;\n      }\n\n      const requestIndex = this.requests.findIndex(req => req.id == requestId);\n      if (requestIndex !== -1) {\n        console.log(`📝 Updating request #${data.request_id} in the list`);\n\n        // Update the specific request in the list for immediate UI update\n        const updatedRequest = { ...this.requests[requestIndex] };\n\n        // Map the status based on the new status\n        if (data.new_status === 'payment_confirmed') {\n          updatedRequest.status_name = 'Payment Confirmed';\n          updatedRequest.status_id = 11;\n          updatedRequest.payment_status = 'paid';\n        } else if (data.new_status === 'payment_failed') {\n          updatedRequest.status_name = 'Payment Failed';\n          updatedRequest.payment_status = 'failed';\n        }\n\n        // Update the timestamp\n        updatedRequest.updated_at = data.timestamp || new Date().toISOString();\n\n        // Replace the request in the array\n        this.$set(this.requests, requestIndex, updatedRequest);\n\n        // Also refresh data in background to ensure consistency\n        setTimeout(() => {\n          this.refreshRequestsData();\n        }, 1000);\n\n        console.log(`✅ Request #${data.request_id} updated in real-time`);\n      } else {\n        console.log(`📄 Request #${data.request_id} not in current view, refreshing data`);\n        // If request is not in current view, just refresh\n        this.refreshRequestsData();\n      }\n\n      // Show toast notification with payment-specific message\n      const toastRequestId = data.request_id || 'Unknown';\n      const newStatus = data.new_status || 'unknown';\n\n      let title = 'Status Update';\n      let message = `Request #${toastRequestId} status changed`;\n      let type = 'info';\n\n      if (newStatus === 'payment_confirmed') {\n        title = 'Payment Confirmed';\n        message = `Payment confirmed for request #${toastRequestId}`;\n        type = 'success';\n      } else if (newStatus === 'payment_failed') {\n        title = 'Payment Failed';\n        message = `Payment failed for request #${toastRequestId}`;\n        type = 'error';\n      }\n\n      console.log('🔔 Showing toast:', { title, message, type });\n      this.showToast(title, message, type);\n    },\n\n    handleNewRequest(data) {\n      console.log('New request received:', data);\n\n      // Refresh requests to show the new request\n      this.refreshRequestsData();\n\n      // Show toast notification\n      this.showToast('New Request', `New ${data.document_type} request received`, 'success');\n    },\n\n    handleRequestUpdate(data) {\n      console.log('Request updated:', data);\n\n      // If the updated request is currently being viewed, refresh details\n      if (this.currentRequest && this.currentRequest.id === data.request_id) {\n        this.refreshRequestDetails();\n      }\n\n      // Refresh the requests list\n      this.refreshRequestsData();\n    },\n\n    showToast(title, message, type = 'info') {\n      // Enhanced debugging\n      console.log('🔔 showToast called with:', {\n        title: title,\n        titleType: typeof title,\n        message: message,\n        messageType: typeof message,\n        type: type\n      });\n\n      // Handle undefined values\n      const safeTitle = title || 'Notification';\n      const safeMessage = message || 'No message provided';\n\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${safeTitle}: ${safeMessage}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${safeTitle}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${safeMessage}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n          }\n          .toast-success { border-left: 4px solid #28a745; }\n          .toast-error { border-left: 4px solid #dc3545; }\n          .toast-info { border-left: 4px solid #17a2b8; }\n          .toast-warning { border-left: 4px solid #ffc107; }\n          @keyframes slideIn {\n            from { transform: translateX(100%); opacity: 0; }\n            to { transform: translateX(0); opacity: 1; }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto-remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.style.animation = 'slideIn 0.3s ease reverse';\n          setTimeout(() => toast.remove(), 300);\n        }\n      }, 5000);\n    },\n\n    // Document handling methods\n    getDocumentTypeDisplayName(type) {\n      const displayNames = {\n        'government_id': 'Government ID',\n        'proof_of_residency': 'Proof of Residency',\n        'cedula': 'Community Tax Certificate (Cedula)',\n        'birth_certificate': 'Birth Certificate',\n        'marriage_certificate': 'Marriage Certificate',\n        'other': 'Other Document'\n      };\n      return displayNames[type] || type;\n    },\n\n    isImageFile(mimeType) {\n      return mimeType && (\n        mimeType.startsWith('image/') ||\n        ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'].includes(mimeType)\n      );\n    },\n\n    isPdfFile(mimeType) {\n      return mimeType === 'application/pdf';\n    },\n\n    async loadDocumentUrls(documents) {\n      // Filter documents that need loading (images only, not already loaded/loading/failed)\n      const documentsToLoad = documents.filter(doc =>\n        this.isImageFile(doc.mime_type) &&\n        !this.documentUrls[doc.id] &&\n        !this.loadingDocuments.has(doc.id) &&\n        !this.failedDocuments.has(doc.id)\n      );\n\n      if (documentsToLoad.length === 0) return;\n\n      // Load documents in parallel with concurrency limit\n      const CONCURRENT_LIMIT = 3;\n      const chunks = this.chunkArray(documentsToLoad, CONCURRENT_LIMIT);\n\n      for (const chunk of chunks) {\n        await Promise.allSettled(\n          chunk.map(document => this.loadSingleDocument(document))\n        );\n      }\n    },\n\n    async loadSingleDocument(document, isForModal = false) {\n      const docId = document.id;\n\n      try {\n        // Mark as loading\n        this.loadingDocuments.add(docId);\n        if (isForModal) this.imageLoadingInModal = true;\n\n        // Use authenticated API call to get the document\n        const response = await api.get(`/documents/view/${docId}`, {\n          responseType: 'blob',\n          timeout: 15000, // Increased timeout for large images\n          onDownloadProgress: (progressEvent) => {\n            // Optional: Could emit progress events here\n            if (progressEvent.lengthComputable) {\n              const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n              console.log(`Loading ${docId}: ${percentCompleted}%`);\n            }\n          }\n        });\n\n        // Validate response\n        if (!response.data || response.data.size === 0) {\n          throw new Error('Empty response received');\n        }\n\n        // Check file size and optimize if needed\n        const blob = response.data;\n        const optimizedBlob = await this.optimizeImageBlob(blob, document.mime_type, isForModal);\n\n        // Create blob URL using requestIdleCallback for better performance\n        await this.createBlobUrlWhenIdle(docId, optimizedBlob);\n\n        // Remove from failed set if it was there\n        this.failedDocuments.delete(docId);\n        if (isForModal) this.modalImageError = false;\n\n      } catch (error) {\n        console.warn(`Failed to load document ${docId}:`, error.message);\n        this.failedDocuments.add(docId);\n        if (isForModal) this.modalImageError = true;\n\n        // Optionally retry after a delay for network errors\n        if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED') {\n          setTimeout(() => {\n            this.failedDocuments.delete(docId);\n          }, 30000); // Retry after 30 seconds\n        }\n      } finally {\n        // Remove from loading set\n        this.loadingDocuments.delete(docId);\n        if (isForModal) this.imageLoadingInModal = false;\n      }\n    },\n\n    chunkArray(array, size) {\n      const chunks = [];\n      for (let i = 0; i < array.length; i += size) {\n        chunks.push(array.slice(i, i + size));\n      }\n      return chunks;\n    },\n\n    async getDocumentUrl(document) {\n      // This method is now deprecated in favor of loadDocumentUrls\n      // Keeping for backward compatibility\n      if (this.documentUrls[document.id]) {\n        return this.documentUrls[document.id];\n      }\n      return null;\n    },\n\n    formatFileSize(bytes) {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n\n    async openImageModal(document) {\n      // Prevent multiple rapid clicks\n      if (this.imageLoadingInModal) return;\n\n      // Don't open modal if document failed to load and we're not retrying\n      if (this.failedDocuments.has(document.id)) {\n        return;\n      }\n\n      // Set modal state immediately for responsiveness\n      this.selectedImage = document;\n      this.showImageModal = true;\n      this.modalImageError = false;\n\n      // Use nextTick to ensure DOM is updated before heavy operations\n      await this.$nextTick();\n\n      // If image isn't loaded yet, try to load it with modal optimization\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id)) {\n        await this.loadSingleDocument(document, true);\n      }\n    },\n\n    async retryLoadDocument(document) {\n      // Remove from failed set and retry loading\n      this.failedDocuments.delete(document.id);\n      this.modalImageError = false;\n      await this.loadSingleDocument(document, true);\n    },\n\n    onModalImageLoad() {\n      // Called when modal image finishes loading\n      this.imageLoadingInModal = false;\n    },\n\n    cleanupDocumentUrls() {\n      // Revoke all blob URLs to prevent memory leaks\n      Object.values(this.documentUrls).forEach(url => {\n        if (url) URL.revokeObjectURL(url);\n      });\n\n      // Clear all tracking sets and objects\n      this.documentUrls = {};\n      this.loadingDocuments.clear();\n      this.failedDocuments.clear();\n    },\n\n    preloadImage(document) {\n      // Preload image on hover for better UX\n      if (!this.documentUrls[document.id] &&\n          !this.loadingDocuments.has(document.id) &&\n          !this.failedDocuments.has(document.id)) {\n        this.loadSingleDocument(document, false);\n      }\n    },\n\n    async optimizeImageBlob(blob, mimeType, isForModal = false) {\n      // For very large images, we might want to resize them\n      const MAX_SIZE = isForModal ? 5 * 1024 * 1024 : 2 * 1024 * 1024; // 5MB for modal, 2MB for preview\n\n      if (blob.size <= MAX_SIZE) {\n        return blob; // No optimization needed\n      }\n\n      try {\n        // Create image element for resizing\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        return new Promise((resolve) => {\n          img.onload = () => {\n            // Calculate new dimensions (maintain aspect ratio)\n            const maxDimension = isForModal ? 1920 : 800;\n            let { width, height } = img;\n\n            if (width > height && width > maxDimension) {\n              height = (height * maxDimension) / width;\n              width = maxDimension;\n            } else if (height > maxDimension) {\n              width = (width * maxDimension) / height;\n              height = maxDimension;\n            }\n\n            // Set canvas size and draw resized image\n            canvas.width = width;\n            canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n\n            // Convert to blob with compression\n            canvas.toBlob(\n              (optimizedBlob) => {\n                resolve(optimizedBlob || blob); // Fallback to original if optimization fails\n              },\n              mimeType,\n              0.85 // 85% quality\n            );\n          };\n\n          img.onerror = () => resolve(blob); // Fallback to original\n          img.src = URL.createObjectURL(blob);\n        });\n      } catch (error) {\n        console.warn('Image optimization failed:', error);\n        return blob; // Fallback to original\n      }\n    },\n\n    async createBlobUrlWhenIdle(docId, blob) {\n      return new Promise((resolve) => {\n        const createUrl = () => {\n          this.documentUrls[docId] = URL.createObjectURL(blob);\n          resolve();\n        };\n\n        // Use requestIdleCallback if available, otherwise use setTimeout\n        if (window.requestIdleCallback) {\n          window.requestIdleCallback(createUrl, { timeout: 1000 });\n        } else {\n          setTimeout(createUrl, 0);\n        }\n      });\n    },\n\n    closeImageModal() {\n      // Prevent rapid clicking during image loading\n      if (this.imageLoadingInModal) return;\n\n      this.showImageModal = false;\n      this.selectedImage = null;\n      this.imageLoadingInModal = false;\n      this.modalImageError = false;\n    },\n\n    async downloadDocument(documentFile) {\n      try {\n        // Use authenticated API call to download the document\n        const response = await api.get(`/documents/download/${documentFile.id}`, {\n          responseType: 'blob'\n        });\n\n        // Create a download link\n        const blob = new Blob([response.data], { type: documentFile.mime_type });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = documentFile.document_name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Failed to download document:', error);\n        this.showToast('Error', 'Failed to download document', 'error');\n      }\n    },\n\n    handleImageError(event) {\n      console.error('Failed to load image:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n\n      // Show error message\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'text-center text-muted p-3';\n      errorDiv.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><br>Failed to load image';\n      event.target.parentNode.appendChild(errorDiv);\n    },\n\n    // Beneficiary verification status methods\n    getBeneficiaryVerificationStatusClass(status) {\n      switch (status) {\n        case 'approved':\n          return 'bg-success';\n        case 'rejected':\n          return 'bg-danger';\n        case 'pending':\n        default:\n          return 'bg-warning';\n      }\n    },\n\n    getBeneficiaryVerificationStatusText(status) {\n      switch (status) {\n        case 'approved':\n          return 'Verified';\n        case 'rejected':\n          return 'Rejected';\n        case 'pending':\n        default:\n          return 'Pending';\n      }\n    },\n\n    // View verification image\n    async viewVerificationImage(requestId, imageType) {\n      try {\n        // Find the request to get the filename - check both requests list and currentRequest\n        let request = this.requests.find(r => r.id === requestId);\n\n        // If not found in requests list, check if it's the current request being viewed\n        if (!request && this.currentRequest && this.currentRequest.id === requestId) {\n          request = this.currentRequest;\n        }\n\n        if (!request) {\n          this.showToast('Error', 'Request not found', 'error');\n          return;\n        }\n\n        let filename = '';\n        let documentType = '';\n\n        switch (imageType) {\n          case 'beneficiary':\n            // Handle both list view (beneficiary_verification_image) and detail view (beneficiary.verification_image_path)\n            filename = request.beneficiary_verification_image || request.beneficiary?.verification_image_path;\n            documentType = 'beneficiary';\n            // For beneficiary documents, we need the beneficiary ID, not the request ID\n            if (request.beneficiary?.id) {\n              requestId = request.beneficiary.id;\n            }\n            break;\n          case 'pickup-id':\n            filename = request.pickup_id_image || request.authorized_pickup?.id_image_path;\n            documentType = 'pickup-id';\n            break;\n          case 'pickup-auth':\n            filename = request.pickup_authorization_letter || request.authorized_pickup?.authorization_letter_path;\n            documentType = 'pickup-auth';\n            break;\n          default:\n            this.showToast('Error', 'Invalid image type', 'error');\n            return;\n        }\n\n        if (!filename) {\n          this.showToast('Error', 'No image available', 'error');\n          return;\n        }\n\n        // Extract just the filename from the path (handle both forward and back slashes)\n        const filenameOnly = filename.split(/[/\\\\]/).pop();\n\n        // Construct the URL for the verification document service\n        const imageUrl = `/verification-documents/serve/${documentType}/${requestId}/${filenameOnly}`;\n\n        // Fetch the image with authentication headers and display in modal\n        await this.displayImageInModal(imageUrl, `${documentType} verification image`);\n\n      } catch (error) {\n        console.error('Error viewing verification image:', error);\n        this.showToast('Error', 'Failed to view image', 'error');\n      }\n    },\n\n    // Display image in modal with authentication\n    async displayImageInModal(imageUrl, title) {\n      try {\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // Fetch the image with authentication headers\n        const response = await api.get(imageUrl, {\n          responseType: 'blob'\n        });\n\n        // Create object URL from blob\n        const imageObjectUrl = URL.createObjectURL(response.data);\n\n        // Create and show modal\n        const modalHtml = `\n          <div class=\"modal fade\" id=\"imageViewModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">${title}</h5>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body text-center\">\n                  <img src=\"${imageObjectUrl}\" class=\"img-fluid\" alt=\"${title}\" style=\"max-height: 70vh;\">\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;\n\n        // Remove existing modal if any\n        const existingModal = document.getElementById('imageViewModal');\n        if (existingModal) {\n          existingModal.remove();\n        }\n\n        // Add modal to DOM\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Show modal\n        const modal = new Modal(document.getElementById('imageViewModal'));\n        modal.show();\n\n        // Clean up object URL when modal is hidden\n        document.getElementById('imageViewModal').addEventListener('hidden.bs.modal', () => {\n          URL.revokeObjectURL(imageObjectUrl);\n          document.getElementById('imageViewModal').remove();\n        });\n\n      } catch (error) {\n        console.error('Error displaying image:', error);\n        this.showToast('Error', 'Failed to load image', 'error');\n      }\n    },\n\n    // View pickup documents in modal\n    async viewPickupDocuments(request) {\n      try {\n        // Set the selected request and show the modal\n        this.selectedRequestForPickup = request;\n\n        // Show modal\n        const modal = new Modal(document.getElementById('authorizedPickupDocumentsModal'));\n        modal.show();\n      } catch (error) {\n        console.error('Error opening pickup documents modal:', error);\n        this.showToast('Error', 'Failed to open documents modal', 'error');\n      }\n    },\n\n    // Verify pickup authorization\n    async verifyPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization verification\n        // const response = await adminDocumentService.verifyPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization verified successfully', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error verifying pickup authorization:', error);\n        this.showToast('Error', 'Failed to verify pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n\n    // Reject pickup authorization\n    async rejectPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization rejection\n        // const response = await adminDocumentService.rejectPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization rejected', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error rejecting pickup authorization:', error);\n        this.showToast('Error', 'Failed to reject pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n\n    // Update beneficiary verification status\n    async updateBeneficiaryVerificationStatus(beneficiaryId, status, notes = '') {\n      try {\n        const response = await this.$http.put(\n          `/api/verification-documents/beneficiary/${beneficiaryId}/verification-status`,\n          { status, notes }\n        );\n\n        if (response.data.success) {\n          this.showToast('Success', 'Verification status updated successfully', 'success');\n          // Refresh the requests to show updated status\n          await this.loadRequests();\n        } else {\n          throw new Error(response.data.message || 'Failed to update verification status');\n        }\n\n      } catch (error) {\n        console.error('Error updating verification status:', error);\n        this.showToast('Error', error.response?.data?.message || 'Failed to update verification status', 'error');\n      }\n    },\n\n    // Open verification modal\n    openVerificationModal(request) {\n      this.currentVerification = {\n        requestId: request.id,\n        beneficiaryId: request.beneficiary_id,\n        beneficiary_name: request.beneficiary_name,\n        relationship: request.beneficiary_relationship,\n        image_url: request.beneficiary_verification_image ?\n          `/verification-documents/serve/beneficiary/${request.id}/${request.beneficiary_verification_image.split('/').pop()}` :\n          null,\n        current_status: request.beneficiary_verification_status\n      };\n\n      this.verificationForm = {\n        status: request.beneficiary_verification_status || 'pending',\n        notes: ''\n      };\n\n      // Show the modal\n      const modal = new Modal(document.getElementById('verificationModal'));\n      modal.show();\n    },\n\n    // Save verification status from modal\n    async saveVerificationStatus() {\n      if (!this.currentVerification) return;\n\n      try {\n        await this.updateBeneficiaryVerificationStatus(\n          this.currentVerification.beneficiaryId,\n          this.verificationForm.status,\n          this.verificationForm.notes\n        );\n\n        // Close the modal\n        const modal = Modal.getInstance(document.getElementById('verificationModal'));\n        modal.hide();\n\n        // Reset form\n        this.currentVerification = null;\n        this.verificationForm = {\n          status: 'pending',\n          notes: ''\n        };\n\n      } catch (error) {\n        // Error handling is done in updateBeneficiaryVerificationStatus\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import './css/requestHistory.css';\n\n/* Convenience Fee Display Styling */\n.fee-breakdown {\n  font-size: 0.85rem;\n  line-height: 1.3;\n}\n\n.fee-breakdown .base-fee,\n.fee-breakdown .convenience-fee,\n.fee-breakdown .total-fee {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2px;\n}\n\n.fee-breakdown .convenience-fee {\n  background-color: #fff3cd;\n  padding: 2px 4px;\n  border-radius: 3px;\n  border-left: 3px solid #ffc107;\n}\n\n.fee-breakdown .total-fee {\n  margin-top: 4px;\n  padding-top: 4px;\n  font-weight: bold;\n}\n\n.amount-breakdown {\n  text-align: center;\n}\n\n.amount-breakdown .amount-compact {\n  font-weight: bold;\n  color: #198754;\n}\n\n.amount-breakdown small {\n  font-size: 0.7rem;\n  line-height: 1.2;\n}\n\n/* Tooltip styling for convenience fee info */\n.fas.fa-info-circle {\n  cursor: help;\n  opacity: 0.7;\n}\n\n.fas.fa-info-circle:hover {\n  opacity: 1;\n}\n\n/* Cancelled Documents Styling */\n.cancelled-request {\n  opacity: 0.75;\n  position: relative;\n}\n\n.cancelled-request::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: repeating-linear-gradient(\n    45deg,\n    transparent,\n    transparent 10px,\n    rgba(220, 53, 69, 0.1) 10px,\n    rgba(220, 53, 69, 0.1) 20px\n  );\n  pointer-events: none;\n  border-radius: 8px;\n  z-index: 1;\n}\n\n.cancelled-request .request-card {\n  border: 2px solid #dc3545;\n  background-color: #f8f9fa;\n}\n\n.cancelled-request .request-card-header {\n  background-color: #f5c6cb;\n  border-bottom: 1px solid #dc3545;\n}\n\n.cancelled-request .client-info h6,\n.cancelled-request .document-type span {\n  text-decoration: line-through;\n  color: #6c757d !important;\n}\n\n.cancelled-request .meta-item span {\n  color: #6c757d !important;\n}\n\n/* Cancelled indicator styling */\n.cancelled-indicator .badge {\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n/* Compact table cancelled styling */\n.compact-row.cancelled-request {\n  background-color: #f8f9fa;\n  border-left: 4px solid #dc3545;\n  opacity: 0.8;\n}\n\n.compact-row.cancelled-request .request-id-content,\n.compact-row.cancelled-request .client-name,\n.compact-row.cancelled-request .document-type {\n  text-decoration: line-through;\n  color: #6c757d !important;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}