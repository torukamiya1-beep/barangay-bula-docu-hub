{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport documentRequestService from '@/services/documentRequestService';\nimport clientAuthService from '@/services/clientAuthService';\nimport paymentService from '@/services/paymentService';\nimport addressService from '@/services/addressService';\nimport FileUpload from '@/components/common/FileUpload.vue';\nexport default {\n  name: 'BarangayClearanceRequest',\n  components: {\n    FileUpload\n  },\n  data() {\n    return {\n      currentStep: 1,\n      submitting: false,\n      purposeCategories: [],\n      paymentMethods: [],\n      // Grouped payment methods for display\n      originalPaymentMethods: [],\n      // Original payment methods from backend\n      baseFee: 150.00,\n      totalFee: 150.00,\n      familyRelationshipError: null,\n      formData: {\n        document_type_id: 2,\n        // Barangay Clearance\n        purpose_category_id: '',\n        purpose_details: '',\n        is_third_party_request: false,\n        beneficiary: {\n          first_name: '',\n          middle_name: '',\n          last_name: '',\n          suffix: '',\n          birth_date: '',\n          gender: '',\n          civil_status_id: '',\n          nationality: 'Filipino',\n          phone_number: '',\n          email: '',\n          house_number: '',\n          street: '',\n          subdivision: '',\n          barangay: 'Bula',\n          city_municipality: 'General Santos City (Dadiangas)',\n          province: 'South Cotabato',\n          postal_code: '',\n          years_of_residency: null,\n          months_of_residency: null,\n          relationship_to_requestor: '',\n          region_code: '12',\n          province_code: '1263',\n          city_code: '126303',\n          barangay_code: '126303005'\n        },\n        authorized_pickup: {\n          first_name: '',\n          middle_name: '',\n          last_name: '',\n          suffix: '',\n          phone_number: '',\n          email: '',\n          relationship_to_beneficiary: ''\n        },\n        has_pending_cases: false,\n        pending_cases_details: '',\n        voter_registration_status: null,\n        payment_method_id: '',\n        agree_to_terms: false\n      },\n      uploadedFiles: {\n        government_id: null,\n        proof_of_residency: null,\n        cedula: null,\n        beneficiary_verification: null,\n        pickup_id_image: null,\n        pickup_authorization: null\n      },\n      uploadErrors: {},\n      maxFileSize: 5 * 1024 * 1024,\n      // 5MB\n      allowedFileTypes: ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'],\n      pickupOption: 'self',\n      // 'self' or 'authorized'\n      civilStatuses: [],\n      clientData: null,\n      // Fresh profile data\n\n      // Address dropdown data\n      regions: [],\n      provinces: [],\n      cities: [],\n      barangays: [],\n      filteredProvinces: [],\n      filteredCities: [],\n      filteredBarangays: [],\n      // Validation control\n      isValidating: false\n    };\n  },\n  computed: {\n    // Keep the old method as fallback\n    cachedClientData() {\n      return clientAuthService.getCurrentUser();\n    },\n    shouldShowPurposeDetails() {\n      // Show purpose details only when \"Other\" category (id=10) is selected\n      return this.formData.purpose_category_id === 10;\n    },\n    familyVerificationPlaceholder() {\n      // Dynamic placeholder based on relationship selection\n      if (this.formData.beneficiary.relationship_to_requestor === 'spouse') {\n        return 'Click to upload spouse verification image';\n      }\n      return 'Click to upload family Member Verification Image';\n    },\n    familyVerificationText() {\n      // Dynamic verification text based on relationship selection\n      if (this.formData.beneficiary.relationship_to_requestor === 'spouse') {\n        return 'To verify that this person is indeed your spouse, please upload a clear photo of Marriage Application.';\n      }\n      return 'To verify that this person is indeed your family member, please upload a clear photo of their valid ID (Driver\\'s License, National ID, Passport, etc.).';\n    }\n  },\n  async mounted() {\n    await this.loadFormData();\n  },\n  methods: {\n    async loadFormData() {\n      try {\n        // Load fresh profile data first\n        console.log('Loading fresh profile data...');\n        const profileResponse = await clientAuthService.getProfile();\n        if (profileResponse.success) {\n          this.clientData = profileResponse.data;\n          console.log('Fresh profile data loaded:', this.clientData);\n        } else {\n          // Fallback to cached data\n          this.clientData = this.cachedClientData;\n          console.log('Using cached profile data:', this.clientData);\n        }\n        const [purposeResponse, paymentResponse] = await Promise.all([documentRequestService.getPurposeCategories(), documentRequestService.getPaymentMethods(), this.loadCivilStatuses(), this.loadAddressData()]);\n        this.purposeCategories = purposeResponse.data || [];\n        this.originalPaymentMethods = paymentResponse.data || [];\n        this.paymentMethods = paymentService.groupPaymentMethods(this.originalPaymentMethods);\n      } catch (error) {\n        console.error('Error loading form data:', error);\n        // Fallback to cached data on error\n        this.clientData = this.cachedClientData;\n        this.showToast('Error', 'Failed to load some form data', 'error');\n      }\n    },\n    getFullName() {\n      // Try fresh data first, then fallback to cached data structure\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'N/A';\n      return `${profile.first_name || ''} ${profile.middle_name || ''} ${profile.last_name || ''}`.trim();\n    },\n    getFullAddress() {\n      // Try fresh data first, then fallback to cached data structure\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'Not provided';\n      const parts = [profile.house_number, profile.street, profile.subdivision, profile.barangay, profile.city_municipality || profile.city, profile.province].filter(Boolean);\n      return parts.length > 0 ? parts.join(', ') : 'Not provided';\n    },\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || 'Not provided';\n    },\n    getResidencyDisplay() {\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'Not provided';\n      const years = profile.years_of_residency;\n      const months = profile.months_of_residency;\n      if (!years && !months) return 'Not provided';\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n      return parts.join(' and ');\n    },\n    formatDate(dateString) {\n      if (!dateString) return 'Not provided';\n      return new Date(dateString).toLocaleDateString();\n    },\n    formatCurrency(amount) {\n      return parseFloat(amount).toFixed(2);\n    },\n    canProceedToNextStep() {\n      switch (this.currentStep) {\n        case 1:\n          {\n            // Step 1: Required documents must be uploaded AND third-party validation\n            const documentsUploaded = this.uploadedFiles.government_id && this.uploadedFiles.proof_of_residency;\n            if (!documentsUploaded) return false;\n\n            // Additional validation for third-party requests\n            if (this.formData.is_third_party_request) {\n              return this.validateBeneficiaryData();\n            }\n            return true;\n          }\n        case 2:\n          {\n            let validation = this.formData.purpose_category_id && this.formData.has_pending_cases !== null && this.formData.voter_registration_status !== null;\n\n            // Only require purpose details if the field is shown (Other category, id=10)\n            if (this.shouldShowPurposeDetails) {\n              validation = validation && this.formData.purpose_details;\n            }\n            return validation;\n          }\n        case 3:\n          {\n            const paymentValid = this.formData.payment_method_id;\n            if (!paymentValid) return false;\n\n            // Additional validation for authorized pickup\n            if (this.pickupOption === 'authorized') {\n              return this.validateAuthorizedPickup();\n            }\n            return true;\n          }\n        default:\n          return true;\n      }\n    },\n    nextStep() {\n      if (this.canProceedToNextStep() && this.currentStep < 4) {\n        this.currentStep++;\n      }\n    },\n    previousStep() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      }\n    },\n    onPurposeChange() {\n      // Clear purpose details if not \"Other\" category (id=10)\n      if (!this.shouldShowPurposeDetails) {\n        this.formData.purpose_details = '';\n      }\n      // Could implement dynamic fee calculation based on purpose\n    },\n    sanitizeRequestData(data) {\n      // Convert undefined values to null to prevent MySQL binding errors\n      const sanitized = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (value === undefined) {\n          sanitized[key] = null;\n        } else if (value === '') {\n          sanitized[key] = null;\n        } else if (typeof value === 'object' && value !== null) {\n          // Recursively sanitize nested objects\n          sanitized[key] = this.sanitizeRequestData(value);\n        } else {\n          sanitized[key] = value;\n        }\n      }\n      return sanitized;\n    },\n    redirectToCedula() {\n      // Redirect to Cedula application page\n      this.$router.push('/client/cedula-request');\n    },\n    selectPaymentMethod(methodId) {\n      this.formData.payment_method_id = methodId;\n    },\n    getActualPaymentMethodId() {\n      return paymentService.getActualPaymentMethodId(this.formData.payment_method_id, this.originalPaymentMethods);\n    },\n    getPaymentIcon(methodCode) {\n      const icons = {\n        'CASH': 'fas fa-money-bill',\n        'ONLINE_PAYMENT_GROUP': 'fas fa-credit-card',\n        'PAYMONGO_CARD': 'fas fa-credit-card',\n        'PAYMONGO_GCASH': 'fab fa-google-pay',\n        'PAYMONGO_GRABPAY': 'fas fa-mobile-alt',\n        'PAYMONGO_PAYMAYA': 'fas fa-wallet',\n        'PAYMONGO_BANK': 'fas fa-university'\n      };\n      return icons[methodCode] || 'fas fa-credit-card';\n    },\n    getPurposeCategoryName() {\n      const category = this.purposeCategories.find(c => c.id === this.formData.purpose_category_id);\n      return category?.category_name || '';\n    },\n    getPaymentMethodName() {\n      const method = this.paymentMethods.find(m => m.id === this.formData.payment_method_id);\n      return method?.method_name || '';\n    },\n    getPaymentMethodDisplayName(methodCode) {\n      return paymentService.getPaymentMethodDisplayName(methodCode);\n    },\n    // Handle phone number input to restrict to digits only\n    handlePhoneInput(event, section) {\n      const value = event.target.value;\n      // Remove any non-digit characters\n      const digitsOnly = value.replace(/\\D/g, '');\n      // Limit to 11 digits\n      const limitedValue = digitsOnly.substring(0, 11);\n      if (section === 'beneficiary') {\n        this.formData.beneficiary.phone_number = limitedValue;\n      } else if (section === 'authorized_pickup') {\n        this.formData.authorized_pickup.phone_number = limitedValue;\n      }\n    },\n    async handleSubmit() {\n      if (!this.formData.agree_to_terms) return;\n\n      // Debug pickup option and form data\n      console.log('🔍 DEBUG: pickupOption =', this.pickupOption);\n      console.log('🔍 DEBUG: authorized_pickup data =', JSON.stringify(this.formData.authorized_pickup, null, 2));\n      console.log('🔍 DEBUG: uploadedFiles =', this.uploadedFiles);\n\n      // Final validation with error messages for authorized pickup\n      if (this.pickupOption === 'authorized') {\n        console.log('🔍 Running final validation for authorized pickup...');\n        if (!this.validateAuthorizedPickup(true)) {\n          console.log('❌ Validation failed, stopping submission');\n          this.submitting = false;\n          return;\n        }\n        console.log('✅ Validation passed, continuing with submission');\n      }\n      try {\n        this.submitting = true;\n\n        // Prepare request data with proper validation and sanitization\n        const requestData = this.sanitizeRequestData({\n          document_type_id: parseInt(this.formData.document_type_id) || 2,\n          purpose_category_id: parseInt(this.formData.purpose_category_id) || 1,\n          purpose_details: this.shouldShowPurposeDetails && this.formData.purpose_details && this.formData.purpose_details.length >= 10 ? this.formData.purpose_details : null,\n          payment_method_id: this.getActualPaymentMethodId(),\n          delivery_method: 'pickup',\n          priority: 'normal',\n          // Third-party request data\n          is_third_party_request: this.formData.is_third_party_request || false,\n          requestor_notes: null,\n          beneficiary: this.formData.is_third_party_request ? this.formData.beneficiary : null,\n          authorized_pickup: this.pickupOption === 'authorized' ? this.formData.authorized_pickup : null,\n          // Barangay Clearance specific fields (legally required)\n          has_pending_cases: Boolean(this.formData.has_pending_cases),\n          pending_cases_details: this.formData.pending_cases_details || null,\n          voter_registration_status: this.formData.voter_registration_status !== null ? Boolean(this.formData.voter_registration_status) : null,\n          total_fee: this.totalFee || 150.00,\n          // CRITICAL: Send exact total_document_fee for PayMongo accuracy\n          total_document_fee: 150.00\n        });\n        console.log('Submitting request data:', requestData);\n        const response = await documentRequestService.submitRequest(requestData);\n        const requestId = response.data.id;\n        console.log('Request created with ID:', requestId);\n\n        // Upload documents if any are selected\n        const hasDocuments = this.uploadedFiles.government_id || this.uploadedFiles.proof_of_residency || this.uploadedFiles.cedula;\n        if (hasDocuments) {\n          console.log('Uploading documents...');\n          await this.uploadDocumentsToRequest(requestId);\n        }\n\n        // Upload beneficiary verification if this is a third-party request\n        if (this.formData.is_third_party_request && this.uploadedFiles.beneficiary_verification) {\n          console.log('📤 Uploading beneficiary verification...');\n          await this.uploadBeneficiaryVerification(requestId);\n        }\n\n        // Upload pickup files if this is an authorized pickup request\n        if (this.pickupOption === 'authorized') {\n          console.log('📤 Uploading pickup authorization files...');\n          await this.uploadPickupFiles(requestId);\n        }\n        this.showToast('Success', 'Request submitted successfully!', 'success');\n        this.$router.push({\n          name: 'RequestDetails',\n          params: {\n            id: requestId\n          }\n        });\n      } catch (error) {\n        console.error('Error submitting request:', error);\n        console.error('Error details:', {\n          status: error.response?.status,\n          data: error.response?.data,\n          message: error.message\n        });\n        let errorMessage = 'Failed to submit request';\n        if (error.response?.data?.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response?.data?.errors) {\n          errorMessage = error.response.data.errors.map(e => e.msg).join(', ');\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n        this.showToast('Error', errorMessage, 'error');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async uploadDocumentsToRequest(requestId) {\n      try {\n        const filesToUpload = [];\n\n        // Collect ONLY the main Barangay Clearance documents (exclude verification and pickup files)\n        const mainDocumentTypes = ['government_id', 'proof_of_residency', 'cedula'];\n        Object.entries(this.uploadedFiles).forEach(([type, file]) => {\n          if (file && mainDocumentTypes.includes(type)) {\n            filesToUpload.push({\n              type,\n              file\n            });\n          }\n        });\n        if (filesToUpload.length === 0) {\n          console.log('No main documents to upload');\n          return;\n        }\n        console.log('📤 Uploading main documents:', filesToUpload.map(f => f.type));\n\n        // Upload documents using the service\n        const uploadResponse = await documentRequestService.uploadDocuments(requestId, filesToUpload);\n        if (uploadResponse.success) {\n          console.log('Documents uploaded successfully:', uploadResponse.data);\n          this.showToast('Success', `${uploadResponse.data.total_uploaded} document(s) uploaded successfully`, 'success');\n        } else {\n          console.error('Document upload failed:', uploadResponse);\n          this.showToast('Warning', 'Request submitted but some documents failed to upload', 'warning');\n        }\n      } catch (error) {\n        console.error('Document upload error:', error);\n        this.showToast('Warning', 'Request submitted but document upload failed. You can upload documents later.', 'warning');\n      }\n    },\n    async uploadPickupFiles(requestId) {\n      try {\n        console.log('🔍 Starting file upload for request:', requestId);\n\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // First, get the authorized pickup person ID from the backend\n        const pickupResponse = await api.get(`/client/document-requests/${requestId}/authorization-status`);\n        const pickupPersonId = pickupResponse.data.data?.pickup_person?.id;\n        if (!pickupPersonId) {\n          console.error('❌ No pickup person ID found');\n          console.error('❌ Response data:', pickupResponse.data);\n          return;\n        }\n        console.log('✅ Found pickup person ID:', pickupPersonId);\n\n        // Upload ID image if available\n        if (this.uploadedFiles.pickup_id_image) {\n          console.log('📤 Uploading pickup ID image...');\n          const idFormData = new FormData();\n          idFormData.append('id_image', this.uploadedFiles.pickup_id_image);\n          const idResponse = await api.post(`/verification-documents/pickup-person/${pickupPersonId}/id-image`, idFormData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('✅ ID image uploaded successfully:', idResponse.data);\n        }\n\n        // Upload authorization document if available\n        if (this.uploadedFiles.pickup_authorization) {\n          console.log('📤 Uploading authorization document...');\n          const authFormData = new FormData();\n          authFormData.append('authorization_document', this.uploadedFiles.pickup_authorization);\n          const authResponse = await api.post(`/verification-documents/pickup-person/${pickupPersonId}/authorization-document`, authFormData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('✅ Authorization document uploaded successfully:', authResponse.data);\n        }\n        console.log('🎉 All pickup files uploaded successfully');\n      } catch (error) {\n        console.error('❌ Error uploading pickup files:', error);\n        console.error('❌ Error response:', error.response?.data);\n        // Don't throw the error - the request was already created successfully\n        this.showToast('Warning', 'Request created but some files failed to upload. You can upload them later.', 'warning');\n      }\n    },\n    async uploadBeneficiaryVerification(requestId) {\n      try {\n        console.log('🔍 Starting beneficiary verification upload for request:', requestId);\n\n        // First, get the beneficiary ID from the request\n        const api = (await import('@/services/api.js')).default;\n        const requestResponse = await api.get(`/client/document-requests/${requestId}`);\n        if (!requestResponse.data.success || !requestResponse.data.data.beneficiary) {\n          throw new Error('Beneficiary information not found');\n        }\n        const beneficiaryId = requestResponse.data.data.beneficiary.id;\n        console.log('📋 Found beneficiary ID:', beneficiaryId);\n\n        // Upload the verification image\n        const formData = new FormData();\n        formData.append('verification_image', this.uploadedFiles.beneficiary_verification);\n        const uploadResponse = await api.post(`/verification-documents/beneficiary/${beneficiaryId}/verification-image`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (uploadResponse.data.success) {\n          console.log('✅ Beneficiary verification uploaded successfully');\n          this.showToast('Success', 'Family member verification uploaded successfully', 'success');\n        } else {\n          throw new Error(uploadResponse.data.message || 'Upload failed');\n        }\n      } catch (error) {\n        console.error('❌ Error uploading beneficiary verification:', error);\n        console.error('❌ Error response:', error.response?.data);\n        // Don't throw the error - the request was already created successfully\n        this.showToast('Warning', 'Request created but verification image failed to upload. You can upload it later.', 'warning');\n      }\n    },\n    goBack() {\n      this.$router.push({\n        name: 'NewDocumentRequest'\n      });\n    },\n    updateProfile() {\n      // TODO: Navigate to profile update page\n      console.log('Update profile');\n    },\n    // File handling methods\n    triggerFileInput(fileType) {\n      // Convert snake_case to camelCase for ref names\n      const refNameMap = {\n        'government_id': 'governmentIdInput',\n        'proof_of_residency': 'proofOfResidencyInput',\n        'cedula': 'cedulaInput'\n      };\n      const inputRef = refNameMap[fileType];\n      if (!inputRef) {\n        console.error(`Unknown file type: ${fileType}`);\n        return;\n      }\n\n      // Add safety check for ref existence\n      if (this.$refs[inputRef]) {\n        this.$refs[inputRef].click();\n      } else {\n        console.warn(`File input ref '${inputRef}' not found`);\n        // Try again after next tick\n        this.$nextTick(() => {\n          if (this.$refs[inputRef]) {\n            this.$refs[inputRef].click();\n          } else {\n            console.error(`File input ref '${inputRef}' still not found after nextTick`);\n          }\n        });\n      }\n    },\n    handleFileSelect(event, fileType) {\n      const file = event.target.files[0];\n      if (file) {\n        this.validateAndSetFile(file, fileType);\n      }\n    },\n    handleFileDrop(event, fileType) {\n      const file = event.dataTransfer.files[0];\n      if (file) {\n        this.validateAndSetFile(file, fileType);\n      }\n    },\n    validateAndSetFile(file, fileType) {\n      // Clear previous errors (Vue 3 compatible)\n      delete this.uploadErrors[fileType];\n\n      // Validate file size\n      if (file.size > this.maxFileSize) {\n        this.uploadErrors[fileType] = 'File size must be less than 5MB';\n        this.showToast('Error', 'File size must be less than 5MB', 'error');\n        return;\n      }\n\n      // Validate file type\n      if (!this.allowedFileTypes.includes(file.type)) {\n        this.uploadErrors[fileType] = 'Only JPG, PNG, and PDF files are allowed';\n        this.showToast('Error', 'Only JPG, PNG, and PDF files are allowed', 'error');\n        return;\n      }\n\n      // Set the file (Vue 3 compatible)\n      this.uploadedFiles[fileType] = file;\n      this.showToast('Success', `${file.name} uploaded successfully`, 'success');\n    },\n    removeFile(fileType) {\n      // Vue 3 compatible reactive updates\n      this.uploadedFiles[fileType] = null;\n      delete this.uploadErrors[fileType];\n\n      // Convert snake_case to camelCase for ref names\n      const refNameMap = {\n        'government_id': 'governmentIdInput',\n        'proof_of_residency': 'proofOfResidencyInput',\n        'cedula': 'cedulaInput'\n      };\n      const inputRef = refNameMap[fileType];\n\n      // Clear the input with safety check\n      if (inputRef && this.$refs[inputRef]) {\n        this.$refs[inputRef].value = '';\n      } else {\n        console.warn(`File input ref '${inputRef}' not found during removal`);\n      }\n    },\n    showTerms() {\n      // TODO: Show terms and conditions modal\n      console.log('Show terms');\n    },\n    showToast(title, message, type = 'info') {\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${title}: ${message}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${title}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${message}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n            font-weight: 600;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n            padding: 0;\n            margin-left: 8px;\n          }\n          .toast-success {\n            border-left: 4px solid #28a745;\n          }\n          .toast-error {\n            border-left: 4px solid #dc3545;\n          }\n          .toast-warning {\n            border-left: 4px solid #ffc107;\n          }\n          .toast-info {\n            border-left: 4px solid #17a2b8;\n          }\n          @keyframes slideIn {\n            from {\n              transform: translateX(100%);\n              opacity: 0;\n            }\n            to {\n              transform: translateX(0);\n              opacity: 1;\n            }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.remove();\n        }\n      }, 5000);\n    },\n    // New methods for third-party requests\n    handleRequestTypeChange() {\n      if (!this.formData.is_third_party_request) {\n        // Reset beneficiary data when switching back to self\n        this.resetBeneficiaryData();\n        this.familyRelationshipError = null;\n      }\n    },\n    handleGenderChange() {\n      // Clear suffix when male is not selected since suffix field will be hidden\n      if (this.formData.beneficiary.gender !== 'male') {\n        this.formData.beneficiary.suffix = '';\n      }\n    },\n    validateFamilyRelationship() {\n      this.familyRelationshipError = null;\n      if (!this.formData.is_third_party_request) {\n        return true;\n      }\n      const relationship = this.formData.beneficiary.relationship_to_requestor;\n      if (!relationship) {\n        return true; // Will be caught by required validation\n      }\n\n      // Define allowed immediate family relationships\n      const allowedRelationships = ['spouse', 'husband', 'wife', 'child', 'son', 'daughter', 'parent', 'father', 'mother', 'sibling', 'brother', 'sister'];\n      if (!allowedRelationships.includes(relationship.toLowerCase())) {\n        this.familyRelationshipError = 'You can only request documents on behalf of immediate family members (spouse, children, parents, siblings).';\n        return false;\n      }\n      return true;\n    },\n    handlePickupOptionChange() {\n      if (this.pickupOption !== 'authorized') {\n        // Reset authorized pickup data\n        this.resetAuthorizedPickupData();\n      }\n    },\n    resetBeneficiaryData() {\n      this.formData.beneficiary = {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        birth_date: '',\n        gender: '',\n        civil_status_id: '',\n        nationality: 'Filipino',\n        phone_number: '',\n        email: '',\n        house_number: '',\n        street: '',\n        subdivision: '',\n        barangay: 'Bula',\n        city_municipality: 'General Santos City (Dadiangas)',\n        province: 'South Cotabato',\n        postal_code: '',\n        years_of_residency: null,\n        months_of_residency: null,\n        relationship_to_requestor: '',\n        region: 'Region XII (SOCCSKSARGEN)',\n        region_code: '12',\n        province_code: '1263',\n        city_code: '126303',\n        barangay_code: '126303005'\n      };\n    },\n    resetAuthorizedPickupData() {\n      this.formData.authorized_pickup = {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        phone_number: '',\n        email: '',\n        relationship_to_beneficiary: ''\n      };\n      // Also reset the uploaded files\n      this.uploadedFiles.pickup_id_image = null;\n      this.uploadedFiles.pickup_authorization = null;\n    },\n    async loadCivilStatuses() {\n      try {\n        // For now, use a static list. In production, this would be an API call\n        this.civilStatuses = [{\n          id: 1,\n          status_name: 'Single'\n        }, {\n          id: 2,\n          status_name: 'Married'\n        }, {\n          id: 3,\n          status_name: 'Widowed'\n        }, {\n          id: 4,\n          status_name: 'Divorced'\n        }, {\n          id: 5,\n          status_name: 'Separated'\n        }];\n      } catch (error) {\n        console.error('Error loading civil statuses:', error);\n      }\n    },\n    validateBeneficiaryData() {\n      if (!this.formData.is_third_party_request) return true;\n      const required = ['first_name', 'last_name', 'birth_date', 'gender', 'civil_status_id', 'region_code', 'province_code', 'city_code', 'barangay_code', 'relationship_to_requestor'];\n      for (const field of required) {\n        if (!this.formData.beneficiary[field]) {\n          this.showToast('Error', `Please fill in the beneficiary's ${field.replace('_', ' ')}`, 'error');\n          return false;\n        }\n      }\n\n      // Validate family relationship\n      if (!this.validateFamilyRelationship()) {\n        this.showToast('Error', this.familyRelationshipError, 'error');\n        return false;\n      }\n\n      // Check for required verification image\n      if (!this.uploadedFiles.beneficiary_verification) {\n        this.showToast('Error', 'Please upload the family member\\'s verification ID image', 'error');\n        return false;\n      }\n      return true;\n    },\n    validateAuthorizedPickup(showErrors = false) {\n      console.log('🔍 validateAuthorizedPickup called with showErrors:', showErrors);\n      console.log('🔍 pickupOption:', this.pickupOption);\n      console.log('🔍 authorized_pickup data:', this.formData.authorized_pickup);\n      if (this.pickupOption !== 'authorized') {\n        console.log('✅ Not authorized pickup, validation passed');\n        return true;\n      }\n\n      // Prevent multiple validation calls in quick succession\n      if (this.isValidating) {\n        console.log('⚠️ Validation already in progress, skipping');\n        return false;\n      }\n      if (showErrors) {\n        this.isValidating = true;\n        setTimeout(() => {\n          this.isValidating = false;\n        }, 1000); // Reset after 1 second\n      }\n      const required = ['first_name', 'last_name', 'phone_number', 'relationship_to_beneficiary'];\n      for (const field of required) {\n        const value = this.formData.authorized_pickup[field];\n        console.log(`🔍 Checking field ${field}:`, value);\n        if (!value || value.trim() === '') {\n          if (showErrors) {\n            console.log(`❌ Field ${field} is missing`);\n            this.showToast('Error', `Please fill in the pickup person's ${field.replace('_', ' ')}`, 'error');\n          }\n          return false;\n        }\n      }\n\n      // Check for required file uploads\n      if (!this.uploadedFiles.pickup_id_image) {\n        if (showErrors) {\n          console.log('❌ Missing pickup ID image');\n          this.showToast('Error', 'Please upload the pickup person\\'s valid ID image', 'error');\n        }\n        return false;\n      }\n      if (!this.uploadedFiles.pickup_authorization) {\n        if (showErrors) {\n          console.log('❌ Missing pickup authorization');\n          this.showToast('Error', 'Please upload the authorization letter', 'error');\n        }\n        return false;\n      }\n      console.log('✅ Authorized pickup validation passed');\n      return true;\n    },\n    // Verification file upload handlers\n    handleBeneficiaryVerificationFile(file) {\n      console.log('Beneficiary verification file selected:', file.name);\n      this.uploadedFiles.beneficiary_verification = file;\n    },\n    onBeneficiaryVerificationUpload(uploadResult) {\n      console.log('Beneficiary verification uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Family member verification image uploaded successfully', 'success');\n    },\n    onBeneficiaryVerificationError(error) {\n      console.error('Beneficiary verification upload error:', error);\n      this.showToast('Error', 'Failed to upload verification image: ' + (error.response?.data?.message || error.message), 'error');\n    },\n    onBeneficiaryVerificationRemoved() {\n      console.log('Beneficiary verification file removed');\n      this.uploadedFiles.beneficiary_verification = null;\n    },\n    // Pickup person file upload handlers\n    handlePickupIdFile(file) {\n      console.log('Pickup ID file selected:', file.name);\n      this.uploadedFiles.pickup_id_image = file;\n    },\n    onPickupIdUpload(uploadResult) {\n      console.log('Pickup ID uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Pickup person ID image uploaded successfully', 'success');\n    },\n    onPickupIdError(error) {\n      console.error('Pickup ID upload error:', error);\n      this.showToast('Error', 'Failed to upload ID image: ' + (error.response?.data?.message || error.message), 'error');\n    },\n    onPickupIdRemoved() {\n      console.log('Pickup ID file removed');\n      this.uploadedFiles.pickup_id_image = null;\n    },\n    handlePickupAuthFile(file) {\n      console.log('Pickup authorization file selected:', file.name);\n      this.uploadedFiles.pickup_authorization = file;\n    },\n    onPickupAuthUpload(uploadResult) {\n      console.log('Pickup authorization uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Authorization document uploaded successfully', 'success');\n    },\n    onPickupAuthError(error) {\n      console.error('Pickup authorization upload error:', error);\n      this.showToast('Error', 'Failed to upload authorization document: ' + (error.response?.data?.message || error.message), 'error');\n    },\n    onPickupAuthRemoved() {\n      console.log('Pickup authorization file removed');\n      this.uploadedFiles.pickup_authorization = null;\n    },\n    // Address dropdown methods\n    async loadAddressData() {\n      try {\n        this.regions = await addressService.getRegions();\n      } catch (error) {\n        console.error('Error loading address data:', error);\n        this.showToast('Error', 'Failed to load address data', 'error');\n      }\n    },\n    async onRegionChange() {\n      try {\n        this.filteredProvinces = [];\n        this.filteredCities = [];\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.province_code = '';\n        this.formData.beneficiary.city_code = '';\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.province = '';\n        this.formData.beneficiary.city_municipality = '';\n        this.formData.beneficiary.barangay = '';\n        this.formData.beneficiary.region = '';\n        if (this.formData.beneficiary.region_code) {\n          this.filteredProvinces = await addressService.getProvincesByRegion(this.formData.beneficiary.region_code);\n\n          // Set region name\n          const selectedRegion = this.regions.find(r => r.region_code === this.formData.beneficiary.region_code);\n          if (selectedRegion) {\n            this.formData.beneficiary.region = selectedRegion.region_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading provinces:', error);\n        this.showToast('Error', 'Failed to load provinces', 'error');\n      }\n    },\n    async onProvinceChange() {\n      try {\n        this.filteredCities = [];\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.city_code = '';\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.city_municipality = '';\n        this.formData.beneficiary.barangay = '';\n        if (this.formData.beneficiary.province_code) {\n          this.filteredCities = await addressService.getCitiesByProvince(this.formData.beneficiary.province_code);\n\n          // Set province name\n          const selectedProvince = this.filteredProvinces.find(p => p.province_code === this.formData.beneficiary.province_code);\n          if (selectedProvince) {\n            this.formData.beneficiary.province = selectedProvince.province_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading cities:', error);\n        this.showToast('Error', 'Failed to load cities', 'error');\n      }\n    },\n    async onCityChange() {\n      try {\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.barangay = '';\n        if (this.formData.beneficiary.city_code) {\n          this.filteredBarangays = await addressService.getBarangaysByCity(this.formData.beneficiary.city_code);\n\n          // Set city name\n          const selectedCity = this.filteredCities.find(c => c.city_code === this.formData.beneficiary.city_code);\n          if (selectedCity) {\n            this.formData.beneficiary.city_municipality = selectedCity.city_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading barangays:', error);\n        this.showToast('Error', 'Failed to load barangays', 'error');\n      }\n    },\n    onBarangayChange() {\n      // Set barangay name\n      if (this.formData.beneficiary.barangay_code) {\n        const selectedBarangay = this.filteredBarangays.find(b => b.brgy_code === this.formData.beneficiary.barangay_code);\n        if (selectedBarangay) {\n          this.formData.beneficiary.barangay = selectedBarangay.brgy_name;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["documentRequestService","clientAuthService","paymentService","addressService","FileUpload","name","components","data","currentStep","submitting","purposeCategories","paymentMethods","originalPaymentMethods","baseFee","totalFee","familyRelationshipError","formData","document_type_id","purpose_category_id","purpose_details","is_third_party_request","beneficiary","first_name","middle_name","last_name","suffix","birth_date","gender","civil_status_id","nationality","phone_number","email","house_number","street","subdivision","barangay","city_municipality","province","postal_code","years_of_residency","months_of_residency","relationship_to_requestor","region_code","province_code","city_code","barangay_code","authorized_pickup","relationship_to_beneficiary","has_pending_cases","pending_cases_details","voter_registration_status","payment_method_id","agree_to_terms","uploadedFiles","government_id","proof_of_residency","cedula","beneficiary_verification","pickup_id_image","pickup_authorization","uploadErrors","maxFileSize","allowedFileTypes","pickupOption","civilStatuses","clientData","regions","provinces","cities","barangays","filteredProvinces","filteredCities","filteredBarangays","isValidating","computed","cachedClientData","getCurrentUser","shouldShowPurposeDetails","familyVerificationPlaceholder","familyVerificationText","mounted","loadFormData","methods","console","log","profileResponse","getProfile","success","purposeResponse","paymentResponse","Promise","all","getPurposeCategories","getPaymentMethods","loadCivilStatuses","loadAddressData","groupPaymentMethods","error","showToast","getFullName","profile","trim","getFullAddress","parts","city","filter","Boolean","length","join","getCivilStatusName","statusId","statuses","getResidencyDisplay","years","months","push","formatDate","dateString","Date","toLocaleDateString","formatCurrency","amount","parseFloat","toFixed","canProceedToNextStep","documentsUploaded","validateBeneficiaryData","validation","paymentValid","validateAuthorizedPickup","nextStep","previousStep","onPurposeChange","sanitizeRequestData","sanitized","key","value","Object","entries","undefined","redirectToCedula","$router","selectPaymentMethod","methodId","getActualPaymentMethodId","getPaymentIcon","methodCode","icons","getPurposeCategoryName","category","find","c","id","category_name","getPaymentMethodName","method","m","method_name","getPaymentMethodDisplayName","handlePhoneInput","event","section","target","digitsOnly","replace","limitedValue","substring","handleSubmit","JSON","stringify","requestData","parseInt","delivery_method","priority","requestor_notes","total_fee","total_document_fee","response","submitRequest","requestId","hasDocuments","uploadDocumentsToRequest","uploadBeneficiaryVerification","uploadPickupFiles","params","status","message","errorMessage","errors","map","e","msg","filesToUpload","mainDocumentTypes","forEach","type","file","includes","f","uploadResponse","uploadDocuments","total_uploaded","api","default","pickupResponse","get","pickupPersonId","pickup_person","idFormData","FormData","append","idResponse","post","headers","authFormData","authResponse","requestResponse","Error","beneficiaryId","goBack","updateProfile","triggerFileInput","fileType","refNameMap","inputRef","$refs","click","warn","$nextTick","handleFileSelect","files","validateAndSetFile","handleFileDrop","dataTransfer","size","removeFile","showTerms","title","toUpperCase","toast","document","createElement","className","innerHTML","getElementById","styles","textContent","head","appendChild","body","setTimeout","parentElement","remove","handleRequestTypeChange","resetBeneficiaryData","handleGenderChange","validateFamilyRelationship","relationship","allowedRelationships","toLowerCase","handlePickupOptionChange","resetAuthorizedPickupData","region","status_name","required","field","showErrors","handleBeneficiaryVerificationFile","onBeneficiaryVerificationUpload","uploadResult","onBeneficiaryVerificationError","onBeneficiaryVerificationRemoved","handlePickupIdFile","onPickupIdUpload","onPickupIdError","onPickupIdRemoved","handlePickupAuthFile","onPickupAuthUpload","onPickupAuthError","onPickupAuthRemoved","getRegions","onRegionChange","getProvincesByRegion","selectedRegion","r","region_name","onProvinceChange","getCitiesByProvince","selectedProvince","p","province_name","onCityChange","getBarangaysByCity","selectedCity","city_name","onBarangayChange","selectedBarangay","b","brgy_code","brgy_name"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\client\\BarangayClearanceRequest.vue"],"sourcesContent":["<template>\n  <div class=\"barangay-clearance-request\">\n    <!-- Header -->\n    <div class=\"page-header\">\n      <div class=\"header-content\">\n        <div class=\"header-main\">\n          <h1 class=\"page-title\">\n            <i class=\"fas fa-certificate\"></i>\n            Barangay Clearance Request\n          </h1>\n          <p class=\"page-description\">\n            Apply for your Barangay Clearance certificate online\n          </p>\n        </div>\n        <button class=\"back-btn\" @click=\"goBack\">\n          <i class=\"fas fa-arrow-left\"></i>\n          Back\n        </button>\n      </div>\n    </div>\n\n    <!-- Page Content -->\n    <div class=\"page-content\">\n      <!-- Progress Steps -->\n    <div class=\"progress-steps\">\n      <div class=\"step\" :class=\"{ active: currentStep >= 1, completed: currentStep > 1 }\">\n        <div class=\"step-number\">1</div>\n        <span class=\"step-label\">Upload Documents</span>\n      </div>\n      <div class=\"step\" :class=\"{ active: currentStep >= 2, completed: currentStep > 2 }\">\n        <div class=\"step-number\">2</div>\n        <span class=\"step-label\">Purpose & Details</span>\n      </div>\n      <div class=\"step\" :class=\"{ active: currentStep >= 3, completed: currentStep > 3 }\">\n        <div class=\"step-number\">3</div>\n        <span class=\"step-label\">Payment</span>\n      </div>\n      <div class=\"step\" :class=\"{ active: currentStep >= 4 }\">\n        <div class=\"step-number\">4</div>\n        <span class=\"step-label\">Review & Submit</span>\n      </div>\n    </div>\n\n    <!-- Form Container -->\n    <div class=\"form-container\">\n      <form @submit.prevent=\"handleSubmit\">\n        \n        <!-- Step 1: Personal Information -->\n        <div v-if=\"currentStep === 1\" class=\"form-step\">\n          <div class=\"step-header\">\n            <h2>Personal Information</h2>\n            <p>Choose who this document is for</p>\n          </div>\n\n          <!-- Request Type Selection -->\n          <div class=\"form-section\">\n            <h3>Who is this document for?</h3>\n            <div class=\"request-type-options\">\n              <label class=\"radio-option\">\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.is_third_party_request\"\n                  :value=\"false\"\n                  @change=\"handleRequestTypeChange\"\n                >\n                <span class=\"radio-custom\"></span>\n                <div class=\"option-content\">\n                  <strong>For myself</strong>\n                  <p>Request document using my profile information</p>\n                </div>\n              </label>\n\n              <label class=\"radio-option\">\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.is_third_party_request\"\n                  :value=\"true\"\n                  @change=\"handleRequestTypeChange\"\n                >\n                <span class=\"radio-custom\"></span>\n                <div class=\"option-content\">\n                  <strong>For someone else</strong>\n                  <p>Request document on behalf of another person</p>\n                </div>\n              </label>\n            </div>\n          </div>\n\n          <!-- Profile Preview (shown when requesting for self) -->\n          <div v-if=\"!formData.is_third_party_request\" class=\"profile-preview\">\n            <div class=\"profile-card\">\n              <div class=\"profile-info\">\n                <h3>{{ getFullName() }}</h3>\n                <div class=\"info-grid\">\n                  <div class=\"info-item\">\n                    <label>Email:</label>\n                    <span>{{ (clientData?.email || clientData?.profile?.email) || 'Not provided' }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Phone:</label>\n                    <span>{{ (clientData?.phone_number || clientData?.profile?.phone_number) || 'Not provided' }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Address:</label>\n                    <span>{{ getFullAddress() }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Date of Birth:</label>\n                    <span>{{ formatDate(clientData?.birth_date || clientData?.profile?.birth_date) }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Gender:</label>\n                    <span>{{ (clientData?.gender || clientData?.profile?.gender) || 'Not provided' }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Civil Status:</label>\n                    <span>{{ getCivilStatusName(clientData?.civil_status_id || clientData?.profile?.civil_status_id) }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Nationality:</label>\n                    <span>{{ (clientData?.nationality || clientData?.profile?.nationality) || 'Not provided' }}</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <label>Years of Residency:</label>\n                    <span>{{ getResidencyDisplay() }}</span>\n                  </div>\n                </div>\n              </div>\n              <!-- ill comment this status because I dont use this -->\n              <!-- <div class=\"profile-actions\">\n                <button type=\"button\" class=\"update-profile-btn\" @click=\"updateProfile\">\n                  <i class=\"fas fa-edit\"></i>\n                  Update Profile\n                </button>\n              </div> -->\n            </div>\n          </div>\n\n          <!-- Beneficiary Information Form (shown when third-party is selected) -->\n          <div v-if=\"formData.is_third_party_request\" class=\"beneficiary-section\">\n            <h3>Person this document is for</h3>\n\n            <div class=\"form-grid\">\n              <div class=\"form-group\">\n                <label>First Name *</label>\n                <input\n                  type=\"text\"\n                  v-model=\"formData.beneficiary.first_name\"\n                  required\n                  class=\"form-control\"\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <label>Middle Name</label>\n                <input\n                  type=\"text\"\n                  v-model=\"formData.beneficiary.middle_name\"\n                  class=\"form-control\"\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <label>Last Name *</label>\n                <input\n                  type=\"text\"\n                  v-model=\"formData.beneficiary.last_name\"\n                  required\n                  class=\"form-control\"\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <label>Date of Birth *</label>\n                <input\n                  type=\"date\"\n                  v-model=\"formData.beneficiary.birth_date\"\n                  required\n                  class=\"form-control\"\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <label>Gender *</label>\n                <select v-model=\"formData.beneficiary.gender\" required class=\"form-control\" @change=\"handleGenderChange\">\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\" v-if=\"formData.beneficiary.gender === 'male'\">\n                <label>Suffix</label>\n                <select v-model=\"formData.beneficiary.suffix\" class=\"form-control\">\n                  <option value=\"\">None</option>\n                  <option value=\"Jr\">Jr</option>\n                  <option value=\"Sr\">Sr</option>\n                  <option value=\"II\">II</option>\n                  <option value=\"III\">III</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label>Civil Status *</label>\n                <select v-model=\"formData.beneficiary.civil_status_id\" required class=\"form-control\">\n                  <option value=\"\">Select Status</option>\n                  <option v-for=\"status in civilStatuses\" :key=\"status.id\" :value=\"status.id\">\n                    {{ status.status_name }}\n                  </option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label>Relationship to You *</label>\n                <select v-model=\"formData.beneficiary.relationship_to_requestor\" required class=\"form-control\" @change=\"validateFamilyRelationship\">\n                  <option value=\"\">Select Relationship</option>\n                  <option value=\"spouse\">Spouse</option>\n                  <option value=\"child\">Child</option>\n                  <option value=\"parent\">Parent</option>\n                  <option value=\"sibling\">Sibling</option>\n                </select>\n                <small class=\"form-text text-muted\">\n                  Note: You can only request documents on behalf of immediate family members (spouse, children, parents, siblings).\n                </small>\n                <div v-if=\"familyRelationshipError\" class=\"alert alert-danger mt-2\">\n                  {{ familyRelationshipError }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Family Member Verification -->\n            <div class=\"verification-section\">\n              <h4>Family Member Verification</h4>\n              <div class=\"alert alert-info\">\n                <i class=\"fas fa-info-circle\"></i>\n                {{ familyVerificationText }}\n              </div>\n\n              <FileUpload\n                label=\"Family Member Verification Image\"\n                :placeholder=\"familyVerificationPlaceholder\"\n                :required=\"true\"\n                accepted-types=\"image/*\"\n                accepted-types-text=\"Accepted: JPEG, PNG, GIF (Max 5MB)\"\n                help-text=\"Upload a clear photo of the family member's valid government-issued ID for verification purposes.\"\n                @file-selected=\"handleBeneficiaryVerificationFile\"\n                @upload-success=\"onBeneficiaryVerificationUpload\"\n                @upload-error=\"onBeneficiaryVerificationError\"\n                @file-removed=\"onBeneficiaryVerificationRemoved\"\n              />\n            </div>\n\n            <!-- Address Information -->\n            <h4>Address Information</h4>\n            <div class=\"form-grid\">\n              <div class=\"form-group\">\n                <label>House Number</label>\n                <input type=\"text\" v-model=\"formData.beneficiary.house_number\" class=\"form-control\">\n              </div>\n\n              <div class=\"form-group\">\n                <label>Street</label>\n                <input type=\"text\" v-model=\"formData.beneficiary.street\" class=\"form-control\">\n              </div>\n\n              <!-- Hidden address fields with default values -->\n              <input type=\"hidden\" v-model=\"formData.beneficiary.region_code\">\n              <input type=\"hidden\" v-model=\"formData.beneficiary.province_code\">\n              <input type=\"hidden\" v-model=\"formData.beneficiary.city_code\">\n              <input type=\"hidden\" v-model=\"formData.beneficiary.barangay_code\">\n\n              <!-- Display current address -->\n              <div class=\"form-group col-span-2\">\n                <div class=\"alert alert-info\">\n                  <h6><i class=\"fas fa-map-marker-alt me-2\"></i>Address Information</h6>\n                  <p class=\"mb-0\">\n                    <strong>Region:</strong> Region XII (SOCCSKSARGEN)<br>\n                    <strong>Province:</strong> South Cotabato<br>\n                    <strong>City/Municipality:</strong> General Santos City (Dadiangas)<br>\n                    <strong>Barangay:</strong> Bula\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Contact Information -->\n            <h4>Contact Information</h4>\n            <div class=\"form-grid\">\n              <div class=\"form-group\">\n                <label>Phone Number</label>\n                <input\n                  type=\"tel\"\n                  v-model=\"formData.beneficiary.phone_number\"\n                  class=\"form-control\"\n                  @input=\"handlePhoneInput($event, 'beneficiary')\"\n                  placeholder=\"09123456789\"\n                  maxlength=\"11\"\n                  pattern=\"[0-9]*\"\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <label>Email Address</label>\n                <input type=\"email\" v-model=\"formData.beneficiary.email\" class=\"form-control\">\n              </div>\n            </div>\n\n\n          </div>\n\n          <!-- Required Documents Upload -->\n          <div class=\"form-section\">\n            <h3><i class=\"fas fa-upload\"></i> Required Documents</h3>\n            <p class=\"section-description\">Please upload the following required documents as per government regulations:</p>\n\n            <!-- Valid Government ID -->\n            <div class=\"document-upload-group\">\n              <label class=\"document-label\">\n                <i class=\"fas fa-id-card\"></i>\n                Valid Government ID *\n                <span class=\"document-info\">(Driver's License, Voter's ID, Passport, etc.)</span>\n              </label>\n              <div class=\"file-upload-area\" @click=\"triggerFileInput('government_id')\" @dragover.prevent @drop.prevent=\"handleFileDrop($event, 'government_id')\">\n                <input\n                  ref=\"governmentIdInput\"\n                  type=\"file\"\n                  accept=\"image/*,.pdf\"\n                  @change=\"handleFileSelect($event, 'government_id')\"\n                  style=\"display: none\"\n                  required\n                />\n                <div v-if=\"!uploadedFiles.government_id\" class=\"upload-placeholder\">\n                  <i class=\"fas fa-cloud-upload-alt\"></i>\n                  <p>Click to upload or drag and drop</p>\n                  <small>JPG, PNG, PDF (Max 5MB)</small>\n                </div>\n                <div v-else class=\"uploaded-file\">\n                  <i class=\"fas fa-file-check\"></i>\n                  <span>{{ uploadedFiles.government_id.name }}</span>\n                  <button type=\"button\" @click.stop=\"removeFile('government_id')\" class=\"remove-file\">\n                    <i class=\"fas fa-times\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Proof of Residency -->\n            <div class=\"document-upload-group\">\n              <label class=\"document-label\">\n                <i class=\"fas fa-home\"></i>\n                Proof of Residency *\n                <span class=\"document-info\">(Utility Bill, Lease Agreement, Barangay Certificate)</span>\n              </label>\n              <div class=\"file-upload-area\" @click=\"triggerFileInput('proof_of_residency')\" @dragover.prevent @drop.prevent=\"handleFileDrop($event, 'proof_of_residency')\">\n                <input\n                  ref=\"proofOfResidencyInput\"\n                  type=\"file\"\n                  accept=\"image/*,.pdf\"\n                  @change=\"handleFileSelect($event, 'proof_of_residency')\"\n                  style=\"display: none\"\n                  required\n                />\n                <div v-if=\"!uploadedFiles.proof_of_residency\" class=\"upload-placeholder\">\n                  <i class=\"fas fa-cloud-upload-alt\"></i>\n                  <p>Click to upload or drag and drop</p>\n                  <small>JPG, PNG, PDF (Max 5MB)</small>\n                </div>\n                <div v-else class=\"uploaded-file\">\n                  <i class=\"fas fa-file-check\"></i>\n                  <span>{{ uploadedFiles.proof_of_residency.name }}</span>\n                  <button type=\"button\" @click.stop=\"removeFile('proof_of_residency')\" class=\"remove-file\">\n                    <i class=\"fas fa-times\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Community Tax Certificate (Optional) -->\n            <div class=\"document-upload-group\">\n              <label class=\"document-label\">\n                <i class=\"fas fa-certificate\"></i>\n                Community Tax Certificate (Cedula)\n                <span class=\"document-info optional\">(Optional - if available)</span>\n              </label>\n              <div class=\"file-upload-area\" @click=\"triggerFileInput('cedula')\" @dragover.prevent @drop.prevent=\"handleFileDrop($event, 'cedula')\">\n                <input\n                  ref=\"cedulaInput\"\n                  type=\"file\"\n                  accept=\"image/*,.pdf\"\n                  @change=\"handleFileSelect($event, 'cedula')\"\n                  style=\"display: none\"\n                />\n                <div v-if=\"!uploadedFiles.cedula\" class=\"upload-placeholder\">\n                  <i class=\"fas fa-cloud-upload-alt\"></i>\n                  <p>Click to upload or drag and drop</p>\n                  <small>JPG, PNG, PDF (Max 5MB)</small>\n                </div>\n                <div v-else class=\"uploaded-file\">\n                  <i class=\"fas fa-file-check\"></i>\n                  <span>{{ uploadedFiles.cedula.name }}</span>\n                  <button type=\"button\" @click.stop=\"removeFile('cedula')\" class=\"remove-file\">\n                    <i class=\"fas fa-times\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Legal Notice -->\n          <div class=\"form-section\">\n            <div class=\"legal-notice\">\n              <h3><i class=\"fas fa-info-circle\"></i> Important Notice</h3>\n              <p>This barangay clearance certifies that you are a resident in good standing with no pending legal cases or disputes within the barangay. Only information required by law is collected.</p>\n              <div class=\"data-privacy-note\">\n                <small><i class=\"fas fa-shield-alt\"></i> Your personal information is protected under the Data Privacy Act of 2012.</small>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Step 2: Purpose and Details -->\n        <div v-if=\"currentStep === 2\" class=\"form-step\">\n          <div class=\"step-header\">\n            <h2>Purpose and Additional Details</h2>\n            <p>Please provide the purpose and any additional information</p>\n          </div>\n\n          <div class=\"form-section\">\n            <div class=\"form-group\">\n              <label for=\"purpose_category\">Purpose Category *</label>\n              <select\n                id=\"purpose_category\"\n                v-model=\"formData.purpose_category_id\"\n                required\n                @change=\"onPurposeChange\"\n              >\n                <option value=\"\">Select purpose</option>\n                <option\n                  v-for=\"category in purposeCategories\"\n                  :key=\"category.id\"\n                  :value=\"category.id\"\n                >\n                  {{ category.category_name }}\n                </option>\n              </select>\n            </div>\n\n            <div v-if=\"shouldShowPurposeDetails\" class=\"form-group\">\n              <label for=\"purpose_details\">Purpose Details *</label>\n              <textarea\n                id=\"purpose_details\"\n                v-model=\"formData.purpose_details\"\n                rows=\"3\"\n                required\n                placeholder=\"Please provide specific details about the purpose of this clearance\"\n              ></textarea>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"pending_cases\">Pending Cases Declaration *</label>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"formData.has_pending_cases\"\n                    :value=\"false\"\n                    required\n                  />\n                  <span class=\"radio-custom\"></span>\n                  No pending cases\n                </label>\n                <label class=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"formData.has_pending_cases\"\n                    :value=\"true\"\n                    required\n                  />\n                  <span class=\"radio-custom\"></span>\n                  Has pending cases\n                </label>\n              </div>\n            </div>\n\n            <div v-if=\"formData.has_pending_cases\" class=\"form-group\">\n              <label for=\"pending_cases_details\">Pending Cases Details *</label>\n              <textarea\n                id=\"pending_cases_details\"\n                v-model=\"formData.pending_cases_details\"\n                rows=\"3\"\n                required\n                placeholder=\"Please provide details about pending cases\"\n              ></textarea>\n            </div>\n\n            <!-- Voter Registration Status -->\n            <div class=\"form-group\">\n              <label for=\"voter_registration_status\">Voter Registration Status *</label>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"formData.voter_registration_status\"\n                    :value=\"true\"\n                    required\n                  />\n                  <span class=\"radio-custom\"></span>\n                  Registered voter\n                </label>\n                <label class=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"formData.voter_registration_status\"\n                    :value=\"false\"\n                    required\n                  />\n                  <span class=\"radio-custom\"></span>\n                  Not registered voter\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Step 3: Payment Method -->\n        <div v-if=\"currentStep === 3\" class=\"form-step\">\n          <div class=\"step-header\">\n            <h2>Payment Information</h2>\n            <p>Choose your preferred payment method</p>\n          </div>\n\n          <!-- Fee Summary -->\n          <div class=\"fee-summary\">\n            <div class=\"fee-card\">\n              <h3>Fee Breakdown</h3>\n              <div class=\"fee-items\">\n                <div class=\"fee-item\">\n                  <span>Barangay Clearance Fee</span>\n                  <span>₱{{ formatCurrency(baseFee) }}</span>\n                </div>\n                <div class=\"fee-item total\">\n                  <span>Total Amount</span>\n                  <span>₱{{ formatCurrency(totalFee) }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Payment Methods -->\n          <div class=\"form-section\">\n            <h3>Select Payment Method</h3>\n            <div class=\"payment-methods\">\n              <div\n                v-for=\"method in paymentMethods\"\n                :key=\"method.id\"\n                class=\"payment-option\"\n                :class=\"{ selected: formData.payment_method_id === method.id }\"\n                @click=\"selectPaymentMethod(method.id)\"\n              >\n                <div class=\"payment-icon\">\n                  <i :class=\"getPaymentIcon(method.method_code)\"></i>\n                </div>\n                <div class=\"payment-info\">\n                  <h4>{{ method.method_name }}</h4>\n                  <p v-if=\"method.description\">{{ method.description }}</p>\n                  <div v-if=\"method.group_type === 'group' && method.grouped_methods\" class=\"grouped-methods-preview\">\n                    <small class=\"text-muted\">\n                      Includes: {{ method.grouped_methods.map(m => getPaymentMethodDisplayName(m.method_code)).join(', ') }}\n                    </small>\n                  </div>\n                </div>\n                <div class=\"payment-radio\">\n                  <input\n                    type=\"radio\"\n                    :value=\"method.id\"\n                    v-model=\"formData.payment_method_id\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Pickup Options -->\n          <div class=\"form-section\">\n            <h3>Document Pickup</h3>\n\n            <div class=\"pickup-options\">\n              <label class=\"radio-option\">\n                <input\n                  type=\"radio\"\n                  v-model=\"pickupOption\"\n                  value=\"self\"\n                  @change=\"handlePickupOptionChange\"\n                >\n                <span class=\"radio-custom\"></span>\n                <div class=\"option-content\">\n                  <strong>I will pick up personally</strong>\n                  <p>{{ formData.is_third_party_request ? 'You (the requestor)' : 'You' }} will collect the document</p>\n                </div>\n              </label>\n\n              <label class=\"radio-option\">\n                <input\n                  type=\"radio\"\n                  v-model=\"pickupOption\"\n                  value=\"authorized\"\n                  @change=\"handlePickupOptionChange\"\n                >\n                <span class=\"radio-custom\"></span>\n                <div class=\"option-content\">\n                  <strong>Someone else will pick up</strong>\n                  <p>Authorize another person to collect the document</p>\n                </div>\n              </label>\n            </div>\n\n            <!-- Authorized Pickup Person Form -->\n            <div v-if=\"pickupOption === 'authorized'\" class=\"authorized-pickup-form\">\n              <h4>Authorized Pickup Person</h4>\n              <div class=\"alert alert-info\">\n                <i class=\"fas fa-info-circle\"></i>\n                You will need to upload an authorization letter and valid ID after submitting this request.\n              </div>\n\n              <div class=\"form-grid\">\n                <div class=\"form-group\">\n                  <label>First Name *</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"formData.authorized_pickup.first_name\"\n                    required\n                    class=\"form-control\"\n                  >\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Middle Name</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"formData.authorized_pickup.middle_name\"\n                    class=\"form-control\"\n                  >\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Last Name *</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"formData.authorized_pickup.last_name\"\n                    required\n                    class=\"form-control\"\n                  >\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Phone Number *</label>\n                  <input\n                    type=\"tel\"\n                    v-model=\"formData.authorized_pickup.phone_number\"\n                    required\n                    class=\"form-control\"\n                    @input=\"handlePhoneInput($event, 'authorized_pickup')\"\n                    placeholder=\"09123456789\"\n                    maxlength=\"11\"\n                    pattern=\"[0-9]*\"\n                  >\n                </div>\n\n                <!-- Valid ID Image Upload -->\n                <div class=\"form-group\">\n                  <FileUpload\n                    label=\"Valid ID Image\"\n                    placeholder=\"Click to upload pickup person's valid ID\"\n                    :required=\"true\"\n                    accepted-types=\"image/*\"\n                    accepted-types-text=\"Accepted: JPEG, PNG, GIF (Max 5MB)\"\n                    help-text=\"Upload a clear photo of the pickup person's valid government-issued ID.\"\n                    @file-selected=\"handlePickupIdFile\"\n                    @upload-success=\"onPickupIdUpload\"\n                    @upload-error=\"onPickupIdError\"\n                    @file-removed=\"onPickupIdRemoved\"\n                  />\n                </div>\n\n                <!-- Authorization Letter Upload -->\n                <div class=\"form-group\">\n                  <FileUpload\n                    label=\"Authorization Letter\"\n                    placeholder=\"Click to upload authorization letter\"\n                    :required=\"true\"\n                    accepted-types=\"image/*,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                    accepted-types-text=\"Accepted: Images, PDF, Word documents (Max 5MB)\"\n                    help-text=\"Upload the authorization letter allowing this person to pick up the document on your behalf.\"\n                    @file-selected=\"handlePickupAuthFile\"\n                    @upload-success=\"onPickupAuthUpload\"\n                    @upload-error=\"onPickupAuthError\"\n                    @file-removed=\"onPickupAuthRemoved\"\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Relationship to {{ formData.is_third_party_request ? 'Beneficiary' : 'You' }} *</label>\n                  <select v-model=\"formData.authorized_pickup.relationship_to_beneficiary\" required class=\"form-control\">\n                    <option value=\"\">Select Relationship</option>\n                    <option value=\"spouse\">Spouse</option>\n                    <option value=\"child\">Child</option>\n                    <option value=\"parent\">Parent</option>\n                    <option value=\"sibling\">Sibling</option>\n                    <option value=\"relative\">Other Relative</option>\n                    <option value=\"friend\">Friend</option>\n                    <option value=\"colleague\">Colleague</option>\n                    <!-- <option value=\"other\">Other</option> -->\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Step 4: Review and Submit -->\n        <div v-if=\"currentStep === 4\" class=\"form-step\">\n          <div class=\"step-header\">\n            <h2>Review Your Request</h2>\n            <p>Please review all information before submitting</p>\n          </div>\n\n          <div class=\"review-sections\">\n            <!-- Personal Information Review -->\n            <div class=\"review-section\">\n              <h3>Personal Information</h3>\n              <div class=\"review-grid\">\n                <div class=\"review-item\">\n                  <label>Full Name:</label>\n                  <span>{{ getFullName() }}</span>\n                </div>\n                <div class=\"review-item\">\n                  <label>Address:</label>\n                  <span>{{ getFullAddress() }}</span>\n                </div>\n                <div class=\"review-item\">\n                  <label>Phone:</label>\n                  <span>{{ (clientData?.phone_number || clientData?.profile?.phone_number) || 'Not provided' }}</span>\n                </div>\n              </div>\n            </div>\n\n\n\n            <!-- Purpose Review -->\n            <div class=\"review-section\">\n              <h3>Purpose & Details</h3>\n              <div class=\"review-grid\">\n                <div class=\"review-item\">\n                  <label>Purpose:</label>\n                  <span>{{ getPurposeCategoryName() }}</span>\n                </div>\n                <div v-if=\"shouldShowPurposeDetails && formData.purpose_details\" class=\"review-item\">\n                  <label>Details:</label>\n                  <span>{{ formData.purpose_details }}</span>\n                </div>\n                <div class=\"review-item\">\n                  <label>Pending Cases:</label>\n                  <span>{{ formData.has_pending_cases ? 'Yes' : 'No' }}</span>\n                </div>\n                <div v-if=\"formData.has_pending_cases && formData.pending_cases_details\" class=\"review-item\">\n                  <label>Case Details:</label>\n                  <span>{{ formData.pending_cases_details }}</span>\n                </div>\n                <div class=\"review-item\">\n                  <label>Voter Registration:</label>\n                  <span>{{ formData.voter_registration_status === true ? 'Registered voter' : formData.voter_registration_status === false ? 'Not registered voter' : 'Not specified' }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Payment Review -->\n            <div class=\"review-section\">\n              <h3>Payment Information</h3>\n              <div class=\"review-grid\">\n                <div class=\"review-item\">\n                  <label>Payment Method:</label>\n                  <span>{{ getPaymentMethodName() }}</span>\n                </div>\n                <div class=\"review-item\">\n                  <label>Total Amount:</label>\n                  <span class=\"amount\">₱{{ formatCurrency(totalFee) }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Terms and Conditions -->\n          <div class=\"terms-section\">\n            <label class=\"checkbox-option\">\n              <input\n                type=\"checkbox\"\n                v-model=\"formData.agree_to_terms\"\n                required\n              />\n              <span class=\"checkbox-custom\"></span>\n              I agree to the <a href=\"#\" @click.prevent=\"showTerms\">terms and conditions</a> and certify that all information provided is true and accurate.\n            </label>\n          </div>\n        </div>\n\n        <!-- Form Actions -->\n        <div class=\"form-actions\">\n          <button\n            v-if=\"currentStep > 1\"\n            type=\"button\"\n            class=\"btn-secondary\"\n            @click=\"previousStep\"\n          >\n            <i class=\"fas fa-chevron-left\"></i>\n            Previous\n          </button>\n          \n          <button\n            v-if=\"currentStep < 4\"\n            type=\"button\"\n            class=\"btn-primary\"\n            @click=\"nextStep\"\n            :disabled=\"!canProceedToNextStep()\"\n          >\n            Next\n            <i class=\"fas fa-chevron-right\"></i>\n          </button>\n          \n          <button\n            v-if=\"currentStep === 4\"\n            type=\"submit\"\n            class=\"btn-submit\"\n            :disabled=\"submitting || !formData.agree_to_terms\"\n          >\n            <template v-if=\"submitting\">\n              <i class=\"fas fa-spinner fa-spin\"></i>\n              Submitting...\n            </template>\n            <template v-else>\n              <i class=\"fas fa-paper-plane\"></i>\n              Submit Request\n            </template>\n          </button>\n        </div>\n      </form>\n    </div>\n    </div> <!-- End page-content -->\n  </div>\n</template>\n\n<script>\nimport documentRequestService from '@/services/documentRequestService';\nimport clientAuthService from '@/services/clientAuthService';\nimport paymentService from '@/services/paymentService';\nimport addressService from '@/services/addressService';\nimport FileUpload from '@/components/common/FileUpload.vue';\n\nexport default {\n  name: 'BarangayClearanceRequest',\n  components: {\n    FileUpload\n  },\n  data() {\n    return {\n      currentStep: 1,\n      submitting: false,\n      purposeCategories: [],\n      paymentMethods: [], // Grouped payment methods for display\n      originalPaymentMethods: [], // Original payment methods from backend\n      baseFee: 150.00,\n      totalFee: 150.00,\n      familyRelationshipError: null,\n      formData: {\n        document_type_id: 2, // Barangay Clearance\n        purpose_category_id: '',\n        purpose_details: '',\n        is_third_party_request: false,\n\n        beneficiary: {\n          first_name: '',\n          middle_name: '',\n          last_name: '',\n          suffix: '',\n          birth_date: '',\n          gender: '',\n          civil_status_id: '',\n          nationality: 'Filipino',\n          phone_number: '',\n          email: '',\n          house_number: '',\n          street: '',\n          subdivision: '',\n          barangay: 'Bula',\n          city_municipality: 'General Santos City (Dadiangas)',\n          province: 'South Cotabato',\n          postal_code: '',\n          years_of_residency: null,\n          months_of_residency: null,\n          relationship_to_requestor: '',\n          region_code: '12',\n          province_code: '1263',\n          city_code: '126303',\n          barangay_code: '126303005'\n        },\n\n        authorized_pickup: {\n          first_name: '',\n          middle_name: '',\n          last_name: '',\n          suffix: '',\n          phone_number: '',\n          email: '',\n          relationship_to_beneficiary: ''\n        },\n\n        has_pending_cases: false,\n        pending_cases_details: '',\n        voter_registration_status: null,\n        payment_method_id: '',\n        agree_to_terms: false\n      },\n      uploadedFiles: {\n        government_id: null,\n        proof_of_residency: null,\n        cedula: null,\n        beneficiary_verification: null,\n        pickup_id_image: null,\n        pickup_authorization: null\n      },\n      uploadErrors: {},\n      maxFileSize: 5 * 1024 * 1024, // 5MB\n      allowedFileTypes: ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'],\n\n      pickupOption: 'self', // 'self' or 'authorized'\n      civilStatuses: [],\n      clientData: null, // Fresh profile data\n\n      // Address dropdown data\n      regions: [],\n      provinces: [],\n      cities: [],\n      barangays: [],\n      filteredProvinces: [],\n      filteredCities: [],\n      filteredBarangays: [],\n\n      // Validation control\n      isValidating: false\n    };\n  },\n  computed: {\n    // Keep the old method as fallback\n    cachedClientData() {\n      return clientAuthService.getCurrentUser();\n    },\n\n    shouldShowPurposeDetails() {\n      // Show purpose details only when \"Other\" category (id=10) is selected\n      return this.formData.purpose_category_id === 10;\n    },\n\n    familyVerificationPlaceholder() {\n      // Dynamic placeholder based on relationship selection\n      if (this.formData.beneficiary.relationship_to_requestor === 'spouse') {\n        return 'Click to upload spouse verification image';\n      }\n      return 'Click to upload family Member Verification Image';\n    },\n\n    familyVerificationText() {\n      // Dynamic verification text based on relationship selection\n      if (this.formData.beneficiary.relationship_to_requestor === 'spouse') {\n        return 'To verify that this person is indeed your spouse, please upload a clear photo of Marriage Application.';\n      }\n      return 'To verify that this person is indeed your family member, please upload a clear photo of their valid ID (Driver\\'s License, National ID, Passport, etc.).';\n    }\n  },\n  async mounted() {\n    await this.loadFormData();\n  },\n  methods: {\n    async loadFormData() {\n      try {\n        // Load fresh profile data first\n        console.log('Loading fresh profile data...');\n        const profileResponse = await clientAuthService.getProfile();\n        if (profileResponse.success) {\n          this.clientData = profileResponse.data;\n          console.log('Fresh profile data loaded:', this.clientData);\n        } else {\n          // Fallback to cached data\n          this.clientData = this.cachedClientData;\n          console.log('Using cached profile data:', this.clientData);\n        }\n\n        const [purposeResponse, paymentResponse] = await Promise.all([\n          documentRequestService.getPurposeCategories(),\n          documentRequestService.getPaymentMethods(),\n          this.loadCivilStatuses(),\n          this.loadAddressData()\n        ]);\n\n        this.purposeCategories = purposeResponse.data || [];\n        this.originalPaymentMethods = paymentResponse.data || [];\n        this.paymentMethods = paymentService.groupPaymentMethods(this.originalPaymentMethods);\n\n      } catch (error) {\n        console.error('Error loading form data:', error);\n        // Fallback to cached data on error\n        this.clientData = this.cachedClientData;\n        this.showToast('Error', 'Failed to load some form data', 'error');\n      }\n    },\n\n    getFullName() {\n      // Try fresh data first, then fallback to cached data structure\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'N/A';\n      return `${profile.first_name || ''} ${profile.middle_name || ''} ${profile.last_name || ''}`.trim();\n    },\n\n    getFullAddress() {\n      // Try fresh data first, then fallback to cached data structure\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'Not provided';\n\n      const parts = [\n        profile.house_number,\n        profile.street,\n        profile.subdivision,\n        profile.barangay,\n        profile.city_municipality || profile.city,\n        profile.province\n      ].filter(Boolean);\n\n      return parts.length > 0 ? parts.join(', ') : 'Not provided';\n    },\n\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || 'Not provided';\n    },\n\n    getResidencyDisplay() {\n      const profile = this.clientData || this.clientData?.profile;\n      if (!profile) return 'Not provided';\n\n      const years = profile.years_of_residency;\n      const months = profile.months_of_residency;\n\n      if (!years && !months) return 'Not provided';\n\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n\n      return parts.join(' and ');\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return 'Not provided';\n      return new Date(dateString).toLocaleDateString();\n    },\n\n    formatCurrency(amount) {\n      return parseFloat(amount).toFixed(2);\n    },\n\n    canProceedToNextStep() {\n      switch (this.currentStep) {\n        case 1: {\n          // Step 1: Required documents must be uploaded AND third-party validation\n          const documentsUploaded = this.uploadedFiles.government_id && this.uploadedFiles.proof_of_residency;\n\n          if (!documentsUploaded) return false;\n\n          // Additional validation for third-party requests\n          if (this.formData.is_third_party_request) {\n            return this.validateBeneficiaryData();\n          }\n\n          return true;\n        }\n        case 2: {\n          let validation = this.formData.purpose_category_id &&\n                          this.formData.has_pending_cases !== null &&\n                          this.formData.voter_registration_status !== null;\n\n          // Only require purpose details if the field is shown (Other category, id=10)\n          if (this.shouldShowPurposeDetails) {\n            validation = validation && this.formData.purpose_details;\n          }\n\n          return validation;\n        }\n        case 3: {\n          const paymentValid = this.formData.payment_method_id;\n          if (!paymentValid) return false;\n\n          // Additional validation for authorized pickup\n          if (this.pickupOption === 'authorized') {\n            return this.validateAuthorizedPickup();\n          }\n\n          return true;\n        }\n        default:\n          return true;\n      }\n    },\n\n    nextStep() {\n      if (this.canProceedToNextStep() && this.currentStep < 4) {\n        this.currentStep++;\n      }\n    },\n\n    previousStep() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      }\n    },\n\n    onPurposeChange() {\n      // Clear purpose details if not \"Other\" category (id=10)\n      if (!this.shouldShowPurposeDetails) {\n        this.formData.purpose_details = '';\n      }\n      // Could implement dynamic fee calculation based on purpose\n    },\n\n    sanitizeRequestData(data) {\n      // Convert undefined values to null to prevent MySQL binding errors\n      const sanitized = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (value === undefined) {\n          sanitized[key] = null;\n        } else if (value === '') {\n          sanitized[key] = null;\n        } else if (typeof value === 'object' && value !== null) {\n          // Recursively sanitize nested objects\n          sanitized[key] = this.sanitizeRequestData(value);\n        } else {\n          sanitized[key] = value;\n        }\n      }\n      return sanitized;\n    },\n\n    redirectToCedula() {\n      // Redirect to Cedula application page\n      this.$router.push('/client/cedula-request');\n    },\n\n    selectPaymentMethod(methodId) {\n      this.formData.payment_method_id = methodId;\n    },\n\n    getActualPaymentMethodId() {\n      return paymentService.getActualPaymentMethodId(\n        this.formData.payment_method_id,\n        this.originalPaymentMethods\n      );\n    },\n\n    getPaymentIcon(methodCode) {\n      const icons = {\n        'CASH': 'fas fa-money-bill',\n        'ONLINE_PAYMENT_GROUP': 'fas fa-credit-card',\n        'PAYMONGO_CARD': 'fas fa-credit-card',\n        'PAYMONGO_GCASH': 'fab fa-google-pay',\n        'PAYMONGO_GRABPAY': 'fas fa-mobile-alt',\n        'PAYMONGO_PAYMAYA': 'fas fa-wallet',\n        'PAYMONGO_BANK': 'fas fa-university'\n      };\n      return icons[methodCode] || 'fas fa-credit-card';\n    },\n\n    getPurposeCategoryName() {\n      const category = this.purposeCategories.find(c => c.id === this.formData.purpose_category_id);\n      return category?.category_name || '';\n    },\n\n    getPaymentMethodName() {\n      const method = this.paymentMethods.find(m => m.id === this.formData.payment_method_id);\n      return method?.method_name || '';\n    },\n\n    getPaymentMethodDisplayName(methodCode) {\n      return paymentService.getPaymentMethodDisplayName(methodCode);\n    },\n\n    // Handle phone number input to restrict to digits only\n    handlePhoneInput(event, section) {\n      const value = event.target.value;\n      // Remove any non-digit characters\n      const digitsOnly = value.replace(/\\D/g, '');\n      // Limit to 11 digits\n      const limitedValue = digitsOnly.substring(0, 11);\n\n      if (section === 'beneficiary') {\n        this.formData.beneficiary.phone_number = limitedValue;\n      } else if (section === 'authorized_pickup') {\n        this.formData.authorized_pickup.phone_number = limitedValue;\n      }\n    },\n\n    async handleSubmit() {\n      if (!this.formData.agree_to_terms) return;\n\n      // Debug pickup option and form data\n      console.log('🔍 DEBUG: pickupOption =', this.pickupOption);\n      console.log('🔍 DEBUG: authorized_pickup data =', JSON.stringify(this.formData.authorized_pickup, null, 2));\n      console.log('🔍 DEBUG: uploadedFiles =', this.uploadedFiles);\n\n      // Final validation with error messages for authorized pickup\n      if (this.pickupOption === 'authorized') {\n        console.log('🔍 Running final validation for authorized pickup...');\n        if (!this.validateAuthorizedPickup(true)) {\n          console.log('❌ Validation failed, stopping submission');\n          this.submitting = false;\n          return;\n        }\n        console.log('✅ Validation passed, continuing with submission');\n      }\n\n      try {\n        this.submitting = true;\n\n        // Prepare request data with proper validation and sanitization\n        const requestData = this.sanitizeRequestData({\n          document_type_id: parseInt(this.formData.document_type_id) || 2,\n          purpose_category_id: parseInt(this.formData.purpose_category_id) || 1,\n          purpose_details: this.shouldShowPurposeDetails && this.formData.purpose_details && this.formData.purpose_details.length >= 10\n            ? this.formData.purpose_details\n            : null,\n          payment_method_id: this.getActualPaymentMethodId(),\n          delivery_method: 'pickup',\n          priority: 'normal',\n          // Third-party request data\n          is_third_party_request: this.formData.is_third_party_request || false,\n          requestor_notes: null,\n          beneficiary: this.formData.is_third_party_request ? this.formData.beneficiary : null,\n          authorized_pickup: this.pickupOption === 'authorized' ? this.formData.authorized_pickup : null,\n          // Barangay Clearance specific fields (legally required)\n          has_pending_cases: Boolean(this.formData.has_pending_cases),\n          pending_cases_details: this.formData.pending_cases_details || null,\n          voter_registration_status: this.formData.voter_registration_status !== null ? Boolean(this.formData.voter_registration_status) : null,\n\n          total_fee: this.totalFee || 150.00,\n          // CRITICAL: Send exact total_document_fee for PayMongo accuracy\n          total_document_fee: 150.00\n        });\n\n        console.log('Submitting request data:', requestData);\n\n        const response = await documentRequestService.submitRequest(requestData);\n\n        const requestId = response.data.id;\n        console.log('Request created with ID:', requestId);\n\n        // Upload documents if any are selected\n        const hasDocuments = this.uploadedFiles.government_id ||\n                            this.uploadedFiles.proof_of_residency ||\n                            this.uploadedFiles.cedula;\n\n        if (hasDocuments) {\n          console.log('Uploading documents...');\n          await this.uploadDocumentsToRequest(requestId);\n        }\n\n        // Upload beneficiary verification if this is a third-party request\n        if (this.formData.is_third_party_request && this.uploadedFiles.beneficiary_verification) {\n          console.log('📤 Uploading beneficiary verification...');\n          await this.uploadBeneficiaryVerification(requestId);\n        }\n\n        // Upload pickup files if this is an authorized pickup request\n        if (this.pickupOption === 'authorized') {\n          console.log('📤 Uploading pickup authorization files...');\n          await this.uploadPickupFiles(requestId);\n        }\n\n        this.showToast('Success', 'Request submitted successfully!', 'success');\n        this.$router.push({\n          name: 'RequestDetails',\n          params: { id: requestId }\n        });\n\n      } catch (error) {\n        console.error('Error submitting request:', error);\n        console.error('Error details:', {\n          status: error.response?.status,\n          data: error.response?.data,\n          message: error.message\n        });\n\n        let errorMessage = 'Failed to submit request';\n        if (error.response?.data?.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response?.data?.errors) {\n          errorMessage = error.response.data.errors.map(e => e.msg).join(', ');\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        this.showToast('Error', errorMessage, 'error');\n      } finally {\n        this.submitting = false;\n      }\n    },\n\n    async uploadDocumentsToRequest(requestId) {\n      try {\n        const filesToUpload = [];\n\n        // Collect ONLY the main Barangay Clearance documents (exclude verification and pickup files)\n        const mainDocumentTypes = ['government_id', 'proof_of_residency', 'cedula'];\n\n        Object.entries(this.uploadedFiles).forEach(([type, file]) => {\n          if (file && mainDocumentTypes.includes(type)) {\n            filesToUpload.push({ type, file });\n          }\n        });\n\n        if (filesToUpload.length === 0) {\n          console.log('No main documents to upload');\n          return;\n        }\n\n        console.log('📤 Uploading main documents:', filesToUpload.map(f => f.type));\n\n        // Upload documents using the service\n        const uploadResponse = await documentRequestService.uploadDocuments(requestId, filesToUpload);\n\n        if (uploadResponse.success) {\n          console.log('Documents uploaded successfully:', uploadResponse.data);\n          this.showToast('Success', `${uploadResponse.data.total_uploaded} document(s) uploaded successfully`, 'success');\n        } else {\n          console.error('Document upload failed:', uploadResponse);\n          this.showToast('Warning', 'Request submitted but some documents failed to upload', 'warning');\n        }\n\n      } catch (error) {\n        console.error('Document upload error:', error);\n        this.showToast('Warning', 'Request submitted but document upload failed. You can upload documents later.', 'warning');\n      }\n    },\n\n    async uploadPickupFiles(requestId) {\n      try {\n        console.log('🔍 Starting file upload for request:', requestId);\n\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // First, get the authorized pickup person ID from the backend\n        const pickupResponse = await api.get(`/client/document-requests/${requestId}/authorization-status`);\n        const pickupPersonId = pickupResponse.data.data?.pickup_person?.id;\n\n        if (!pickupPersonId) {\n          console.error('❌ No pickup person ID found');\n          console.error('❌ Response data:', pickupResponse.data);\n          return;\n        }\n\n        console.log('✅ Found pickup person ID:', pickupPersonId);\n\n        // Upload ID image if available\n        if (this.uploadedFiles.pickup_id_image) {\n          console.log('📤 Uploading pickup ID image...');\n          const idFormData = new FormData();\n          idFormData.append('id_image', this.uploadedFiles.pickup_id_image);\n\n          const idResponse = await api.post(`/verification-documents/pickup-person/${pickupPersonId}/id-image`, idFormData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n          console.log('✅ ID image uploaded successfully:', idResponse.data);\n        }\n\n        // Upload authorization document if available\n        if (this.uploadedFiles.pickup_authorization) {\n          console.log('📤 Uploading authorization document...');\n          const authFormData = new FormData();\n          authFormData.append('authorization_document', this.uploadedFiles.pickup_authorization);\n\n          const authResponse = await api.post(`/verification-documents/pickup-person/${pickupPersonId}/authorization-document`, authFormData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n          console.log('✅ Authorization document uploaded successfully:', authResponse.data);\n        }\n\n        console.log('🎉 All pickup files uploaded successfully');\n      } catch (error) {\n        console.error('❌ Error uploading pickup files:', error);\n        console.error('❌ Error response:', error.response?.data);\n        // Don't throw the error - the request was already created successfully\n        this.showToast('Warning', 'Request created but some files failed to upload. You can upload them later.', 'warning');\n      }\n    },\n\n    async uploadBeneficiaryVerification(requestId) {\n      try {\n        console.log('🔍 Starting beneficiary verification upload for request:', requestId);\n\n        // First, get the beneficiary ID from the request\n        const api = (await import('@/services/api.js')).default;\n        const requestResponse = await api.get(`/client/document-requests/${requestId}`);\n\n        if (!requestResponse.data.success || !requestResponse.data.data.beneficiary) {\n          throw new Error('Beneficiary information not found');\n        }\n\n        const beneficiaryId = requestResponse.data.data.beneficiary.id;\n        console.log('📋 Found beneficiary ID:', beneficiaryId);\n\n        // Upload the verification image\n        const formData = new FormData();\n        formData.append('verification_image', this.uploadedFiles.beneficiary_verification);\n\n        const uploadResponse = await api.post(\n          `/verification-documents/beneficiary/${beneficiaryId}/verification-image`,\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        );\n\n        if (uploadResponse.data.success) {\n          console.log('✅ Beneficiary verification uploaded successfully');\n          this.showToast('Success', 'Family member verification uploaded successfully', 'success');\n        } else {\n          throw new Error(uploadResponse.data.message || 'Upload failed');\n        }\n\n      } catch (error) {\n        console.error('❌ Error uploading beneficiary verification:', error);\n        console.error('❌ Error response:', error.response?.data);\n        // Don't throw the error - the request was already created successfully\n        this.showToast('Warning', 'Request created but verification image failed to upload. You can upload it later.', 'warning');\n      }\n    },\n\n    goBack() {\n      this.$router.push({ name: 'NewDocumentRequest' });\n    },\n\n    updateProfile() {\n      // TODO: Navigate to profile update page\n      console.log('Update profile');\n    },\n\n    // File handling methods\n    triggerFileInput(fileType) {\n      // Convert snake_case to camelCase for ref names\n      const refNameMap = {\n        'government_id': 'governmentIdInput',\n        'proof_of_residency': 'proofOfResidencyInput',\n        'cedula': 'cedulaInput'\n      };\n\n      const inputRef = refNameMap[fileType];\n\n      if (!inputRef) {\n        console.error(`Unknown file type: ${fileType}`);\n        return;\n      }\n\n      // Add safety check for ref existence\n      if (this.$refs[inputRef]) {\n        this.$refs[inputRef].click();\n      } else {\n        console.warn(`File input ref '${inputRef}' not found`);\n        // Try again after next tick\n        this.$nextTick(() => {\n          if (this.$refs[inputRef]) {\n            this.$refs[inputRef].click();\n          } else {\n            console.error(`File input ref '${inputRef}' still not found after nextTick`);\n          }\n        });\n      }\n    },\n\n    handleFileSelect(event, fileType) {\n      const file = event.target.files[0];\n      if (file) {\n        this.validateAndSetFile(file, fileType);\n      }\n    },\n\n    handleFileDrop(event, fileType) {\n      const file = event.dataTransfer.files[0];\n      if (file) {\n        this.validateAndSetFile(file, fileType);\n      }\n    },\n\n    validateAndSetFile(file, fileType) {\n      // Clear previous errors (Vue 3 compatible)\n      delete this.uploadErrors[fileType];\n\n      // Validate file size\n      if (file.size > this.maxFileSize) {\n        this.uploadErrors[fileType] = 'File size must be less than 5MB';\n        this.showToast('Error', 'File size must be less than 5MB', 'error');\n        return;\n      }\n\n      // Validate file type\n      if (!this.allowedFileTypes.includes(file.type)) {\n        this.uploadErrors[fileType] = 'Only JPG, PNG, and PDF files are allowed';\n        this.showToast('Error', 'Only JPG, PNG, and PDF files are allowed', 'error');\n        return;\n      }\n\n      // Set the file (Vue 3 compatible)\n      this.uploadedFiles[fileType] = file;\n      this.showToast('Success', `${file.name} uploaded successfully`, 'success');\n    },\n\n    removeFile(fileType) {\n      // Vue 3 compatible reactive updates\n      this.uploadedFiles[fileType] = null;\n      delete this.uploadErrors[fileType];\n\n      // Convert snake_case to camelCase for ref names\n      const refNameMap = {\n        'government_id': 'governmentIdInput',\n        'proof_of_residency': 'proofOfResidencyInput',\n        'cedula': 'cedulaInput'\n      };\n\n      const inputRef = refNameMap[fileType];\n\n      // Clear the input with safety check\n      if (inputRef && this.$refs[inputRef]) {\n        this.$refs[inputRef].value = '';\n      } else {\n        console.warn(`File input ref '${inputRef}' not found during removal`);\n      }\n    },\n\n    showTerms() {\n      // TODO: Show terms and conditions modal\n      console.log('Show terms');\n    },\n\n    showToast(title, message, type = 'info') {\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${title}: ${message}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${title}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${message}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n            font-weight: 600;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n            padding: 0;\n            margin-left: 8px;\n          }\n          .toast-success {\n            border-left: 4px solid #28a745;\n          }\n          .toast-error {\n            border-left: 4px solid #dc3545;\n          }\n          .toast-warning {\n            border-left: 4px solid #ffc107;\n          }\n          .toast-info {\n            border-left: 4px solid #17a2b8;\n          }\n          @keyframes slideIn {\n            from {\n              transform: translateX(100%);\n              opacity: 0;\n            }\n            to {\n              transform: translateX(0);\n              opacity: 1;\n            }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.remove();\n        }\n      }, 5000);\n    },\n\n    // New methods for third-party requests\n    handleRequestTypeChange() {\n      if (!this.formData.is_third_party_request) {\n        // Reset beneficiary data when switching back to self\n        this.resetBeneficiaryData();\n        this.familyRelationshipError = null;\n      }\n    },\n\n    handleGenderChange() {\n      // Clear suffix when male is not selected since suffix field will be hidden\n      if (this.formData.beneficiary.gender !== 'male') {\n        this.formData.beneficiary.suffix = '';\n      }\n    },\n\n    validateFamilyRelationship() {\n      this.familyRelationshipError = null;\n\n      if (!this.formData.is_third_party_request) {\n        return true;\n      }\n\n      const relationship = this.formData.beneficiary.relationship_to_requestor;\n      if (!relationship) {\n        return true; // Will be caught by required validation\n      }\n\n      // Define allowed immediate family relationships\n      const allowedRelationships = [\n        'spouse', 'husband', 'wife', 'child', 'son', 'daughter',\n        'parent', 'father', 'mother', 'sibling', 'brother', 'sister'\n      ];\n\n      if (!allowedRelationships.includes(relationship.toLowerCase())) {\n        this.familyRelationshipError = 'You can only request documents on behalf of immediate family members (spouse, children, parents, siblings).';\n        return false;\n      }\n\n      return true;\n    },\n\n    handlePickupOptionChange() {\n      if (this.pickupOption !== 'authorized') {\n        // Reset authorized pickup data\n        this.resetAuthorizedPickupData();\n      }\n    },\n\n    resetBeneficiaryData() {\n      this.formData.beneficiary = {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        birth_date: '',\n        gender: '',\n        civil_status_id: '',\n        nationality: 'Filipino',\n        phone_number: '',\n        email: '',\n        house_number: '',\n        street: '',\n        subdivision: '',\n        barangay: 'Bula',\n        city_municipality: 'General Santos City (Dadiangas)',\n        province: 'South Cotabato',\n        postal_code: '',\n        years_of_residency: null,\n        months_of_residency: null,\n        relationship_to_requestor: '',\n        region: 'Region XII (SOCCSKSARGEN)',\n        region_code: '12',\n        province_code: '1263',\n        city_code: '126303',\n        barangay_code: '126303005'\n      };\n    },\n\n    resetAuthorizedPickupData() {\n      this.formData.authorized_pickup = {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        phone_number: '',\n        email: '',\n        relationship_to_beneficiary: ''\n      };\n      // Also reset the uploaded files\n      this.uploadedFiles.pickup_id_image = null;\n      this.uploadedFiles.pickup_authorization = null;\n    },\n\n    async loadCivilStatuses() {\n      try {\n        // For now, use a static list. In production, this would be an API call\n        this.civilStatuses = [\n          { id: 1, status_name: 'Single' },\n          { id: 2, status_name: 'Married' },\n          { id: 3, status_name: 'Widowed' },\n          { id: 4, status_name: 'Divorced' },\n          { id: 5, status_name: 'Separated' }\n        ];\n      } catch (error) {\n        console.error('Error loading civil statuses:', error);\n      }\n    },\n\n    validateBeneficiaryData() {\n      if (!this.formData.is_third_party_request) return true;\n\n      const required = [\n        'first_name', 'last_name', 'birth_date', 'gender',\n        'civil_status_id', 'region_code', 'province_code',\n        'city_code', 'barangay_code', 'relationship_to_requestor'\n      ];\n\n      for (const field of required) {\n        if (!this.formData.beneficiary[field]) {\n          this.showToast('Error', `Please fill in the beneficiary's ${field.replace('_', ' ')}`, 'error');\n          return false;\n        }\n      }\n\n      // Validate family relationship\n      if (!this.validateFamilyRelationship()) {\n        this.showToast('Error', this.familyRelationshipError, 'error');\n        return false;\n      }\n\n      // Check for required verification image\n      if (!this.uploadedFiles.beneficiary_verification) {\n        this.showToast('Error', 'Please upload the family member\\'s verification ID image', 'error');\n        return false;\n      }\n\n      return true;\n    },\n\n    validateAuthorizedPickup(showErrors = false) {\n      console.log('🔍 validateAuthorizedPickup called with showErrors:', showErrors);\n      console.log('🔍 pickupOption:', this.pickupOption);\n      console.log('🔍 authorized_pickup data:', this.formData.authorized_pickup);\n\n      if (this.pickupOption !== 'authorized') {\n        console.log('✅ Not authorized pickup, validation passed');\n        return true;\n      }\n\n      // Prevent multiple validation calls in quick succession\n      if (this.isValidating) {\n        console.log('⚠️ Validation already in progress, skipping');\n        return false;\n      }\n\n      if (showErrors) {\n        this.isValidating = true;\n        setTimeout(() => { this.isValidating = false; }, 1000); // Reset after 1 second\n      }\n\n      const required = [\n        'first_name', 'last_name', 'phone_number', 'relationship_to_beneficiary'\n      ];\n\n      for (const field of required) {\n        const value = this.formData.authorized_pickup[field];\n        console.log(`🔍 Checking field ${field}:`, value);\n\n        if (!value || value.trim() === '') {\n          if (showErrors) {\n            console.log(`❌ Field ${field} is missing`);\n            this.showToast('Error', `Please fill in the pickup person's ${field.replace('_', ' ')}`, 'error');\n          }\n          return false;\n        }\n      }\n\n      // Check for required file uploads\n      if (!this.uploadedFiles.pickup_id_image) {\n        if (showErrors) {\n          console.log('❌ Missing pickup ID image');\n          this.showToast('Error', 'Please upload the pickup person\\'s valid ID image', 'error');\n        }\n        return false;\n      }\n\n      if (!this.uploadedFiles.pickup_authorization) {\n        if (showErrors) {\n          console.log('❌ Missing pickup authorization');\n          this.showToast('Error', 'Please upload the authorization letter', 'error');\n        }\n        return false;\n      }\n\n      console.log('✅ Authorized pickup validation passed');\n      return true;\n    },\n\n    // Verification file upload handlers\n    handleBeneficiaryVerificationFile(file) {\n      console.log('Beneficiary verification file selected:', file.name);\n      this.uploadedFiles.beneficiary_verification = file;\n    },\n\n    onBeneficiaryVerificationUpload(uploadResult) {\n      console.log('Beneficiary verification uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Family member verification image uploaded successfully', 'success');\n    },\n\n    onBeneficiaryVerificationError(error) {\n      console.error('Beneficiary verification upload error:', error);\n      this.showToast('Error', 'Failed to upload verification image: ' + (error.response?.data?.message || error.message), 'error');\n    },\n\n    onBeneficiaryVerificationRemoved() {\n      console.log('Beneficiary verification file removed');\n      this.uploadedFiles.beneficiary_verification = null;\n    },\n\n    // Pickup person file upload handlers\n    handlePickupIdFile(file) {\n      console.log('Pickup ID file selected:', file.name);\n      this.uploadedFiles.pickup_id_image = file;\n    },\n\n    onPickupIdUpload(uploadResult) {\n      console.log('Pickup ID uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Pickup person ID image uploaded successfully', 'success');\n    },\n\n    onPickupIdError(error) {\n      console.error('Pickup ID upload error:', error);\n      this.showToast('Error', 'Failed to upload ID image: ' + (error.response?.data?.message || error.message), 'error');\n    },\n\n    onPickupIdRemoved() {\n      console.log('Pickup ID file removed');\n      this.uploadedFiles.pickup_id_image = null;\n    },\n\n    handlePickupAuthFile(file) {\n      console.log('Pickup authorization file selected:', file.name);\n      this.uploadedFiles.pickup_authorization = file;\n    },\n\n    onPickupAuthUpload(uploadResult) {\n      console.log('Pickup authorization uploaded successfully:', uploadResult);\n      this.showToast('Success', 'Authorization document uploaded successfully', 'success');\n    },\n\n    onPickupAuthError(error) {\n      console.error('Pickup authorization upload error:', error);\n      this.showToast('Error', 'Failed to upload authorization document: ' + (error.response?.data?.message || error.message), 'error');\n    },\n\n    onPickupAuthRemoved() {\n      console.log('Pickup authorization file removed');\n      this.uploadedFiles.pickup_authorization = null;\n    },\n\n    // Address dropdown methods\n    async loadAddressData() {\n      try {\n        this.regions = await addressService.getRegions();\n      } catch (error) {\n        console.error('Error loading address data:', error);\n        this.showToast('Error', 'Failed to load address data', 'error');\n      }\n    },\n\n    async onRegionChange() {\n      try {\n        this.filteredProvinces = [];\n        this.filteredCities = [];\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.province_code = '';\n        this.formData.beneficiary.city_code = '';\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.province = '';\n        this.formData.beneficiary.city_municipality = '';\n        this.formData.beneficiary.barangay = '';\n        this.formData.beneficiary.region = '';\n\n        if (this.formData.beneficiary.region_code) {\n          this.filteredProvinces = await addressService.getProvincesByRegion(this.formData.beneficiary.region_code);\n\n          // Set region name\n          const selectedRegion = this.regions.find(r => r.region_code === this.formData.beneficiary.region_code);\n          if (selectedRegion) {\n            this.formData.beneficiary.region = selectedRegion.region_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading provinces:', error);\n        this.showToast('Error', 'Failed to load provinces', 'error');\n      }\n    },\n\n    async onProvinceChange() {\n      try {\n        this.filteredCities = [];\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.city_code = '';\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.city_municipality = '';\n        this.formData.beneficiary.barangay = '';\n\n        if (this.formData.beneficiary.province_code) {\n          this.filteredCities = await addressService.getCitiesByProvince(this.formData.beneficiary.province_code);\n\n          // Set province name\n          const selectedProvince = this.filteredProvinces.find(p => p.province_code === this.formData.beneficiary.province_code);\n          if (selectedProvince) {\n            this.formData.beneficiary.province = selectedProvince.province_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading cities:', error);\n        this.showToast('Error', 'Failed to load cities', 'error');\n      }\n    },\n\n    async onCityChange() {\n      try {\n        this.filteredBarangays = [];\n\n        // Reset dependent fields\n        this.formData.beneficiary.barangay_code = '';\n        this.formData.beneficiary.barangay = '';\n\n        if (this.formData.beneficiary.city_code) {\n          this.filteredBarangays = await addressService.getBarangaysByCity(this.formData.beneficiary.city_code);\n\n          // Set city name\n          const selectedCity = this.filteredCities.find(c => c.city_code === this.formData.beneficiary.city_code);\n          if (selectedCity) {\n            this.formData.beneficiary.city_municipality = selectedCity.city_name;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading barangays:', error);\n        this.showToast('Error', 'Failed to load barangays', 'error');\n      }\n    },\n\n    onBarangayChange() {\n      // Set barangay name\n      if (this.formData.beneficiary.barangay_code) {\n        const selectedBarangay = this.filteredBarangays.find(b => b.brgy_code === this.formData.beneficiary.barangay_code);\n        if (selectedBarangay) {\n          this.formData.beneficiary.barangay = selectedBarangay.brgy_name;\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.barangay-clearance-request {\n  padding: 0;\n  max-width: none;\n  margin: 0;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.page-header {\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  background: #f7fafc;\n  margin: 0;\n  padding: 2rem 2rem 1.5rem 2rem;\n  border-bottom: 1px solid #e2e8f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  flex-shrink: 0;\n}\n\n.page-content {\n  flex: 1;\n  padding: 1.5rem 2rem 2rem 2rem;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 2rem;\n}\n\n.page-title {\n  font-size: 1.75rem;\n  font-weight: 700;\n  color: #1a365d;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.page-title i {\n  color: #3182ce;\n}\n\n.page-description {\n  font-size: 1rem;\n  color: #4a5568;\n  margin: 0;\n}\n\n.back-btn {\n  background: #e2e8f0;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.back-btn:hover {\n  background: #cbd5e0;\n  color: #2d3748;\n}\n\n.progress-steps {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 3rem;\n  position: relative;\n}\n\n.progress-steps::before {\n  content: '';\n  position: absolute;\n  top: 1.5rem;\n  left: 25%;\n  right: 25%;\n  height: 2px;\n  background: #e2e8f0;\n  z-index: 1;\n}\n\n.step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  position: relative;\n  z-index: 2;\n}\n\n.step-number {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  background: #e2e8f0;\n  color: #a0aec0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  transition: all 0.3s;\n}\n\n.step.active .step-number {\n  background: #3182ce;\n  color: white;\n}\n\n.step.completed .step-number {\n  background: #38a169;\n  color: white;\n}\n\n.step-label {\n  font-size: 0.875rem;\n  color: #718096;\n  text-align: center;\n}\n\n.step.active .step-label {\n  color: #3182ce;\n  font-weight: 500;\n}\n\n.form-container {\n  background: white;\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.form-step {\n  min-height: 400px;\n}\n\n.step-header {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.step-header h2 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 0.5rem;\n}\n\n.step-header p {\n  color: #4a5568;\n  margin: 0;\n}\n\n.profile-preview {\n  margin-bottom: 2rem;\n}\n\n.profile-card {\n  background: #f7fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.profile-info h3 {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 1rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.info-item label {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #718096;\n}\n\n.info-item span {\n  color: #2d3748;\n}\n\n.update-profile-btn {\n  background: #3182ce;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.update-profile-btn:hover {\n  background: #2c5aa0;\n}\n\n.form-section {\n  margin-bottom: 2rem;\n}\n\n.form-section h3 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 1rem;\n}\n\n.form-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #2d3748;\n  font-size: 0.875rem;\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n}\n\n.form-group input:focus,\n.form-group select:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: #3182ce;\n  box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);\n}\n\n.radio-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.radio-option {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  cursor: pointer;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n}\n\n.radio-option:hover {\n  background: #f7fafc;\n}\n\n.radio-option input[type=\"radio\"] {\n  display: none;\n}\n\n.radio-custom {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 50%;\n  position: relative;\n  transition: all 0.2s;\n}\n\n.radio-option input[type=\"radio\"]:checked + .radio-custom {\n  border-color: #3182ce;\n}\n\n.radio-option input[type=\"radio\"]:checked + .radio-custom::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 0.5rem;\n  height: 0.5rem;\n  background: #3182ce;\n  border-radius: 50%;\n}\n\n.fee-summary {\n  margin-bottom: 2rem;\n}\n\n.fee-card {\n  background: #f7fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n}\n\n.fee-card h3 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 1rem;\n}\n\n.fee-items {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.fee-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 0;\n}\n\n.fee-item.total {\n  border-top: 1px solid #e2e8f0;\n  padding-top: 1rem;\n  font-weight: 600;\n  font-size: 1.125rem;\n  color: #1a365d;\n}\n\n.payment-methods {\n  display: grid;\n  gap: 1rem;\n}\n\n.payment-option {\n  border: 2px solid #e2e8f0;\n  border-radius: 0.75rem;\n  padding: 1rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.payment-option:hover {\n  border-color: #cbd5e0;\n}\n\n.payment-option.selected {\n  border-color: #3182ce;\n  background: #ebf8ff;\n}\n\n.grouped-methods-preview {\n  margin-top: 0.5rem;\n}\n\n.grouped-methods-preview small {\n  color: #6b7280;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.payment-icon {\n  width: 3rem;\n  height: 3rem;\n  background: #f7fafc;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n  color: #4a5568;\n}\n\n.payment-option.selected .payment-icon {\n  background: #3182ce;\n  color: white;\n}\n\n.payment-info {\n  flex: 1;\n}\n\n.payment-info h4 {\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 0.25rem;\n}\n\n.payment-info p {\n  color: #718096;\n  font-size: 0.875rem;\n  margin: 0;\n}\n\n.payment-radio input {\n  width: 1.25rem;\n  height: 1.25rem;\n}\n\n.review-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  margin-bottom: 2rem;\n}\n\n.review-section {\n  background: #f7fafc;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n}\n\n.review-section h3 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1a365d;\n  margin-bottom: 1rem;\n}\n\n.review-grid {\n  display: grid;\n  gap: 1rem;\n}\n\n.review-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.review-item:last-child {\n  border-bottom: none;\n}\n\n.review-item label {\n  font-weight: 500;\n  color: #4a5568;\n  min-width: 120px;\n}\n\n.review-item span {\n  color: #2d3748;\n  text-align: right;\n  flex: 1;\n}\n\n.review-item .amount {\n  font-weight: 600;\n  color: #38a169;\n  font-size: 1.125rem;\n}\n\n.terms-section {\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: #fffaf0;\n  border: 1px solid #fed7aa;\n  border-radius: 0.5rem;\n}\n\n.checkbox-option {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.75rem;\n  cursor: pointer;\n  line-height: 1.5;\n}\n\n.checkbox-option input[type=\"checkbox\"] {\n  display: none;\n}\n\n.checkbox-custom {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 0.25rem;\n  position: relative;\n  flex-shrink: 0;\n  margin-top: 0.125rem;\n  transition: all 0.2s;\n}\n\n.checkbox-option input[type=\"checkbox\"]:checked + .checkbox-custom {\n  border-color: #3182ce;\n  background: #3182ce;\n}\n\n.checkbox-option input[type=\"checkbox\"]:checked + .checkbox-custom::after {\n  content: '✓';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: white;\n  font-size: 0.875rem;\n  font-weight: bold;\n}\n\n.checkbox-option a {\n  color: #3182ce;\n  text-decoration: underline;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  padding-top: 2rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.btn-secondary,\n.btn-primary,\n.btn-submit {\n  padding: 0.75rem 2rem;\n  border-radius: 0.5rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: none;\n}\n\n.btn-secondary {\n  background: #e2e8f0;\n  color: #4a5568;\n}\n\n.btn-secondary:hover {\n  background: #cbd5e0;\n}\n\n.btn-primary {\n  background: #3182ce;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background: #2c5aa0;\n}\n\n.btn-submit {\n  background: #38a169;\n  color: white;\n}\n\n.btn-submit:hover:not(:disabled) {\n  background: #2f855a;\n}\n\n.btn-primary:disabled,\n.btn-submit:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* Third-party request styles */\n.request-type-options {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.radio-option {\n  display: flex;\n  align-items: flex-start;\n  gap: 1rem;\n  padding: 1.5rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.radio-option:hover {\n  border-color: #cbd5e0;\n  background-color: #f7fafc;\n}\n\n.radio-option input[type=\"radio\"]:checked + .radio-custom + .option-content {\n  color: #3182ce;\n}\n\n.radio-option input[type=\"radio\"]:checked ~ .option-content strong {\n  color: #2c5aa0;\n}\n\n.radio-option input[type=\"radio\"] {\n  display: none;\n}\n\n.radio-custom {\n  width: 20px;\n  height: 20px;\n  border: 2px solid #cbd5e0;\n  border-radius: 50%;\n  position: relative;\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.radio-option input[type=\"radio\"]:checked + .radio-custom {\n  border-color: #3182ce;\n}\n\n.radio-option input[type=\"radio\"]:checked + .radio-custom::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  background-color: #3182ce;\n  border-radius: 50%;\n}\n\n.option-content {\n  flex: 1;\n}\n\n.option-content strong {\n  display: block;\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2d3748;\n  margin-bottom: 0.25rem;\n}\n\n.option-content p {\n  color: #718096;\n  margin: 0;\n  font-size: 0.875rem;\n  line-height: 1.4;\n}\n\n.beneficiary-section {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.75rem;\n  padding: 2rem;\n  margin-bottom: 2rem;\n}\n\n.beneficiary-section h3 {\n  color: #2d3748;\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n}\n\n.beneficiary-section h4 {\n  color: #4a5568;\n  font-size: 1.125rem;\n  font-weight: 600;\n  margin: 2rem 0 1rem 0;\n  padding-top: 1.5rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.pickup-options {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n}\n\n.authorized-pickup-form {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n  margin-top: 1rem;\n}\n\n.authorized-pickup-form h4 {\n  color: #2d3748;\n  font-size: 1.125rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.alert {\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-bottom: 1.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.alert-info {\n  background-color: #ebf8ff;\n  border: 1px solid #bee3f8;\n  color: #2c5aa0;\n}\n\n.alert-info i {\n  color: #3182ce;\n}\n\n@media (max-width: 768px) {\n  .page-header {\n    padding: 1.5rem 1rem 1.25rem 1rem;\n  }\n\n  .page-content {\n    padding: 1rem 1rem 1rem 1rem;\n  }\n\n  .header-content {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .progress-steps {\n    flex-wrap: wrap;\n    gap: 1rem;\n  }\n\n  .progress-steps::before {\n    display: none;\n  }\n\n  .form-container {\n    padding: 1.5rem;\n  }\n\n  .form-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .info-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .profile-card {\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .form-actions {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .review-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.25rem;\n  }\n\n  .review-item span {\n    text-align: left;\n  }\n}\n\n/* Legal Notice Styles */\n.legal-notice {\n  background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 100%);\n  border: 1px solid #2196f3;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-bottom: 1rem;\n}\n\n.legal-notice h3 {\n  color: #1976d2;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.legal-notice p {\n  color: #424242;\n  line-height: 1.6;\n  margin-bottom: 1rem;\n}\n\n.data-privacy-note {\n  background: rgba(76, 175, 80, 0.1);\n  border-left: 4px solid #4caf50;\n  padding: 0.75rem;\n  border-radius: 4px;\n}\n\n.data-privacy-note small {\n  color: #2e7d32;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n/* Document Upload Styles */\n.document-upload-group {\n  margin-bottom: 1.5rem;\n}\n\n.document-label {\n  display: block;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n}\n\n.document-label i {\n  margin-right: 0.5rem;\n  color: #3498db;\n}\n\n.document-info {\n  font-weight: 400;\n  color: #7f8c8d;\n  font-size: 0.875rem;\n  display: block;\n  margin-top: 0.25rem;\n}\n\n.document-info.optional {\n  color: #27ae60;\n}\n\n.file-upload-area {\n  border: 2px dashed #bdc3c7;\n  border-radius: 8px;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: #f8f9fa;\n}\n\n.file-upload-area:hover {\n  border-color: #3498db;\n  background: #e3f2fd;\n}\n\n.file-upload-area.dragover {\n  border-color: #2ecc71;\n  background: #e8f5e8;\n}\n\n.upload-placeholder i {\n  font-size: 2rem;\n  color: #95a5a6;\n  margin-bottom: 0.5rem;\n}\n\n.upload-placeholder p {\n  margin: 0.5rem 0;\n  color: #2c3e50;\n  font-weight: 500;\n}\n\n.upload-placeholder small {\n  color: #7f8c8d;\n}\n\n.uploaded-file {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  color: #27ae60;\n  font-weight: 500;\n}\n\n.uploaded-file i {\n  color: #27ae60;\n}\n\n.remove-file {\n  background: #e74c3c;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-left: 0.5rem;\n  transition: background 0.3s ease;\n}\n\n.remove-file:hover {\n  background: #c0392b;\n}\n\n.upload-error {\n  color: #e74c3c;\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n}\n\n@media (max-width: 768px) {\n  .file-upload-area {\n    padding: 1.5rem 1rem;\n  }\n\n  .upload-placeholder i {\n    font-size: 1.5rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}