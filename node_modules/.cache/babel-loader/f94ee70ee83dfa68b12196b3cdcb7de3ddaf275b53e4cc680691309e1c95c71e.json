{"ast":null,"code":"import AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport DocumentReviewModal from './DocumentReviewModal.vue';\nimport { adminDashboard } from './js/adminDashboard.js';\nexport default {\n  name: 'ResidencyReview',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    DocumentReviewModal\n  },\n  mixins: [adminDashboard],\n  data() {\n    return {\n      pendingVerifications: [],\n      pendingCount: 0,\n      loading: false,\n      error: null,\n      showReviewModal: false,\n      selectedClient: null,\n      clientDocuments: []\n    };\n  },\n  async mounted() {\n    await this.loadPendingVerifications();\n  },\n  methods: {\n    async loadPendingVerifications() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await this.$http.get('/api/residency/pending', {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n        if (response.data.success) {\n          this.pendingVerifications = response.data.data;\n          this.pendingCount = response.data.data.length;\n        } else {\n          this.error = response.data.message || 'Failed to load pending verifications';\n        }\n      } catch (error) {\n        console.error('Error loading pending verifications:', error);\n        this.error = error.response?.data?.message || 'Failed to load pending verifications';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async reviewDocuments(client) {\n      this.loading = true;\n      try {\n        const response = await this.$http.get(`/api/residency/documents/${client.account_id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n        if (response.data.success) {\n          this.selectedClient = client;\n          this.clientDocuments = response.data.data;\n          this.showReviewModal = true;\n        } else {\n          this.error = response.data.message || 'Failed to load client documents';\n        }\n      } catch (error) {\n        console.error('Error loading client documents:', error);\n        this.error = error.response?.data?.message || 'Failed to load client documents';\n      } finally {\n        this.loading = false;\n      }\n    },\n    closeReviewModal() {\n      this.showReviewModal = false;\n      this.selectedClient = null;\n      this.clientDocuments = [];\n    },\n    async handleApprove(accountId) {\n      try {\n        const response = await this.$http.post('/api/residency/approve', {\n          account_id: accountId\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n        if (response.data.success) {\n          this.$toast.success('Residency verification approved successfully');\n          this.closeReviewModal();\n          await this.loadPendingVerifications();\n        } else {\n          this.$toast.error(response.data.message || 'Failed to approve verification');\n        }\n      } catch (error) {\n        console.error('Error approving verification:', error);\n        this.$toast.error(error.response?.data?.message || 'Failed to approve verification');\n      }\n    },\n    async handleReject(data) {\n      try {\n        const response = await this.$http.post('/api/residency/reject', {\n          account_id: data.accountId,\n          rejection_reason: data.reason\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n        if (response.data.success) {\n          this.$toast.success('Residency verification rejected');\n          this.closeReviewModal();\n          await this.loadPendingVerifications();\n        } else {\n          this.$toast.error(response.data.message || 'Failed to reject verification');\n        }\n      } catch (error) {\n        console.error('Error rejecting verification:', error);\n        this.$toast.error(error.response?.data?.message || 'Failed to reject verification');\n      }\n    },\n    getFullName(client) {\n      const parts = [client.first_name, client.middle_name, client.last_name].filter(Boolean);\n      return parts.join(' ') || client.username;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n    formatStatus(status) {\n      const statusMap = {\n        'pending_residency_verification': 'Pending Review',\n        'residency_rejected': 'Rejected'\n      };\n      return statusMap[status] || status;\n    },\n    getStatusBadgeClass(status) {\n      const classMap = {\n        'pending_residency_verification': 'bg-warning',\n        'residency_rejected': 'bg-danger'\n      };\n      return classMap[status] || 'bg-secondary';\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","DocumentReviewModal","adminDashboard","name","components","mixins","data","pendingVerifications","pendingCount","loading","error","showReviewModal","selectedClient","clientDocuments","mounted","loadPendingVerifications","methods","response","$http","get","headers","$store","getters","getToken","success","length","message","console","reviewDocuments","client","account_id","closeReviewModal","handleApprove","accountId","post","$toast","handleReject","rejection_reason","reason","getFullName","parts","first_name","middle_name","last_name","filter","Boolean","join","username","formatDate","dateString","Date","toLocaleDateString","year","month","day","formatStatus","status","statusMap","getStatusBadgeClass","classMap"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\ResidencyReview.vue"],"sourcesContent":["<template>\n  <div class=\"residency-review\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid p-4\">\n          <!-- Page Header -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n                <div>\n                  <h1 class=\"h3 mb-0 text-gray-800\">Residency Verification</h1>\n                  <p class=\"text-muted\">Review and approve client residency documents</p>\n                </div>\n                <div class=\"d-flex gap-2\">\n                  <button class=\"btn btn-outline-success btn-sm\" @click=\"loadPendingVerifications\" :disabled=\"loading\">\n                    <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                    Refresh\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Statistics Cards -->\n          <div class=\"row mb-4\">\n            <div class=\"col-xl-3 col-md-6 mb-4\">\n              <div class=\"card border-left-warning shadow h-100 py-2\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-2\">\n                      <div class=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                        Pending Review\n                      </div>\n                      <div class=\"h5 mb-0 font-weight-bold text-gray-800\">\n                        {{ pendingCount }}\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <i class=\"fas fa-clock fa-2x text-gray-300\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Loading State -->\n          <div v-if=\"loading\" class=\"text-center py-5\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n            <p class=\"mt-2 text-muted\">Loading pending verifications...</p>\n          </div>\n\n          <!-- Error State -->\n          <div v-else-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n            {{ error }}\n          </div>\n\n          <!-- Pending Verifications Table -->\n          <div v-else class=\"card shadow mb-4\">\n            <div class=\"card-header py-3\">\n              <h6 class=\"m-0 font-weight-bold text-primary\">Pending Residency Verifications</h6>\n            </div>\n            <div class=\"card-body\">\n              <div v-if=\"pendingVerifications.length === 0\" class=\"text-center py-4\">\n                <i class=\"fas fa-check-circle fa-3x text-success mb-3\"></i>\n                <h5 class=\"text-muted\">No Pending Verifications</h5>\n                <p class=\"text-muted\">All residency documents have been reviewed.</p>\n              </div>\n              <div v-else class=\"table-responsive\">\n                <table class=\"table table-bordered\" width=\"100%\" cellspacing=\"0\">\n                  <thead>\n                    <tr>\n                      <th>Client</th>\n                      <th>Registration Date</th>\n                      <th>Documents</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"verification in pendingVerifications\" :key=\"verification.account_id\">\n                      <td>\n                        <div class=\"d-flex align-items-center\">\n                          <div class=\"ms-3\">\n                            <div class=\"fw-bold\">{{ getFullName(verification) }}</div>\n                            <div class=\"text-muted small\">{{ verification.username }}</div>\n                            <div class=\"text-muted small\">{{ verification.email }}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td>\n                        <div class=\"small\">\n                          {{ formatDate(verification.registration_date) }}\n                        </div>\n                      </td>\n                      <td>\n                        <span class=\"badge bg-info\">{{ verification.document_count }} documents</span>\n                      </td>\n                      <td>\n                        <span class=\"badge\" :class=\"getStatusBadgeClass(verification.account_status)\">\n                          {{ formatStatus(verification.account_status) }}\n                        </span>\n                      </td>\n                      <td>\n                        <button \n                          class=\"btn btn-primary btn-sm me-2\" \n                          @click=\"reviewDocuments(verification)\"\n                          :disabled=\"loading\"\n                        >\n                          <i class=\"fas fa-eye me-1\"></i>\n                          Review\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n\n    <!-- Document Review Modal -->\n    <DocumentReviewModal\n      v-if=\"showReviewModal\"\n      :client=\"selectedClient\"\n      :documents=\"clientDocuments\"\n      @close=\"closeReviewModal\"\n      @approve=\"handleApprove\"\n      @reject=\"handleReject\"\n    />\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport DocumentReviewModal from './DocumentReviewModal.vue';\nimport { adminDashboard } from './js/adminDashboard.js';\n\nexport default {\n  name: 'ResidencyReview',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    DocumentReviewModal\n  },\n  mixins: [adminDashboard],\n  data() {\n    return {\n      pendingVerifications: [],\n      pendingCount: 0,\n      loading: false,\n      error: null,\n      showReviewModal: false,\n      selectedClient: null,\n      clientDocuments: []\n    };\n  },\n  async mounted() {\n    await this.loadPendingVerifications();\n  },\n  methods: {\n    async loadPendingVerifications() {\n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await this.$http.get('/api/residency/pending', {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n\n        if (response.data.success) {\n          this.pendingVerifications = response.data.data;\n          this.pendingCount = response.data.data.length;\n        } else {\n          this.error = response.data.message || 'Failed to load pending verifications';\n        }\n      } catch (error) {\n        console.error('Error loading pending verifications:', error);\n        this.error = error.response?.data?.message || 'Failed to load pending verifications';\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async reviewDocuments(client) {\n      this.loading = true;\n      \n      try {\n        const response = await this.$http.get(`/api/residency/documents/${client.account_id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n\n        if (response.data.success) {\n          this.selectedClient = client;\n          this.clientDocuments = response.data.data;\n          this.showReviewModal = true;\n        } else {\n          this.error = response.data.message || 'Failed to load client documents';\n        }\n      } catch (error) {\n        console.error('Error loading client documents:', error);\n        this.error = error.response?.data?.message || 'Failed to load client documents';\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    closeReviewModal() {\n      this.showReviewModal = false;\n      this.selectedClient = null;\n      this.clientDocuments = [];\n    },\n\n    async handleApprove(accountId) {\n      try {\n        const response = await this.$http.post('/api/residency/approve', {\n          account_id: accountId\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n\n        if (response.data.success) {\n          this.$toast.success('Residency verification approved successfully');\n          this.closeReviewModal();\n          await this.loadPendingVerifications();\n        } else {\n          this.$toast.error(response.data.message || 'Failed to approve verification');\n        }\n      } catch (error) {\n        console.error('Error approving verification:', error);\n        this.$toast.error(error.response?.data?.message || 'Failed to approve verification');\n      }\n    },\n\n    async handleReject(data) {\n      try {\n        const response = await this.$http.post('/api/residency/reject', {\n          account_id: data.accountId,\n          rejection_reason: data.reason\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.$store.getters.getToken}`\n          }\n        });\n\n        if (response.data.success) {\n          this.$toast.success('Residency verification rejected');\n          this.closeReviewModal();\n          await this.loadPendingVerifications();\n        } else {\n          this.$toast.error(response.data.message || 'Failed to reject verification');\n        }\n      } catch (error) {\n        console.error('Error rejecting verification:', error);\n        this.$toast.error(error.response?.data?.message || 'Failed to reject verification');\n      }\n    },\n\n    getFullName(client) {\n      const parts = [client.first_name, client.middle_name, client.last_name].filter(Boolean);\n      return parts.join(' ') || client.username;\n    },\n\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n\n    formatStatus(status) {\n      const statusMap = {\n        'pending_residency_verification': 'Pending Review',\n        'residency_rejected': 'Rejected'\n      };\n      return statusMap[status] || status;\n    },\n\n    getStatusBadgeClass(status) {\n      const classMap = {\n        'pending_residency_verification': 'bg-warning',\n        'residency_rejected': 'bg-danger'\n      };\n      return classMap[status] || 'bg-secondary';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.residency-review {\n  min-height: 100vh;\n  background-color: #f8f9fc;\n}\n\n.border-left-warning {\n  border-left: 0.25rem solid #f6c23e !important;\n}\n\n.card {\n  box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important;\n}\n\n.table th {\n  border-top: none;\n  font-weight: 600;\n  color: #5a5c69;\n}\n\n.badge {\n  font-size: 0.75em;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}