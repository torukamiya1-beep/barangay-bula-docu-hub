{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Navigation Composable\n * Handles routing, navigation actions, and scroll behaviors\n * Implements proper error handling and accessibility features\n */\n\nimport { nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nexport function useNavigation() {\n  const router = useRouter();\n\n  // Route mapping for menu actions\n  const routeMap = {\n    dashboard: 'ClientDashboard',\n    services: 'NewDocumentRequest',\n    requests: 'MyRequests',\n    documents: 'MyDocuments',\n    profile: 'ClientProfile',\n    settings: 'ClientSettings',\n    history: 'RequestHistory',\n    notifications: 'ClientNotifications',\n    help: 'HelpSupport',\n    account: 'ClientProfile'\n  };\n\n  // Navigation methods\n  const navigateToRoute = async (routeNameOrAction, params = {}, query = {}) => {\n    try {\n      // Handle both direct route names and action mappings\n      const routeName = routeMap[routeNameOrAction] || routeNameOrAction;\n      if (!routeName) {\n        console.warn(`No route found for action: ${routeNameOrAction}`);\n        return false;\n      }\n      await router.push({\n        name: routeName,\n        params,\n        query\n      });\n      return true;\n    } catch (error) {\n      console.error('Navigation error:', error);\n      return false;\n    }\n  };\n  const navigateBack = () => {\n    try {\n      if (window.history.length > 1) {\n        router.back();\n      } else {\n        // Fallback to dashboard if no history\n        navigateToRoute('dashboard');\n      }\n    } catch (error) {\n      console.error('Error navigating back:', error);\n      navigateToRoute('dashboard');\n    }\n  };\n  const navigateForward = () => {\n    try {\n      router.forward();\n    } catch (error) {\n      console.error('Error navigating forward:', error);\n    }\n  };\n  const navigateToExternal = (url, newTab = true) => {\n    try {\n      if (newTab) {\n        window.open(url, '_blank', 'noopener,noreferrer');\n      } else {\n        window.location.href = url;\n      }\n    } catch (error) {\n      console.error('Error navigating to external URL:', error);\n    }\n  };\n  const reloadCurrentRoute = async () => {\n    try {\n      const currentRoute = router.currentRoute.value;\n      await router.replace({\n        path: '/loading'\n      });\n      await nextTick();\n      await router.replace(currentRoute);\n    } catch (error) {\n      console.error('Error reloading route:', error);\n    }\n  };\n\n  // Scroll utilities\n  const scrollToElement = (element, options = {}) => {\n    if (!element) {\n      console.warn('Element not found for scrolling');\n      return;\n    }\n    const defaultOptions = {\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    };\n    const scrollOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    try {\n      if (element.scrollIntoView) {\n        element.scrollIntoView(scrollOptions);\n      } else {\n        // Fallback for older browsers\n        element.scrollTop = 0;\n      }\n    } catch (error) {\n      console.error('Error scrolling to element:', error);\n    }\n  };\n  const scrollToTop = (smooth = true) => {\n    try {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: smooth ? 'smooth' : 'auto'\n      });\n    } catch (error) {\n      console.error('Error scrolling to top:', error);\n    }\n  };\n  const scrollToBottom = (smooth = true) => {\n    try {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: smooth ? 'smooth' : 'auto'\n      });\n    } catch (error) {\n      console.error('Error scrolling to bottom:', error);\n    }\n  };\n  const scrollToSection = (sectionId, offset = 0) => {\n    try {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        const elementPosition = element.offsetTop - offset;\n        window.scrollTo({\n          top: elementPosition,\n          behavior: 'smooth'\n        });\n      } else {\n        console.warn(`Section with ID '${sectionId}' not found`);\n      }\n    } catch (error) {\n      console.error('Error scrolling to section:', error);\n    }\n  };\n\n  // URL utilities\n  const getCurrentPath = () => {\n    return router.currentRoute.value.path;\n  };\n  const getCurrentRouteName = () => {\n    return router.currentRoute.value.name;\n  };\n  const getRouteParams = () => {\n    return router.currentRoute.value.params;\n  };\n  const getRouteQuery = () => {\n    return router.currentRoute.value.query;\n  };\n  const buildRouteUrl = (routeName, params = {}, query = {}) => {\n    try {\n      return router.resolve({\n        name: routeName,\n        params,\n        query\n      }).href;\n    } catch (error) {\n      console.error('Error building route URL:', error);\n      return '#';\n    }\n  };\n\n  // Navigation guards\n  const canNavigateAway = () => {\n    // Add logic to check if user can leave current page\n    // For example, check for unsaved changes\n    return true;\n  };\n  const confirmNavigation = (message = 'Are you sure you want to leave this page?') => {\n    return window.confirm(message);\n  };\n\n  // Breadcrumb utilities\n  const generateBreadcrumbs = () => {\n    const route = router.currentRoute.value;\n    const breadcrumbs = [];\n\n    // Add home/dashboard\n    breadcrumbs.push({\n      name: 'Dashboard',\n      path: '/client/dashboard',\n      active: false\n    });\n\n    // Add current page\n    if (route.meta?.title && route.path !== '/client/dashboard') {\n      breadcrumbs.push({\n        name: route.meta.title,\n        path: route.path,\n        active: true\n      });\n    }\n    return breadcrumbs;\n  };\n\n  // Return public API\n  return {\n    // Navigation\n    navigateToRoute,\n    navigateBack,\n    navigateForward,\n    navigateToExternal,\n    reloadCurrentRoute,\n    // Scrolling\n    scrollToElement,\n    scrollToTop,\n    scrollToBottom,\n    scrollToSection,\n    // URL utilities\n    getCurrentPath,\n    getCurrentRouteName,\n    getRouteParams,\n    getRouteQuery,\n    buildRouteUrl,\n    // Navigation guards\n    canNavigateAway,\n    confirmNavigation,\n    // Breadcrumbs\n    generateBreadcrumbs,\n    // Route map\n    routeMap\n  };\n}","map":{"version":3,"names":["nextTick","useRouter","useNavigation","router","routeMap","dashboard","services","requests","documents","profile","settings","history","notifications","help","account","navigateToRoute","routeNameOrAction","params","query","routeName","console","warn","push","name","error","navigateBack","window","length","back","navigateForward","forward","navigateToExternal","url","newTab","open","location","href","reloadCurrentRoute","currentRoute","value","replace","path","scrollToElement","element","options","defaultOptions","behavior","block","inline","scrollOptions","scrollIntoView","scrollTop","scrollToTop","smooth","scrollTo","top","left","scrollToBottom","document","body","scrollHeight","scrollToSection","sectionId","offset","getElementById","elementPosition","offsetTop","getCurrentPath","getCurrentRouteName","getRouteParams","getRouteQuery","buildRouteUrl","resolve","canNavigateAway","confirmNavigation","message","confirm","generateBreadcrumbs","route","breadcrumbs","active","meta","title"],"sources":["D:/brgy_docu_hub/BOSFDR/src/composables/useNavigation.js"],"sourcesContent":["/**\n * Navigation Composable\n * Handles routing, navigation actions, and scroll behaviors\n * Implements proper error handling and accessibility features\n */\n\nimport { nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\n\nexport function useNavigation() {\n  const router = useRouter()\n\n  // Route mapping for menu actions\n  const routeMap = {\n    dashboard: 'ClientDashboard',\n    services: 'NewDocumentRequest',\n    requests: 'MyRequests',\n    documents: 'MyDocuments',\n    profile: 'ClientProfile',\n    settings: 'ClientSettings',\n    history: 'RequestHistory',\n    notifications: 'ClientNotifications',\n    help: 'HelpSupport',\n    account: 'ClientProfile'\n  }\n\n  // Navigation methods\n  const navigateToRoute = async (routeNameOrAction, params = {}, query = {}) => {\n    try {\n      // Handle both direct route names and action mappings\n      const routeName = routeMap[routeNameOrAction] || routeNameOrAction\n      \n      if (!routeName) {\n        console.warn(`No route found for action: ${routeNameOrAction}`)\n        return false\n      }\n\n      await router.push({\n        name: routeName,\n        params,\n        query\n      })\n      \n      return true\n    } catch (error) {\n      console.error('Navigation error:', error)\n      return false\n    }\n  }\n\n  const navigateBack = () => {\n    try {\n      if (window.history.length > 1) {\n        router.back()\n      } else {\n        // Fallback to dashboard if no history\n        navigateToRoute('dashboard')\n      }\n    } catch (error) {\n      console.error('Error navigating back:', error)\n      navigateToRoute('dashboard')\n    }\n  }\n\n  const navigateForward = () => {\n    try {\n      router.forward()\n    } catch (error) {\n      console.error('Error navigating forward:', error)\n    }\n  }\n\n  const navigateToExternal = (url, newTab = true) => {\n    try {\n      if (newTab) {\n        window.open(url, '_blank', 'noopener,noreferrer')\n      } else {\n        window.location.href = url\n      }\n    } catch (error) {\n      console.error('Error navigating to external URL:', error)\n    }\n  }\n\n  const reloadCurrentRoute = async () => {\n    try {\n      const currentRoute = router.currentRoute.value\n      await router.replace({\n        path: '/loading'\n      })\n      await nextTick()\n      await router.replace(currentRoute)\n    } catch (error) {\n      console.error('Error reloading route:', error)\n    }\n  }\n\n  // Scroll utilities\n  const scrollToElement = (element, options = {}) => {\n    if (!element) {\n      console.warn('Element not found for scrolling')\n      return\n    }\n\n    const defaultOptions = {\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    }\n\n    const scrollOptions = { ...defaultOptions, ...options }\n\n    try {\n      if (element.scrollIntoView) {\n        element.scrollIntoView(scrollOptions)\n      } else {\n        // Fallback for older browsers\n        element.scrollTop = 0\n      }\n    } catch (error) {\n      console.error('Error scrolling to element:', error)\n    }\n  }\n\n  const scrollToTop = (smooth = true) => {\n    try {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: smooth ? 'smooth' : 'auto'\n      })\n    } catch (error) {\n      console.error('Error scrolling to top:', error)\n    }\n  }\n\n  const scrollToBottom = (smooth = true) => {\n    try {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: smooth ? 'smooth' : 'auto'\n      })\n    } catch (error) {\n      console.error('Error scrolling to bottom:', error)\n    }\n  }\n\n  const scrollToSection = (sectionId, offset = 0) => {\n    try {\n      const element = document.getElementById(sectionId)\n      if (element) {\n        const elementPosition = element.offsetTop - offset\n        window.scrollTo({\n          top: elementPosition,\n          behavior: 'smooth'\n        })\n      } else {\n        console.warn(`Section with ID '${sectionId}' not found`)\n      }\n    } catch (error) {\n      console.error('Error scrolling to section:', error)\n    }\n  }\n\n  // URL utilities\n  const getCurrentPath = () => {\n    return router.currentRoute.value.path\n  }\n\n  const getCurrentRouteName = () => {\n    return router.currentRoute.value.name\n  }\n\n  const getRouteParams = () => {\n    return router.currentRoute.value.params\n  }\n\n  const getRouteQuery = () => {\n    return router.currentRoute.value.query\n  }\n\n  const buildRouteUrl = (routeName, params = {}, query = {}) => {\n    try {\n      return router.resolve({\n        name: routeName,\n        params,\n        query\n      }).href\n    } catch (error) {\n      console.error('Error building route URL:', error)\n      return '#'\n    }\n  }\n\n  // Navigation guards\n  const canNavigateAway = () => {\n    // Add logic to check if user can leave current page\n    // For example, check for unsaved changes\n    return true\n  }\n\n  const confirmNavigation = (message = 'Are you sure you want to leave this page?') => {\n    return window.confirm(message)\n  }\n\n  // Breadcrumb utilities\n  const generateBreadcrumbs = () => {\n    const route = router.currentRoute.value\n    const breadcrumbs = []\n    \n    // Add home/dashboard\n    breadcrumbs.push({\n      name: 'Dashboard',\n      path: '/client/dashboard',\n      active: false\n    })\n\n    // Add current page\n    if (route.meta?.title && route.path !== '/client/dashboard') {\n      breadcrumbs.push({\n        name: route.meta.title,\n        path: route.path,\n        active: true\n      })\n    }\n\n    return breadcrumbs\n  }\n\n  // Return public API\n  return {\n    // Navigation\n    navigateToRoute,\n    navigateBack,\n    navigateForward,\n    navigateToExternal,\n    reloadCurrentRoute,\n    \n    // Scrolling\n    scrollToElement,\n    scrollToTop,\n    scrollToBottom,\n    scrollToSection,\n    \n    // URL utilities\n    getCurrentPath,\n    getCurrentRouteName,\n    getRouteParams,\n    getRouteQuery,\n    buildRouteUrl,\n    \n    // Navigation guards\n    canNavigateAway,\n    confirmNavigation,\n    \n    // Breadcrumbs\n    generateBreadcrumbs,\n    \n    // Route map\n    routeMap\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}