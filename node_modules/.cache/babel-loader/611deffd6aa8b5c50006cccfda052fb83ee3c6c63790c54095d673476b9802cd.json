{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport adminDocumentService from '../../services/adminDocumentService';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement } from 'chart.js';\nimport { Bar, Doughnut } from 'vue-chartjs';\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement);\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport { jsPDF } from 'jspdf';\n// Import jspdf-autotable plugin - v5.x uses named export\nimport autoTable from 'jspdf-autotable';\n\n// Verify autoTable plugin is loaded at module level\nconsole.log('📦 Module loading - jsPDF autoTable check (v5.x):', {\n  jsPDFAvailable: typeof jsPDF !== 'undefined',\n  jsPDFVersion: jsPDF.version || 'unknown',\n  autoTableAvailable: typeof autoTable === 'function',\n  autoTableOnPrototype: jsPDF.prototype && typeof jsPDF.prototype.autoTable === 'function'\n});\nexport default {\n  name: 'AdminReports',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    Bar,\n    Doughnut\n  },\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      loading: false,\n      analyticsData: null,\n      selectedPeriod: 'month',\n      reportFilters: {\n        reportType: 'daily',\n        date_from: '',\n        date_to: '',\n        format: 'json'\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Document Request Analytics'\n          }\n        }\n      },\n      // PDF Export Form (copied from RequestHistory.vue)\n      pdfExportForm: {\n        reportType: 'daily',\n        selectedDate: '',\n        selectedWeek: '',\n        selectedMonth: '',\n        loading: false\n      }\n    };\n  },\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    },\n    trendsChartData() {\n      if (!this.analyticsData?.trends) return null;\n      return {\n        labels: this.analyticsData.trends.map(item => item.period),\n        datasets: [{\n          label: 'Completed Requests',\n          backgroundColor: '#28a745',\n          data: this.analyticsData.trends.map(item => item.completed_requests)\n        }, {\n          label: 'Rejected Requests',\n          backgroundColor: '#dc3545',\n          data: this.analyticsData.trends.map(item => item.rejected_requests)\n        }, {\n          label: 'Cancelled Requests',\n          backgroundColor: '#6c757d',\n          data: this.analyticsData.trends.map(item => item.cancelled_requests || 0)\n        }]\n      };\n    },\n    documentTypesChartData() {\n      if (!this.analyticsData?.documentTypes) return null;\n      return {\n        labels: this.analyticsData.documentTypes.map(item => item.type_name),\n        datasets: [{\n          data: this.analyticsData.documentTypes.map(item => item.request_count),\n          backgroundColor: ['#007bff', '#28a745', '#ffc107', '#dc3545', '#6f42c1', '#fd7e14']\n        }]\n      };\n    },\n    statusDistributionChartData() {\n      if (!this.analyticsData?.statusDistribution) return null;\n      return {\n        labels: this.analyticsData.statusDistribution.map(item => item.status_name),\n        datasets: [{\n          data: this.analyticsData.statusDistribution.map(item => item.percentage),\n          backgroundColor: ['#ffc107',\n          // Pending\n          '#17a2b8',\n          // Under Review\n          '#007bff',\n          // Processing\n          '#28a745',\n          // Completed\n          '#dc3545',\n          // Rejected\n          '#6c757d',\n          // Cancelled\n          '#fd7e14',\n          // Ready for Pickup\n          '#20c997',\n          // Additional Info Required\n          '#e83e8c' // Other\n          ]\n        }]\n      };\n    },\n    revenueChartData() {\n      if (!this.analyticsData?.trends) return null;\n      return {\n        labels: this.analyticsData.trends.map(item => item.period),\n        datasets: [{\n          label: 'Revenue (₱)',\n          borderColor: '#28a745',\n          backgroundColor: 'rgba(40, 167, 69, 0.1)',\n          data: this.analyticsData.trends.map(item => parseFloat(item.total_revenue || 0))\n        }]\n      };\n    }\n  },\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Ensure jsPDF autoTable plugin is available\n    this.ensureAutoTablePlugin();\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadAnalyticsData();\n    this.setDefaultDateRange();\n\n    // Initialize PDF export form with default values\n    this.initializePDFExportForm();\n  },\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n    setDefaultDateRange() {\n      const today = new Date();\n      const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n      this.reportFilters.date_to = today.toISOString().split('T')[0];\n      this.reportFilters.date_from = lastMonth.toISOString().split('T')[0];\n    },\n    async loadAnalyticsData() {\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.getAnalyticsData(this.selectedPeriod);\n        this.analyticsData = response.data;\n      } catch (error) {\n        console.error('Failed to load analytics data:', error);\n        this.$toast.error('Failed to load analytics data');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async onPeriodChange() {\n      await this.loadAnalyticsData();\n    },\n    async generateReport() {\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.generateReport(this.reportFilters.reportType, this.reportFilters);\n        if (this.reportFilters.format === 'csv') {\n          // CSV download is handled by the service\n          this.$toast.success('Report downloaded successfully');\n        } else {\n          // Display JSON data (could open in modal or new tab)\n          console.log('Report data:', response.data);\n          this.$toast.success('Report generated successfully');\n        }\n      } catch (error) {\n        console.error('Failed to generate report:', error);\n        this.$toast.error('Failed to generate report');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async downloadReport() {\n      try {\n        this.loading = true;\n        await adminDocumentService.downloadReport(this.reportFilters.reportType, this.reportFilters);\n        this.$toast.success('Report downloaded successfully');\n      } catch (error) {\n        console.error('Failed to download report:', error);\n        this.$toast.error('Failed to download report');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // PDF Export functionality (copied from RequestHistory.vue)\n    async exportToPDF() {\n      if (!this.isPDFExportValid()) {\n        this.$toast.error('Please select a valid date range for the report');\n        return;\n      }\n      try {\n        this.pdfExportForm.loading = true;\n\n        // Get filtered data based on report type\n        const reportData = await this.getReportData();\n        if (!reportData || !Array.isArray(reportData) || reportData.length === 0) {\n          this.$toast.warning('No data found for the selected date range');\n          return;\n        }\n\n        // Generate PDF\n        const pdf = new jsPDF();\n\n        // Debug: Check autoTable availability\n        console.log('🔧 PDF Debug Info:', {\n          autoTableAvailable: typeof pdf.autoTable === 'function',\n          pdfMethods: Object.getOwnPropertyNames(pdf).filter(name => typeof pdf[name] === 'function'),\n          reportDataLength: reportData.length,\n          sampleData: reportData.length > 0 ? reportData[0] : null\n        });\n\n        // Ensure autoTable plugin is available with multiple fallback methods\n        if (typeof pdf.autoTable !== 'function') {\n          console.warn('⚠️ autoTable not available on pdf instance, trying fallback methods...');\n\n          // Method 1: Try to manually attach from global\n          if (window.jsPDF && window.jsPDF.autoTable) {\n            pdf.autoTable = window.jsPDF.autoTable.bind(pdf);\n            console.log('✅ Attached autoTable from global jsPDF');\n          }\n          // Method 2: Try dynamic import\n          else {\n            try {\n              const autoTableModule = await import('jspdf-autotable');\n              if (autoTableModule.default) {\n                pdf.autoTable = autoTableModule.default.bind(pdf);\n                console.log('✅ Attached autoTable from dynamic import');\n              }\n            } catch (importError) {\n              console.error('❌ Failed to dynamically import autoTable:', importError);\n            }\n          }\n\n          // Final check\n          if (typeof pdf.autoTable !== 'function') {\n            console.error('❌ All autoTable loading methods failed!');\n\n            // Safe toast notification with fallback\n            if (this.$toast && this.$toast.error) {\n              this.$toast.error('PDF table plugin failed to load. The PDF will show summary text only.');\n            } else {\n              console.warn('⚠️ PDF table plugin failed to load. The PDF will show summary text only.');\n            }\n          }\n        } else {\n          console.log('✅ jsPDF autoTable plugin is available');\n        }\n        this.generatePDFReport(pdf, reportData);\n\n        // Download PDF\n        const filename = this.getPDFFilename();\n        pdf.save(filename);\n\n        // Check if toast is available before using it\n        if (this.$toast && this.$toast.success) {\n          this.$toast.success('PDF report generated successfully');\n        } else {\n          console.log('✅ PDF report generated successfully');\n        }\n      } catch (error) {\n        console.error('Failed to generate PDF report:', error);\n\n        // Safe toast notification with fallback\n        if (this.$toast && this.$toast.error) {\n          this.$toast.error('Failed to generate PDF report');\n        } else {\n          alert('Failed to generate PDF report. Check console for details.');\n        }\n      } finally {\n        this.pdfExportForm.loading = false;\n      }\n    },\n    // Get client requests data for the selected period\n    async getClientRequestsData() {\n      try {\n        // Calculate date range based on selected period\n        const dateRange = this.getDateRangeForPeriod();\n        const response = await adminDocumentService.getAllRequests({\n          date_from: dateRange.from,\n          date_to: dateRange.to,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n        if (response.success && response.data.requests) {\n          return response.data.requests;\n        }\n        return [];\n      } catch (error) {\n        console.error('Failed to fetch client requests data:', error);\n        return [];\n      }\n    },\n    // Get date range based on selected period\n    getDateRangeForPeriod() {\n      const today = new Date();\n      let fromDate;\n      switch (this.selectedPeriod) {\n        case 'day':\n          fromDate = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000); // Last 30 days\n          break;\n        case 'week':\n          fromDate = new Date(today.getTime() - 12 * 7 * 24 * 60 * 60 * 1000); // Last 12 weeks\n          break;\n        case 'month':\n        default:\n          fromDate = new Date(today.getTime() - 12 * 30 * 24 * 60 * 60 * 1000); // Last 12 months\n          break;\n      }\n      return {\n        from: fromDate.toISOString().split('T')[0],\n        to: today.toISOString().split('T')[0]\n      };\n    },\n    // Generate PDF content for analytics report\n    generateAnalyticsPDF(pdf, clientRequestsData = []) {\n      // Document Header\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY ANALYTICS REPORT', 105, 25, {\n        align: 'center'\n      });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n\n      // Report metadata\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'normal');\n      pdf.setTextColor(0, 0, 0);\n      const periodText = this.selectedPeriod.charAt(0).toUpperCase() + this.selectedPeriod.slice(1);\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      pdf.text(`Report Period: ${periodText}`, 20, 45);\n      pdf.text(`Generated: ${generatedDate}`, 20, 55);\n      let yPosition = 75;\n\n      // Request Trends Section\n      if (this.analyticsData.trends && this.analyticsData.trends.length > 0) {\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('REQUEST TRENDS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare trends data for table\n        const trendsHeaders = ['Period', 'Total Requests', 'Completed', 'Pending', 'Revenue (₱)'];\n        const trendsData = this.analyticsData.trends.map(trend => [trend.period || 'N/A', trend.total_requests || '0', trend.completed_requests || '0', trend.pending_requests || '0', this.formatCurrency(trend.total_revenue || 0)]);\n\n        // Add trends table\n        pdf.autoTable({\n          head: [trendsHeaders],\n          body: trendsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 40\n            },\n            1: {\n              cellWidth: 30,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 30,\n              halign: 'center'\n            },\n            3: {\n              cellWidth: 30,\n              halign: 'center'\n            },\n            4: {\n              cellWidth: 40,\n              halign: 'right'\n            }\n          }\n        });\n        yPosition = pdf.lastAutoTable.finalY + 20;\n      }\n\n      // Status Distribution Section\n      if (this.analyticsData.statusDistribution && this.analyticsData.statusDistribution.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 200) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('STATUS DISTRIBUTION', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare status distribution data for table\n        const statusHeaders = ['Status', 'Count', 'Percentage'];\n        const totalRequests = this.analyticsData.statusDistribution.reduce((sum, status) => sum + (parseInt(status.count) || 0), 0);\n        const statusData = this.analyticsData.statusDistribution.map(status => {\n          const count = parseInt(status.count) || 0;\n          const percentage = totalRequests > 0 ? (count / totalRequests * 100).toFixed(1) + '%' : '0%';\n          return [status.status_name || 'Unknown', count.toString(), percentage];\n        });\n\n        // Add status distribution table\n        pdf.autoTable({\n          head: [statusHeaders],\n          body: statusData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 80\n            },\n            1: {\n              cellWidth: 40,\n              halign: 'center'\n            },\n            2: {\n              cellWidth: 40,\n              halign: 'center'\n            }\n          }\n        });\n        yPosition = pdf.lastAutoTable.finalY + 20;\n      }\n\n      // Top Clients Section\n      if (this.analyticsData.topClients && this.analyticsData.topClients.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 200) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('TOP CLIENTS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare top clients data for table\n        const clientsHeaders = ['Client Name', 'Email', 'Total Requests', 'Total Spent (₱)'];\n        const clientsData = this.analyticsData.topClients.map(client => [client.client_name || 'N/A', client.email || 'N/A', client.request_count || '0', this.formatCurrency(client.total_spent || 0)]);\n\n        // Add top clients table\n        pdf.autoTable({\n          head: [clientsHeaders],\n          body: clientsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 60\n            },\n            1: {\n              cellWidth: 60\n            },\n            2: {\n              cellWidth: 30,\n              halign: 'center'\n            },\n            3: {\n              cellWidth: 40,\n              halign: 'right'\n            }\n          }\n        });\n      }\n\n      // Client Requests Section\n      if (clientRequestsData && clientRequestsData.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 150) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('CLIENT REQUESTS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare client requests data for table\n        const requestsHeaders = ['Request #', 'Client Name', 'Document Type', 'Status', 'Amount (₱)', 'Date'];\n        const requestsData = clientRequestsData.slice(0, 50).map(request => [\n        // Limit to 50 requests to avoid huge PDFs\n        request.request_number || 'N/A', this.getClientFullName(request) || 'N/A', request.document_type || 'N/A', this.formatStatus(request.status_name) || 'N/A', this.formatCurrency(request.total_document_fee || request.total_fee || 0), this.formatDate(request.requested_at) || 'N/A']);\n\n        // Add client requests table\n        pdf.autoTable({\n          head: [requestsHeaders],\n          body: requestsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 9,\n            cellPadding: 3\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 25\n            },\n            1: {\n              cellWidth: 40\n            },\n            2: {\n              cellWidth: 35\n            },\n            3: {\n              cellWidth: 25\n            },\n            4: {\n              cellWidth: 25,\n              halign: 'right'\n            },\n            5: {\n              cellWidth: 25,\n              halign: 'center'\n            }\n          }\n        });\n\n        // Add note if there are more requests\n        if (clientRequestsData.length > 50) {\n          const finalY = pdf.lastAutoTable.finalY + 10;\n          pdf.setFontSize(10);\n          pdf.setFont('helvetica', 'italic');\n          pdf.setTextColor(100, 100, 100);\n          pdf.text(`Note: Showing first 50 of ${clientRequestsData.length} total requests for this period.`, 20, finalY);\n        }\n      }\n\n      // Add footer\n      this.addAnalyticsPDFFooter(pdf);\n    },\n    // Add professional footer to analytics PDF\n    addAnalyticsPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(200, 200, 200);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(9);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(100, 100, 100);\n\n        // Left side - Generated info\n        const generatedDate = new Date().toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        pdf.text(`Generated on: ${generatedDate}`, 20, 285);\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, {\n          align: 'right'\n        });\n      }\n    },\n    // Format currency for display\n    formatCurrency(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `₱${numAmount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`;\n    },\n    // Helper methods for formatting data in PDF\n    getClientFullName(request) {\n      if (request.client_name) return request.client_name;\n      const firstName = request.client_first_name || request.first_name || '';\n      const lastName = request.client_last_name || request.last_name || '';\n      return `${firstName} ${lastName}`.trim() || 'N/A';\n    },\n    formatStatus(status) {\n      if (!status) return 'N/A';\n\n      // Capitalize first letter of each word\n      return status.toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        });\n      } catch (error) {\n        return 'N/A';\n      }\n    },\n    // Generate PDF report content (copied from RequestHistory.vue)\n    generatePDFReport(pdf, data) {\n      const dateRange = this.getDateRangeForReport();\n\n      // Document Header with improved styling\n      pdf.setFontSize(24);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY BULA', 105, 25, {\n        align: 'center'\n      });\n      pdf.setFontSize(18);\n      pdf.setTextColor(52, 152, 219);\n      pdf.text('DOCUMENT MANAGEMENT SYSTEM', 105, 35, {\n        align: 'center'\n      });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 40, 190, 40);\n\n      // Report title\n      pdf.setFontSize(16);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      const reportTitle = this.getReportTitle();\n      pdf.text(reportTitle, 20, 55);\n\n      // Date range with improved formatting\n      pdf.setFontSize(11);\n      pdf.setFont('helvetica', 'normal');\n      const dateRangeText = this.getDateRangeText(dateRange);\n      pdf.text(`Report Period: ${dateRangeText}`, 20, 65);\n\n      // Generated date\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      pdf.text(`Generated on: ${generatedDate}`, 20, 75);\n\n      // Summary statistics\n      const stats = this.calculateReportStats(data);\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'bold');\n      pdf.text('REPORT SUMMARY', 20, 90);\n      pdf.setFontSize(10);\n      pdf.setFont('helvetica', 'normal');\n      pdf.text(`Total Requests: ${stats.total}`, 20, 100);\n      pdf.text(`Completed: ${stats.completed}`, 20, 110);\n      pdf.text(`Pending: ${stats.pending}`, 20, 120);\n      pdf.text(`Rejected: ${stats.rejected}`, 20, 130);\n      pdf.text(`Total Revenue: ${this.formatCurrencyForPDF(stats.totalRevenue)}`, 20, 140);\n\n      // Requests table\n      if (data && data.length > 0) {\n        const tableData = data.slice(0, 100).map(request => [request.request_number || 'N/A', this.getClientFullName(request) || 'N/A', this.getBeneficiaryName(request) || 'N/A', this.getPickupPersonName(request) || 'N/A', request.document_type || 'N/A', this.formatStatus(request.status_name) || 'N/A', this.formatCurrencyForPDF(request.total_document_fee || request.total_fee || 0), this.formatDate(request.requested_at) || 'N/A']);\n\n        // Check if autoTable plugin is available and PDF instance is valid\n        if (typeof pdf.autoTable === 'function' && pdf && typeof pdf.getFontSize === 'function') {\n          try {\n            console.log('🔧 Calling autoTable with valid PDF instance');\n            pdf.autoTable({\n              head: [['Request #', 'Client Name', 'Beneficiary', 'Pickup Person', 'Document Type', 'Status', 'Amount', 'Date']],\n              body: tableData,\n              startY: 155,\n              theme: 'grid',\n              headStyles: {\n                fillColor: [52, 152, 219],\n                textColor: 255,\n                fontStyle: 'bold',\n                fontSize: 8\n              },\n              styles: {\n                fontSize: 7,\n                cellPadding: 3,\n                overflow: 'linebreak',\n                cellWidth: 'wrap'\n              },\n              columnStyles: {\n                0: {\n                  cellWidth: 20\n                },\n                // Request #\n                1: {\n                  cellWidth: 25,\n                  overflow: 'linebreak'\n                },\n                // Client Name (wrappable)\n                2: {\n                  cellWidth: 25,\n                  overflow: 'linebreak'\n                },\n                // Beneficiary (wrappable)\n                3: {\n                  cellWidth: 22,\n                  overflow: 'linebreak'\n                },\n                // Pickup Person (wrappable)\n                4: {\n                  cellWidth: 22\n                },\n                // Document Type\n                5: {\n                  cellWidth: 18\n                },\n                // Status\n                6: {\n                  cellWidth: 20,\n                  halign: 'right'\n                },\n                // Amount\n                7: {\n                  cellWidth: 18,\n                  halign: 'center'\n                } // Date\n              }\n            });\n            console.log('✅ AutoTable completed successfully');\n          } catch (autoTableError) {\n            console.error('❌ AutoTable call failed:', autoTableError);\n            throw new Error(`AutoTable failed: ${autoTableError.message}`);\n          }\n        } else {\n          // Enhanced fallback: Show detailed request information without table\n          pdf.setFontSize(12);\n          pdf.setFont('helvetica', 'bold');\n          pdf.text('CLIENT REQUESTS SUMMARY', 20, 155);\n          pdf.setFontSize(10);\n          pdf.setFont('helvetica', 'normal');\n          pdf.text(`Total requests found: ${tableData.length}`, 20, 170);\n\n          // Show first few requests in text format\n          let yPos = 185;\n          const maxRequests = Math.min(5, tableData.length);\n          for (let i = 0; i < maxRequests; i++) {\n            const row = tableData[i];\n            pdf.text(`${i + 1}. ${row[0]} - ${row[1]} (${row[2]}) - ${row[6]}`, 20, yPos);\n            yPos += 15;\n            if (yPos > 260) break; // Prevent overflow\n          }\n          if (tableData.length > maxRequests) {\n            pdf.text(`... and ${tableData.length - maxRequests} more requests`, 20, yPos + 10);\n          }\n          console.warn('jsPDF autoTable plugin not available, using enhanced fallback display');\n        }\n      }\n\n      // Add footer\n      this.addAnalyticsPDFFooter(pdf);\n    },\n    // Calculate report statistics (copied from RequestHistory.vue)\n    calculateReportStats(data) {\n      if (!data || !Array.isArray(data) || data.length === 0) {\n        return {\n          total: 0,\n          completed: 0,\n          pending: 0,\n          rejected: 0,\n          totalRevenue: 0\n        };\n      }\n      const stats = {\n        total: data.length,\n        completed: 0,\n        pending: 0,\n        rejected: 0,\n        totalRevenue: 0\n      };\n      data.forEach(request => {\n        const status = (request.status_name || '').toLowerCase();\n        if (status === 'completed') {\n          stats.completed++;\n          const fee = parseFloat(request.total_document_fee || request.total_fee || 0);\n          stats.totalRevenue += fee;\n        } else if (status === 'rejected' || status === 'cancelled') {\n          stats.rejected++;\n        } else {\n          stats.pending++;\n        }\n      });\n      return stats;\n    },\n    formatCurrencyForPDF(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `PHP ${numAmount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`;\n    },\n    // Get beneficiary name for third-party requests\n    getBeneficiaryName(request) {\n      console.log('🔍 getBeneficiaryName called with:', {\n        is_third_party_request: request.is_third_party_request,\n        beneficiary_name: request.beneficiary_name,\n        beneficiary: request.beneficiary\n      });\n      if (!request.is_third_party_request) {\n        return 'Self';\n      }\n\n      // Try different possible field names for beneficiary\n      if (request.beneficiary_name) {\n        return request.beneficiary_name;\n      }\n      if (request.beneficiary && request.beneficiary.full_name) {\n        return request.beneficiary.full_name;\n      }\n      if (request.beneficiary) {\n        const firstName = request.beneficiary.first_name || '';\n        const lastName = request.beneficiary.last_name || '';\n        const fullName = `${firstName} ${lastName}`.trim();\n        if (fullName) return fullName;\n      }\n      return 'N/A';\n    },\n    // Get pickup person name\n    getPickupPersonName(request) {\n      console.log('🔍 getPickupPersonName called with:', {\n        pickup_person_name: request.pickup_person_name,\n        authorized_pickup: request.authorized_pickup\n      });\n\n      // Check for pickup person name field\n      if (request.pickup_person_name) {\n        return request.pickup_person_name;\n      }\n\n      // Check for authorized pickup object\n      if (request.authorized_pickup && request.authorized_pickup.full_name) {\n        return request.authorized_pickup.full_name;\n      }\n\n      // Default to client pickup\n      return 'Client';\n    },\n    // Ensure jsPDF autoTable plugin is available\n    ensureAutoTablePlugin() {\n      try {\n        const testPdf = new jsPDF();\n        if (typeof testPdf.autoTable === 'function') {\n          console.log('✅ jsPDF autoTable plugin is available');\n          return true;\n        } else {\n          console.warn('⚠️ jsPDF autoTable plugin not available, attempting manual initialization');\n\n          // Try to manually initialize the plugin\n          if (window.jsPDF && window.jsPDF.autoTable) {\n            jsPDF.prototype.autoTable = window.jsPDF.autoTable;\n            console.log('✅ Manually attached autoTable from global');\n            return true;\n          }\n          console.error('❌ Failed to initialize autoTable plugin');\n          return false;\n        }\n      } catch (error) {\n        console.error('❌ Error checking autoTable plugin:', error);\n        return false;\n      }\n    },\n    // Initialize PDF export form with default values (copied from RequestHistory.vue)\n    initializePDFExportForm() {\n      // Set default date to today\n      this.pdfExportForm.selectedDate = this.getCurrentDate();\n\n      // Set default week to current week\n      this.pdfExportForm.selectedWeek = this.getCurrentWeek();\n\n      // Set default month to current month\n      this.pdfExportForm.selectedMonth = this.getCurrentMonth();\n    },\n    // Get report data based on selected filters (copied from RequestHistory.vue)\n    async getReportData() {\n      const reportFilters = {\n        status: '',\n        // Get all statuses\n        document_type: '',\n        priority: '',\n        search: ''\n      };\n\n      // Set date range based on report type\n      const dateRange = this.getDateRangeForReport();\n      reportFilters.date_from = dateRange.from;\n      reportFilters.date_to = dateRange.to;\n      try {\n        console.log('📊 Fetching report data with filters:', reportFilters);\n        console.log('📊 Date range details:', {\n          reportType: this.pdfExportForm.reportType,\n          selectedDate: this.pdfExportForm.selectedDate,\n          selectedWeek: this.pdfExportForm.selectedWeek,\n          selectedMonth: this.pdfExportForm.selectedMonth,\n          calculatedRange: dateRange\n        });\n        const response = await adminDocumentService.getAllRequests({\n          ...reportFilters,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n        if (response.success && response.data && response.data.requests) {\n          console.log(`📊 Retrieved ${response.data.requests.length} requests for report`);\n\n          // Debug: Log sample request data to check fields\n          if (response.data.requests.length > 0) {\n            console.log('📊 Sample request data:', response.data.requests[0]);\n            console.log('📊 Available fields:', Object.keys(response.data.requests[0]));\n            console.log('📊 Beneficiary fields check:', {\n              is_third_party_request: response.data.requests[0].is_third_party_request,\n              beneficiary_name: response.data.requests[0].beneficiary_name,\n              pickup_person_name: response.data.requests[0].pickup_person_name\n            });\n          }\n          return response.data.requests;\n        } else {\n          console.warn('📊 No data returned from API');\n          return [];\n        }\n      } catch (error) {\n        console.error('📊 Failed to fetch report data:', error);\n        throw error;\n      }\n    },\n    // Get date range based on report type and selected values (copied from RequestHistory.vue)\n    getDateRangeForReport() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return {\n            from: selectedDate,\n            to: selectedDate\n          };\n        case 'weekly':\n          if (selectedWeek) {\n            const [year, week] = selectedWeek.split('-W');\n            const startDate = this.getDateFromWeek(parseInt(year), parseInt(week));\n            const endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n        case 'monthly':\n          if (selectedMonth) {\n            const [year, month] = selectedMonth.split('-');\n            const startDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n            const endDate = new Date(parseInt(year), parseInt(month), 0);\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n      }\n\n      // Fallback to today\n      const today = new Date().toISOString().split('T')[0];\n      return {\n        from: today,\n        to: today\n      };\n    },\n    // Helper methods for PDF export (copied from RequestHistory.vue)\n    isPDFExportValid() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return selectedDate !== '';\n        case 'weekly':\n          return selectedWeek !== '';\n        case 'monthly':\n          return selectedMonth !== '';\n        default:\n          return false;\n      }\n    },\n    getPDFFilename() {\n      const {\n        reportType,\n        selectedDate,\n        selectedWeek,\n        selectedMonth\n      } = this.pdfExportForm;\n      const timestamp = new Date().toISOString().split('T')[0];\n      switch (reportType) {\n        case 'daily':\n          return `daily_report_${selectedDate}_${timestamp}.pdf`;\n        case 'weekly':\n          return `weekly_report_${selectedWeek}_${timestamp}.pdf`;\n        case 'monthly':\n          return `monthly_report_${selectedMonth}_${timestamp}.pdf`;\n        default:\n          return `report_${timestamp}.pdf`;\n      }\n    },\n    getReportTitle() {\n      const {\n        reportType\n      } = this.pdfExportForm;\n      switch (reportType) {\n        case 'daily':\n          return 'Daily Document Request Report';\n        case 'weekly':\n          return 'Weekly Document Request Report';\n        case 'monthly':\n          return 'Monthly Document Request Report';\n        default:\n          return 'Document Request Report';\n      }\n    },\n    getDateRangeText(dateRange) {\n      if (dateRange.from === dateRange.to) {\n        return this.formatDate(dateRange.from);\n      }\n      return `${this.formatDate(dateRange.from)} to ${this.formatDate(dateRange.to)}`;\n    },\n    // Helper methods for date handling (copied from RequestHistory.vue)\n    getCurrentDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n    getCurrentWeek() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const week = this.getWeekNumber(now);\n      return `${year}-W${week.toString().padStart(2, '0')}`;\n    },\n    getCurrentMonth() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = (now.getMonth() + 1).toString().padStart(2, '0');\n      return `${year}-${month}`;\n    },\n    getWeekNumber(date) {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      const dayNum = d.getUTCDay() || 7;\n      d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n    },\n    getDateFromWeek(year, week) {\n      const simple = new Date(year, 0, 1 + (week - 1) * 7);\n      const dow = simple.getDay();\n      const ISOweekStart = simple;\n      if (dow <= 4) {\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n      } else {\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n      }\n      return ISOweekStart;\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","adminDocumentService","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","LineElement","PointElement","Bar","Doughnut","register","unifiedAuthService","jsPDF","autoTable","console","log","jsPDFAvailable","jsPDFVersion","version","autoTableAvailable","autoTableOnPrototype","prototype","name","components","data","sidebarCollapsed","showUserDropdown","isMobile","adminData","loading","analyticsData","selectedPeriod","reportFilters","reportType","date_from","date_to","format","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","pdfExportForm","selectedDate","selectedWeek","selectedMonth","computed","activeMenu","path","$route","includes","trendsChartData","trends","labels","map","item","period","datasets","label","backgroundColor","completed_requests","rejected_requests","cancelled_requests","documentTypesChartData","documentTypes","type_name","request_count","statusDistributionChartData","statusDistribution","status_name","percentage","revenueChartData","borderColor","parseFloat","total_revenue","mounted","isLoggedIn","getUserType","$router","push","ensureAutoTablePlugin","initializeUI","loadAdminProfile","loadAnalyticsData","setDefaultDateRange","initializePDFExportForm","beforeUnmount","handleResize","window","removeEventListener","methods","innerWidth","saved","localStorage","getItem","JSON","parse","wasMobile","addEventListener","handleSidebarToggle","setItem","stringify","handleMenuChange","menu","routes","handleUserDropdownToggle","handleMenuAction","action","closeMobileSidebar","handleLogout","logout","user","getCurrentUser","profile","first_name","username","role","error","today","Date","lastMonth","getFullYear","getMonth","getDate","toISOString","split","response","getAnalyticsData","$toast","onPeriodChange","generateReport","success","downloadReport","exportToPDF","isPDFExportValid","reportData","getReportData","Array","isArray","length","warning","pdf","pdfMethods","Object","getOwnPropertyNames","filter","reportDataLength","sampleData","warn","bind","autoTableModule","default","importError","generatePDFReport","filename","getPDFFilename","save","alert","getClientRequestsData","dateRange","getDateRangeForPeriod","getAllRequests","from","to","page","limit","requests","fromDate","getTime","generateAnalyticsPDF","clientRequestsData","setFontSize","setFont","setTextColor","align","setDrawColor","setLineWidth","line","periodText","charAt","toUpperCase","slice","generatedDate","toLocaleDateString","year","month","day","yPosition","trendsHeaders","trendsData","trend","total_requests","pending_requests","formatCurrency","head","body","startY","theme","headStyles","fillColor","textColor","fontStyle","styles","fontSize","cellPadding","columnStyles","cellWidth","halign","lastAutoTable","finalY","addPage","statusHeaders","totalRequests","reduce","sum","status","parseInt","count","statusData","toFixed","toString","topClients","clientsHeaders","clientsData","client","client_name","email","total_spent","requestsHeaders","requestsData","request","request_number","getClientFullName","document_type","formatStatus","total_document_fee","total_fee","formatDate","requested_at","addAnalyticsPDFFooter","pageCount","internal","getNumberOfPages","i","setPage","hour","minute","amount","numAmount","toLocaleString","minimumFractionDigits","maximumFractionDigits","firstName","client_first_name","lastName","client_last_name","last_name","trim","toLowerCase","replace","l","dateString","date","getDateRangeForReport","reportTitle","getReportTitle","dateRangeText","getDateRangeText","stats","calculateReportStats","total","completed","pending","rejected","formatCurrencyForPDF","totalRevenue","tableData","getBeneficiaryName","getPickupPersonName","getFontSize","overflow","autoTableError","Error","message","yPos","maxRequests","Math","min","row","forEach","fee","is_third_party_request","beneficiary_name","beneficiary","full_name","fullName","pickup_person_name","authorized_pickup","testPdf","getCurrentDate","getCurrentWeek","getCurrentMonth","priority","search","calculatedRange","keys","week","startDate","getDateFromWeek","endDate","setDate","timestamp","now","getWeekNumber","padStart","d","UTC","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","simple","dow","getDay","ISOweekStart"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminReports.vue"],"sourcesContent":["<template>\n  <div class=\"admin-reports\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :notificationCount=\"unreadNotifications\"\n      :showNotifications=\"showNotifications\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @notification-toggle=\"handleNotificationToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n      @view-all-notifications=\"handleViewAllNotifications\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid py-4\">\n          <!-- Report Controls -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header\">\n                  <div class=\"row align-items-center\">\n                    <div class=\"col-md-6\">\n                      <h5 class=\"card-title mb-0\">\n                        <i class=\"fas fa-chart-line me-2\"></i>\n                        Analytics Reports\n                      </h5>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"d-flex justify-content-end align-items-center gap-3\">\n                        <!-- Period Selection -->\n                        <div class=\"d-flex align-items-center\">\n                          <label class=\"form-label mb-0 me-2\">Period:</label>\n                          <select\n                            v-model=\"selectedPeriod\"\n                            @change=\"onPeriodChange\"\n                            class=\"form-select form-select-sm\"\n                            style=\"width: auto;\"\n                          >\n                            <option value=\"day\">Daily</option>\n                            <option value=\"week\">Weekly</option>\n                            <option value=\"month\">Monthly</option>\n                          </select>\n                        </div>\n\n                        <!-- PDF Export Button -->\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-danger btn-sm\"\n                          @click=\"exportToPDF\"\n                          :disabled=\"!isPDFExportValid() || pdfExportForm.loading\"\n                        >\n                          <i class=\"fas fa-file-pdf me-1\" :class=\"{ 'fa-spin': pdfExportForm.loading }\"></i>\n                          {{ pdfExportForm.loading ? 'Generating...' : 'Export PDF' }}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- PDF Export Configuration -->\n                <div class=\"card-header border-top\">\n                  <h6 class=\"mb-3\">\n                    <i class=\"fas fa-file-pdf text-danger me-2\"></i>\n                    PDF Export Configuration\n                  </h6>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Report Type</label>\n                      <select class=\"form-select\" v-model=\"pdfExportForm.reportType\">\n                        <option value=\"daily\">Daily Report</option>\n                        <option value=\"weekly\">Weekly Report</option>\n                        <option value=\"monthly\">Monthly Report</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'daily'\">\n                      <label class=\"form-label\">Select Date</label>\n                      <input\n                        type=\"date\"\n                        class=\"form-control\"\n                        v-model=\"pdfExportForm.selectedDate\"\n                        :max=\"getCurrentDate()\"\n                      >\n                    </div>\n                    <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'weekly'\">\n                      <label class=\"form-label\">Select Week</label>\n                      <input\n                        type=\"week\"\n                        class=\"form-control\"\n                        v-model=\"pdfExportForm.selectedWeek\"\n                        :max=\"getCurrentWeek()\"\n                      >\n                    </div>\n                    <div class=\"col-md-3 mb-3\" v-if=\"pdfExportForm.reportType === 'monthly'\">\n                      <label class=\"form-label\">Select Month</label>\n                      <input\n                        type=\"month\"\n                        class=\"form-control\"\n                        v-model=\"pdfExportForm.selectedMonth\"\n                        :max=\"getCurrentMonth()\"\n                      >\n                    </div>\n                    <div class=\"col-md-3 mb-3 d-flex align-items-end\">\n                      <button\n                        class=\"btn btn-danger\"\n                        @click=\"exportToPDF\"\n                        :disabled=\"!isPDFExportValid() || pdfExportForm.loading\"\n                      >\n                        <i class=\"fas fa-file-pdf me-1\" :class=\"{ 'fa-spin': pdfExportForm.loading }\"></i>\n                        {{ pdfExportForm.loading ? 'Generating...' : 'Export PDF' }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"card-body\">\n                  <div v-if=\"loading\" class=\"text-center py-4\">\n                    <div class=\"spinner-border text-primary\" role=\"status\">\n                      <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                  </div>\n\n                  <div v-else-if=\"analyticsData\" class=\"row\">\n                    <!-- Request Trends Chart -->\n                    <div class=\"col-lg-8 mb-4\">\n                      <div class=\"card h-100\">\n                        <div class=\"card-body\">\n                          <div style=\"height: 300px;\">\n                            <Bar\n                              v-if=\"trendsChartData\"\n                              :data=\"trendsChartData\"\n                              :options=\"chartOptions\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Status Distribution -->\n                    <div class=\"col-lg-6 mb-4\">\n                      <div class=\"card h-100\">\n                        <div class=\"card-header\">\n                          <h6 class=\"card-title mb-0\">Status Distribution</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div style=\"height: 300px;\">\n                            <Doughnut\n                              v-if=\"statusDistributionChartData\"\n                              :data=\"statusDistributionChartData\"\n                              :options=\"chartOptions\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Top Clients -->\n                    <div class=\"col-12 mb-4\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                          <h6 class=\"card-title mb-0\">Clients</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                              <thead>\n                                <tr>\n                                  <th>Client Name</th>\n                                  <th>Total Requests</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr v-for=\"client in analyticsData.topClients\" :key=\"client.client_name\">\n                                  <td>{{ client.client_name }}</td>\n                                  <td>{{ client.request_count }}</td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport adminDocumentService from '../../services/adminDocumentService';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement } from 'chart.js';\nimport { Bar, Doughnut } from 'vue-chartjs';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement);\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport { jsPDF } from 'jspdf';\n// Import jspdf-autotable plugin - v5.x uses named export\nimport autoTable from 'jspdf-autotable';\n\n// Verify autoTable plugin is loaded at module level\nconsole.log('📦 Module loading - jsPDF autoTable check (v5.x):', {\n  jsPDFAvailable: typeof jsPDF !== 'undefined',\n  jsPDFVersion: jsPDF.version || 'unknown',\n  autoTableAvailable: typeof autoTable === 'function',\n  autoTableOnPrototype: jsPDF.prototype && typeof jsPDF.prototype.autoTable === 'function'\n});\n\nexport default {\n  name: 'AdminReports',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    Bar,\n    Doughnut\n  },\n\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      loading: false,\n      analyticsData: null,\n      selectedPeriod: 'month',\n      reportFilters: {\n        reportType: 'daily',\n        date_from: '',\n        date_to: '',\n        format: 'json'\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Document Request Analytics'\n          }\n        }\n      },\n\n      // PDF Export Form (copied from RequestHistory.vue)\n      pdfExportForm: {\n        reportType: 'daily',\n        selectedDate: '',\n        selectedWeek: '',\n        selectedMonth: '',\n        loading: false\n      }\n    };\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    },\n    trendsChartData() {\n      if (!this.analyticsData?.trends) return null;\n\n      return {\n        labels: this.analyticsData.trends.map(item => item.period),\n        datasets: [\n          {\n            label: 'Completed Requests',\n            backgroundColor: '#28a745',\n            data: this.analyticsData.trends.map(item => item.completed_requests)\n          },\n          {\n            label: 'Rejected Requests',\n            backgroundColor: '#dc3545',\n            data: this.analyticsData.trends.map(item => item.rejected_requests)\n          },\n          {\n            label: 'Cancelled Requests',\n            backgroundColor: '#6c757d',\n            data: this.analyticsData.trends.map(item => item.cancelled_requests || 0)\n          }\n        ]\n      };\n    },\n    documentTypesChartData() {\n      if (!this.analyticsData?.documentTypes) return null;\n\n      return {\n        labels: this.analyticsData.documentTypes.map(item => item.type_name),\n        datasets: [{\n          data: this.analyticsData.documentTypes.map(item => item.request_count),\n          backgroundColor: [\n            '#007bff',\n            '#28a745',\n            '#ffc107',\n            '#dc3545',\n            '#6f42c1',\n            '#fd7e14'\n          ]\n        }]\n      };\n    },\n    statusDistributionChartData() {\n      if (!this.analyticsData?.statusDistribution) return null;\n\n      return {\n        labels: this.analyticsData.statusDistribution.map(item => item.status_name),\n        datasets: [{\n          data: this.analyticsData.statusDistribution.map(item => item.percentage),\n          backgroundColor: [\n            '#ffc107', // Pending\n            '#17a2b8', // Under Review\n            '#007bff', // Processing\n            '#28a745', // Completed\n            '#dc3545', // Rejected\n            '#6c757d', // Cancelled\n            '#fd7e14', // Ready for Pickup\n            '#20c997', // Additional Info Required\n            '#e83e8c'  // Other\n          ]\n        }]\n      };\n    },\n    revenueChartData() {\n      if (!this.analyticsData?.trends) return null;\n\n      return {\n        labels: this.analyticsData.trends.map(item => item.period),\n        datasets: [{\n          label: 'Revenue (₱)',\n          borderColor: '#28a745',\n          backgroundColor: 'rgba(40, 167, 69, 0.1)',\n          data: this.analyticsData.trends.map(item => parseFloat(item.total_revenue || 0))\n        }]\n      };\n    }\n  },\n\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Ensure jsPDF autoTable plugin is available\n    this.ensureAutoTablePlugin();\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadAnalyticsData();\n    this.setDefaultDateRange();\n\n    // Initialize PDF export form with default values\n    this.initializePDFExportForm();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n\n\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n\n    setDefaultDateRange() {\n      const today = new Date();\n      const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n\n      this.reportFilters.date_to = today.toISOString().split('T')[0];\n      this.reportFilters.date_from = lastMonth.toISOString().split('T')[0];\n    },\n\n    async loadAnalyticsData() {\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.getAnalyticsData(this.selectedPeriod);\n        this.analyticsData = response.data;\n      } catch (error) {\n        console.error('Failed to load analytics data:', error);\n        this.$toast.error('Failed to load analytics data');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async onPeriodChange() {\n      await this.loadAnalyticsData();\n    },\n\n    async generateReport() {\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.generateReport(\n          this.reportFilters.reportType,\n          this.reportFilters\n        );\n\n        if (this.reportFilters.format === 'csv') {\n          // CSV download is handled by the service\n          this.$toast.success('Report downloaded successfully');\n        } else {\n          // Display JSON data (could open in modal or new tab)\n          console.log('Report data:', response.data);\n          this.$toast.success('Report generated successfully');\n        }\n      } catch (error) {\n        console.error('Failed to generate report:', error);\n        this.$toast.error('Failed to generate report');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async downloadReport() {\n      try {\n        this.loading = true;\n        await adminDocumentService.downloadReport(\n          this.reportFilters.reportType,\n          this.reportFilters\n        );\n        this.$toast.success('Report downloaded successfully');\n      } catch (error) {\n        console.error('Failed to download report:', error);\n        this.$toast.error('Failed to download report');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // PDF Export functionality (copied from RequestHistory.vue)\n    async exportToPDF() {\n      if (!this.isPDFExportValid()) {\n        this.$toast.error('Please select a valid date range for the report');\n        return;\n      }\n\n      try {\n        this.pdfExportForm.loading = true;\n\n        // Get filtered data based on report type\n        const reportData = await this.getReportData();\n\n        if (!reportData || !Array.isArray(reportData) || reportData.length === 0) {\n          this.$toast.warning('No data found for the selected date range');\n          return;\n        }\n\n        // Generate PDF\n        const pdf = new jsPDF();\n\n        // Debug: Check autoTable availability\n        console.log('🔧 PDF Debug Info:', {\n          autoTableAvailable: typeof pdf.autoTable === 'function',\n          pdfMethods: Object.getOwnPropertyNames(pdf).filter(name => typeof pdf[name] === 'function'),\n          reportDataLength: reportData.length,\n          sampleData: reportData.length > 0 ? reportData[0] : null\n        });\n\n        // Ensure autoTable plugin is available with multiple fallback methods\n        if (typeof pdf.autoTable !== 'function') {\n          console.warn('⚠️ autoTable not available on pdf instance, trying fallback methods...');\n\n          // Method 1: Try to manually attach from global\n          if (window.jsPDF && window.jsPDF.autoTable) {\n            pdf.autoTable = window.jsPDF.autoTable.bind(pdf);\n            console.log('✅ Attached autoTable from global jsPDF');\n          }\n          // Method 2: Try dynamic import\n          else {\n            try {\n              const autoTableModule = await import('jspdf-autotable');\n              if (autoTableModule.default) {\n                pdf.autoTable = autoTableModule.default.bind(pdf);\n                console.log('✅ Attached autoTable from dynamic import');\n              }\n            } catch (importError) {\n              console.error('❌ Failed to dynamically import autoTable:', importError);\n            }\n          }\n\n          // Final check\n          if (typeof pdf.autoTable !== 'function') {\n            console.error('❌ All autoTable loading methods failed!');\n\n            // Safe toast notification with fallback\n            if (this.$toast && this.$toast.error) {\n              this.$toast.error('PDF table plugin failed to load. The PDF will show summary text only.');\n            } else {\n              console.warn('⚠️ PDF table plugin failed to load. The PDF will show summary text only.');\n            }\n          }\n        } else {\n          console.log('✅ jsPDF autoTable plugin is available');\n        }\n\n        this.generatePDFReport(pdf, reportData);\n\n        // Download PDF\n        const filename = this.getPDFFilename();\n        pdf.save(filename);\n\n        // Check if toast is available before using it\n        if (this.$toast && this.$toast.success) {\n          this.$toast.success('PDF report generated successfully');\n        } else {\n          console.log('✅ PDF report generated successfully');\n        }\n      } catch (error) {\n        console.error('Failed to generate PDF report:', error);\n\n        // Safe toast notification with fallback\n        if (this.$toast && this.$toast.error) {\n          this.$toast.error('Failed to generate PDF report');\n        } else {\n          alert('Failed to generate PDF report. Check console for details.');\n        }\n      } finally {\n        this.pdfExportForm.loading = false;\n      }\n    },\n\n    // Get client requests data for the selected period\n    async getClientRequestsData() {\n      try {\n        // Calculate date range based on selected period\n        const dateRange = this.getDateRangeForPeriod();\n\n        const response = await adminDocumentService.getAllRequests({\n          date_from: dateRange.from,\n          date_to: dateRange.to,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n\n        if (response.success && response.data.requests) {\n          return response.data.requests;\n        }\n\n        return [];\n      } catch (error) {\n        console.error('Failed to fetch client requests data:', error);\n        return [];\n      }\n    },\n\n    // Get date range based on selected period\n    getDateRangeForPeriod() {\n      const today = new Date();\n      let fromDate;\n\n      switch (this.selectedPeriod) {\n        case 'day':\n          fromDate = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000)); // Last 30 days\n          break;\n        case 'week':\n          fromDate = new Date(today.getTime() - (12 * 7 * 24 * 60 * 60 * 1000)); // Last 12 weeks\n          break;\n        case 'month':\n        default:\n          fromDate = new Date(today.getTime() - (12 * 30 * 24 * 60 * 60 * 1000)); // Last 12 months\n          break;\n      }\n\n      return {\n        from: fromDate.toISOString().split('T')[0],\n        to: today.toISOString().split('T')[0]\n      };\n    },\n\n    // Generate PDF content for analytics report\n    generateAnalyticsPDF(pdf, clientRequestsData = []) {\n      // Document Header\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY ANALYTICS REPORT', 105, 25, { align: 'center' });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n\n      // Report metadata\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'normal');\n      pdf.setTextColor(0, 0, 0);\n\n      const periodText = this.selectedPeriod.charAt(0).toUpperCase() + this.selectedPeriod.slice(1);\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n\n      pdf.text(`Report Period: ${periodText}`, 20, 45);\n      pdf.text(`Generated: ${generatedDate}`, 20, 55);\n\n      let yPosition = 75;\n\n      // Request Trends Section\n      if (this.analyticsData.trends && this.analyticsData.trends.length > 0) {\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('REQUEST TRENDS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare trends data for table\n        const trendsHeaders = ['Period', 'Total Requests', 'Completed', 'Pending', 'Revenue (₱)'];\n        const trendsData = this.analyticsData.trends.map(trend => [\n          trend.period || 'N/A',\n          trend.total_requests || '0',\n          trend.completed_requests || '0',\n          trend.pending_requests || '0',\n          this.formatCurrency(trend.total_revenue || 0)\n        ]);\n\n        // Add trends table\n        pdf.autoTable({\n          head: [trendsHeaders],\n          body: trendsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: { cellWidth: 40 },\n            1: { cellWidth: 30, halign: 'center' },\n            2: { cellWidth: 30, halign: 'center' },\n            3: { cellWidth: 30, halign: 'center' },\n            4: { cellWidth: 40, halign: 'right' }\n          }\n        });\n\n        yPosition = pdf.lastAutoTable.finalY + 20;\n      }\n\n      // Status Distribution Section\n      if (this.analyticsData.statusDistribution && this.analyticsData.statusDistribution.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 200) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('STATUS DISTRIBUTION', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare status distribution data for table\n        const statusHeaders = ['Status', 'Count', 'Percentage'];\n        const totalRequests = this.analyticsData.statusDistribution.reduce((sum, status) => sum + (parseInt(status.count) || 0), 0);\n\n        const statusData = this.analyticsData.statusDistribution.map(status => {\n          const count = parseInt(status.count) || 0;\n          const percentage = totalRequests > 0 ? ((count / totalRequests) * 100).toFixed(1) + '%' : '0%';\n          return [\n            status.status_name || 'Unknown',\n            count.toString(),\n            percentage\n          ];\n        });\n\n        // Add status distribution table\n        pdf.autoTable({\n          head: [statusHeaders],\n          body: statusData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: { cellWidth: 80 },\n            1: { cellWidth: 40, halign: 'center' },\n            2: { cellWidth: 40, halign: 'center' }\n          }\n        });\n\n        yPosition = pdf.lastAutoTable.finalY + 20;\n      }\n\n      // Top Clients Section\n      if (this.analyticsData.topClients && this.analyticsData.topClients.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 200) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('TOP CLIENTS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare top clients data for table\n        const clientsHeaders = ['Client Name', 'Email', 'Total Requests', 'Total Spent (₱)'];\n        const clientsData = this.analyticsData.topClients.map(client => [\n          client.client_name || 'N/A',\n          client.email || 'N/A',\n          client.request_count || '0',\n          this.formatCurrency(client.total_spent || 0)\n        ]);\n\n        // Add top clients table\n        pdf.autoTable({\n          head: [clientsHeaders],\n          body: clientsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 10,\n            cellPadding: 4\n          },\n          columnStyles: {\n            0: { cellWidth: 60 },\n            1: { cellWidth: 60 },\n            2: { cellWidth: 30, halign: 'center' },\n            3: { cellWidth: 40, halign: 'right' }\n          }\n        });\n      }\n\n      // Client Requests Section\n      if (clientRequestsData && clientRequestsData.length > 0) {\n        // Check if we need a new page\n        if (yPosition > 150) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text('CLIENT REQUESTS', 20, yPosition);\n        yPosition += 15;\n\n        // Prepare client requests data for table\n        const requestsHeaders = ['Request #', 'Client Name', 'Document Type', 'Status', 'Amount (₱)', 'Date'];\n        const requestsData = clientRequestsData.slice(0, 50).map(request => [ // Limit to 50 requests to avoid huge PDFs\n          request.request_number || 'N/A',\n          this.getClientFullName(request) || 'N/A',\n          request.document_type || 'N/A',\n          this.formatStatus(request.status_name) || 'N/A',\n          this.formatCurrency(request.total_document_fee || request.total_fee || 0),\n          this.formatDate(request.requested_at) || 'N/A'\n        ]);\n\n        // Add client requests table\n        pdf.autoTable({\n          head: [requestsHeaders],\n          body: requestsData,\n          startY: yPosition,\n          theme: 'grid',\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: 255,\n            fontStyle: 'bold'\n          },\n          styles: {\n            fontSize: 9,\n            cellPadding: 3\n          },\n          columnStyles: {\n            0: { cellWidth: 25 },\n            1: { cellWidth: 40 },\n            2: { cellWidth: 35 },\n            3: { cellWidth: 25 },\n            4: { cellWidth: 25, halign: 'right' },\n            5: { cellWidth: 25, halign: 'center' }\n          }\n        });\n\n        // Add note if there are more requests\n        if (clientRequestsData.length > 50) {\n          const finalY = pdf.lastAutoTable.finalY + 10;\n          pdf.setFontSize(10);\n          pdf.setFont('helvetica', 'italic');\n          pdf.setTextColor(100, 100, 100);\n          pdf.text(`Note: Showing first 50 of ${clientRequestsData.length} total requests for this period.`, 20, finalY);\n        }\n      }\n\n      // Add footer\n      this.addAnalyticsPDFFooter(pdf);\n    },\n\n    // Add professional footer to analytics PDF\n    addAnalyticsPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(200, 200, 200);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(9);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(100, 100, 100);\n\n        // Left side - Generated info\n        const generatedDate = new Date().toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        pdf.text(`Generated on: ${generatedDate}`, 20, 285);\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, { align: 'right' });\n      }\n    },\n\n    // Format currency for display\n    formatCurrency(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `₱${numAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n    },\n\n    // Helper methods for formatting data in PDF\n    getClientFullName(request) {\n      if (request.client_name) return request.client_name;\n\n      const firstName = request.client_first_name || request.first_name || '';\n      const lastName = request.client_last_name || request.last_name || '';\n\n      return `${firstName} ${lastName}`.trim() || 'N/A';\n    },\n\n    formatStatus(status) {\n      if (!status) return 'N/A';\n\n      // Capitalize first letter of each word\n      return status.toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        });\n      } catch (error) {\n        return 'N/A';\n      }\n    },\n\n    // Generate PDF report content (copied from RequestHistory.vue)\n    generatePDFReport(pdf, data) {\n      const dateRange = this.getDateRangeForReport();\n\n      // Document Header with improved styling\n      pdf.setFontSize(24);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY BULA', 105, 25, { align: 'center' });\n\n      pdf.setFontSize(18);\n      pdf.setTextColor(52, 152, 219);\n      pdf.text('DOCUMENT MANAGEMENT SYSTEM', 105, 35, { align: 'center' });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 40, 190, 40);\n\n      // Report title\n      pdf.setFontSize(16);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      const reportTitle = this.getReportTitle();\n      pdf.text(reportTitle, 20, 55);\n\n      // Date range with improved formatting\n      pdf.setFontSize(11);\n      pdf.setFont('helvetica', 'normal');\n      const dateRangeText = this.getDateRangeText(dateRange);\n      pdf.text(`Report Period: ${dateRangeText}`, 20, 65);\n\n      // Generated date\n      const generatedDate = new Date().toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      pdf.text(`Generated on: ${generatedDate}`, 20, 75);\n\n      // Summary statistics\n      const stats = this.calculateReportStats(data);\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'bold');\n      pdf.text('REPORT SUMMARY', 20, 90);\n\n      pdf.setFontSize(10);\n      pdf.setFont('helvetica', 'normal');\n      pdf.text(`Total Requests: ${stats.total}`, 20, 100);\n      pdf.text(`Completed: ${stats.completed}`, 20, 110);\n      pdf.text(`Pending: ${stats.pending}`, 20, 120);\n      pdf.text(`Rejected: ${stats.rejected}`, 20, 130);\n      pdf.text(`Total Revenue: ${this.formatCurrencyForPDF(stats.totalRevenue)}`, 20, 140);\n\n      // Requests table\n      if (data && data.length > 0) {\n        const tableData = data.slice(0, 100).map(request => [\n          request.request_number || 'N/A',\n          this.getClientFullName(request) || 'N/A',\n          this.getBeneficiaryName(request) || 'N/A',\n          this.getPickupPersonName(request) || 'N/A',\n          request.document_type || 'N/A',\n          this.formatStatus(request.status_name) || 'N/A',\n          this.formatCurrencyForPDF(request.total_document_fee || request.total_fee || 0),\n          this.formatDate(request.requested_at) || 'N/A'\n        ]);\n\n        // Check if autoTable plugin is available and PDF instance is valid\n        if (typeof pdf.autoTable === 'function' && pdf && typeof pdf.getFontSize === 'function') {\n          try {\n            console.log('🔧 Calling autoTable with valid PDF instance');\n            pdf.autoTable({\n              head: [['Request #', 'Client Name', 'Beneficiary', 'Pickup Person', 'Document Type', 'Status', 'Amount', 'Date']],\n              body: tableData,\n              startY: 155,\n              theme: 'grid',\n              headStyles: {\n                fillColor: [52, 152, 219],\n                textColor: 255,\n                fontStyle: 'bold',\n                fontSize: 8\n              },\n              styles: {\n                fontSize: 7,\n                cellPadding: 3,\n                overflow: 'linebreak',\n                cellWidth: 'wrap'\n              },\n              columnStyles: {\n                0: { cellWidth: 20 },                    // Request #\n                1: { cellWidth: 25, overflow: 'linebreak' },  // Client Name (wrappable)\n                2: { cellWidth: 25, overflow: 'linebreak' },  // Beneficiary (wrappable)\n                3: { cellWidth: 22, overflow: 'linebreak' },  // Pickup Person (wrappable)\n                4: { cellWidth: 22 },                    // Document Type\n                5: { cellWidth: 18 },                    // Status\n                6: { cellWidth: 20, halign: 'right' },   // Amount\n                7: { cellWidth: 18, halign: 'center' }   // Date\n              }\n            });\n            console.log('✅ AutoTable completed successfully');\n          } catch (autoTableError) {\n            console.error('❌ AutoTable call failed:', autoTableError);\n            throw new Error(`AutoTable failed: ${autoTableError.message}`);\n          }\n        } else {\n          // Enhanced fallback: Show detailed request information without table\n          pdf.setFontSize(12);\n          pdf.setFont('helvetica', 'bold');\n          pdf.text('CLIENT REQUESTS SUMMARY', 20, 155);\n\n          pdf.setFontSize(10);\n          pdf.setFont('helvetica', 'normal');\n          pdf.text(`Total requests found: ${tableData.length}`, 20, 170);\n\n          // Show first few requests in text format\n          let yPos = 185;\n          const maxRequests = Math.min(5, tableData.length);\n\n          for (let i = 0; i < maxRequests; i++) {\n            const row = tableData[i];\n            pdf.text(`${i + 1}. ${row[0]} - ${row[1]} (${row[2]}) - ${row[6]}`, 20, yPos);\n            yPos += 15;\n\n            if (yPos > 260) break; // Prevent overflow\n          }\n\n          if (tableData.length > maxRequests) {\n            pdf.text(`... and ${tableData.length - maxRequests} more requests`, 20, yPos + 10);\n          }\n\n          console.warn('jsPDF autoTable plugin not available, using enhanced fallback display');\n        }\n      }\n\n      // Add footer\n      this.addAnalyticsPDFFooter(pdf);\n    },\n\n    // Calculate report statistics (copied from RequestHistory.vue)\n    calculateReportStats(data) {\n      if (!data || !Array.isArray(data) || data.length === 0) {\n        return {\n          total: 0,\n          completed: 0,\n          pending: 0,\n          rejected: 0,\n          totalRevenue: 0\n        };\n      }\n\n      const stats = {\n        total: data.length,\n        completed: 0,\n        pending: 0,\n        rejected: 0,\n        totalRevenue: 0\n      };\n\n      data.forEach(request => {\n        const status = (request.status_name || '').toLowerCase();\n\n        if (status === 'completed') {\n          stats.completed++;\n          const fee = parseFloat(request.total_document_fee || request.total_fee || 0);\n          stats.totalRevenue += fee;\n        } else if (status === 'rejected' || status === 'cancelled') {\n          stats.rejected++;\n        } else {\n          stats.pending++;\n        }\n      });\n\n      return stats;\n    },\n\n    formatCurrencyForPDF(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `PHP ${numAmount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`;\n    },\n\n    // Get beneficiary name for third-party requests\n    getBeneficiaryName(request) {\n      console.log('🔍 getBeneficiaryName called with:', {\n        is_third_party_request: request.is_third_party_request,\n        beneficiary_name: request.beneficiary_name,\n        beneficiary: request.beneficiary\n      });\n\n      if (!request.is_third_party_request) {\n        return 'Self';\n      }\n\n      // Try different possible field names for beneficiary\n      if (request.beneficiary_name) {\n        return request.beneficiary_name;\n      }\n\n      if (request.beneficiary && request.beneficiary.full_name) {\n        return request.beneficiary.full_name;\n      }\n\n      if (request.beneficiary) {\n        const firstName = request.beneficiary.first_name || '';\n        const lastName = request.beneficiary.last_name || '';\n        const fullName = `${firstName} ${lastName}`.trim();\n        if (fullName) return fullName;\n      }\n\n      return 'N/A';\n    },\n\n    // Get pickup person name\n    getPickupPersonName(request) {\n      console.log('🔍 getPickupPersonName called with:', {\n        pickup_person_name: request.pickup_person_name,\n        authorized_pickup: request.authorized_pickup\n      });\n\n      // Check for pickup person name field\n      if (request.pickup_person_name) {\n        return request.pickup_person_name;\n      }\n\n      // Check for authorized pickup object\n      if (request.authorized_pickup && request.authorized_pickup.full_name) {\n        return request.authorized_pickup.full_name;\n      }\n\n      // Default to client pickup\n      return 'Client';\n    },\n\n    // Ensure jsPDF autoTable plugin is available\n    ensureAutoTablePlugin() {\n      try {\n        const testPdf = new jsPDF();\n        if (typeof testPdf.autoTable === 'function') {\n          console.log('✅ jsPDF autoTable plugin is available');\n          return true;\n        } else {\n          console.warn('⚠️ jsPDF autoTable plugin not available, attempting manual initialization');\n\n          // Try to manually initialize the plugin\n          if (window.jsPDF && window.jsPDF.autoTable) {\n            jsPDF.prototype.autoTable = window.jsPDF.autoTable;\n            console.log('✅ Manually attached autoTable from global');\n            return true;\n          }\n\n          console.error('❌ Failed to initialize autoTable plugin');\n          return false;\n        }\n      } catch (error) {\n        console.error('❌ Error checking autoTable plugin:', error);\n        return false;\n      }\n    },\n\n    // Initialize PDF export form with default values (copied from RequestHistory.vue)\n    initializePDFExportForm() {\n      // Set default date to today\n      this.pdfExportForm.selectedDate = this.getCurrentDate();\n\n      // Set default week to current week\n      this.pdfExportForm.selectedWeek = this.getCurrentWeek();\n\n      // Set default month to current month\n      this.pdfExportForm.selectedMonth = this.getCurrentMonth();\n    },\n\n    // Get report data based on selected filters (copied from RequestHistory.vue)\n    async getReportData() {\n      const reportFilters = {\n        status: '', // Get all statuses\n        document_type: '',\n        priority: '',\n        search: ''\n      };\n\n      // Set date range based on report type\n      const dateRange = this.getDateRangeForReport();\n      reportFilters.date_from = dateRange.from;\n      reportFilters.date_to = dateRange.to;\n\n      try {\n        console.log('📊 Fetching report data with filters:', reportFilters);\n        console.log('📊 Date range details:', {\n          reportType: this.pdfExportForm.reportType,\n          selectedDate: this.pdfExportForm.selectedDate,\n          selectedWeek: this.pdfExportForm.selectedWeek,\n          selectedMonth: this.pdfExportForm.selectedMonth,\n          calculatedRange: dateRange\n        });\n        const response = await adminDocumentService.getAllRequests({\n          ...reportFilters,\n          page: 1,\n          limit: 1000 // Get all data for the report\n        });\n\n        if (response.success && response.data && response.data.requests) {\n          console.log(`📊 Retrieved ${response.data.requests.length} requests for report`);\n\n          // Debug: Log sample request data to check fields\n          if (response.data.requests.length > 0) {\n            console.log('📊 Sample request data:', response.data.requests[0]);\n            console.log('📊 Available fields:', Object.keys(response.data.requests[0]));\n            console.log('📊 Beneficiary fields check:', {\n              is_third_party_request: response.data.requests[0].is_third_party_request,\n              beneficiary_name: response.data.requests[0].beneficiary_name,\n              pickup_person_name: response.data.requests[0].pickup_person_name\n            });\n          }\n\n          return response.data.requests;\n        } else {\n          console.warn('📊 No data returned from API');\n          return [];\n        }\n      } catch (error) {\n        console.error('📊 Failed to fetch report data:', error);\n        throw error;\n      }\n    },\n\n    // Get date range based on report type and selected values (copied from RequestHistory.vue)\n    getDateRangeForReport() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return {\n            from: selectedDate,\n            to: selectedDate\n          };\n\n        case 'weekly':\n          if (selectedWeek) {\n            const [year, week] = selectedWeek.split('-W');\n            const startDate = this.getDateFromWeek(parseInt(year), parseInt(week));\n            const endDate = new Date(startDate);\n            endDate.setDate(startDate.getDate() + 6);\n\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n\n        case 'monthly':\n          if (selectedMonth) {\n            const [year, month] = selectedMonth.split('-');\n            const startDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n            const endDate = new Date(parseInt(year), parseInt(month), 0);\n\n            return {\n              from: startDate.toISOString().split('T')[0],\n              to: endDate.toISOString().split('T')[0]\n            };\n          }\n          break;\n      }\n\n      // Fallback to today\n      const today = new Date().toISOString().split('T')[0];\n      return { from: today, to: today };\n    },\n\n    // Helper methods for PDF export (copied from RequestHistory.vue)\n    isPDFExportValid() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return selectedDate !== '';\n        case 'weekly':\n          return selectedWeek !== '';\n        case 'monthly':\n          return selectedMonth !== '';\n        default:\n          return false;\n      }\n    },\n\n    getPDFFilename() {\n      const { reportType, selectedDate, selectedWeek, selectedMonth } = this.pdfExportForm;\n      const timestamp = new Date().toISOString().split('T')[0];\n\n      switch (reportType) {\n        case 'daily':\n          return `daily_report_${selectedDate}_${timestamp}.pdf`;\n        case 'weekly':\n          return `weekly_report_${selectedWeek}_${timestamp}.pdf`;\n        case 'monthly':\n          return `monthly_report_${selectedMonth}_${timestamp}.pdf`;\n        default:\n          return `report_${timestamp}.pdf`;\n      }\n    },\n\n    getReportTitle() {\n      const { reportType } = this.pdfExportForm;\n\n      switch (reportType) {\n        case 'daily':\n          return 'Daily Document Request Report';\n        case 'weekly':\n          return 'Weekly Document Request Report';\n        case 'monthly':\n          return 'Monthly Document Request Report';\n        default:\n          return 'Document Request Report';\n      }\n    },\n\n    getDateRangeText(dateRange) {\n      if (dateRange.from === dateRange.to) {\n        return this.formatDate(dateRange.from);\n      }\n      return `${this.formatDate(dateRange.from)} to ${this.formatDate(dateRange.to)}`;\n    },\n\n    // Helper methods for date handling (copied from RequestHistory.vue)\n    getCurrentDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n\n    getCurrentWeek() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const week = this.getWeekNumber(now);\n      return `${year}-W${week.toString().padStart(2, '0')}`;\n    },\n\n    getCurrentMonth() {\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = (now.getMonth() + 1).toString().padStart(2, '0');\n      return `${year}-${month}`;\n    },\n\n    getWeekNumber(date) {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      const dayNum = d.getUTCDay() || 7;\n      d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    },\n\n    getDateFromWeek(year, week) {\n      const simple = new Date(year, 0, 1 + (week - 1) * 7);\n      const dow = simple.getDay();\n      const ISOweekStart = simple;\n      if (dow <= 4) {\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n      } else {\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n      }\n      return ISOweekStart;\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import './css/adminDashboard.css';\n\n/* Report card styles */\n.report-card {\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.report-card:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.3);\n}\n\n.report-card:active {\n  transform: translateY(-1px);\n}\n\n/* Icon circle for reports */\n.icon-circle {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n}\n\n/* Table improvements */\n.table-sm th,\n.table-sm td {\n  padding: 0.5rem;\n  font-size: 0.875rem;\n}\n\n/* Form improvements */\n.form-control-sm,\n.form-select-sm {\n  font-size: 0.875rem;\n}\n\n/* Badge improvements */\n.badge {\n  font-size: 0.75rem;\n  padding: 0.375rem 0.75rem;\n}\n\n/* Responsive improvements */\n@media (max-width: 768px) {\n  .report-card .card-body {\n    padding: 1rem;\n  }\n\n  .icon-circle {\n    width: 2.5rem;\n    height: 2.5rem;\n    font-size: 1rem;\n  }\n\n  .btn-group {\n    flex-direction: column;\n  }\n\n  .btn-group .btn {\n    border-radius: 0.375rem !important;\n    margin-bottom: 0.25rem;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}