{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport unifiedAuthService from '@/services/unifiedAuthService';\n\n// Import components with error handling\nconst AdminRegistration = () => import('@/components/admin/AdminRegistration.vue');\nconst AdminDashboard = () => import('@/components/admin/AdminDashboard.vue');\nconst AdminTest = () => import('@/components/admin/AdminTest.vue');\nconst ClientRegistration = () => import('@/components/client/ClientRegistration.vue');\nconst UnifiedLogin = () => import('@/components/UnifiedLogin.vue');\nconst WelcomePage = () => import('@/components/WelcomePage.vue');\nconst routes = [\n// Default route - redirect to welcome page\n{\n  path: '/',\n  redirect: '/welcome'\n},\n// Welcome page route\n{\n  path: '/welcome',\n  name: 'WelcomePage',\n  component: WelcomePage,\n  meta: {\n    title: 'Welcome to Barangay Bula',\n    requiresGuest: true // Only accessible when not logged in\n  }\n},\n// Unified login route\n{\n  path: '/login',\n  name: 'UnifiedLogin',\n  component: UnifiedLogin,\n  meta: {\n    title: 'Login',\n    requiresGuest: true // Only accessible when not logged in\n  }\n},\n// Client routes\n{\n  path: '/client/login',\n  redirect: '/login' // Redirect old client login to unified login\n}, {\n  path: '/client/register',\n  name: 'ClientRegistration',\n  component: ClientRegistration,\n  meta: {\n    title: 'Client Registration',\n    requiresGuest: true\n  }\n}, {\n  path: '/client/dashboard',\n  name: 'ClientDashboard',\n  redirect: '/client/home' // Redirect old dashboard to new home page\n}, {\n  path: '/client/home',\n  name: 'ClientHome',\n  component: () => import('@/components/client/NewDocumentRequest.vue'),\n  meta: {\n    title: 'Client Portal - Barangay Bula',\n    requiresAuth: true // Only accessible when logged in\n  }\n}, {\n  path: '/client/request/new',\n  name: 'NewDocumentRequest',\n  redirect: '/client/home' // Redirect to new home page\n}, {\n  path: '/client/request/barangay-clearance',\n  name: 'BarangayClearanceRequest',\n  component: () => import('@/components/client/BarangayClearanceRequest.vue'),\n  meta: {\n    title: 'Barangay Clearance Request',\n    requiresAuth: true\n  }\n}, {\n  path: '/client/request/cedula',\n  name: 'CedulaRequest',\n  component: () => import('@/components/client/CedulaRequest.vue'),\n  meta: {\n    title: 'Cedula Request',\n    requiresAuth: true\n  }\n}, {\n  path: '/client/requests',\n  name: 'MyRequests',\n  component: () => import('@/components/client/MyRequests.vue'),\n  meta: {\n    title: 'My Requests',\n    requiresAuth: true\n  }\n}, {\n  path: '/client/transactions',\n  name: 'ClientTransactions',\n  component: () => import('@/components/client/ClientTransactions.vue'),\n  meta: {\n    title: 'Online Transactions',\n    requiresAuth: true\n  }\n}, {\n  path: '/client/request/:id',\n  name: 'RequestDetails',\n  component: () => import('@/components/client/RequestDetails.vue'),\n  meta: {\n    title: 'Request Details',\n    requiresAuth: true\n  }\n},\n// Admin routes\n{\n  path: '/admin/test',\n  name: 'AdminTest',\n  component: AdminTest,\n  meta: {\n    title: 'Admin Test'\n  }\n}, {\n  path: '/admin/login',\n  redirect: '/login' // Redirect old admin login to unified login\n}, {\n  path: '/admin/register',\n  name: 'AdminRegistration',\n  component: AdminRegistration,\n  meta: {\n    title: 'Admin Registration',\n    requiresAdminGuest: true\n  }\n}, {\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    title: 'Admin Dashboard',\n    requiresAdminAuth: true // Only accessible when admin is logged in\n  }\n}, {\n  path: '/admin/users',\n  name: 'AdminUsers',\n  component: () => import('@/components/admin/AdminUsers.vue'),\n  meta: {\n    title: 'Manage Users',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/users/archive',\n  name: 'AdminArchive',\n  component: () => import('@/components/admin/AdminArchive.vue'),\n  meta: {\n    title: 'Archive',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/requests',\n  name: 'AdminRequests',\n  component: () => import('@/components/admin/AdminRequests.vue'),\n  meta: {\n    title: 'View Requests',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/history',\n  name: 'RequestHistory',\n  component: () => import('@/components/admin/RequestHistory.vue'),\n  meta: {\n    title: 'Request History',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/reports',\n  name: 'AdminReports',\n  component: () => import('@/components/admin/AdminReports.vue'),\n  meta: {\n    title: 'Generate Reports',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/settings',\n  name: 'AdminSettings',\n  component: () => import('@/components/admin/AdminSettings.vue'),\n  meta: {\n    title: 'System Settings',\n    requiresAdminAuth: true,\n    requiresRole: 'admin' // Only admin role can access settings\n  }\n}, {\n  path: '/admin/residency-review',\n  name: 'ResidencyReview',\n  component: () => import('@/components/admin/ResidencyReview.vue'),\n  meta: {\n    title: 'Residency Verification',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/residency-verification',\n  name: 'AdminResidencyVerification',\n  component: () => import('@/components/admin/AdminResidencyVerification.vue'),\n  meta: {\n    title: 'Residency Verification',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/profile',\n  name: 'AdminProfile',\n  component: () => import('@/components/admin/AdminProfile.vue'),\n  meta: {\n    title: 'Admin Profile',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/activity-logs',\n  name: 'AdminActivityLogs',\n  component: () => import('@/components/admin/AdminActivityLogs.vue'),\n  meta: {\n    title: 'Activity Logs',\n    requiresAdminAuth: true\n  }\n}, {\n  path: '/admin/audit-logs',\n  name: 'AdminAuditLogs',\n  component: () => import('@/components/admin/AdminActivityLogs.vue'),\n  // Reuse ActivityLogs for now\n  meta: {\n    title: 'Audit Logs',\n    requiresAdminAuth: true\n  }\n},\n// Handle deprecated payment intent URLs\n{\n  path: '/payment/intent',\n  name: 'DeprecatedPaymentIntent',\n  beforeEnter: (to, from, next) => {\n    console.error('❌ Deprecated payment intent route accessed:', {\n      query: to.query,\n      from: from.path\n    });\n\n    // Show error message and redirect to my requests\n    alert('This payment method is no longer supported. Please use the Pay Now button to proceed with PayMongo checkout.');\n    next({\n      name: 'MyRequests'\n    });\n  }\n},\n// Catch-all route for 404\n{\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: () => import('@/components/NotFound.vue'),\n  meta: {\n    title: 'Page Not Found'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n  scrollBehavior(_, __, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return {\n        top: 0\n      };\n    }\n  }\n});\n\n// Navigation guards\nrouter.beforeEach((to, _, next) => {\n  try {\n    console.log('Navigating to:', to.path, to.name);\n\n    // Set page title\n    document.title = to.meta.title ? `${to.meta.title} - Barangay Bula` : 'Barangay Bula';\n\n    // Skip auth checks for public routes\n    if (!to.meta.requiresAuth && !to.meta.requiresAdminAuth && !to.meta.requiresGuest && !to.meta.requiresAdminGuest) {\n      console.log('Public route, skipping auth checks');\n      next();\n      return;\n    }\n\n    // Check unified authentication\n    let isLoggedIn = false;\n    let userType = null;\n    let userRole = null;\n    let currentUser = null;\n    try {\n      isLoggedIn = unifiedAuthService.isLoggedIn();\n      if (isLoggedIn) {\n        currentUser = unifiedAuthService.getCurrentUser();\n        userType = unifiedAuthService.getUserType();\n        userRole = unifiedAuthService.getUserRole();\n      }\n    } catch (error) {\n      console.warn('Unified auth check failed:', error);\n      isLoggedIn = false;\n    }\n    console.log('Navigation Guard Debug:');\n    console.log('- Route:', to.path);\n    console.log('- Logged in:', isLoggedIn);\n    console.log('- User type:', userType);\n    console.log('- User role:', userRole);\n    console.log('- Current user:', currentUser);\n    console.log('- Route meta:', to.meta);\n\n    // Admin authentication checks\n    if (to.meta.requiresAdminAuth) {\n      console.log('Admin auth required. Logged in:', isLoggedIn, 'User type:', userType);\n      if (!isLoggedIn || userType !== 'admin') {\n        console.log('Admin auth required but not logged in as admin, redirecting to login');\n        next('/login');\n        return;\n      }\n\n      // Admin role-based authorization checks\n      if (to.meta.requiresRole && userRole !== to.meta.requiresRole) {\n        console.log(`Admin role '${to.meta.requiresRole}' required but user has role '${userRole}', redirecting to dashboard`);\n        next('/admin/dashboard');\n        return;\n      }\n    }\n\n    // Client authentication checks\n    if (to.meta.requiresAuth) {\n      console.log('Client auth required. Logged in:', isLoggedIn, 'User type:', userType);\n      if (!isLoggedIn || userType !== 'client') {\n        console.log('Client auth required but not logged in as client, redirecting to login');\n        next('/login');\n        return;\n      }\n    }\n\n    // Guest route checks - redirect logged in users to appropriate dashboard\n    if (to.meta.requiresGuest || to.meta.requiresAdminGuest) {\n      if (isLoggedIn) {\n        console.log('Guest route but user is logged in, redirecting to appropriate dashboard');\n        const redirectUrl = unifiedAuthService.getRedirectUrl(unifiedAuthService.getCurrentUser());\n        next(redirectUrl);\n        return;\n      }\n    }\n    console.log('Navigation successful to:', to.path);\n    next();\n  } catch (error) {\n    console.error('Navigation guard error:', error);\n    // Continue navigation even if there's an error to prevent infinite loops\n    next();\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}