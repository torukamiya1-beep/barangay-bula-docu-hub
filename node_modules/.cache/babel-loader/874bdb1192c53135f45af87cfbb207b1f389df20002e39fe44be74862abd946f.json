{"ast":null,"code":"import { unfilterAverage, unfilterNone, unfilterPaeth, unfilterSub, unfilterUp } from './unfilter';\n/**\n * Apllies filter on scanline based on the filter type.\n * @param filterType - The filter type to apply.\n * @param currentLine - The current line of pixel data.\n * @param newLine - The new line of pixel data.\n * @param prevLine - The previous line of pixel data.\n * @param passLineBytes - The number of bytes in the pass line.\n * @param bytesPerPixel - The number of bytes per pixel.\n */\nexport function applyUnfilter(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel) {\n  switch (filterType) {\n    case 0:\n      unfilterNone(currentLine, newLine, passLineBytes);\n      break;\n    case 1:\n      unfilterSub(currentLine, newLine, passLineBytes, bytesPerPixel);\n      break;\n    case 2:\n      unfilterUp(currentLine, newLine, prevLine, passLineBytes);\n      break;\n    case 3:\n      unfilterAverage(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n      break;\n    case 4:\n      unfilterPaeth(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n      break;\n    default:\n      throw new Error(`Unsupported filter: ${filterType}`);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}