{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminAuthService from '@/services/adminAuthService';\nexport default {\n  name: 'AdminSettings',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      activeTab: 'profile',\n      loading: false,\n      profileLoading: false,\n      passwordLoading: false,\n      successMessage: '',\n      errorMessage: '',\n      // Profile form data\n      profileForm: {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        employee_id: '',\n        phone_number: '',\n        email: '',\n        position: '',\n        department: '',\n        hire_date: ''\n      },\n      // Password change form data\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      // Show password toggles\n      showCurrentPassword: false,\n      showNewPassword: false,\n      showConfirmPassword: false,\n      systemInfo: {\n        version: '1.0.0',\n        database: 'MySQL 8.0',\n        server: 'Apache 2.4',\n        uptime: '15 days, 3 hours'\n      },\n      recentBackups: [{\n        id: 1,\n        created_at: '2024-01-31T10:30:00Z',\n        type: 'Full',\n        size: '45.2 MB',\n        status: 'completed'\n      }, {\n        id: 2,\n        created_at: '2024-01-30T10:30:00Z',\n        type: 'Database',\n        size: '12.8 MB',\n        status: 'completed'\n      }, {\n        id: 3,\n        created_at: '2024-01-29T10:30:00Z',\n        type: 'Full',\n        size: '44.1 MB',\n        status: 'completed'\n      }]\n    };\n  },\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadProfileData();\n  },\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n    // Load profile data from backend\n    async loadProfileData() {\n      try {\n        this.loading = true;\n        const response = await adminAuthService.getProfile();\n        if (response.success) {\n          const data = response.data;\n          this.profileForm = {\n            first_name: data.first_name || '',\n            middle_name: data.middle_name || '',\n            last_name: data.last_name || '',\n            suffix: data.suffix || '',\n            employee_id: data.employee_id || '',\n            phone_number: data.phone_number || '',\n            email: data.email || '',\n            position: data.position || '',\n            department: data.department || '',\n            hire_date: data.hire_date ? data.hire_date.split('T')[0] : ''\n          };\n        } else {\n          this.errorMessage = 'Failed to load profile data';\n        }\n      } catch (error) {\n        console.error('Failed to load profile data:', error);\n        this.errorMessage = 'Failed to load profile data';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // Save profile data\n    async saveProfile() {\n      try {\n        this.profileLoading = true;\n        this.clearMessages();\n        const response = await adminAuthService.updateProfile(this.profileForm);\n        if (response.success) {\n          this.successMessage = 'Profile updated successfully!';\n          // Update the adminData for the header\n          await this.loadAdminProfile();\n        } else {\n          this.errorMessage = response.message || 'Failed to update profile';\n        }\n      } catch (error) {\n        console.error('Failed to save profile:', error);\n        this.errorMessage = 'Failed to update profile. Please try again.';\n      } finally {\n        this.profileLoading = false;\n      }\n    },\n    // Change password\n    async changePassword() {\n      try {\n        this.passwordLoading = true;\n        this.clearMessages();\n\n        // Validate passwords match\n        if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n          this.errorMessage = 'New passwords do not match';\n          return;\n        }\n\n        // Validate password strength\n        if (this.passwordForm.newPassword.length < 8) {\n          this.errorMessage = 'Password must be at least 8 characters long';\n          return;\n        }\n        const response = await adminAuthService.changePassword({\n          currentPassword: this.passwordForm.currentPassword,\n          newPassword: this.passwordForm.newPassword,\n          confirmPassword: this.passwordForm.confirmPassword\n        });\n        if (response.success) {\n          this.successMessage = 'Password changed successfully!';\n          // Clear the form\n          this.passwordForm = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n          // Reset show password toggles\n          this.showCurrentPassword = false;\n          this.showNewPassword = false;\n          this.showConfirmPassword = false;\n        } else {\n          this.errorMessage = response.message || 'Failed to change password';\n        }\n      } catch (error) {\n        console.error('Failed to change password:', error);\n        this.errorMessage = 'Failed to change password. Please try again.';\n      } finally {\n        this.passwordLoading = false;\n      }\n    },\n    // Clear messages\n    clearMessages() {\n      this.successMessage = '';\n      this.errorMessage = '';\n    },\n    // System actions\n    async clearCache() {\n      if (confirm('Are you sure you want to clear the system cache?')) {\n        try {\n          console.log('Clearing cache...');\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          alert('System cache cleared successfully!');\n        } catch (error) {\n          console.error('Failed to clear cache:', error);\n          alert('Failed to clear cache. Please try again.');\n        }\n      }\n    },\n    async optimizeDatabase() {\n      if (confirm('Are you sure you want to optimize the database? This may take a few minutes.')) {\n        try {\n          console.log('Optimizing database...');\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          alert('Database optimized successfully!');\n        } catch (error) {\n          console.error('Failed to optimize database:', error);\n          alert('Failed to optimize database. Please try again.');\n        }\n      }\n    },\n    async checkUpdates() {\n      try {\n        console.log('Checking for updates...');\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        alert('System is up to date!');\n      } catch (error) {\n        console.error('Failed to check updates:', error);\n        alert('Failed to check for updates. Please try again.');\n      }\n    },\n    async restartSystem() {\n      if (confirm('Are you sure you want to restart the system? This will temporarily make the system unavailable.')) {\n        try {\n          console.log('Restarting system...');\n          alert('System restart initiated. Please wait a few minutes before accessing the system again.');\n        } catch (error) {\n          console.error('Failed to restart system:', error);\n          alert('Failed to restart system. Please try again.');\n        }\n      }\n    },\n    // Backup and restore methods\n    async createBackup() {\n      this.backupInProgress = true;\n      try {\n        console.log(`Creating ${this.backupType} backup...`);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n\n        // Add new backup to the list\n        const newBackup = {\n          id: Date.now(),\n          created_at: new Date().toISOString(),\n          type: this.backupType.charAt(0).toUpperCase() + this.backupType.slice(1),\n          size: '42.5 MB',\n          status: 'completed'\n        };\n        this.recentBackups.unshift(newBackup);\n        alert('Backup created successfully!');\n      } catch (error) {\n        console.error('Failed to create backup:', error);\n        alert('Failed to create backup. Please try again.');\n      } finally {\n        this.backupInProgress = false;\n      }\n    },\n    selectBackupFile(event) {\n      this.selectedBackupFile = event.target.files[0];\n    },\n    async restoreBackup() {\n      if (!this.selectedBackupFile) {\n        alert('Please select a backup file first.');\n        return;\n      }\n      if (confirm('Are you sure you want to restore from this backup? This will overwrite current data.')) {\n        this.restoreInProgress = true;\n        try {\n          console.log('Restoring backup:', this.selectedBackupFile.name);\n          await new Promise(resolve => setTimeout(resolve, 8000));\n          alert('Backup restored successfully!');\n          this.selectedBackupFile = null;\n        } catch (error) {\n          console.error('Failed to restore backup:', error);\n          alert('Failed to restore backup. Please try again.');\n        } finally {\n          this.restoreInProgress = false;\n        }\n      }\n    },\n    downloadBackup(backup) {\n      console.log('Downloading backup:', backup);\n      alert(`Download functionality for backup \"${backup.type}\" will be implemented soon.`);\n    },\n    deleteBackup(backup) {\n      if (confirm(`Are you sure you want to delete the backup from ${this.formatDate(backup.created_at)}?`)) {\n        const index = this.recentBackups.findIndex(b => b.id === backup.id);\n        if (index > -1) {\n          this.recentBackups.splice(index, 1);\n          alert('Backup deleted successfully.');\n        }\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    // Navigation handlers are now provided by the mixin\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","unifiedAuthService","adminAuthService","name","components","data","sidebarCollapsed","showUserDropdown","isMobile","adminData","activeTab","loading","profileLoading","passwordLoading","successMessage","errorMessage","profileForm","first_name","middle_name","last_name","suffix","employee_id","phone_number","email","position","department","hire_date","passwordForm","currentPassword","newPassword","confirmPassword","showCurrentPassword","showNewPassword","showConfirmPassword","systemInfo","version","database","server","uptime","recentBackups","id","created_at","type","size","status","mounted","isLoggedIn","getUserType","$router","push","initializeUI","loadAdminProfile","loadProfileData","beforeUnmount","handleResize","window","removeEventListener","computed","activeMenu","path","$route","includes","methods","innerWidth","saved","localStorage","getItem","JSON","parse","wasMobile","addEventListener","handleSidebarToggle","setItem","stringify","handleMenuChange","menu","routes","handleUserDropdownToggle","handleMenuAction","action","closeMobileSidebar","handleLogout","logout","user","getCurrentUser","profile","username","role","error","console","response","getProfile","success","split","saveProfile","clearMessages","updateProfile","message","changePassword","length","clearCache","confirm","log","Promise","resolve","setTimeout","alert","optimizeDatabase","checkUpdates","restartSystem","createBackup","backupInProgress","backupType","newBackup","Date","now","toISOString","charAt","toUpperCase","slice","unshift","selectBackupFile","event","selectedBackupFile","target","files","restoreBackup","restoreInProgress","downloadBackup","backup","deleteBackup","formatDate","index","findIndex","b","splice","dateString","date","toLocaleDateString","year","month","day","hour","minute","goBack"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminSettings.vue"],"sourcesContent":["<template>\n  <div class=\"admin-settings\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid py-4\">\n          <!-- Success Message -->\n          <div v-if=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <i class=\"fas fa-check-circle me-2\"></i>\n            {{ successMessage }}\n            <button type=\"button\" class=\"btn-close\" @click=\"successMessage = ''\" aria-label=\"Close\"></button>\n          </div>\n\n          <!-- Error Message -->\n          <div v-if=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n            {{ errorMessage }}\n            <button type=\"button\" class=\"btn-close\" @click=\"errorMessage = ''\" aria-label=\"Close\"></button>\n          </div>\n\n          <!-- Settings Navigation -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-3\">\n                      <div class=\"nav flex-column nav-pills\" role=\"tablist\">\n                        <button\n                          class=\"nav-link\"\n                          :class=\"{ active: activeTab === 'profile' }\"\n                          @click=\"activeTab = 'profile'\"\n                          type=\"button\"\n                        >\n                          <i class=\"fas fa-user me-2\"></i>\n                          Admin Profile\n                        </button>\n                        <button\n                          class=\"nav-link\"\n                          :class=\"{ active: activeTab === 'password' }\"\n                          @click=\"activeTab = 'password'\"\n                          type=\"button\"\n                        >\n                          <i class=\"fas fa-shield-alt me-2\"></i>\n                          Change Password\n                        </button>\n                        \n                        <!-- Ill not using these buttons for now -->\n                        <!-- <button\n                          class=\"nav-link\"\n                          :class=\"{ active: activeTab === 'notifications' }\"\n                          @click=\"activeTab = 'notifications'\"\n                          type=\"button\"\n                        >\n                          <i class=\"fas fa-bell me-2\"></i>\n                          Notifications\n                        </button>\n                        <button\n                          class=\"nav-link\"\n                          :class=\"{ active: activeTab === 'system' }\"\n                          @click=\"activeTab = 'system'\"\n                          type=\"button\"\n                        >\n                          <i class=\"fas fa-server me-2\"></i>\n                          System\n                        </button>\n                        <button\n                          class=\"nav-link\"\n                          :class=\"{ active: activeTab === 'backup' }\"\n                          @click=\"activeTab = 'backup'\"\n                          type=\"button\"\n                        >\n                          <i class=\"fas fa-database me-2\"></i>\n                          Backup & Restore\n                        </button> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-9\">\n                      <!-- Admin Profile Tab -->\n                      <div v-if=\"activeTab === 'profile'\" class=\"tab-content\">\n                        <h5 class=\"mb-3\">Admin Profile</h5>\n                        <form @submit.prevent=\"saveProfile\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">First Name</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.first_name\" required>\n                            </div>\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Middle Name</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.middle_name\">\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Last Name</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.last_name\" required>\n                            </div>\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Suffix</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.suffix\" placeholder=\"Jr., Sr., III, etc.\">\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Employee ID</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.employee_id\">\n                            </div>\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Phone Number</label>\n                              <input type=\"tel\" class=\"form-control\" v-model=\"profileForm.phone_number\">\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Email</label>\n                              <input type=\"email\" class=\"form-control\" v-model=\"profileForm.email\" required>\n                            </div>\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Position</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.position\">\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Department</label>\n                              <input type=\"text\" class=\"form-control\" v-model=\"profileForm.department\">\n                            </div>\n                            <!-- I will hide this for now -->\n                            <!-- <div class=\"col-md-6 mb-3\">\n                              <label class=\"form-label\">Hire Date</label>\n                              <input type=\"date\" class=\"form-control\" v-model=\"profileForm.hire_date\">\n                            </div> -->\n                          </div>\n                          <div class=\"text-end\">\n                            <button type=\"submit\" class=\"btn btn-success\" :disabled=\"profileLoading\">\n                              <i class=\"fas fa-save me-1\"></i>\n                              <span v-if=\"profileLoading\">Saving...</span>\n                              <span v-else>Save Profile</span>\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n\n                      <!-- Change Password Tab -->\n                      <div v-if=\"activeTab === 'password'\" class=\"tab-content\">\n                        <h5 class=\"mb-3\">Change Password</h5>\n                        <form @submit.prevent=\"changePassword\">\n                          <div class=\"alert alert-info\">\n                            <i class=\"fas fa-info-circle me-2\"></i>\n                            For security reasons, you must enter your current password to change it.\n                          </div>\n                          \n                          <div class=\"mb-3\">\n                            <label class=\"form-label\">Current Password</label>\n                            <div class=\"input-group\">\n                              <input\n                                :type=\"showCurrentPassword ? 'text' : 'password'\"\n                                class=\"form-control\"\n                                v-model=\"passwordForm.currentPassword\"\n                                required\n                                autocomplete=\"current-password\"\n                              >\n                              <button\n                                type=\"button\"\n                                class=\"btn btn-outline-secondary\"\n                                @click=\"showCurrentPassword = !showCurrentPassword\"\n                              >\n                                <i :class=\"showCurrentPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\n                              </button>\n                            </div>\n                          </div>\n                          \n                          <div class=\"mb-3\">\n                            <label class=\"form-label\">New Password</label>\n                            <div class=\"input-group\">\n                              <input\n                                :type=\"showNewPassword ? 'text' : 'password'\"\n                                class=\"form-control\"\n                                v-model=\"passwordForm.newPassword\"\n                                required\n                                autocomplete=\"new-password\"\n                              >\n                              <button\n                                type=\"button\"\n                                class=\"btn btn-outline-secondary\"\n                                @click=\"showNewPassword = !showNewPassword\"\n                              >\n                                <i :class=\"showNewPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\n                              </button>\n                            </div>\n                            <div class=\"form-text\">\n                              Password must be at least 8 characters with uppercase, lowercase, and number.\n                            </div>\n                          </div>\n                          \n                          <div class=\"mb-3\">\n                            <label class=\"form-label\">Confirm New Password</label>\n                            <div class=\"input-group\">\n                              <input\n                                :type=\"showConfirmPassword ? 'text' : 'password'\"\n                                class=\"form-control\"\n                                v-model=\"passwordForm.confirmPassword\"\n                                required\n                                autocomplete=\"new-password\"\n                              >\n                              <button\n                                type=\"button\"\n                                class=\"btn btn-outline-secondary\"\n                                @click=\"showConfirmPassword = !showConfirmPassword\"\n                              >\n                                <i :class=\"showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\n                              </button>\n                            </div>\n                          </div>\n                          \n                          <div class=\"text-end\">\n                            <button type=\"submit\" class=\"btn btn-warning\" :disabled=\"passwordLoading\">\n                              <i class=\"fas fa-key me-1\"></i>\n                              <span v-if=\"passwordLoading\">Changing...</span>\n                              <span v-else>Change Password</span>\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n\n                      <!-- Notifications Settings Tab -->\n                      <div v-if=\"activeTab === 'notifications'\" class=\"tab-content\">\n                        <h5 class=\"mb-3\">Notification Settings</h5>\n                        <form @submit.prevent=\"saveNotificationSettings\">\n                          <div class=\"mb-4\">\n                            <h6>Email Notifications</h6>\n                            <div class=\"form-check\">\n                              <input class=\"form-check-input\" type=\"checkbox\" v-model=\"settings.notifications.newUserRegistration\">\n                              <label class=\"form-check-label\">New User Registration</label>\n                            </div>\n                            <div class=\"form-check\">\n                              <input class=\"form-check-input\" type=\"checkbox\" v-model=\"settings.notifications.documentRequests\">\n                              <label class=\"form-check-label\">Document Requests</label>\n                            </div>\n                            <div class=\"form-check\">\n                              <input class=\"form-check-input\" type=\"checkbox\" v-model=\"settings.notifications.systemAlerts\">\n                              <label class=\"form-check-label\">System Alerts</label>\n                            </div>\n                          </div>\n                          <div class=\"mb-4\">\n                            <h6>SMS Notifications</h6>\n                            <div class=\"form-check\">\n                              <input class=\"form-check-input\" type=\"checkbox\" v-model=\"settings.notifications.smsEnabled\">\n                              <label class=\"form-check-label\">Enable SMS Notifications</label>\n                            </div>\n                            <div class=\"row mt-3\">\n                              <div class=\"col-md-6\">\n                                <label class=\"form-label\">SMS Provider</label>\n                                <select class=\"form-select\" v-model=\"settings.notifications.smsProvider\">\n                                  <option value=\"semaphore\">Semaphore</option>\n                                  <option value=\"globe\">Globe Labs</option>\n                                  <option value=\"smart\">Smart Communications</option>\n                                </select>\n                              </div>\n                              <div class=\"col-md-6\">\n                                <label class=\"form-label\">SMS API Key</label>\n                                <input type=\"password\" class=\"form-control\" v-model=\"settings.notifications.smsApiKey\">\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"text-end\">\n                            <button type=\"submit\" class=\"btn btn-success\">\n                              <i class=\"fas fa-save me-1\"></i>\n                              Save Changes\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n\n                      <!-- System Settings Tab -->\n                      <div v-if=\"activeTab === 'system'\" class=\"tab-content\">\n                        <h5 class=\"mb-3\">System Settings</h5>\n                        <div class=\"row\">\n                          <div class=\"col-md-6 mb-4\">\n                            <div class=\"card border-0 bg-light\">\n                              <div class=\"card-body\">\n                                <h6 class=\"card-title\">System Information</h6>\n                                <table class=\"table table-sm table-borderless\">\n                                  <tbody>\n                                    <tr>\n                                      <td><strong>Version:</strong></td>\n                                      <td>{{ systemInfo.version }}</td>\n                                    </tr>\n                                    <tr>\n                                      <td><strong>Database:</strong></td>\n                                      <td>{{ systemInfo.database }}</td>\n                                    </tr>\n                                    <tr>\n                                      <td><strong>Server:</strong></td>\n                                      <td>{{ systemInfo.server }}</td>\n                                    </tr>\n                                    <tr>\n                                      <td><strong>Uptime:</strong></td>\n                                      <td>{{ systemInfo.uptime }}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6 mb-4\">\n                            <div class=\"card border-0 bg-light\">\n                              <div class=\"card-body\">\n                                <h6 class=\"card-title\">System Actions</h6>\n                                <div class=\"d-grid gap-2\">\n                                  <button class=\"btn btn-warning btn-sm\" @click=\"clearCache\">\n                                    <i class=\"fas fa-broom me-1\"></i>\n                                    Clear System Cache\n                                  </button>\n                                  <button class=\"btn btn-info btn-sm\" @click=\"optimizeDatabase\">\n                                    <i class=\"fas fa-database me-1\"></i>\n                                    Optimize Database\n                                  </button>\n                                  <button class=\"btn btn-success btn-sm\" @click=\"checkUpdates\">\n                                    <i class=\"fas fa-sync-alt me-1\"></i>\n                                    Check for Updates\n                                  </button>\n                                  <button class=\"btn btn-danger btn-sm\" @click=\"restartSystem\">\n                                    <i class=\"fas fa-power-off me-1\"></i>\n                                    Restart System\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Backup & Restore Tab -->\n                      <div v-if=\"activeTab === 'backup'\" class=\"tab-content\">\n                        <h5 class=\"mb-3\">Backup & Restore</h5>\n                        <div class=\"row\">\n                          <div class=\"col-md-6 mb-4\">\n                            <div class=\"card border-0 bg-light\">\n                              <div class=\"card-body\">\n                                <h6 class=\"card-title\">Create Backup</h6>\n                                <p class=\"text-muted small\">Create a full system backup including database and files.</p>\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label\">Backup Type</label>\n                                  <select class=\"form-select\" v-model=\"backupType\">\n                                    <option value=\"full\">Full Backup</option>\n                                    <option value=\"database\">Database Only</option>\n                                    <option value=\"files\">Files Only</option>\n                                  </select>\n                                </div>\n                                <button class=\"btn btn-primary\" @click=\"createBackup\" :disabled=\"backupInProgress\">\n                                  <i class=\"fas fa-download me-1\" :class=\"{ 'fa-spin': backupInProgress }\"></i>\n                                  {{ backupInProgress ? 'Creating Backup...' : 'Create Backup' }}\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6 mb-4\">\n                            <div class=\"card border-0 bg-light\">\n                              <div class=\"card-body\">\n                                <h6 class=\"card-title\">Restore Backup</h6>\n                                <p class=\"text-muted small\">Restore system from a previous backup.</p>\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label\">Select Backup File</label>\n                                  <input type=\"file\" class=\"form-control\" accept=\".zip,.sql\" @change=\"selectBackupFile\">\n                                </div>\n                                <button class=\"btn btn-warning\" @click=\"restoreBackup\" :disabled=\"!selectedBackupFile || restoreInProgress\">\n                                  <i class=\"fas fa-upload me-1\" :class=\"{ 'fa-spin': restoreInProgress }\"></i>\n                                  {{ restoreInProgress ? 'Restoring...' : 'Restore Backup' }}\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <!-- Recent Backups -->\n                        <div class=\"card border-0 bg-light\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title\">Recent Backups</h6>\n                            <div class=\"table-responsive\">\n                              <table class=\"table table-sm\">\n                                <thead>\n                                  <tr>\n                                    <th>Date</th>\n                                    <th>Type</th>\n                                    <th>Size</th>\n                                    <th>Status</th>\n                                    <th>Actions</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr v-for=\"backup in recentBackups\" :key=\"backup.id\">\n                                    <td>{{ formatDate(backup.created_at) }}</td>\n                                    <td>\n                                      <span class=\"badge bg-info\">{{ backup.type }}</span>\n                                    </td>\n                                    <td>{{ backup.size }}</td>\n                                    <td>\n                                      <span class=\"badge\" :class=\"backup.status === 'completed' ? 'bg-success' : 'bg-warning'\">\n                                        {{ backup.status }}\n                                      </span>\n                                    </td>\n                                    <td>\n                                      <div class=\"btn-group btn-group-sm\">\n                                        <button class=\"btn btn-outline-primary\" @click=\"downloadBackup(backup)\">\n                                          <i class=\"fas fa-download\"></i>\n                                        </button>\n                                        <button class=\"btn btn-outline-danger\" @click=\"deleteBackup(backup)\">\n                                          <i class=\"fas fa-trash\"></i>\n                                        </button>\n                                      </div>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminAuthService from '@/services/adminAuthService';\n\nexport default {\n  name: 'AdminSettings',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      activeTab: 'profile',\n      loading: false,\n      profileLoading: false,\n      passwordLoading: false,\n      successMessage: '',\n      errorMessage: '',\n\n      // Profile form data\n      profileForm: {\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        suffix: '',\n        employee_id: '',\n        phone_number: '',\n        email: '',\n        position: '',\n        department: '',\n        hire_date: ''\n      },\n\n      // Password change form data\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n\n      // Show password toggles\n      showCurrentPassword: false,\n      showNewPassword: false,\n      showConfirmPassword: false,\n\n      systemInfo: {\n        version: '1.0.0',\n        database: 'MySQL 8.0',\n        server: 'Apache 2.4',\n        uptime: '15 days, 3 hours'\n      },\n\n      recentBackups: [\n        {\n          id: 1,\n          created_at: '2024-01-31T10:30:00Z',\n          type: 'Full',\n          size: '45.2 MB',\n          status: 'completed'\n        },\n        {\n          id: 2,\n          created_at: '2024-01-30T10:30:00Z',\n          type: 'Database',\n          size: '12.8 MB',\n          status: 'completed'\n        },\n        {\n          id: 3,\n          created_at: '2024-01-29T10:30:00Z',\n          type: 'Full',\n          size: '44.1 MB',\n          status: 'completed'\n        }\n      ]\n    };\n  },\n\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadProfileData();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n\n    // Load profile data from backend\n    async loadProfileData() {\n      try {\n        this.loading = true;\n        const response = await adminAuthService.getProfile();\n\n        if (response.success) {\n          const data = response.data;\n          this.profileForm = {\n            first_name: data.first_name || '',\n            middle_name: data.middle_name || '',\n            last_name: data.last_name || '',\n            suffix: data.suffix || '',\n            employee_id: data.employee_id || '',\n            phone_number: data.phone_number || '',\n            email: data.email || '',\n            position: data.position || '',\n            department: data.department || '',\n            hire_date: data.hire_date ? data.hire_date.split('T')[0] : ''\n          };\n        } else {\n          this.errorMessage = 'Failed to load profile data';\n        }\n      } catch (error) {\n        console.error('Failed to load profile data:', error);\n        this.errorMessage = 'Failed to load profile data';\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // Save profile data\n    async saveProfile() {\n      try {\n        this.profileLoading = true;\n        this.clearMessages();\n\n        const response = await adminAuthService.updateProfile(this.profileForm);\n\n        if (response.success) {\n          this.successMessage = 'Profile updated successfully!';\n          // Update the adminData for the header\n          await this.loadAdminProfile();\n        } else {\n          this.errorMessage = response.message || 'Failed to update profile';\n        }\n      } catch (error) {\n        console.error('Failed to save profile:', error);\n        this.errorMessage = 'Failed to update profile. Please try again.';\n      } finally {\n        this.profileLoading = false;\n      }\n    },\n\n    // Change password\n    async changePassword() {\n      try {\n        this.passwordLoading = true;\n        this.clearMessages();\n\n        // Validate passwords match\n        if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n          this.errorMessage = 'New passwords do not match';\n          return;\n        }\n\n        // Validate password strength\n        if (this.passwordForm.newPassword.length < 8) {\n          this.errorMessage = 'Password must be at least 8 characters long';\n          return;\n        }\n\n        const response = await adminAuthService.changePassword({\n          currentPassword: this.passwordForm.currentPassword,\n          newPassword: this.passwordForm.newPassword,\n          confirmPassword: this.passwordForm.confirmPassword\n        });\n\n        if (response.success) {\n          this.successMessage = 'Password changed successfully!';\n          // Clear the form\n          this.passwordForm = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n          // Reset show password toggles\n          this.showCurrentPassword = false;\n          this.showNewPassword = false;\n          this.showConfirmPassword = false;\n        } else {\n          this.errorMessage = response.message || 'Failed to change password';\n        }\n      } catch (error) {\n        console.error('Failed to change password:', error);\n        this.errorMessage = 'Failed to change password. Please try again.';\n      } finally {\n        this.passwordLoading = false;\n      }\n    },\n\n    // Clear messages\n    clearMessages() {\n      this.successMessage = '';\n      this.errorMessage = '';\n    },\n\n    // System actions\n    async clearCache() {\n      if (confirm('Are you sure you want to clear the system cache?')) {\n        try {\n          console.log('Clearing cache...');\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          alert('System cache cleared successfully!');\n        } catch (error) {\n          console.error('Failed to clear cache:', error);\n          alert('Failed to clear cache. Please try again.');\n        }\n      }\n    },\n\n    async optimizeDatabase() {\n      if (confirm('Are you sure you want to optimize the database? This may take a few minutes.')) {\n        try {\n          console.log('Optimizing database...');\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          alert('Database optimized successfully!');\n        } catch (error) {\n          console.error('Failed to optimize database:', error);\n          alert('Failed to optimize database. Please try again.');\n        }\n      }\n    },\n\n    async checkUpdates() {\n      try {\n        console.log('Checking for updates...');\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        alert('System is up to date!');\n      } catch (error) {\n        console.error('Failed to check updates:', error);\n        alert('Failed to check for updates. Please try again.');\n      }\n    },\n\n    async restartSystem() {\n      if (confirm('Are you sure you want to restart the system? This will temporarily make the system unavailable.')) {\n        try {\n          console.log('Restarting system...');\n          alert('System restart initiated. Please wait a few minutes before accessing the system again.');\n        } catch (error) {\n          console.error('Failed to restart system:', error);\n          alert('Failed to restart system. Please try again.');\n        }\n      }\n    },\n\n    // Backup and restore methods\n    async createBackup() {\n      this.backupInProgress = true;\n      try {\n        console.log(`Creating ${this.backupType} backup...`);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n\n        // Add new backup to the list\n        const newBackup = {\n          id: Date.now(),\n          created_at: new Date().toISOString(),\n          type: this.backupType.charAt(0).toUpperCase() + this.backupType.slice(1),\n          size: '42.5 MB',\n          status: 'completed'\n        };\n        this.recentBackups.unshift(newBackup);\n\n        alert('Backup created successfully!');\n      } catch (error) {\n        console.error('Failed to create backup:', error);\n        alert('Failed to create backup. Please try again.');\n      } finally {\n        this.backupInProgress = false;\n      }\n    },\n\n    selectBackupFile(event) {\n      this.selectedBackupFile = event.target.files[0];\n    },\n\n    async restoreBackup() {\n      if (!this.selectedBackupFile) {\n        alert('Please select a backup file first.');\n        return;\n      }\n\n      if (confirm('Are you sure you want to restore from this backup? This will overwrite current data.')) {\n        this.restoreInProgress = true;\n        try {\n          console.log('Restoring backup:', this.selectedBackupFile.name);\n          await new Promise(resolve => setTimeout(resolve, 8000));\n          alert('Backup restored successfully!');\n          this.selectedBackupFile = null;\n        } catch (error) {\n          console.error('Failed to restore backup:', error);\n          alert('Failed to restore backup. Please try again.');\n        } finally {\n          this.restoreInProgress = false;\n        }\n      }\n    },\n\n    downloadBackup(backup) {\n      console.log('Downloading backup:', backup);\n      alert(`Download functionality for backup \"${backup.type}\" will be implemented soon.`);\n    },\n\n    deleteBackup(backup) {\n      if (confirm(`Are you sure you want to delete the backup from ${this.formatDate(backup.created_at)}?`)) {\n        const index = this.recentBackups.findIndex(b => b.id === backup.id);\n        if (index > -1) {\n          this.recentBackups.splice(index, 1);\n          alert('Backup deleted successfully.');\n        }\n      }\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    // Navigation handlers are now provided by the mixin\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import './css/adminDashboard.css';\n\n/* Navigation pills */\n.nav-pills .nav-link {\n  color: #6c757d;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n.nav-pills .nav-link:hover {\n  background-color: #f8f9fa;\n  color: #495057;\n}\n\n.nav-pills .nav-link.active {\n  background-color: #007bff;\n  color: white;\n}\n\n/* Tab content */\n.tab-content {\n  min-height: 400px;\n}\n\n/* Form improvements */\n.form-label {\n  font-weight: 600;\n  color: #495057;\n  margin-bottom: 0.5rem;\n}\n\n.form-control,\n.form-select {\n  border-radius: 0.5rem;\n  border: 1px solid #d1d3e2;\n  transition: all 0.3s ease;\n}\n\n.form-control:focus,\n.form-select:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n\n/* Card improvements */\n.card {\n  border-radius: 1rem;\n  box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);\n}\n\n/* Button improvements */\n.btn {\n  border-radius: 0.5rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n/* Table improvements */\n.table-sm th,\n.table-sm td {\n  padding: 0.5rem;\n  font-size: 0.875rem;\n}\n\n.table-borderless td {\n  border: none;\n}\n\n/* Badge improvements */\n.badge {\n  font-size: 0.75rem;\n  padding: 0.375rem 0.75rem;\n  border-radius: 0.5rem;\n}\n\n/* System info styling */\n.card.bg-light {\n  background-color: #f8f9fa !important;\n  border: 1px solid #e9ecef;\n}\n\n/* Responsive improvements */\n@media (max-width: 768px) {\n  .nav-pills {\n    flex-direction: row;\n    overflow-x: auto;\n    white-space: nowrap;\n    margin-bottom: 1rem;\n  }\n\n  .nav-pills .nav-link {\n    margin-right: 0.5rem;\n    margin-bottom: 0;\n    white-space: nowrap;\n  }\n\n  .tab-content {\n    min-height: auto;\n  }\n\n  .row .col-md-6 {\n    margin-bottom: 1rem;\n  }\n}\n\n@media (max-width: 576px) {\n  .d-grid.gap-2 .btn {\n    font-size: 0.875rem;\n    padding: 0.5rem;\n  }\n\n  .table-responsive {\n    font-size: 0.8rem;\n  }\n\n  .btn-group-sm .btn {\n    padding: 0.25rem 0.375rem;\n    font-size: 0.7rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}