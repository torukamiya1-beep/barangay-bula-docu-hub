{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport AuthorizedPickupDocumentsModal from './AuthorizedPickupDocumentsModal.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminDocumentService from '@/services/adminDocumentService';\nimport api from '@/services/api';\nimport { Modal } from 'bootstrap';\nimport notificationService from '@/services/notificationService';\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nexport default {\n  name: 'AdminRequests',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    AuthorizedPickupDocumentsModal\n  },\n  data() {\n    return {\n      // UI State\n      loading: true,\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      errorMessage: '',\n      viewMode: 'table',\n      // 'card' or 'table' - default to table view\n\n      // Request Management Data\n      requests: [],\n      selectedRequests: [],\n      currentRequest: null,\n      statusOptions: [],\n      // All status options (for transitions)\n      filterStatusOptions: [],\n      // Filtered status options (for filter dropdown)\n      selectedRequestForPickup: null,\n      processingPickupAction: false,\n      // Pagination\n      pagination: {\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: 0,\n        itemsPerPage: 10\n      },\n      // Filters\n      filters: {\n        status: '',\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      },\n      // Statistics\n      requestStats: {\n        total: 0,\n        pending: 0,\n        approved: 0,\n        completed: 0,\n        thisMonth: 0\n      },\n      // Document Types and Status Options\n      documentTypes: [],\n      searchTimeout: null,\n      // UI State\n      showFilters: false,\n      showBulkActions: false,\n      showRequestDetails: false,\n      showRejectForm: false,\n      showQuickReject: false,\n      showQuickApprove: false,\n      // Verification Modal\n      currentVerification: null,\n      verificationForm: {\n        status: 'pending',\n        notes: ''\n      },\n      showImageModal: false,\n      selectedImage: null,\n      bulkAction: '',\n      documentUrls: {},\n      // Store blob URLs for documents\n      loadingDocuments: new Set(),\n      // Track which documents are currently loading\n      failedDocuments: new Set(),\n      // Track which documents failed to load\n      imageLoadingInModal: false,\n      // Track if modal image is loading\n      modalImageError: false,\n      // Track if modal image failed\n\n      // Status Update Forms\n      statusUpdateForm: {\n        status_id: ''\n      },\n      rejectForm: {\n        reason: ''\n      },\n      quickRejectForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForReject: null,\n      quickApproveForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForApprove: null,\n      // Payment verification form\n      paymentVerificationForm: {\n        amount_received: '',\n        receipt_number: '',\n        loading: false,\n        error: ''\n      },\n      // Pickup scheduling form\n      pickupScheduleForm: {\n        scheduled_date: '',\n        scheduled_time_start: '',\n        scheduled_time_end: '',\n        loading: false,\n        error: ''\n      },\n      // Real-time features\n      refreshInterval: null,\n      autoRefreshEnabled: true,\n      refreshRate: 30000,\n      // 30 seconds\n      lastRefresh: null\n    };\n  },\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadComponentData();\n\n    // Initialize real-time features\n    this.initializeRealTimeFeatures();\n  },\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    // Clean up real-time features\n    this.cleanupRealTimeFeatures();\n\n    // Clean up blob URLs to prevent memory leaks\n    this.cleanupDocumentUrls();\n  },\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      // Load saved sidebar state (only on desktop)\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true; // Always collapsed on mobile\n      }\n\n      // Setup resize listener\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true; // Collapse when switching to mobile\n        } else if (!this.isMobile && wasMobile) {\n          // Restore saved state when switching to desktop\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n    // Sidebar toggle\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n    // Menu navigation\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      // Close sidebar on mobile after navigation\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n    // User dropdown toggle\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    // Handle opening request modal from notifications\n    async handleOpenRequestModal(modalData) {\n      console.log('🔔 AdminRequests: Opening request modal from notification:', modalData);\n      try {\n        const {\n          requestId,\n          focusTab\n        } = modalData;\n        if (!requestId) {\n          console.error('❌ No request ID provided for modal');\n          return;\n        }\n\n        // Use the existing viewRequestDetails method to open the modal\n        await this.viewRequestDetails(requestId);\n\n        // If a specific tab should be focused, handle that after modal opens\n        if (focusTab) {\n          // Wait a bit for the modal to fully render\n          setTimeout(() => {\n            this.focusModalTab(focusTab);\n          }, 300);\n        }\n        console.log('✅ Request modal opened successfully');\n      } catch (error) {\n        console.error('❌ Error opening request modal:', error);\n        // Show error message to user\n        this.showErrorMessage('Failed to open request details');\n      }\n    },\n    // Focus on a specific tab in the request details modal\n    focusModalTab(tabName) {\n      try {\n        console.log('🎯 Focusing on modal tab:', tabName);\n\n        // Map tab names to actual tab elements or actions\n        const tabMappings = {\n          'payment': () => {\n            // Focus on payment section in the modal\n            const paymentSection = document.querySelector('#requestDetailsModal .payment-section');\n            if (paymentSection) {\n              paymentSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              paymentSection.classList.add('highlight-section');\n              setTimeout(() => paymentSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'status': () => {\n            // Focus on status section\n            const statusSection = document.querySelector('#requestDetailsModal .status-section');\n            if (statusSection) {\n              statusSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              statusSection.classList.add('highlight-section');\n              setTimeout(() => statusSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'documents': () => {\n            // Focus on documents section\n            const documentsSection = document.querySelector('#requestDetailsModal .documents-section');\n            if (documentsSection) {\n              documentsSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n              });\n              documentsSection.classList.add('highlight-section');\n              setTimeout(() => documentsSection.classList.remove('highlight-section'), 2000);\n            }\n          }\n        };\n        const focusAction = tabMappings[tabName];\n        if (focusAction) {\n          focusAction();\n        } else {\n          console.log('⚠️ Unknown tab name:', tabName);\n        }\n      } catch (error) {\n        console.error('❌ Error focusing modal tab:', error);\n      }\n    },\n    // Menu actions\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n    // Close mobile sidebar\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n    // Logout\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n    // Load admin profile\n    async loadAdminProfile() {\n      try {\n        const currentUser = unifiedAuthService.getCurrentUser();\n        if (currentUser && currentUser.profile) {\n          this.adminData = currentUser.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: currentUser?.username || 'Admin',\n            role: currentUser?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const currentUser = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: currentUser?.username || 'Admin',\n          role: currentUser?.role || 'admin'\n        };\n      }\n    },\n    // Load all component data\n    async loadComponentData() {\n      this.loading = true;\n      try {\n        await Promise.all([this.loadAdminProfile(), this.loadStatusOptions(), this.loadDocumentTypes(), this.loadRequests(), this.loadDashboardStats()]);\n      } catch (error) {\n        console.error('Failed to load component data:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request data';\n        if (errorData.status === 401) {\n          unifiedAuthService.logout();\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    // Load status options\n    async loadStatusOptions() {\n      try {\n        console.log('🔄 Loading status options...');\n        const response = await adminDocumentService.getStatusOptions();\n        console.log('📋 Status options response:', response);\n        if (response.success) {\n          // Keep all statuses available for status transitions\n          // We'll filter them appropriately in different contexts\n          const allStatuses = response.data || [];\n          this.statusOptions = allStatuses;\n\n          // Create a separate array for filter dropdown (excluding final states)\n          this.filterStatusOptions = allStatuses.filter(status => {\n            const statusName = status.status_name.toLowerCase();\n            return statusName !== 'completed' && statusName !== 'cancelled';\n          });\n          console.log('✅ All status options loaded:', this.statusOptions);\n          console.log('✅ Filter status options (active only):', this.filterStatusOptions);\n        } else {\n          console.error('❌ Failed to load status options:', response.message);\n          this.statusOptions = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading status options:', error);\n        this.statusOptions = [];\n        this.showToast('Error', 'Failed to load status options', 'error');\n      }\n    },\n    // Load dashboard statistics\n    async loadDashboardStats() {\n      try {\n        console.log('🔄 Loading dashboard stats...');\n        const response = await adminDocumentService.getDashboardStats();\n        console.log('📊 Dashboard stats response:', response);\n        if (response.success) {\n          // Map the backend response structure to frontend expectations\n          const data = response.data;\n          this.requestStats = {\n            total: data.overview?.total_requests || 0,\n            pending: data.overview?.pending_requests || 0,\n            approved: data.overview?.approved_requests || 0,\n            completed: data.overview?.completed_requests || 0,\n            thisMonth: data.time_based?.today_requests || 0\n          };\n          console.log('✅ Request stats updated:', this.requestStats);\n        } else {\n          console.error('❌ Failed to load dashboard stats:', response.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading dashboard stats:', error);\n        // Set default values on error\n        this.requestStats = {\n          total: 0,\n          pending: 0,\n          approved: 0,\n          completed: 0,\n          thisMonth: 0\n        };\n      }\n    },\n    // Load document types\n    async loadDocumentTypes() {\n      try {\n        console.log('🔄 Loading document types...');\n        const response = await adminDocumentService.getDocumentTypes();\n        console.log('📋 Document types response:', response);\n        if (response.success) {\n          this.documentTypes = response.data || [];\n          console.log('✅ Document types loaded:', this.documentTypes);\n        } else {\n          console.error('❌ Failed to load document types:', response.message);\n          this.documentTypes = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading document types:', error);\n        this.documentTypes = [];\n        this.showToast('Error', 'Failed to load document types', 'error');\n      }\n    },\n    // Load requests with current filters and pagination\n    // NOTE: AdminRequests.vue shows ACTIVE requests only (excludes completed and cancelled)\n    // For historical view including cancelled requests, see RequestHistory.vue\n    async loadRequests() {\n      try {\n        const params = {\n          page: this.pagination.currentPage,\n          limit: this.pagination.itemsPerPage,\n          ...this.filters\n        };\n        const response = await adminDocumentService.getAllRequests(params);\n        if (response.success) {\n          // Filter out completed and cancelled requests from the response\n          // AdminRequests is for active document management only\n          const filteredRequests = (response.data.requests || []).filter(request => {\n            const statusName = request.status_name.toLowerCase();\n            return statusName !== 'completed' && statusName !== 'cancelled';\n          });\n          this.requests = filteredRequests;\n          this.pagination = {\n            currentPage: response.data.pagination?.current_page || 1,\n            totalPages: response.data.pagination?.total_pages || 1,\n            totalItems: filteredRequests.length,\n            // Update to reflect filtered count\n            itemsPerPage: response.data.pagination?.per_page || 10\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load requests';\n        this.requests = [];\n      }\n    },\n    // Filter and search methods\n    applyFilters() {\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n    // Debounced search method\n    debouncedSearch() {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = setTimeout(() => {\n        this.applyFilters();\n      }, 300);\n    },\n    clearFilters() {\n      this.filters = {\n        status: '',\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      };\n      this.applyFilters();\n    },\n    // Pagination methods\n    changePage(page) {\n      if (page >= 1 && page <= this.pagination.totalPages) {\n        this.pagination.currentPage = page;\n        this.loadRequests();\n      }\n    },\n    changeItemsPerPage(itemsPerPage) {\n      this.pagination.itemsPerPage = itemsPerPage;\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    },\n    // Request selection methods\n    toggleRequestSelection(requestId) {\n      const index = this.selectedRequests.indexOf(requestId);\n      if (index > -1) {\n        this.selectedRequests.splice(index, 1);\n      } else {\n        this.selectedRequests.push(requestId);\n      }\n    },\n    selectAllRequests() {\n      if (this.selectedRequests.length === this.requests.length) {\n        this.selectedRequests = [];\n      } else {\n        this.selectedRequests = this.requests.map(r => r.id);\n      }\n    },\n    // Request details\n    async viewRequestDetails(requestId) {\n      console.log('🚀 View details clicked for request ID:', requestId);\n      try {\n        const response = await adminDocumentService.getRequestDetails(requestId);\n        console.log('📋 API Response received:', response);\n        if (response.success) {\n          console.log('✅ Response successful, data:', response.data);\n\n          // Debug client profile fields\n          const data = response.data;\n          console.log('🎯 COMPLETE RESPONSE DATA:', data);\n          console.log('🎯 ALL DATA KEYS:', Object.keys(data));\n          console.log('🎯 CLIENT PROFILE FIELDS DEBUG:');\n          console.log('   Birth Date:', data.client_birth_date);\n          console.log('   Gender:', data.client_gender);\n          console.log('   Civil Status ID:', data.client_civil_status_id);\n          console.log('   Nationality:', data.client_nationality);\n          console.log('   Years of Residency:', data.client_years_of_residency);\n          console.log('   Months of Residency:', data.client_months_of_residency);\n\n          // Check if fields exist with different names\n          console.log('🔍 SEARCHING FOR SIMILAR FIELDS:');\n          Object.keys(data).forEach(key => {\n            if (key.includes('birth') || key.includes('gender') || key.includes('civil') || key.includes('nationality') || key.includes('residency')) {\n              console.log(`   Found: ${key} = ${data[key]}`);\n            }\n          });\n          this.currentRequest = response.data;\n          this.showRequestDetails = true;\n          // Reset forms\n          this.statusUpdateForm = {\n            status_id: ''\n          };\n          this.rejectForm = {\n            reason: ''\n          };\n          this.showRejectForm = false;\n          console.log('📋 Request details loaded:', response.data);\n\n          // Load document URLs for images\n          if (response.data.uploaded_documents && response.data.uploaded_documents.length > 0) {\n            this.loadDocumentUrls(response.data.uploaded_documents);\n          }\n          this.showToast('Success', `Request details loaded for ${response.data.request_number}`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to load request details:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request details';\n        this.showToast('Error', 'Failed to load request details', 'error');\n      }\n    },\n    // Refresh request details\n    async refreshRequestDetails() {\n      if (this.currentRequest) {\n        await this.viewRequestDetails(this.currentRequest.id);\n      }\n    },\n    // Update request status from modal\n    async updateRequestStatusFromModal() {\n      console.log('🔄 Updating request status...');\n      console.log('📋 Status form data:', this.statusUpdateForm);\n      console.log('📋 Current request:', this.currentRequest);\n      if (!this.statusUpdateForm.status_id || !this.currentRequest) {\n        console.error('❌ Missing required data for status update');\n        this.showToast('Error', 'Please select a status to update', 'error');\n        return;\n      }\n\n      // Enhanced debugging for status validation\n      const currentStatus = this.currentRequest.status_name;\n      const newStatusId = this.statusUpdateForm.status_id;\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      console.log('🔍 Status validation debug:');\n      console.log('   Current status:', currentStatus);\n      console.log('   New status ID:', newStatusId, '(type:', typeof newStatusId, ')');\n      console.log('   New status object:', newStatus);\n      console.log('   Available transitions:', this.getAllowedStatusTransitions(currentStatus.toLowerCase()));\n      console.log('   Available status options:', this.getAvailableStatusOptions());\n      console.log('   All status options:', this.statusOptions);\n      if (!this.isValidStatusChange(currentStatus, newStatusId)) {\n        console.error('❌ Invalid status change attempted');\n        console.error('   From:', currentStatus, 'To:', newStatus?.status_name);\n        this.showToast('Error', 'This status change is not allowed', 'error');\n        return;\n      }\n      try {\n        const updateData = {\n          status_id: parseInt(this.statusUpdateForm.status_id)\n        };\n        console.log('📤 Sending status update:', updateData);\n        const response = await adminDocumentService.updateRequestStatus(this.currentRequest.id, updateData);\n        console.log('📥 Status update response:', response);\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n          // Reset form\n          this.statusUpdateForm = {\n            status_id: ''\n          };\n\n          // Show success message\n          this.errorMessage = '';\n          this.showToast('Success', 'Request status updated successfully', 'success');\n        } else {\n          console.error('❌ Status update failed:', response.message);\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error updating request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n    // Reject request from modal\n    async rejectRequestFromModal() {\n      if (!this.currentRequest || !this.rejectForm.reason.trim()) return;\n      try {\n        const response = await adminDocumentService.rejectRequest(this.currentRequest.id, {\n          reason: this.rejectForm.reason\n        });\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n          this.rejectForm = {\n            reason: ''\n          };\n          this.showRejectForm = false;\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n    // Status update methods\n    async updateRequestStatus(requestId, statusId, reason = '') {\n      try {\n        const response = await adminDocumentService.updateRequestStatus(requestId, {\n          status_id: statusId,\n          reason: reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to update request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n      }\n    },\n    async approveRequest(requestId, reason = '') {\n      try {\n        const response = await adminDocumentService.approveRequest(requestId, {\n          reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to approve request';\n      }\n    },\n    async rejectRequest(requestId, reason) {\n      if (!reason || reason.trim() === '') {\n        this.errorMessage = 'Rejection reason is required';\n        return;\n      }\n      try {\n        const response = await adminDocumentService.rejectRequest(requestId, {\n          reason\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n    // Quick approval/rejection methods\n    canApprove(request) {\n      // Can approve if 'approved' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('approved');\n    },\n    canReject(request) {\n      // Can reject if 'rejected' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('rejected');\n    },\n    // Helper method to get status explanation for disabled buttons\n    getStatusExplanation(request, action) {\n      const status = request.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(status);\n      if (action === 'approve') {\n        if (allowedTransitions.includes('approved')) {\n          return 'Click to approve this request';\n        } else if (status === 'approved') {\n          return 'This request has already been approved';\n        } else if (status === 'rejected') {\n          return 'Rejected requests can be resubmitted, not directly approved';\n        } else if (status === 'completed') {\n          return 'This request has already been completed';\n        } else {\n          return `Cannot approve from ${this.formatStatus(status)} status`;\n        }\n      } else if (action === 'reject') {\n        if (allowedTransitions.includes('rejected')) {\n          return 'Click to reject this request';\n        } else if (status === 'rejected') {\n          return 'This request has already been rejected';\n        } else if (status === 'completed') {\n          return 'Cannot reject a completed request';\n        } else {\n          return `Cannot reject from ${this.formatStatus(status)} status`;\n        }\n      }\n      return `Request status: ${this.formatStatus(status)}`;\n    },\n    // Check if status change is valid\n    isValidStatusChange(currentStatus, newStatusId) {\n      if (!currentStatus || !newStatusId) return false;\n\n      // Find the new status name\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      if (!newStatus) return false;\n      const currentStatusName = currentStatus.toLowerCase();\n      const newStatusName = newStatus.status_name.toLowerCase();\n\n      // Same status - no change needed\n      if (currentStatusName === newStatusName) {\n        return false;\n      }\n\n      // Check if transition is allowed based on workflow rules\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatusName);\n      return allowedTransitions.includes(newStatusName);\n    },\n    // Check if request needs payment verification\n    needsPaymentVerification(request) {\n      return request.status_name === 'payment_pending' && request.payment_method && !request.payment_method.includes('PayMongo') && request.payment_status !== 'paid';\n    },\n    // Check if pickup can be scheduled\n    canSchedulePickup(request) {\n      return request.status_name === 'ready_for_pickup';\n    },\n    // Get payment status color\n    getPaymentStatusColor(status) {\n      const colors = {\n        'pending': 'bg-warning',\n        'processing': 'bg-info',\n        'paid': 'bg-success',\n        'failed': 'bg-danger',\n        'refunded': 'bg-secondary',\n        'cancelled': 'bg-dark'\n      };\n      return colors[status] || 'bg-secondary';\n    },\n    // Format payment status\n    formatPaymentStatus(status) {\n      const statuses = {\n        'pending': 'Pending',\n        'processing': 'Processing',\n        'paid': 'Paid',\n        'failed': 'Failed',\n        'refunded': 'Refunded',\n        'cancelled': 'Cancelled'\n      };\n      return statuses[status] || 'Unknown';\n    },\n    // Get tomorrow's date for pickup scheduling\n    getTomorrowDate() {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return tomorrow.toISOString().split('T')[0];\n    },\n    // Validate pickup form\n    isPickupFormValid() {\n      return this.pickupScheduleForm.scheduled_date && this.pickupScheduleForm.scheduled_time_start && this.pickupScheduleForm.scheduled_time_end && this.pickupScheduleForm.scheduled_time_start < this.pickupScheduleForm.scheduled_time_end;\n    },\n    // Get filtered status options based on current status\n    getAvailableStatusOptions() {\n      if (!this.currentRequest || !this.statusOptions) {\n        console.log('🔍 getAvailableStatusOptions: Missing currentRequest or statusOptions');\n        return [];\n      }\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n\n      // Only these states are truly final (cannot be changed)\n      const finalStates = ['completed', 'cancelled'];\n\n      // If current status is final, no changes allowed\n      if (finalStates.includes(currentStatus)) {\n        console.log('🔍 getAvailableStatusOptions: Current status is final:', currentStatus);\n        return [];\n      }\n\n      // Define allowed transitions based on current status\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Check if current request uses cash payment\n      const isCashPayment = this.currentRequest && (this.currentRequest.payment_method === 'Cash Payment' || this.currentRequest.payment_method === 'Cash' || this.currentRequest.payment_method_code === 'CASH' || this.currentRequest.payment_method_id === 1 ||\n      // Assuming cash is ID 1\n      this.currentRequest.is_online_payment === false || this.currentRequest.is_online_payment === 0 || this.currentRequest.is_online === false || this.currentRequest.is_online === 0);\n\n      // Filter out \"payment_confirmed\" status for cash payments\n      let filteredTransitions = allowedTransitions;\n      if (isCashPayment) {\n        filteredTransitions = allowedTransitions.filter(transition => transition !== 'payment_confirmed');\n        console.log('🔍 Filtered out payment_confirmed for cash payment:', {\n          originalTransitions: allowedTransitions,\n          filteredTransitions: filteredTransitions\n        });\n      }\n\n      // Return only allowed status options\n      const availableOptions = this.statusOptions.filter(status => filteredTransitions.includes(status.status_name.toLowerCase()));\n      console.log('🔍 getAvailableStatusOptions result:', {\n        currentStatus: currentStatus,\n        isCashPayment: isCashPayment,\n        allowedTransitions: allowedTransitions,\n        filteredTransitions: filteredTransitions,\n        availableOptions: availableOptions.map(opt => ({\n          id: opt.id,\n          name: opt.status_name\n        })),\n        totalStatusOptions: this.statusOptions.length\n      });\n      return availableOptions;\n    },\n    // Define allowed status transitions based on government workflow best practices\n    // This must match the backend validateStatusTransition logic exactly\n    getAllowedStatusTransitions(currentStatus) {\n      // Check if current request uses cash payment - enhanced detection\n      const isCashPayment = this.currentRequest && (this.currentRequest.payment_method === 'Cash Payment' || this.currentRequest.payment_method === 'Cash' || this.currentRequest.payment_method_code === 'CASH' || this.currentRequest.payment_method_id === 1 ||\n      // Assuming cash is ID 1\n      this.currentRequest.is_online_payment === false || this.currentRequest.is_online_payment === 0 || this.currentRequest.is_online === false || this.currentRequest.is_online === 0);\n      console.log('🔍 Cash payment detection for status transitions:', {\n        currentStatus: currentStatus,\n        payment_method: this.currentRequest?.payment_method,\n        payment_method_code: this.currentRequest?.payment_method_code,\n        payment_method_id: this.currentRequest?.payment_method_id,\n        is_online_payment: this.currentRequest?.is_online_payment,\n        isCashPayment: isCashPayment\n      });\n      const transitions = {\n        // Simplified workflow matching actual database statuses\n        'pending': ['approved', 'cancelled', 'rejected'],\n        'under_review': ['approved', 'rejected', 'cancelled'],\n        'approved': isCashPayment ? ['payment_confirmed', 'processing', 'cancelled'] // Cash payments can go directly to processing\n        : ['payment_confirmed', 'cancelled'],\n        // Online payments go through PayMongo webhook to payment_confirmed\n        'payment_confirmed': ['processing'],\n        // Automatic transition after payment\n        'processing': ['ready_for_pickup'],\n        // Processing can only complete successfully\n        'ready_for_pickup': ['completed', 'cancelled'],\n        // Allow completion for both cash and online payments\n        'rejected': ['pending', 'under_review'],\n        // Allow resubmission after corrections\n        // Final states - no transitions allowed\n        'completed': [],\n        'cancelled': []\n      };\n      const allowedTransitions = transitions[currentStatus] || [];\n      console.log('🔍 Allowed transitions for', currentStatus, ':', allowedTransitions);\n      return allowedTransitions;\n    },\n    // Get title for update button based on validation state\n    getUpdateButtonTitle() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Please select a new status';\n      }\n      if (!this.isValidStatusChange(this.currentRequest.status_name, this.statusUpdateForm.status_id)) {\n        return 'Invalid status change';\n      }\n      return 'Update request status';\n    },\n    // Get dynamic button text based on selected status\n    getActionButtonText() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Update Status';\n      }\n      const selectedStatus = this.statusOptions.find(s => s.id === parseInt(this.statusUpdateForm.status_id));\n      if (!selectedStatus) {\n        return 'Update Status';\n      }\n      const statusName = selectedStatus.status_name.toLowerCase();\n\n      // Special button text for common actions\n      switch (statusName) {\n        case 'approved':\n          return 'Approve Request';\n        case 'rejected':\n          return 'Reject Request';\n        case 'under_review':\n          return 'Move to Review';\n        case 'processing':\n          return 'Start Processing';\n        case 'ready_for_pickup':\n          return 'Mark Ready for Pickup';\n        case 'completed':\n          return 'Complete Request';\n        default:\n          return `Update to ${selectedStatus.status_name}`;\n      }\n    },\n    // Get status description for current status display\n    getStatusDescription(statusName) {\n      const descriptions = {\n        'pending': 'Waiting for admin review',\n        'under_review': 'Being reviewed by admin',\n        'approved': 'Approved, waiting for payment',\n        'payment_confirmed': 'Payment received, ready for processing',\n        'processing': 'Document is being prepared',\n        'ready_for_pickup': 'Document ready for collection',\n        'completed': 'Request completed successfully',\n        'rejected': 'Request rejected, can be resubmitted',\n        'cancelled': 'Request cancelled permanently'\n      };\n      return descriptions[statusName.toLowerCase()] || 'Status information';\n    },\n    // Get next available status actions for automatic progression\n    getNextStatusActions() {\n      if (!this.currentRequest) return [];\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Filter out 'cancelled' and 'rejected' from regular progression (handled separately)\n      // 'cancelled' is handled by the separate Cancel Request button\n      // 'rejected' is redundant since we have Cancel Request which serves the same purpose\n      const progressionTransitions = allowedTransitions.filter(status => status !== 'cancelled' && status !== 'rejected');\n      return progressionTransitions.map(statusName => {\n        const statusOption = this.statusOptions.find(s => s.status_name.toLowerCase() === statusName);\n        if (!statusOption) return null;\n        return {\n          status_id: statusOption.id,\n          status_name: statusName,\n          label: this.getProgressionButtonLabel(statusName),\n          icon: this.getProgressionButtonIcon(statusName),\n          buttonClass: this.getProgressionButtonClass(statusName),\n          description: this.getProgressionButtonDescription(statusName)\n        };\n      }).filter(action => action !== null);\n    },\n    // Get button label for status progression\n    getProgressionButtonLabel(statusName) {\n      const labels = {\n        'approved': 'Approve Request',\n        'rejected': 'Reject Request',\n        'payment_confirmed': 'Confirm Payment',\n        'processing': 'Start Processing',\n        'ready_for_pickup': 'Mark Ready',\n        'completed': 'Complete Request',\n        'under_review': 'Review Request',\n        'pending': 'Mark Pending'\n      };\n      return labels[statusName] || `Change to ${this.formatStatus(statusName)}`;\n    },\n    // Get button icon for status progression\n    getProgressionButtonIcon(statusName) {\n      const icons = {\n        'approved': 'fas fa-check',\n        'rejected': 'fas fa-times',\n        'payment_confirmed': 'fas fa-credit-card',\n        'processing': 'fas fa-cogs',\n        'ready_for_pickup': 'fas fa-hand-paper',\n        'completed': 'fas fa-check-circle',\n        'under_review': 'fas fa-search',\n        'pending': 'fas fa-clock'\n      };\n      return icons[statusName] || 'fas fa-arrow-right';\n    },\n    // Get button CSS class for status progression\n    getProgressionButtonClass(statusName) {\n      const classes = {\n        'approved': 'btn-success',\n        'rejected': 'btn-danger',\n        'payment_confirmed': 'btn-info',\n        'processing': 'btn-warning',\n        'ready_for_pickup': 'btn-primary',\n        'completed': 'btn-success',\n        'under_review': 'btn-secondary',\n        'pending': 'btn-outline-secondary'\n      };\n      return classes[statusName] || 'btn-outline-primary';\n    },\n    // Get button description for status progression\n    getProgressionButtonDescription(statusName) {\n      const descriptions = {\n        'approved': 'Approve this request and proceed to payment',\n        'rejected': 'Reject this request with reason',\n        'payment_confirmed': 'Confirm payment has been received',\n        'processing': 'Start processing the document',\n        'ready_for_pickup': 'Mark document as ready for collection',\n        'completed': 'Mark request as completed',\n        'under_review': 'Move request to review status',\n        'pending': 'Move request back to pending status'\n      };\n      return descriptions[statusName] || `Change status to ${this.formatStatus(statusName)}`;\n    },\n    // Check if request can be cancelled\n    canCancelRequest() {\n      if (!this.currentRequest) return false;\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n      const finalStates = ['completed', 'cancelled'];\n\n      // Can cancel if not in final states\n      return !finalStates.includes(currentStatus);\n    },\n    // Progress to next status automatically\n    async progressToNextStatus(statusId) {\n      if (!statusId || !this.currentRequest) {\n        this.showToast('Error', 'Invalid status selection', 'error');\n        return;\n      }\n      try {\n        const updateData = {\n          status_id: parseInt(statusId)\n        };\n        console.log('📤 Progressing to next status:', updateData);\n        const response = await adminDocumentService.updateRequestStatus(this.currentRequest.id, updateData);\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n\n          // Show success message\n          const newStatus = this.statusOptions.find(s => s.id === parseInt(statusId));\n          this.showToast('Success', `Request status updated to ${this.formatStatus(newStatus.status_name)}`, 'success');\n        } else {\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error progressing status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n    // Cancel request permanently\n    async cancelRequest() {\n      if (!this.currentRequest) return;\n\n      // Find cancelled status\n      const cancelledStatus = this.statusOptions.find(s => s.status_name.toLowerCase() === 'cancelled');\n      if (!cancelledStatus) {\n        this.showToast('Error', 'Cancelled status not found', 'error');\n        return;\n      }\n\n      // Confirm cancellation\n      if (!confirm(`Are you sure you want to cancel request ${this.currentRequest.request_number}? This action cannot be undone.`)) {\n        return;\n      }\n      try {\n        const updateData = {\n          status_id: cancelledStatus.id\n        };\n        console.log('📤 Cancelling request:', updateData);\n        const response = await adminDocumentService.updateRequestStatus(this.currentRequest.id, updateData);\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n          this.showToast('Success', 'Request has been cancelled', 'success');\n        } else {\n          this.showToast('Error', response.message || 'Failed to cancel request', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error cancelling request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to cancel request', 'error');\n      }\n    },\n    async quickApprove(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.approveRequest(request.id, {\n          reason: 'Quick approval from admin interface'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${request.request_number} approved successfully`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to approve request', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n    showQuickRejectModal(request) {\n      console.log('🚀 Quick reject clicked for request:', request);\n      this.selectedRequestForReject = request;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickReject = true;\n    },\n    closeQuickRejectModal() {\n      this.showQuickReject = false;\n      this.selectedRequestForReject = null;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n    },\n    async confirmQuickReject() {\n      this.quickRejectForm.loading = true;\n      this.quickRejectForm.error = '';\n      try {\n        const response = await adminDocumentService.rejectRequest(this.selectedRequestForReject.id, {\n          reason: 'Request rejected by admin'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForReject.request_number} rejected successfully`, 'success');\n          this.closeQuickRejectModal();\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickRejectForm.error = errorData.message || 'Failed to reject request';\n      } finally {\n        this.quickRejectForm.loading = false;\n      }\n    },\n    showQuickApproveModal(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n      this.selectedRequestForApprove = request;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickApprove = true;\n    },\n    closeQuickApproveModal() {\n      this.showQuickApprove = false;\n      this.selectedRequestForApprove = null;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n    },\n    async confirmQuickApprove() {\n      this.quickApproveForm.loading = true;\n      this.quickApproveForm.error = '';\n      try {\n        const response = await adminDocumentService.approveRequest(this.selectedRequestForApprove.id, {\n          reason: 'Quick approval from admin interface'\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForApprove.request_number} approved successfully`, 'success');\n          this.closeQuickApproveModal();\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickApproveForm.error = errorData.message || 'Failed to approve request';\n      } finally {\n        this.quickApproveForm.loading = false;\n      }\n    },\n    // Bulk operations\n    async performBulkAction() {\n      if (this.selectedRequests.length === 0) {\n        this.errorMessage = 'Please select at least one request';\n        return;\n      }\n      if (!this.bulkAction) {\n        this.errorMessage = 'Please select a bulk action';\n        return;\n      }\n      try {\n        const response = await adminDocumentService.bulkUpdateRequests({\n          request_ids: this.selectedRequests,\n          status_id: parseInt(this.bulkAction)\n        });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.selectedRequests = [];\n          this.bulkAction = '';\n          this.showBulkActions = false;\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to perform bulk action:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to perform bulk action';\n      }\n    },\n    // Export functionality\n    async exportRequests() {\n      try {\n        const csvData = await adminDocumentService.exportRequests(this.filters);\n        const filename = `document_requests_${new Date().toISOString().split('T')[0]}.csv`;\n        adminDocumentService.downloadCSV(csvData, filename);\n      } catch (error) {\n        console.error('Failed to export requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to export requests';\n      }\n    },\n    // Comprehensive Excel export functionality\n    async exportRequestsToExcel() {\n      try {\n        this.showToast('Info', 'Preparing comprehensive Excel export...', 'info');\n\n        // Get all requests with full details (no pagination)\n        const allRequestsResponse = await adminDocumentService.getAllRequests({\n          ...this.filters,\n          page: 1,\n          limit: 10000 // Get all requests\n        });\n        if (!allRequestsResponse.success || !allRequestsResponse.data.requests) {\n          throw new Error('Failed to fetch requests data');\n        }\n        const requests = allRequestsResponse.data.requests;\n        if (requests.length === 0) {\n          this.showToast('Warning', 'No requests found to export', 'warning');\n          return;\n        }\n\n        // For each request, get detailed information\n        const detailedRequests = [];\n        for (const request of requests) {\n          try {\n            const detailResponse = await adminDocumentService.getRequestDetails(request.id);\n            if (detailResponse.success) {\n              detailedRequests.push(detailResponse.data);\n            } else {\n              // If detailed fetch fails, use basic request data\n              detailedRequests.push(request);\n            }\n          } catch (error) {\n            console.warn(`Failed to get details for request ${request.id}:`, error);\n            detailedRequests.push(request);\n          }\n        }\n\n        // Create comprehensive Excel data\n        const excelData = this.prepareExcelData(detailedRequests);\n\n        // Check if xlsx library is available\n        if (typeof XLSX === 'undefined') {\n          // Fallback to CSV if xlsx is not available\n          this.showToast('Warning', 'Excel library not available. Downloading as CSV instead.', 'warning');\n          this.downloadAsCSV(excelData.mainSheet, 'comprehensive_requests_export');\n          return;\n        }\n\n        // Create Excel workbook with multiple sheets\n        this.createExcelWorkbook(excelData);\n      } catch (error) {\n        console.error('Failed to export requests to Excel:', error);\n        this.showToast('Error', 'Failed to export requests to Excel', 'error');\n      }\n    },\n    // Prepare comprehensive Excel data with vertical key-value layout\n    prepareExcelData(requests) {\n      const mainSheet = [];\n      const cedulaSheet = [];\n      const barangaySheet = [];\n\n      // Process each request with vertical key-value format\n      requests.forEach((request, index) => {\n        // Add request separator and header\n        if (index > 0) {\n          mainSheet.push(['']); // Empty row separator\n        }\n        mainSheet.push([`REQUEST #${index + 1}: ${request.request_number || 'N/A'}`]);\n        mainSheet.push(['='.repeat(50)]);\n        mainSheet.push(['']);\n\n        // Request Information Block\n        mainSheet.push(['REQUEST INFORMATION']);\n        mainSheet.push(['Request Number:', request.request_number || '']);\n        mainSheet.push(['Document Type:', request.document_type || '']);\n        mainSheet.push(['Status:', this.formatStatus(request.status_name) || '']);\n        mainSheet.push(['Submitted Date:', this.formatDate(request.requested_at) || '']);\n        mainSheet.push(['Last Updated:', this.formatDate(request.updated_at) || '']);\n        mainSheet.push(['Purpose Category:', request.purpose_category || '']);\n        mainSheet.push(['Purpose Details:', request.purpose_details || '']);\n        mainSheet.push(['']);\n\n        // Client Information Block\n        mainSheet.push(['CLIENT INFORMATION']);\n        mainSheet.push(['Full Name:', this.getClientFullName(request) || '']);\n        mainSheet.push(['Email Address:', request.client_email || '']);\n        mainSheet.push(['Phone Number:', request.client_phone || '']);\n        mainSheet.push(['Date of Birth:', this.formatDate(request.client_birth_date) || '']);\n        mainSheet.push(['Gender:', this.formatGender(request.client_gender) || '']);\n        mainSheet.push(['Civil Status:', this.getCivilStatusName(request.client_civil_status_id) || '']);\n        mainSheet.push(['Nationality:', request.client_nationality || '']);\n        mainSheet.push(['Complete Address:', this.getClientFullAddress(request) || '']);\n        mainSheet.push(['Years of Residency:', this.getResidencyDisplay(request) || '']);\n        mainSheet.push(['']);\n\n        // Third Party Request Information (if applicable)\n        if (request.is_third_party_request) {\n          mainSheet.push(['THIRD PARTY REQUEST']);\n          mainSheet.push(['Is Third Party Request:', 'Yes']);\n          if (request.beneficiary) {\n            mainSheet.push(['']);\n            mainSheet.push(['BENEFICIARY INFORMATION']);\n            mainSheet.push(['Full Name:', request.beneficiary.full_name || '']);\n            mainSheet.push(['Email Address:', request.beneficiary.email || '']);\n            mainSheet.push(['Phone Number:', request.beneficiary.phone_number || '']);\n            mainSheet.push(['Date of Birth:', this.formatDate(request.beneficiary.birth_date) || '']);\n            mainSheet.push(['Gender:', this.formatGender(request.beneficiary.gender) || '']);\n            mainSheet.push(['Civil Status:', this.getCivilStatusName(request.beneficiary.civil_status_id) || '']);\n            mainSheet.push(['Nationality:', request.beneficiary.nationality || '']);\n            mainSheet.push(['Address:', request.beneficiary.address || '']);\n            mainSheet.push(['Relationship to Requestor:', this.formatRelationship(request.beneficiary.relationship_to_requestor) || '']);\n          }\n          mainSheet.push(['']);\n        }\n\n        // Authorized Pickup Information (if applicable)\n        if (request.authorized_pickup) {\n          mainSheet.push(['AUTHORIZED PICKUP PERSON']);\n          mainSheet.push(['Full Name:', request.authorized_pickup.full_name || '']);\n          mainSheet.push(['Phone Number:', request.authorized_pickup.phone_number || '']);\n          mainSheet.push(['Relationship:', this.formatRelationship(request.authorized_pickup.relationship_to_beneficiary) || '']);\n          mainSheet.push(['']);\n        }\n\n        // Payment Information\n        mainSheet.push(['PAYMENT INFORMATION']);\n        mainSheet.push(['Payment Method:', request.payment_method || '']);\n        mainSheet.push(['Payment Status:', this.formatPaymentStatus(request.payment_status) || '']);\n        mainSheet.push(['Total Fee:', this.formatCurrency(request.total_fee || 0)]);\n        mainSheet.push(['']);\n\n        // Admin Notes (if any)\n        if (request.admin_notes) {\n          mainSheet.push(['ADMIN NOTES']);\n          mainSheet.push(['Notes:', request.admin_notes]);\n          mainSheet.push(['']);\n        }\n\n        // Document-Specific Information for Cedula\n        if (request.document_type === 'Cedula' && request.specific_details) {\n          // Add to Cedula sheet with vertical format\n          if (cedulaSheet.length === 0) {\n            cedulaSheet.push(['CEDULA DOCUMENT DETAILS']);\n            cedulaSheet.push(['='.repeat(50)]);\n            cedulaSheet.push(['']);\n          } else {\n            cedulaSheet.push(['']); // Separator between requests\n          }\n          cedulaSheet.push([`REQUEST: ${request.request_number || 'N/A'}`]);\n          cedulaSheet.push(['Client Name:', this.getClientFullName(request) || '']);\n          cedulaSheet.push(['']);\n          cedulaSheet.push(['INCOME INFORMATION']);\n          cedulaSheet.push(['Annual Income:', this.formatCurrency(request.specific_details.annual_income || 0)]);\n          cedulaSheet.push(['Monthly Income:', this.formatCurrency(request.specific_details.monthly_income || 0)]);\n          cedulaSheet.push(['Occupation:', request.specific_details.occupation || '']);\n          cedulaSheet.push(['Employer Name:', request.specific_details.employer_name || '']);\n          cedulaSheet.push(['']);\n          if (request.specific_details.has_real_property || request.specific_details.property_assessed_value > 0) {\n            cedulaSheet.push(['REAL PROPERTY INFORMATION']);\n            cedulaSheet.push(['Has Real Property:', request.specific_details.has_real_property ? 'Yes' : 'No']);\n            cedulaSheet.push(['Property Assessed Value:', this.formatCurrency(request.specific_details.property_assessed_value || 0)]);\n            cedulaSheet.push(['Property Location:', request.specific_details.property_location || '']);\n            cedulaSheet.push(['']);\n          }\n          if (request.specific_details.has_personal_property || request.specific_details.personal_property_value > 0) {\n            cedulaSheet.push(['PERSONAL PROPERTY INFORMATION']);\n            cedulaSheet.push(['Has Personal Property:', request.specific_details.has_personal_property ? 'Yes' : 'No']);\n            cedulaSheet.push(['Personal Property Value:', this.formatCurrency(request.specific_details.personal_property_value || 0)]);\n            cedulaSheet.push(['']);\n          }\n          if (request.specific_details.business_name || request.specific_details.business_gross_receipts > 0) {\n            cedulaSheet.push(['BUSINESS INFORMATION']);\n            cedulaSheet.push(['Business Name:', request.specific_details.business_name || '']);\n            cedulaSheet.push(['Business Type:', request.specific_details.business_type || '']);\n            cedulaSheet.push(['Business Address:', request.specific_details.business_address || '']);\n            cedulaSheet.push(['Annual Gross Receipts:', this.formatCurrency(request.specific_details.business_gross_receipts || 0)]);\n            cedulaSheet.push(['']);\n          }\n          cedulaSheet.push(['TAX COMPUTATION']);\n          cedulaSheet.push(['Computed Tax:', this.formatCurrency(request.specific_details.computed_tax || 0)]);\n          cedulaSheet.push(['Total Document Fee:', this.formatCurrency(request.total_document_fee || 0)]);\n          cedulaSheet.push(['']);\n        }\n\n        // Document-Specific Information for Barangay Clearance\n        if (request.document_type === 'Barangay Clearance' && request.specific_details) {\n          // Add to Barangay sheet with vertical format\n          if (barangaySheet.length === 0) {\n            barangaySheet.push(['BARANGAY CLEARANCE DOCUMENT DETAILS']);\n            barangaySheet.push(['='.repeat(50)]);\n            barangaySheet.push(['']);\n          } else {\n            barangaySheet.push(['']); // Separator between requests\n          }\n          barangaySheet.push([`REQUEST: ${request.request_number || 'N/A'}`]);\n          barangaySheet.push(['Client Name:', this.getClientFullName(request) || '']);\n          barangaySheet.push(['']);\n          barangaySheet.push(['LEGAL STATUS INFORMATION']);\n          barangaySheet.push(['Has Pending Cases:', request.specific_details.has_pending_cases ? 'Yes' : 'No']);\n          if (request.specific_details.has_pending_cases && request.specific_details.pending_cases_details) {\n            barangaySheet.push(['Pending Cases Details:', request.specific_details.pending_cases_details]);\n          }\n          barangaySheet.push(['']);\n          if (request.specific_details.voter_registration_number || request.specific_details.precinct_number) {\n            barangaySheet.push(['VOTER INFORMATION']);\n            barangaySheet.push(['Voter Registration Number:', request.specific_details.voter_registration_number || '']);\n            barangaySheet.push(['Precinct Number:', request.specific_details.precinct_number || '']);\n            barangaySheet.push(['']);\n          }\n          if (request.specific_details.emergency_contact_name) {\n            barangaySheet.push(['EMERGENCY CONTACT INFORMATION']);\n            barangaySheet.push(['Contact Name:', request.specific_details.emergency_contact_name || '']);\n            barangaySheet.push(['Contact Phone:', request.specific_details.emergency_contact_phone || '']);\n            barangaySheet.push(['Relationship:', request.specific_details.emergency_contact_relationship || '']);\n            barangaySheet.push(['Address:', request.specific_details.emergency_contact_address || '']);\n            barangaySheet.push(['']);\n          }\n        }\n      });\n      return {\n        mainSheet,\n        cedulaSheet,\n        barangaySheet\n      };\n    },\n    // Create Excel workbook with multiple sheets\n    createExcelWorkbook(excelData) {\n      try {\n        // Create a new workbook\n        const wb = XLSX.utils.book_new();\n\n        // Add main sheet\n        const mainWs = XLSX.utils.aoa_to_sheet(excelData.mainSheet);\n        XLSX.utils.book_append_sheet(wb, mainWs, 'All Requests');\n\n        // Add Cedula-specific sheet if there's data\n        if (excelData.cedulaSheet.length > 1) {\n          const cedulaWs = XLSX.utils.aoa_to_sheet(excelData.cedulaSheet);\n          XLSX.utils.book_append_sheet(wb, cedulaWs, 'Cedula Details');\n        }\n\n        // Add Barangay Clearance-specific sheet if there's data\n        if (excelData.barangaySheet.length > 1) {\n          const barangayWs = XLSX.utils.aoa_to_sheet(excelData.barangaySheet);\n          XLSX.utils.book_append_sheet(wb, barangayWs, 'Barangay Clearance Details');\n        }\n\n        // Set column widths for better readability\n        this.setExcelColumnWidths(wb);\n\n        // Generate filename\n        const timestamp = new Date().toISOString().split('T')[0];\n        const filename = `comprehensive_requests_export_${timestamp}.xlsx`;\n\n        // Write and download the file\n        XLSX.writeFile(wb, filename);\n        this.showToast('Success', 'Excel file downloaded successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to create Excel workbook:', error);\n        // Fallback to CSV\n        this.downloadAsCSV(excelData.mainSheet, 'comprehensive_requests_export');\n      }\n    },\n    // Set column widths for Excel sheets (optimized for vertical key-value format)\n    setExcelColumnWidths(workbook) {\n      try {\n        // Set column widths for all sheets with vertical key-value format\n        Object.keys(workbook.Sheets).forEach(sheetName => {\n          const sheet = workbook.Sheets[sheetName];\n          if (sheet) {\n            // For vertical key-value format, we need:\n            // Column A: Labels/Keys (wider)\n            // Column B: Values (wider for content)\n            const colWidths = [{\n              wch: 35\n            },\n            // Column A: Labels/Keys\n            {\n              wch: 50\n            } // Column B: Values/Content\n            ];\n            sheet['!cols'] = colWidths;\n          }\n        });\n      } catch (error) {\n        console.warn('Failed to set column widths:', error);\n      }\n    },\n    // CSV fallback method (optimized for vertical key-value format)\n    downloadAsCSV(sheetData, filename) {\n      try {\n        // Convert vertical key-value format to readable CSV\n        const csvContent = sheetData.map(row => {\n          if (Array.isArray(row)) {\n            return row.map(cell => {\n              // Escape commas and quotes in CSV\n              const cellValue = String(cell || '');\n              if (cellValue.includes(',') || cellValue.includes('\"') || cellValue.includes('\\n')) {\n                return `\"${cellValue.replace(/\"/g, '\"\"')}\"`;\n              }\n              return cellValue;\n            }).join(',');\n          }\n          return String(row || '');\n        }).join('\\n');\n\n        // Create and download CSV file\n        const blob = new Blob([csvContent], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `${filename}_${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n        this.showToast('Success', 'CSV file downloaded successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to download CSV:', error);\n        this.showToast('Error', 'Failed to download CSV file', 'error');\n      }\n    },\n    // Export single request to Excel\n    async exportSingleRequestToExcel() {\n      try {\n        if (!this.currentRequest) {\n          this.showToast('Warning', 'No request selected for export', 'warning');\n          return;\n        }\n        this.showToast('Info', 'Preparing request export...', 'info');\n\n        // Prepare data for single request\n        const excelData = this.prepareExcelData([this.currentRequest]);\n\n        // Check if xlsx library is available\n        if (typeof XLSX === 'undefined') {\n          // Fallback to CSV if xlsx is not available\n          this.showToast('Warning', 'Excel library not available. Downloading as CSV instead.', 'warning');\n          this.downloadAsCSV(excelData.mainSheet, `request_${this.currentRequest.request_number}_export`);\n          return;\n        }\n\n        // Create Excel workbook\n        const wb = XLSX.utils.book_new();\n\n        // Add main sheet with single request data\n        const mainWs = XLSX.utils.aoa_to_sheet(excelData.mainSheet);\n        XLSX.utils.book_append_sheet(wb, mainWs, 'Request Details');\n\n        // Add document-specific sheet if applicable\n        if (this.currentRequest.document_type === 'Cedula' && excelData.cedulaSheet.length > 1) {\n          const cedulaWs = XLSX.utils.aoa_to_sheet(excelData.cedulaSheet);\n          XLSX.utils.book_append_sheet(wb, cedulaWs, 'Cedula Details');\n        } else if (this.currentRequest.document_type === 'Barangay Clearance' && excelData.barangaySheet.length > 1) {\n          const barangayWs = XLSX.utils.aoa_to_sheet(excelData.barangaySheet);\n          XLSX.utils.book_append_sheet(wb, barangayWs, 'Barangay Clearance Details');\n        }\n\n        // Set column widths\n        this.setExcelColumnWidths(wb);\n\n        // Generate filename with request number\n        const filename = `request_${this.currentRequest.request_number}_export_${new Date().toISOString().split('T')[0]}.xlsx`;\n\n        // Write and download the file\n        XLSX.writeFile(wb, filename);\n        this.showToast('Success', 'Request exported to Excel successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to export single request to Excel:', error);\n        this.showToast('Error', 'Failed to export request to Excel', 'error');\n      }\n    },\n    // Export single request to PDF\n    async exportSingleRequestToPDF() {\n      try {\n        if (!this.currentRequest) {\n          this.showToast('Warning', 'No request selected for export', 'warning');\n          return;\n        }\n        this.showToast('Info', 'Generating PDF export...', 'info');\n\n        // Create PDF document\n        const pdf = new jsPDF();\n\n        // Generate PDF content\n        this.generateRequestPDF(pdf, this.currentRequest);\n\n        // Generate filename with request number\n        const filename = `Request_${this.currentRequest.request_number || 'Unknown'}.pdf`;\n\n        // Download PDF\n        pdf.save(filename);\n        this.showToast('Success', 'Request exported to PDF successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to export single request to PDF:', error);\n        this.showToast('Error', 'Failed to export request to PDF', 'error');\n      }\n    },\n    // Generate PDF content for single request\n    generateRequestPDF(pdf, request) {\n      // Document Header\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY DOCUMENT REQUEST DETAILS', 105, 25, {\n        align: 'center'\n      });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n      let yPosition = 45;\n      const lineHeight = 8;\n      const sectionSpacing = 12;\n\n      // Helper function to add section header\n      const addSectionHeader = title => {\n        // Check if we need a new page before adding section header\n        checkPageBreak(lineHeight + 10); // Reserve space for header and some content\n\n        pdf.setFontSize(14);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text(title, 20, yPosition);\n        yPosition += lineHeight + 2;\n      };\n\n      // Helper function to check if we need a new page\n      const checkPageBreak = (requiredSpace = 20) => {\n        if (yPosition + requiredSpace > 270) {\n          // Leave space for footer\n          pdf.addPage();\n          yPosition = 20;\n        }\n      };\n\n      // Helper function to add field with text wrapping\n      const addField = (label, value) => {\n        // Check if we need a new page before adding content\n        checkPageBreak(lineHeight * 3); // Reserve space for at least 3 lines\n\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(0, 0, 0);\n        pdf.text(`${label}:`, 20, yPosition);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(60, 60, 60);\n        const displayValue = value || 'N/A';\n\n        // Calculate available width for text (page width - left margin - label width - right margin)\n        const maxWidth = 190 - 80 - 10; // 100 units available for text\n\n        // Split text into lines that fit within the available width\n        const textLines = pdf.splitTextToSize(displayValue, maxWidth);\n\n        // Check if all lines will fit on current page\n        const totalHeight = textLines.length * lineHeight;\n        if (yPosition + totalHeight > 270) {\n          pdf.addPage();\n          yPosition = 20;\n          // Re-add the label on the new page\n          pdf.setFontSize(11);\n          pdf.setFont('helvetica', 'bold');\n          pdf.setTextColor(0, 0, 0);\n          pdf.text(`${label}:`, 20, yPosition);\n        }\n\n        // Add each line\n        textLines.forEach((line, index) => {\n          pdf.text(line, 80, yPosition + index * lineHeight);\n        });\n\n        // Update yPosition based on number of lines used\n        yPosition += textLines.length * lineHeight;\n      };\n\n      // Request Information Section\n      addSectionHeader('REQUEST INFORMATION');\n      addField('Request Number', request.request_number);\n      addField('Document Type', request.document_type);\n      addField('Status', this.formatStatus(request.status_name));\n      addField('Submitted Date', this.formatDate(request.requested_at));\n      addField('Last Updated', this.formatDate(request.updated_at));\n      addField('Purpose Category', request.purpose_category);\n      addField('Purpose Details', request.purpose_details);\n      yPosition += sectionSpacing;\n\n      // Client Information Section\n      addSectionHeader('CLIENT INFORMATION');\n      addField('Full Name', this.getClientFullName(request));\n      addField('Email Address', request.client_email);\n      addField('Phone Number', request.client_phone);\n      addField('Date of Birth', this.formatDate(request.client_birth_date));\n      addField('Gender', this.formatGender(request.client_gender));\n      addField('Civil Status', this.getCivilStatusName(request.client_civil_status_id));\n      addField('Nationality', request.client_nationality);\n      addField('Complete Address', this.getClientFullAddress(request));\n      addField('Years of Residency', this.getResidencyDisplay(request));\n      yPosition += sectionSpacing;\n\n      // Third Party Request Information (if applicable)\n      if (request.is_third_party_request && request.beneficiary) {\n        addSectionHeader('THIRD PARTY REQUEST - BENEFICIARY INFORMATION');\n        addField('Full Name', request.beneficiary.full_name);\n        addField('Email Address', request.beneficiary.email);\n        addField('Phone Number', request.beneficiary.phone_number);\n        addField('Date of Birth', this.formatDate(request.beneficiary.birth_date));\n        addField('Gender', this.formatGender(request.beneficiary.gender));\n        addField('Civil Status', this.getCivilStatusName(request.beneficiary.civil_status_id));\n        addField('Nationality', request.beneficiary.nationality);\n        addField('Address', request.beneficiary.address);\n        addField('Relationship to Requestor', this.formatRelationship(request.beneficiary.relationship_to_requestor));\n        yPosition += sectionSpacing;\n      }\n\n      // Authorized Pickup Information (if applicable)\n      if (request.authorized_pickup) {\n        addSectionHeader('AUTHORIZED PICKUP PERSON');\n        addField('Full Name', request.authorized_pickup.full_name);\n        addField('Phone Number', request.authorized_pickup.phone_number);\n        addField('Relationship', this.formatRelationship(request.authorized_pickup.relationship_to_beneficiary));\n        yPosition += sectionSpacing;\n      }\n\n      // Payment Information Section\n      addSectionHeader('PAYMENT INFORMATION');\n      addField('Payment Method', request.payment_method);\n      addField('Payment Status', this.formatPaymentStatus(request.payment_status));\n      addField('Total Fee', this.formatCurrencyForPDF(request.total_fee || request.total_document_fee || 0));\n      yPosition += sectionSpacing;\n\n      // Admin Notes (if any)\n      if (request.admin_notes) {\n        addSectionHeader('ADMIN NOTES');\n        addField('Notes', request.admin_notes);\n        yPosition += sectionSpacing;\n      }\n\n      // Document-Specific Information for Cedula\n      if (request.document_type === 'Cedula' && request.specific_details) {\n        addSectionHeader('CEDULA DOCUMENT DETAILS');\n        addField('Annual Income', this.formatCurrencyForPDF(request.specific_details.annual_income || 0));\n        addField('Occupation', request.specific_details.occupation);\n        addField('Employer/Business', request.specific_details.employer_business);\n        addField('TIN Number', request.specific_details.tin_number);\n        addField('Height (cm)', request.specific_details.height_cm);\n        addField('Weight (kg)', request.specific_details.weight_kg);\n        addField('ICR Number', request.specific_details.icr_number);\n        yPosition += sectionSpacing;\n      }\n\n      // Document-Specific Information for Barangay Clearance\n      if (request.document_type === 'Barangay Clearance' && request.specific_details) {\n        addSectionHeader('BARANGAY CLEARANCE DETAILS');\n        addField('Clearance Type', request.specific_details.clearance_type);\n        addField('Business Name', request.specific_details.business_name);\n        addField('Business Address', request.specific_details.business_address);\n        addField('Business Type', request.specific_details.business_type);\n        yPosition += sectionSpacing;\n      }\n\n      // Add footer\n      this.addPDFFooter(pdf);\n    },\n    // Add professional footer to PDF\n    addPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(200, 200, 200);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(9);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(100, 100, 100);\n\n        // Left side - Generated info\n        const generatedDate = new Date().toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        pdf.text(`Generated on: ${generatedDate}`, 20, 285);\n\n        // Center - Barangay info\n        pdf.text('Barangay Bula Document Management System', 105, 285, {\n          align: 'center'\n        });\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, {\n          align: 'right'\n        });\n      }\n    },\n    // Verify in-person payment\n    async verifyInPersonPayment() {\n      if (!this.paymentVerificationForm.amount_received || !this.currentRequest) {\n        this.showToast('Error', 'Please enter the amount received', 'error');\n        return;\n      }\n      const totalFee = parseFloat(this.currentRequest.total_document_fee || this.currentRequest.total_fee);\n      const amountReceived = parseFloat(this.paymentVerificationForm.amount_received);\n      if (amountReceived < totalFee) {\n        this.showToast('Error', `Insufficient payment. Required: ${this.formatCurrency(totalFee)}`, 'error');\n        return;\n      }\n      this.paymentVerificationForm.loading = true;\n      this.paymentVerificationForm.error = '';\n      try {\n        const paymentData = {\n          amount_received: amountReceived,\n          payment_method_id: this.currentRequest.payment_method_id || 1,\n          // Default to cash\n          receipt_number: this.paymentVerificationForm.receipt_number\n        };\n        const response = await adminDocumentService.verifyInPersonPayment(this.currentRequest.id, paymentData);\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.paymentVerificationForm = {\n            amount_received: '',\n            receipt_number: '',\n            loading: false,\n            error: ''\n          };\n          this.showToast('Success', 'Payment verified successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to verify payment:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.paymentVerificationForm.error = errorData.message || 'Failed to verify payment';\n        this.showToast('Error', errorData.message || 'Failed to verify payment', 'error');\n      } finally {\n        this.paymentVerificationForm.loading = false;\n      }\n    },\n    // Schedule pickup appointment\n    async schedulePickup() {\n      if (!this.isPickupFormValid() || !this.currentRequest) {\n        this.showToast('Error', 'Please fill in all required fields', 'error');\n        return;\n      }\n      this.pickupScheduleForm.loading = true;\n      this.pickupScheduleForm.error = '';\n      try {\n        const scheduleData = {\n          scheduled_date: this.pickupScheduleForm.scheduled_date,\n          scheduled_time_start: this.pickupScheduleForm.scheduled_time_start,\n          scheduled_time_end: this.pickupScheduleForm.scheduled_time_end\n        };\n        const response = await adminDocumentService.schedulePickup(this.currentRequest.id, scheduleData);\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.pickupScheduleForm = {\n            scheduled_date: '',\n            scheduled_time_start: '',\n            scheduled_time_end: '',\n            loading: false,\n            error: ''\n          };\n          this.showToast('Success', 'Pickup scheduled successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to schedule pickup:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.pickupScheduleForm.error = errorData.message || 'Failed to schedule pickup';\n        this.showToast('Error', errorData.message || 'Failed to schedule pickup', 'error');\n      } finally {\n        this.pickupScheduleForm.loading = false;\n      }\n    },\n    // Utility methods\n    formatStatus(status) {\n      return adminDocumentService.formatStatus(status);\n    },\n    getStatusColor(status) {\n      return adminDocumentService.getStatusColor(status);\n    },\n    // Enhanced fee display method with debugging\n    getDisplayFee(request) {\n      const totalDocumentFee = parseFloat(request.total_document_fee);\n      const totalFee = parseFloat(request.total_fee);\n\n      // Debug logging for Cedula requests\n      if (request.document_type === 'Cedula') {\n        console.log(`🔍 Cedula Fee Debug - Request ${request.request_number}:`, {\n          total_document_fee: request.total_document_fee,\n          total_fee: request.total_fee,\n          parsed_total_document_fee: totalDocumentFee,\n          parsed_total_fee: totalFee,\n          will_display: totalDocumentFee || totalFee || 0\n        });\n      }\n\n      // Prioritize total_document_fee, fallback to total_fee\n      return totalDocumentFee || totalFee || 0;\n    },\n    // Check if request has convenience fee\n    hasConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return totalFee > baseFee && baseFee > 0;\n    },\n    // Get base document fee (without convenience fee)\n    getBaseFee(request) {\n      const documentType = request.document_type;\n      const totalFee = this.getDisplayFee(request);\n\n      // For Cedula requests, calculate the actual document fee\n      if (documentType === 'Cedula') {\n        // If total is ₱100.00, the base fee is likely ₱30.00 (with ₱70.00 convenience fee)\n        if (totalFee === 100.00) {\n          return 30.00; // Standard Cedula fee for ₱20K income\n        }\n        // For other amounts, assume no convenience fee for now\n        return totalFee;\n      }\n\n      // For other document types, check if convenience fee was applied\n      const PAYMONGO_MINIMUM = 100.00;\n      if (totalFee === PAYMONGO_MINIMUM && documentType !== 'Barangay Clearance') {\n        // Likely has convenience fee - estimate base fee\n        return totalFee - (PAYMONGO_MINIMUM - totalFee);\n      }\n      return totalFee;\n    },\n    // Get convenience fee amount\n    getConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return Math.max(0, totalFee - baseFee);\n    },\n    // Get convenience fee explanation\n    getConvenienceFeeExplanation(request) {\n      const convenienceFee = this.getConvenienceFee(request);\n      if (convenienceFee > 0) {\n        return `PayMongo requires a minimum payment of ₱100.00. A convenience fee of ₱${convenienceFee.toFixed(2)} was added to meet this requirement.`;\n      }\n      return '';\n    },\n    formatDate(dateString) {\n      console.log('🗓️ formatDate called with:', dateString);\n      if (!dateString) {\n        console.log('🗓️ formatDate: No date provided, returning null');\n        return null;\n      }\n      const date = new Date(dateString);\n      const formatted = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      console.log('🗓️ formatDate result:', formatted);\n      return formatted;\n    },\n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-PH', {\n        style: 'currency',\n        currency: 'PHP'\n      }).format(amount || 0);\n    },\n    // PDF-specific currency formatting (avoids special character issues in jsPDF)\n    formatCurrencyForPDF(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `PHP ${numAmount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`;\n    },\n    formatDateTime(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    // Get formatted changed by name for status history\n    getChangedByName(history) {\n      // If the reason starts with \"SYSTEM:\", show \"System\" regardless of changed_by_name\n      if (history.change_reason && history.change_reason.startsWith('SYSTEM:')) {\n        return 'System';\n      }\n      return history.changed_by_name || 'System';\n    },\n    // Get formatted reason for status history\n    getFormattedReason(reason) {\n      if (!reason) return '';\n      // Remove \"SYSTEM:\" prefix if present\n      if (reason.startsWith('SYSTEM:')) {\n        return reason.substring(7).trim(); // Remove \"SYSTEM:\" and trim whitespace\n      }\n      return reason;\n    },\n    // New helper methods for complete client information\n    getClientFullName(request) {\n      if (!request) return 'Not provided';\n      const parts = [request.client_first_name, request.client_middle_name, request.client_last_name, request.client_suffix].filter(Boolean);\n      return parts.length > 0 ? parts.join(' ') : request.client_name || 'Not provided';\n    },\n    getClientFullAddress(request) {\n      if (!request) return null;\n      const parts = [request.client_house_number, request.client_street, request.client_subdivision, request.client_barangay, request.client_city_municipality || request.client_city, request.client_province].filter(Boolean);\n      return parts.length > 0 ? parts.join(', ') : request.client_address || null;\n    },\n    formatGender(gender) {\n      if (!gender) {\n        return null;\n      }\n      return gender.charAt(0).toUpperCase() + gender.slice(1);\n    },\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || null;\n    },\n    // New helper methods for third-party requests\n    formatRelationship(relationship) {\n      if (!relationship) return 'Not specified';\n      const relationships = {\n        'spouse': 'Spouse',\n        'child': 'Child',\n        'parent': 'Parent',\n        'sibling': 'Sibling',\n        'relative': 'Other Relative',\n        'friend': 'Friend',\n        'colleague': 'Colleague',\n        // 'other': 'Other',\n        'self': 'Self'\n      };\n      return relationships[relationship] || relationship.charAt(0).toUpperCase() + relationship.slice(1);\n    },\n    formatAuthorizationStatus(status) {\n      if (!status) return 'Pending';\n      const statuses = {\n        'pending': 'Pending Verification',\n        'verified': 'Verified',\n        'rejected': 'Rejected'\n      };\n      return statuses[status] || status.charAt(0).toUpperCase() + status.slice(1);\n    },\n    getAuthorizationStatusClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n    getAuthorizationStatusIcon(status) {\n      const icons = {\n        'pending': 'fa-clock',\n        'verified': 'fa-check-circle',\n        'rejected': 'fa-times-circle'\n      };\n      return icons[status] || 'fa-question-circle';\n    },\n    // Authorization verification methods\n    async verifyAuthorization(requestId, isApproved) {\n      try {\n        // This would call a new API endpoint for authorization verification\n        // const response = await adminDocumentService.verifyAuthorization(requestId, {\n        //   isApproved,\n        //   notes: isApproved ? 'Authorization verified and approved' : 'Authorization rejected'\n        // });\n\n        // For now, show a placeholder message\n        this.showToast('Authorization ' + (isApproved ? 'Approved' : 'Rejected'), `Pickup authorization has been ${isApproved ? 'approved' : 'rejected'}`, isApproved ? 'success' : 'warning');\n\n        // Refresh the request details\n        await this.refreshRequestDetails();\n      } catch (error) {\n        console.error('Failed to verify authorization:', error);\n        this.errorMessage = 'Failed to verify authorization. Please try again.';\n      }\n    },\n    getResidencyDisplay(request) {\n      if (!request) return null;\n      const years = request.client_years_of_residency;\n      const months = request.client_months_of_residency;\n      if (!years && !months) return null; // Return null so the template can handle \"Not provided\"\n\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n      return parts.join(' and ');\n    },\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    },\n    // Real-time features\n    async initializeRealTimeFeatures() {\n      console.log('Initializing real-time features for AdminRequests');\n      try {\n        // Initialize notification service\n        await notificationService.init('admin');\n\n        // Listen for request-related notifications\n        notificationService.on('notification', this.handleRealTimeNotification);\n        notificationService.on('request_status_changed', this.handleStatusChange);\n        notificationService.on('new_request', this.handleNewRequest);\n\n        // Start auto-refresh if enabled\n        if (this.autoRefreshEnabled) {\n          this.startAutoRefresh();\n        }\n      } catch (error) {\n        console.error('Failed to initialize real-time features:', error);\n      }\n    },\n    cleanupRealTimeFeatures() {\n      console.log('Cleaning up real-time features for AdminRequests');\n\n      // Remove notification listeners\n      notificationService.off('notification', this.handleRealTimeNotification);\n      notificationService.off('request_status_changed', this.handleStatusChange);\n      notificationService.off('new_request', this.handleNewRequest);\n\n      // Cleanup (simplified)\n      notificationService.cleanup();\n\n      // Stop auto-refresh\n      this.stopAutoRefresh();\n    },\n    startAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n      }\n      this.refreshInterval = setInterval(() => {\n        if (this.autoRefreshEnabled && !this.loading) {\n          console.log('Auto-refreshing requests data...');\n          this.refreshRequestsData();\n        }\n      }, this.refreshRate);\n      console.log(`Auto-refresh started with ${this.refreshRate / 1000}s interval`);\n    },\n    stopAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n        this.refreshInterval = null;\n        console.log('Auto-refresh stopped');\n      }\n    },\n    toggleAutoRefresh() {\n      this.autoRefreshEnabled = !this.autoRefreshEnabled;\n      if (this.autoRefreshEnabled) {\n        this.startAutoRefresh();\n      } else {\n        this.stopAutoRefresh();\n      }\n    },\n    async refreshRequestsData() {\n      try {\n        this.lastRefresh = new Date();\n\n        // Refresh requests list\n        await this.loadRequests();\n\n        // Refresh statistics\n        await this.loadDashboardStats();\n\n        // If request details modal is open, refresh it\n        if (this.showRequestDetails && this.currentRequest) {\n          await this.refreshRequestDetails();\n        }\n        console.log('Requests data refreshed successfully');\n      } catch (error) {\n        console.error('Failed to refresh requests data:', error);\n      }\n    },\n    handleRealTimeNotification(notification) {\n      console.log('Real-time notification received:', notification);\n\n      // Handle different notification types\n      switch (notification.type) {\n        case 'request_status_changed':\n          this.handleStatusChange(notification.data);\n          break;\n        case 'new_request':\n          this.handleNewRequest(notification.data);\n          break;\n        case 'request_updated':\n          this.handleRequestUpdate(notification.data);\n          break;\n        case 'unread_count_update':\n        case 'heartbeat':\n          // Polling system notifications - handled by notification service\n          break;\n        default:\n          // Only log unknown types, not system types\n          if (!['unread_count_update', 'heartbeat'].includes(notification.type)) {\n            console.log('Unhandled notification type:', notification.type);\n          }\n      }\n    },\n    handleStatusChange(data) {\n      console.log('🔄 Request status changed:', data);\n      console.log('🔍 Data properties:', {\n        request_id: data.request_id,\n        new_status: data.new_status,\n        payment_status: data.payment_status,\n        amount: data.amount\n      });\n\n      // Update the request in the list if it exists\n      const requestId = data.request_id;\n      if (!requestId) {\n        console.warn('⚠️ No request_id in status change data');\n        return;\n      }\n      const requestIndex = this.requests.findIndex(req => req.id == requestId);\n      if (requestIndex !== -1) {\n        console.log(`📝 Updating request #${data.request_id} in the list`);\n\n        // Update the specific request in the list for immediate UI update\n        const updatedRequest = {\n          ...this.requests[requestIndex]\n        };\n\n        // Map the status based on the new status\n        if (data.new_status === 'payment_confirmed') {\n          updatedRequest.status_name = 'Payment Confirmed';\n          updatedRequest.status_id = 11;\n          updatedRequest.payment_status = 'paid';\n        } else if (data.new_status === 'payment_failed') {\n          updatedRequest.status_name = 'Payment Failed';\n          updatedRequest.payment_status = 'failed';\n        }\n\n        // Update the timestamp\n        updatedRequest.updated_at = data.timestamp || new Date().toISOString();\n\n        // Replace the request in the array\n        this.$set(this.requests, requestIndex, updatedRequest);\n\n        // Also refresh data in background to ensure consistency\n        setTimeout(() => {\n          this.refreshRequestsData();\n        }, 1000);\n        console.log(`✅ Request #${data.request_id} updated in real-time`);\n      } else {\n        console.log(`📄 Request #${data.request_id} not in current view, refreshing data`);\n        // If request is not in current view, just refresh\n        this.refreshRequestsData();\n      }\n\n      // Show toast notification with payment-specific message\n      const toastRequestId = data.request_id || 'Unknown';\n      const newStatus = data.new_status || 'unknown';\n      let title = 'Status Update';\n      let message = `Request #${toastRequestId} status changed`;\n      let type = 'info';\n      if (newStatus === 'payment_confirmed') {\n        title = 'Payment Confirmed';\n        message = `Payment confirmed for request #${toastRequestId}`;\n        type = 'success';\n      } else if (newStatus === 'payment_failed') {\n        title = 'Payment Failed';\n        message = `Payment failed for request #${toastRequestId}`;\n        type = 'error';\n      }\n      console.log('🔔 Showing toast:', {\n        title,\n        message,\n        type\n      });\n      this.showToast(title, message, type);\n    },\n    handleNewRequest(data) {\n      console.log('New request received:', data);\n\n      // Refresh requests to show the new request\n      this.refreshRequestsData();\n\n      // Show toast notification\n      this.showToast('New Request', `New ${data.document_type} request received`, 'success');\n    },\n    handleRequestUpdate(data) {\n      console.log('Request updated:', data);\n\n      // If the updated request is currently being viewed, refresh details\n      if (this.currentRequest && this.currentRequest.id === data.request_id) {\n        this.refreshRequestDetails();\n      }\n\n      // Refresh the requests list\n      this.refreshRequestsData();\n    },\n    showToast(title, message, type = 'info') {\n      // Enhanced debugging\n      console.log('🔔 showToast called with:', {\n        title: title,\n        titleType: typeof title,\n        message: message,\n        messageType: typeof message,\n        type: type\n      });\n\n      // Handle undefined values\n      const safeTitle = title || 'Notification';\n      const safeMessage = message || 'No message provided';\n\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${safeTitle}: ${safeMessage}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${safeTitle}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${safeMessage}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n          }\n          .toast-success { border-left: 4px solid #28a745; }\n          .toast-error { border-left: 4px solid #dc3545; }\n          .toast-info { border-left: 4px solid #17a2b8; }\n          .toast-warning { border-left: 4px solid #ffc107; }\n          @keyframes slideIn {\n            from { transform: translateX(100%); opacity: 0; }\n            to { transform: translateX(0); opacity: 1; }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto-remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.style.animation = 'slideIn 0.3s ease reverse';\n          setTimeout(() => toast.remove(), 300);\n        }\n      }, 5000);\n    },\n    // Document handling methods\n    getDocumentTypeDisplayName(type) {\n      const displayNames = {\n        'government_id': 'Government ID',\n        'proof_of_residency': 'Proof of Residency',\n        'cedula': 'Community Tax Certificate (Cedula)',\n        'birth_certificate': 'Birth Certificate',\n        'marriage_certificate': 'Marriage Certificate',\n        'other': 'Other Document'\n      };\n      return displayNames[type] || type;\n    },\n    isImageFile(mimeType) {\n      return mimeType && (mimeType.startsWith('image/') || ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'].includes(mimeType));\n    },\n    isPdfFile(mimeType) {\n      return mimeType === 'application/pdf';\n    },\n    async loadDocumentUrls(documents) {\n      // Filter documents that need loading (images only, not already loaded/loading/failed)\n      const documentsToLoad = documents.filter(doc => this.isImageFile(doc.mime_type) && !this.documentUrls[doc.id] && !this.loadingDocuments.has(doc.id) && !this.failedDocuments.has(doc.id));\n      if (documentsToLoad.length === 0) return;\n\n      // Load documents in parallel with concurrency limit\n      const CONCURRENT_LIMIT = 3;\n      const chunks = this.chunkArray(documentsToLoad, CONCURRENT_LIMIT);\n      for (const chunk of chunks) {\n        await Promise.allSettled(chunk.map(document => this.loadSingleDocument(document)));\n      }\n    },\n    async loadSingleDocument(document, isForModal = false) {\n      const docId = document.id;\n      try {\n        // Mark as loading\n        this.loadingDocuments.add(docId);\n        if (isForModal) this.imageLoadingInModal = true;\n\n        // Use authenticated API call to get the document\n        const response = await api.get(`/documents/view/${docId}`, {\n          responseType: 'blob',\n          timeout: 15000,\n          // Increased timeout for large images\n          onDownloadProgress: progressEvent => {\n            // Optional: Could emit progress events here\n            if (progressEvent.lengthComputable) {\n              const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n              console.log(`Loading ${docId}: ${percentCompleted}%`);\n            }\n          }\n        });\n\n        // Validate response\n        if (!response.data || response.data.size === 0) {\n          throw new Error('Empty response received');\n        }\n\n        // Check file size and optimize if needed\n        const blob = response.data;\n        const optimizedBlob = await this.optimizeImageBlob(blob, document.mime_type, isForModal);\n\n        // Create blob URL using requestIdleCallback for better performance\n        await this.createBlobUrlWhenIdle(docId, optimizedBlob);\n\n        // Remove from failed set if it was there\n        this.failedDocuments.delete(docId);\n        if (isForModal) this.modalImageError = false;\n      } catch (error) {\n        console.warn(`Failed to load document ${docId}:`, error.message);\n        this.failedDocuments.add(docId);\n        if (isForModal) this.modalImageError = true;\n\n        // Optionally retry after a delay for network errors\n        if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED') {\n          setTimeout(() => {\n            this.failedDocuments.delete(docId);\n          }, 30000); // Retry after 30 seconds\n        }\n      } finally {\n        // Remove from loading set\n        this.loadingDocuments.delete(docId);\n        if (isForModal) this.imageLoadingInModal = false;\n      }\n    },\n    chunkArray(array, size) {\n      const chunks = [];\n      for (let i = 0; i < array.length; i += size) {\n        chunks.push(array.slice(i, i + size));\n      }\n      return chunks;\n    },\n    async getDocumentUrl(document) {\n      // This method is now deprecated in favor of loadDocumentUrls\n      // Keeping for backward compatibility\n      if (this.documentUrls[document.id]) {\n        return this.documentUrls[document.id];\n      }\n      return null;\n    },\n    formatFileSize(bytes) {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n    async openImageModal(document) {\n      // Prevent multiple rapid clicks\n      if (this.imageLoadingInModal) return;\n\n      // Don't open modal if document failed to load and we're not retrying\n      if (this.failedDocuments.has(document.id)) {\n        return;\n      }\n\n      // Set modal state immediately for responsiveness\n      this.selectedImage = document;\n      this.showImageModal = true;\n      this.modalImageError = false;\n\n      // Use nextTick to ensure DOM is updated before heavy operations\n      await this.$nextTick();\n\n      // If image isn't loaded yet, try to load it with modal optimization\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id)) {\n        await this.loadSingleDocument(document, true);\n      }\n    },\n    async retryLoadDocument(document) {\n      // Remove from failed set and retry loading\n      this.failedDocuments.delete(document.id);\n      this.modalImageError = false;\n      await this.loadSingleDocument(document, true);\n    },\n    onModalImageLoad() {\n      // Called when modal image finishes loading\n      this.imageLoadingInModal = false;\n    },\n    cleanupDocumentUrls() {\n      // Revoke all blob URLs to prevent memory leaks\n      Object.values(this.documentUrls).forEach(url => {\n        if (url) URL.revokeObjectURL(url);\n      });\n\n      // Clear all tracking sets and objects\n      this.documentUrls = {};\n      this.loadingDocuments.clear();\n      this.failedDocuments.clear();\n    },\n    preloadImage(document) {\n      // Preload image on hover for better UX\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id) && !this.failedDocuments.has(document.id)) {\n        this.loadSingleDocument(document, false);\n      }\n    },\n    async optimizeImageBlob(blob, mimeType, isForModal = false) {\n      // For very large images, we might want to resize them\n      const MAX_SIZE = isForModal ? 5 * 1024 * 1024 : 2 * 1024 * 1024; // 5MB for modal, 2MB for preview\n\n      if (blob.size <= MAX_SIZE) {\n        return blob; // No optimization needed\n      }\n      try {\n        // Create image element for resizing\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        return new Promise(resolve => {\n          img.onload = () => {\n            // Calculate new dimensions (maintain aspect ratio)\n            const maxDimension = isForModal ? 1920 : 800;\n            let {\n              width,\n              height\n            } = img;\n            if (width > height && width > maxDimension) {\n              height = height * maxDimension / width;\n              width = maxDimension;\n            } else if (height > maxDimension) {\n              width = width * maxDimension / height;\n              height = maxDimension;\n            }\n\n            // Set canvas size and draw resized image\n            canvas.width = width;\n            canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n\n            // Convert to blob with compression\n            canvas.toBlob(optimizedBlob => {\n              resolve(optimizedBlob || blob); // Fallback to original if optimization fails\n            }, mimeType, 0.85 // 85% quality\n            );\n          };\n          img.onerror = () => resolve(blob); // Fallback to original\n          img.src = URL.createObjectURL(blob);\n        });\n      } catch (error) {\n        console.warn('Image optimization failed:', error);\n        return blob; // Fallback to original\n      }\n    },\n    async createBlobUrlWhenIdle(docId, blob) {\n      return new Promise(resolve => {\n        const createUrl = () => {\n          this.documentUrls[docId] = URL.createObjectURL(blob);\n          resolve();\n        };\n\n        // Use requestIdleCallback if available, otherwise use setTimeout\n        if (window.requestIdleCallback) {\n          window.requestIdleCallback(createUrl, {\n            timeout: 1000\n          });\n        } else {\n          setTimeout(createUrl, 0);\n        }\n      });\n    },\n    closeImageModal() {\n      // Prevent rapid clicking during image loading\n      if (this.imageLoadingInModal) return;\n      this.showImageModal = false;\n      this.selectedImage = null;\n      this.imageLoadingInModal = false;\n      this.modalImageError = false;\n    },\n    async downloadDocument(documentFile) {\n      try {\n        // Use authenticated API call to download the document\n        const response = await api.get(`/documents/download/${documentFile.id}`, {\n          responseType: 'blob'\n        });\n\n        // Create a download link\n        const blob = new Blob([response.data], {\n          type: documentFile.mime_type\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = documentFile.document_name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Failed to download document:', error);\n        this.showToast('Error', 'Failed to download document', 'error');\n      }\n    },\n    handleImageError(event) {\n      console.error('Failed to load image:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n\n      // Show error message\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'text-center text-muted p-3';\n      errorDiv.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><br>Failed to load image';\n      event.target.parentNode.appendChild(errorDiv);\n    },\n    // Beneficiary verification status methods\n    getBeneficiaryVerificationStatusClass(status) {\n      switch (status) {\n        case 'approved':\n          return 'bg-success';\n        case 'rejected':\n          return 'bg-danger';\n        case 'pending':\n        default:\n          return 'bg-warning';\n      }\n    },\n    getBeneficiaryVerificationStatusText(status) {\n      switch (status) {\n        case 'approved':\n          return 'Verified';\n        case 'rejected':\n          return 'Rejected';\n        case 'pending':\n        default:\n          return 'Pending';\n      }\n    },\n    // View verification image\n    async viewVerificationImage(requestId, imageType) {\n      try {\n        // Find the request to get the filename - check both requests list and currentRequest\n        let request = this.requests.find(r => r.id === requestId);\n\n        // If not found in requests list, check if it's the current request being viewed\n        if (!request && this.currentRequest && this.currentRequest.id === requestId) {\n          request = this.currentRequest;\n        }\n        if (!request) {\n          this.showToast('Error', 'Request not found', 'error');\n          return;\n        }\n        let filename = '';\n        let documentType = '';\n        switch (imageType) {\n          case 'beneficiary':\n            // Handle both list view (beneficiary_verification_image) and detail view (beneficiary.verification_image_path)\n            filename = request.beneficiary_verification_image || request.beneficiary?.verification_image_path;\n            documentType = 'beneficiary';\n            // For beneficiary documents, we need the beneficiary ID, not the request ID\n            if (request.beneficiary?.id) {\n              requestId = request.beneficiary.id;\n            }\n            break;\n          case 'pickup-id':\n            filename = request.pickup_id_image || request.authorized_pickup?.id_image_path;\n            documentType = 'pickup-id';\n            break;\n          case 'pickup-auth':\n            filename = request.pickup_authorization_letter || request.authorized_pickup?.authorization_letter_path;\n            documentType = 'pickup-auth';\n            break;\n          default:\n            this.showToast('Error', 'Invalid image type', 'error');\n            return;\n        }\n        if (!filename) {\n          this.showToast('Error', 'No image available', 'error');\n          return;\n        }\n\n        // Extract just the filename from the path (handle both forward and back slashes)\n        const filenameOnly = filename.split(/[/\\\\]/).pop();\n\n        // Construct the URL for the verification document service\n        const imageUrl = `/verification-documents/serve/${documentType}/${requestId}/${filenameOnly}`;\n\n        // Fetch the image with authentication headers and display in modal\n        await this.displayImageInModal(imageUrl, `${documentType} verification image`);\n      } catch (error) {\n        console.error('Error viewing verification image:', error);\n        this.showToast('Error', 'Failed to view image', 'error');\n      }\n    },\n    // Display image in modal with authentication\n    async displayImageInModal(imageUrl, title) {\n      try {\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // Fetch the image with authentication headers\n        const response = await api.get(imageUrl, {\n          responseType: 'blob'\n        });\n\n        // Create object URL from blob\n        const imageObjectUrl = URL.createObjectURL(response.data);\n\n        // Create and show modal\n        const modalHtml = `\n          <div class=\"modal fade\" id=\"imageViewModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">${title}</h5>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body text-center\">\n                  <img src=\"${imageObjectUrl}\" class=\"img-fluid\" alt=\"${title}\" style=\"max-height: 70vh;\">\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;\n\n        // Remove existing modal if any\n        const existingModal = document.getElementById('imageViewModal');\n        if (existingModal) {\n          existingModal.remove();\n        }\n\n        // Add modal to DOM\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Show modal\n        const modal = new Modal(document.getElementById('imageViewModal'));\n        modal.show();\n\n        // Clean up object URL when modal is hidden\n        document.getElementById('imageViewModal').addEventListener('hidden.bs.modal', () => {\n          URL.revokeObjectURL(imageObjectUrl);\n          document.getElementById('imageViewModal').remove();\n        });\n      } catch (error) {\n        console.error('Error displaying image:', error);\n        this.showToast('Error', 'Failed to load image', 'error');\n      }\n    },\n    // View pickup documents in modal\n    async viewPickupDocuments(request) {\n      try {\n        // Set the selected request and show the modal\n        this.selectedRequestForPickup = request;\n\n        // Show modal using Bootstrap\n        const modal = new Modal(document.getElementById('authorizedPickupDocumentsModal'));\n        modal.show();\n      } catch (error) {\n        console.error('Error opening pickup documents modal:', error);\n        this.showToast('Error', 'Failed to open documents modal', 'error');\n      }\n    },\n    // Verify pickup authorization\n    async verifyPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization verification\n        // const response = await adminDocumentService.verifyPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization verified successfully', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error verifying pickup authorization:', error);\n        this.showToast('Error', 'Failed to verify pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n    // Reject pickup authorization\n    async rejectPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization rejection\n        // const response = await adminDocumentService.rejectPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization rejected', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error rejecting pickup authorization:', error);\n        this.showToast('Error', 'Failed to reject pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n    // Update beneficiary verification status\n    async updateBeneficiaryVerificationStatus(beneficiaryId, status, notes = '') {\n      try {\n        const response = await this.$http.put(`/api/verification-documents/beneficiary/${beneficiaryId}/verification-status`, {\n          status,\n          notes\n        });\n        if (response.data.success) {\n          this.showToast('Success', 'Verification status updated successfully', 'success');\n          // Refresh the requests to show updated status\n          await this.loadRequests();\n        } else {\n          throw new Error(response.data.message || 'Failed to update verification status');\n        }\n      } catch (error) {\n        console.error('Error updating verification status:', error);\n        this.showToast('Error', error.response?.data?.message || 'Failed to update verification status', 'error');\n      }\n    },\n    // Open verification modal\n    openVerificationModal(request) {\n      this.currentVerification = {\n        requestId: request.id,\n        beneficiaryId: request.beneficiary_id,\n        beneficiary_name: request.beneficiary_name,\n        relationship: request.beneficiary_relationship,\n        image_url: request.beneficiary_verification_image ? `/verification-documents/serve/beneficiary/${request.id}/${request.beneficiary_verification_image.split('/').pop()}` : null,\n        current_status: request.beneficiary_verification_status\n      };\n      this.verificationForm = {\n        status: request.beneficiary_verification_status || 'pending',\n        notes: ''\n      };\n\n      // Show the modal using Bootstrap\n      const modal = new Modal(document.getElementById('verificationModal'));\n      modal.show();\n    },\n    // Save verification status from modal\n    async saveVerificationStatus() {\n      if (!this.currentVerification) return;\n      try {\n        await this.updateBeneficiaryVerificationStatus(this.currentVerification.beneficiaryId, this.verificationForm.status, this.verificationForm.notes);\n\n        // Close the modal\n        const modal = Modal.getInstance(document.getElementById('verificationModal'));\n        modal.hide();\n\n        // Reset form\n        this.currentVerification = null;\n        this.verificationForm = {\n          status: 'pending',\n          notes: ''\n        };\n      } catch (error) {\n        // Error handling is done in updateBeneficiaryVerificationStatus\n      }\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","AuthorizedPickupDocumentsModal","unifiedAuthService","adminDocumentService","api","Modal","notificationService","XLSX","jsPDF","name","components","data","loading","sidebarCollapsed","showUserDropdown","isMobile","adminData","errorMessage","viewMode","requests","selectedRequests","currentRequest","statusOptions","filterStatusOptions","selectedRequestForPickup","processingPickupAction","pagination","currentPage","totalPages","totalItems","itemsPerPage","filters","status","document_type","priority","search","date_from","date_to","requestStats","total","pending","approved","completed","thisMonth","documentTypes","searchTimeout","showFilters","showBulkActions","showRequestDetails","showRejectForm","showQuickReject","showQuickApprove","currentVerification","verificationForm","notes","showImageModal","selectedImage","bulkAction","documentUrls","loadingDocuments","Set","failedDocuments","imageLoadingInModal","modalImageError","statusUpdateForm","status_id","rejectForm","reason","quickRejectForm","error","selectedRequestForReject","quickApproveForm","selectedRequestForApprove","paymentVerificationForm","amount_received","receipt_number","pickupScheduleForm","scheduled_date","scheduled_time_start","scheduled_time_end","refreshInterval","autoRefreshEnabled","refreshRate","lastRefresh","mounted","isLoggedIn","getUserType","$router","push","initializeUI","loadComponentData","initializeRealTimeFeatures","beforeUnmount","handleResize","window","removeEventListener","cleanupRealTimeFeatures","cleanupDocumentUrls","computed","activeMenu","path","$route","includes","methods","innerWidth","saved","localStorage","getItem","JSON","parse","wasMobile","addEventListener","handleSidebarToggle","setItem","stringify","handleMenuChange","menu","routes","handleUserDropdownToggle","handleOpenRequestModal","modalData","console","log","requestId","focusTab","viewRequestDetails","setTimeout","focusModalTab","showErrorMessage","tabName","tabMappings","payment","paymentSection","document","querySelector","scrollIntoView","behavior","block","classList","add","remove","statusSection","documents","documentsSection","focusAction","handleMenuAction","action","closeMobileSidebar","handleLogout","logout","loadAdminProfile","currentUser","getCurrentUser","profile","first_name","username","role","Promise","all","loadStatusOptions","loadDocumentTypes","loadRequests","loadDashboardStats","errorData","parseError","message","response","getStatusOptions","success","allStatuses","filter","statusName","status_name","toLowerCase","showToast","getDashboardStats","overview","total_requests","pending_requests","approved_requests","completed_requests","time_based","today_requests","getDocumentTypes","params","page","limit","getAllRequests","filteredRequests","request","current_page","total_pages","length","per_page","applyFilters","debouncedSearch","clearTimeout","clearFilters","changePage","changeItemsPerPage","goBack","toggleRequestSelection","index","indexOf","splice","selectAllRequests","map","r","id","getRequestDetails","Object","keys","client_birth_date","client_gender","client_civil_status_id","client_nationality","client_years_of_residency","client_months_of_residency","forEach","key","uploaded_documents","loadDocumentUrls","request_number","refreshRequestDetails","updateRequestStatusFromModal","currentStatus","newStatusId","newStatus","find","s","getAllowedStatusTransitions","getAvailableStatusOptions","isValidStatusChange","updateData","parseInt","updateRequestStatus","rejectRequestFromModal","trim","rejectRequest","statusId","approveRequest","canApprove","allowedTransitions","canReject","getStatusExplanation","formatStatus","currentStatusName","newStatusName","needsPaymentVerification","payment_method","payment_status","canSchedulePickup","getPaymentStatusColor","colors","formatPaymentStatus","statuses","getTomorrowDate","tomorrow","Date","setDate","getDate","toISOString","split","isPickupFormValid","finalStates","isCashPayment","payment_method_code","payment_method_id","is_online_payment","is_online","filteredTransitions","transition","originalTransitions","availableOptions","opt","totalStatusOptions","transitions","getUpdateButtonTitle","getActionButtonText","selectedStatus","getStatusDescription","descriptions","getNextStatusActions","progressionTransitions","statusOption","label","getProgressionButtonLabel","icon","getProgressionButtonIcon","buttonClass","getProgressionButtonClass","description","getProgressionButtonDescription","labels","icons","classes","canCancelRequest","progressToNextStatus","cancelRequest","cancelledStatus","confirm","quickApprove","showQuickRejectModal","closeQuickRejectModal","confirmQuickReject","showQuickApproveModal","closeQuickApproveModal","confirmQuickApprove","performBulkAction","bulkUpdateRequests","request_ids","exportRequests","csvData","filename","downloadCSV","exportRequestsToExcel","allRequestsResponse","Error","detailedRequests","detailResponse","warn","excelData","prepareExcelData","downloadAsCSV","mainSheet","createExcelWorkbook","cedulaSheet","barangaySheet","repeat","formatDate","requested_at","updated_at","purpose_category","purpose_details","getClientFullName","client_email","client_phone","formatGender","getCivilStatusName","getClientFullAddress","getResidencyDisplay","is_third_party_request","beneficiary","full_name","email","phone_number","birth_date","gender","civil_status_id","nationality","address","formatRelationship","relationship_to_requestor","authorized_pickup","relationship_to_beneficiary","formatCurrency","total_fee","admin_notes","specific_details","annual_income","monthly_income","occupation","employer_name","has_real_property","property_assessed_value","property_location","has_personal_property","personal_property_value","business_name","business_gross_receipts","business_type","business_address","computed_tax","total_document_fee","has_pending_cases","pending_cases_details","voter_registration_number","precinct_number","emergency_contact_name","emergency_contact_phone","emergency_contact_relationship","emergency_contact_address","wb","utils","book_new","mainWs","aoa_to_sheet","book_append_sheet","cedulaWs","barangayWs","setExcelColumnWidths","timestamp","writeFile","workbook","Sheets","sheetName","sheet","colWidths","wch","sheetData","csvContent","row","Array","isArray","cell","cellValue","String","replace","join","blob","Blob","type","link","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","exportSingleRequestToExcel","exportSingleRequestToPDF","pdf","generateRequestPDF","save","setFontSize","setFont","setTextColor","text","align","setDrawColor","setLineWidth","line","yPosition","lineHeight","sectionSpacing","addSectionHeader","title","checkPageBreak","requiredSpace","addPage","addField","value","displayValue","maxWidth","textLines","splitTextToSize","totalHeight","formatCurrencyForPDF","employer_business","tin_number","height_cm","weight_kg","icr_number","clearance_type","addPDFFooter","pageCount","internal","getNumberOfPages","i","setPage","generatedDate","toLocaleDateString","year","month","day","hour","minute","verifyInPersonPayment","totalFee","parseFloat","amountReceived","paymentData","schedulePickup","scheduleData","getStatusColor","getDisplayFee","totalDocumentFee","parsed_total_document_fee","parsed_total_fee","will_display","hasConvenienceFee","baseFee","getBaseFee","documentType","PAYMONGO_MINIMUM","getConvenienceFee","Math","max","getConvenienceFeeExplanation","convenienceFee","toFixed","dateString","date","formatted","amount","Intl","NumberFormat","currency","format","numAmount","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDateTime","getChangedByName","history","change_reason","startsWith","changed_by_name","getFormattedReason","substring","parts","client_first_name","client_middle_name","client_last_name","client_suffix","Boolean","client_name","client_house_number","client_street","client_subdivision","client_barangay","client_city_municipality","client_city","client_province","client_address","charAt","toUpperCase","slice","relationship","relationships","formatAuthorizationStatus","getAuthorizationStatusClass","getAuthorizationStatusIcon","verifyAuthorization","isApproved","years","months","formatTime","toLocaleTimeString","hour12","init","on","handleRealTimeNotification","handleStatusChange","handleNewRequest","startAutoRefresh","off","cleanup","stopAutoRefresh","clearInterval","setInterval","refreshRequestsData","toggleAutoRefresh","notification","handleRequestUpdate","request_id","new_status","requestIndex","findIndex","req","updatedRequest","$set","toastRequestId","titleType","messageType","safeTitle","safeMessage","toast","className","innerHTML","getElementById","styles","textContent","head","parentElement","animation","getDocumentTypeDisplayName","displayNames","isImageFile","mimeType","isPdfFile","documentsToLoad","doc","mime_type","has","CONCURRENT_LIMIT","chunks","chunkArray","chunk","allSettled","loadSingleDocument","isForModal","docId","get","responseType","timeout","onDownloadProgress","progressEvent","lengthComputable","percentCompleted","round","loaded","size","optimizedBlob","optimizeImageBlob","createBlobUrlWhenIdle","delete","code","array","getDocumentUrl","formatFileSize","bytes","k","sizes","floor","pow","openImageModal","$nextTick","retryLoadDocument","onModalImageLoad","values","clear","preloadImage","MAX_SIZE","img","Image","canvas","ctx","getContext","resolve","onload","maxDimension","width","height","drawImage","toBlob","onerror","src","createUrl","requestIdleCallback","closeImageModal","downloadDocument","documentFile","href","download","document_name","handleImageError","event","target","display","errorDiv","parentNode","getBeneficiaryVerificationStatusClass","getBeneficiaryVerificationStatusText","viewVerificationImage","imageType","beneficiary_verification_image","verification_image_path","pickup_id_image","id_image_path","pickup_authorization_letter","authorization_letter_path","filenameOnly","pop","imageUrl","displayImageInModal","default","imageObjectUrl","modalHtml","existingModal","insertAdjacentHTML","modal","show","viewPickupDocuments","verifyPickupAuthorization","getInstance","hide","rejectPickupAuthorization","updateBeneficiaryVerificationStatus","beneficiaryId","$http","put","openVerificationModal","beneficiary_id","beneficiary_name","beneficiary_relationship","image_url","current_status","beneficiary_verification_status","saveVerificationStatus"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminRequests.vue"],"sourcesContent":["<template>\n  <div class=\"admin-requests\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @open-request-modal=\"handleOpenRequestModal\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <!-- Loading State -->\n        <div v-if=\"loading\" class=\"d-flex justify-content-center align-items-center\" style=\"min-height: 400px;\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n\n        <!-- Main Content -->\n        <div v-else class=\"container-fluid py-4\">\n          <!-- Error Message -->\n          <div v-if=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n            {{ errorMessage }}\n            <button type=\"button\" class=\"btn-close\" @click=\"errorMessage = ''\" aria-label=\"Close\"></button>\n          </div>\n\n          <!-- Page Header -->\n           <!-- ill comment this for now because I dont need thus much -->\n          <!-- <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n                <div>\n                  <p class=\"text-muted mb-0\">\n                    <span v-if=\"lastRefresh\" class=\"ms-2 small\">\n                      <i class=\"fas fa-clock text-muted\"></i>\n                      Last updated: {{ formatTime(lastRefresh) }}\n                    </span>\n                  </p>\n                </div>\n                <div class=\"d-flex gap-2 align-items-center\">\n                  <div class=\"real-time-status me-2\">\n                    <span class=\"badge\" :class=\"autoRefreshEnabled ? 'bg-success' : 'bg-secondary'\">\n                      <i class=\"fas fa-circle pulse\" v-if=\"autoRefreshEnabled\"></i>\n                      <i class=\"fas fa-pause\" v-else></i>\n                      {{ autoRefreshEnabled ? 'Live' : 'Paused' }}\n                    </span>\n                  </div>\n\n                  <button class=\"btn btn-outline-secondary btn-sm\" @click=\"toggleAutoRefresh\" :title=\"autoRefreshEnabled ? 'Disable auto-refresh' : 'Enable auto-refresh'\">\n                    <i class=\"fas\" :class=\"autoRefreshEnabled ? 'fa-pause' : 'fa-play'\"></i>\n                  </button>\n                  <button class=\"btn btn-outline-primary btn-sm\" @click=\"showFilters = !showFilters\">\n                    <i class=\"fas fa-filter me-1\"></i>\n                    {{ showFilters ? 'Hide' : 'Show' }} Filters\n                  </button>\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-success btn-sm\" @click=\"exportRequests\" :disabled=\"loading\">\n                      <i class=\"fas fa-download me-1\"></i>\n                      Export CSV\n                    </button>\n                    <button class=\"btn btn-success btn-sm dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" :disabled=\"loading\">\n                      <span class=\"visually-hidden\">Toggle Dropdown</span>\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                      <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"exportRequests\">\n                        <i class=\"fas fa-file-csv me-2\"></i>Export as CSV\n                      </a></li>\n                      <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"exportRequestsToExcel\">\n                        <i class=\"fas fa-file-excel me-2\"></i>Export as Excel (Comprehensive)\n                      </a></li>\n                    </ul>\n                  </div>\n                  <button class=\"btn btn-primary btn-sm\" @click=\"refreshRequestsData\" :disabled=\"loading\">\n                    <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                    Refresh\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div> -->\n\n          <!-- Request Statistics -->\n           <!-- I dont need statistics for now -->\n          <!-- <div class=\"row mb-3\">\n            <div class=\"col-6 col-md-3 mb-2\">\n              <div class=\"card border-left-primary shadow py-1\">\n                <div class=\"card-body p-2\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"flex-grow-1\">\n                      <div class=\"text-xs fw-bold text-primary text-uppercase mb-1\">Total Requests</div>\n                      <div class=\"h6 mb-0 fw-bold text-dark\">{{ requestStats.total || 0 }}</div>\n                    </div>\n                    <i class=\"fas fa-file-alt fa-lg text-muted ms-2\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 col-md-3 mb-2\">\n              <div class=\"card border-left-warning shadow py-1\">\n                <div class=\"card-body p-2\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"flex-grow-1\">\n                      <div class=\"text-xs fw-bold text-warning text-uppercase mb-1\">Pending</div>\n                      <div class=\"h6 mb-0 fw-bold text-dark\">{{ requestStats.pending || 0 }}</div>\n                    </div>\n                    <i class=\"fas fa-clock fa-lg text-muted ms-2\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 col-md-3 mb-2\">\n              <div class=\"card border-left-success shadow py-1\">\n                <div class=\"card-body p-2\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"flex-grow-1\">\n                      <div class=\"text-xs fw-bold text-success text-uppercase mb-1\">Completed</div>\n                      <div class=\"h6 mb-0 fw-bold text-dark\">{{ requestStats.completed || 0 }}</div>\n                    </div>\n                    <i class=\"fas fa-check-circle fa-lg text-muted ms-2\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 col-md-3 mb-2\">\n              <div class=\"card border-left-info shadow py-1\">\n                <div class=\"card-body p-2\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"flex-grow-1\">\n                      <div class=\"text-xs fw-bold text-info text-uppercase mb-1\">Approved</div>\n                      <div class=\"h6 mb-0 fw-bold text-dark\">{{ requestStats.approved || 0 }}</div>\n                    </div>\n                    <i class=\"fas fa-thumbs-up fa-lg text-muted ms-2\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> -->\n\n          <!-- Filters Panel -->\n          <div v-if=\"showFilters\" class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md-3 mb-3\">\n                  <label class=\"form-label\">Search</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"filters.search\"\n                    placeholder=\"Search by request number\"\n                    @input=\"debouncedSearch\"\n                    @keyup.enter=\"applyFilters\"\n                  >\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Status</label>\n                  <select class=\"form-select\" v-model=\"filters.status\" @change=\"applyFilters\">\n                    <option value=\"\">All Statuses</option>\n                    <option v-for=\"status in filterStatusOptions\" :key=\"status.id\" :value=\"status.status_name\">\n                      {{ formatStatus(status.status_name) }}\n                    </option>\n                  </select>\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Document Type</label>\n                  <select class=\"form-select\" v-model=\"filters.document_type\" @change=\"applyFilters\">\n                    <option value=\"\">All Types</option>\n                    <option v-for=\"docType in documentTypes\" :key=\"docType.id\" :value=\"docType.type_name\">\n                      {{ docType.type_name }}\n                    </option>\n                  </select>\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Date From</label>\n                  <input type=\"date\" class=\"form-control\" v-model=\"filters.date_from\">\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                  <label class=\"form-label\">Date To</label>\n                  <input type=\"date\" class=\"form-control\" v-model=\"filters.date_to\">\n                </div>\n                <div class=\"col-md-1 mb-3 d-flex align-items-end\">\n                  <div class=\"d-flex gap-1 w-100\">\n                    <button class=\"btn btn-primary btn-sm\" @click=\"applyFilters\">\n                      <i class=\"fas fa-search\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-secondary btn-sm\" @click=\"clearFilters\">\n                      <i class=\"fas fa-times\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Bulk Actions Panel -->\n          <div v-if=\"selectedRequests.length > 0\" class=\"card shadow mb-4\">\n            <div class=\"card-header py-3 bg-warning\">\n              <h6 class=\"m-0 fw-bold text-dark\">\n                <i class=\"fas fa-tasks me-2\"></i>\n                Bulk Actions ({{ selectedRequests.length }} selected)\n              </h6>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row align-items-end\">\n                <div class=\"col-md-3 mb-3\">\n                  <label class=\"form-label\">Action</label>\n                  <select class=\"form-select\" v-model=\"bulkAction\">\n                    <option value=\"\">Select Action</option>\n                    <option v-for=\"status in filterStatusOptions\" :key=\"status.id\" :value=\"status.id\">\n                      Change to {{ formatStatus(status.status_name) }}\n                    </option>\n                  </select>\n                </div>\n\n                <div class=\"col-md-3 mb-3\">\n                  <div class=\"d-flex gap-2\">\n                    <button class=\"btn btn-warning\" @click=\"performBulkAction\" :disabled=\"!bulkAction\">\n                      <i class=\"fas fa-play me-1\"></i>\n                      Apply\n                    </button>\n                    <button class=\"btn btn-outline-secondary\" @click=\"selectedRequests = []\">\n                      <i class=\"fas fa-times me-1\"></i>\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- View Toggle -->\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\n            <div class=\"d-flex align-items-center gap-3\">\n              <!-- I dont need this card and table mode buttons -->\n              <!-- <div class=\"btn-group\" role=\"group\" aria-label=\"View toggle\">\n                <input type=\"radio\" class=\"btn-check\" name=\"viewMode\" id=\"cardView\" v-model=\"viewMode\" value=\"card\" autocomplete=\"off\">\n                <label class=\"btn btn-outline-primary btn-sm\" for=\"cardView\">\n                  <i class=\"fas fa-th-large me-1\"></i>Cards\n                </label>\n\n                <input type=\"radio\" class=\"btn-check\" name=\"viewMode\" id=\"tableView\" v-model=\"viewMode\" value=\"table\" autocomplete=\"off\">\n                <label class=\"btn btn-outline-primary btn-sm\" for=\"tableView\">\n                  <i class=\"fas fa-table me-1\"></i>Table\n                </label>\n              </div> -->\n\n              <div class=\"d-flex align-items-center gap-2\">\n                <span class=\"text-muted small\">\n                  Showing {{ ((pagination.currentPage - 1) * pagination.itemsPerPage) + 1 }} -\n                  {{ Math.min(pagination.currentPage * pagination.itemsPerPage, pagination.totalItems) }}\n                  of {{ pagination.totalItems }} requests\n                </span>\n                <select class=\"form-select form-select-sm\" style=\"width: auto;\" v-model=\"pagination.itemsPerPage\" @change=\"changeItemsPerPage(pagination.itemsPerPage)\">\n                  <option value=\"10\">10 per page</option>\n                  <option value=\"25\">25 per page</option>\n                  <option value=\"50\">50 per page</option>\n                  <option value=\"100\">100 per page</option>\n                </select>\n              </div>\n              <div class=\"d-flex gap-2 align-items-center\">\n                  <button class=\"btn btn-outline-primary btn-sm\" @click=\"showFilters = !showFilters\">\n                    <i class=\"fas fa-filter me-1\"></i>\n                    {{ showFilters ? 'Hide' : 'Show' }} Filters\n                  </button>\n                </div>\n            </div>\n\n            <!-- I dont need this for now. If my prof see thiis I might be in trouble -->\n            <!-- <div class=\"d-flex align-items-center gap-2\">\n              <button class=\"btn btn-sm btn-outline-secondary\" @click=\"selectAllRequests\" v-if=\"requests.length > 0\">\n                <i class=\"fas fa-check-square me-1\"></i>\n                {{ selectedRequests.length === requests.length ? 'Deselect All' : 'Select All' }}\n              </button>\n            </div> -->\n          </div>\n\n          <!-- Card View -->\n          <div v-if=\"viewMode === 'card'\" class=\"requests-grid\">\n            <!-- Empty State -->\n            <div v-if=\"requests.length === 0\" class=\"empty-state text-center py-5\">\n              <div class=\"empty-state-icon mb-3\">\n                <i class=\"fas fa-inbox fa-4x text-muted\"></i>\n              </div>\n              <h5 class=\"text-muted mb-2\">No Active Document Requests Found</h5>\n              <p class=\"text-muted\">There are no active document requests matching your current filters. Completed and cancelled requests can be viewed in Request History.</p>\n            </div>\n\n            <!-- Request Cards -->\n            <div v-else class=\"row g-4\">\n              <div v-for=\"request in requests\" :key=\"request.id\" class=\"col-xl-4 col-lg-6 col-md-6\">\n                <div class=\"request-card\" :class=\"{ 'selected': selectedRequests.includes(request.id) }\">\n                  <!-- Card Header -->\n                  <div class=\"request-card-header\">\n                    <div class=\"d-flex justify-content-between align-items-start\">\n                      <div class=\"d-flex align-items-center gap-2\">\n                        <input\n                          type=\"checkbox\"\n                          class=\"form-check-input\"\n                          :checked=\"selectedRequests.includes(request.id)\"\n                          @change=\"toggleRequestSelection(request.id)\"\n                        >\n                        <div class=\"request-number\">\n                          <span class=\"badge bg-primary\">{{ request.request_number }}</span>\n                        </div>\n                      </div>\n                      <div class=\"request-actions-simple\">\n                        <button class=\"btn btn-sm btn-primary\" @click=\"viewRequestDetails(request.id)\" title=\"View & Manage Request\">\n                          <i class=\"fas fa-edit me-1\"></i>Manage\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Card Body -->\n                  <div class=\"request-card-body\">\n                    <!-- Client Info -->\n                    <div class=\"client-info mb-3\">\n                      <div class=\"d-flex align-items-center gap-2 mb-2\">\n                        <div class=\"client-avatar\">\n                          <i class=\"fas fa-user-circle fa-2x text-primary\"></i>\n                        </div>\n                        <div class=\"flex-grow-1\">\n                          <!-- Third-party request: Show beneficiary name prominently -->\n                          <div v-if=\"request.is_third_party_request && request.beneficiary_name\">\n                            <h6 class=\"mb-0 fw-bold text-success\">\n                              <i class=\"fas fa-user-friends me-1\"></i>\n                              {{ request.beneficiary_name }}\n                            </h6>\n                            <small class=\"text-muted\">\n                              Document for: {{ request.beneficiary_relationship || 'Family Member' }}\n                            </small>\n                            <div class=\"mt-1\">\n                              <small class=\"text-muted\">Requested by: {{ request.client_name }}</small>\n                            </div>\n                          </div>\n                          <!-- Self request: Show client name -->\n                          <div v-else>\n                            <h6 class=\"mb-0 fw-bold\">{{ request.client_name }}</h6>\n                            <small class=\"text-muted\">{{ request.client_email }}</small>\n                          </div>\n                        </div>\n                        <!-- Request type indicator -->\n                        <div class=\"request-type-badge\">\n                          <span v-if=\"request.is_third_party_request\" class=\"badge bg-info\">\n                            <i class=\"fas fa-users me-1\"></i>Family\n                          </span>\n                          <span v-else class=\"badge bg-secondary\">\n                            <i class=\"fas fa-user me-1\"></i>Self\n                          </span>\n                        </div>\n                      </div>\n\n                      <!-- Additional Client Details -->\n                      <div class=\"client-details-grid mt-2\">\n                        <div class=\"row g-1\">\n                          <div class=\"col-6\" v-if=\"request.client_birth_date\">\n                            <small class=\"text-muted d-block\">Date of Birth</small>\n                            <small class=\"fw-medium\">{{ formatDate(request.client_birth_date) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"request.client_gender\">\n                            <small class=\"text-muted d-block\">Gender</small>\n                            <small class=\"fw-medium\">{{ formatGender(request.client_gender) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"getCivilStatusName(request.client_civil_status_id)\">\n                            <small class=\"text-muted d-block\">Civil Status</small>\n                            <small class=\"fw-medium\">{{ getCivilStatusName(request.client_civil_status_id) }}</small>\n                          </div>\n                          <div class=\"col-6\" v-if=\"request.client_nationality\">\n                            <small class=\"text-muted d-block\">Nationality</small>\n                            <small class=\"fw-medium\">{{ request.client_nationality }}</small>\n                          </div>\n                          <div class=\"col-12\" v-if=\"getResidencyDisplay(request)\">\n                            <small class=\"text-muted d-block\">Years of Residency</small>\n                            <small class=\"fw-medium\">{{ getResidencyDisplay(request) }}</small>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Third-Party Request Indicator -->\n                    <div v-if=\"request.is_third_party_request\" class=\"third-party-indicator mb-3\">\n                      <div class=\"alert alert-info py-2 px-3 mb-0\">\n                        <div class=\"d-flex align-items-center\">\n                          <i class=\"fas fa-users me-2\"></i>\n                          <div class=\"flex-grow-1\">\n                            <small class=\"fw-bold\">Third-Party Request</small>\n                            <div class=\"small text-muted\">\n                              Document for: <span class=\"fw-medium\">{{ request.beneficiary_name || 'Another person' }}</span>\n                              <span v-if=\"request.relationship_to_requestor && request.relationship_to_requestor !== 'self'\">\n                                ({{ formatRelationship(request.relationship_to_requestor) }})\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Family Member Verification Status -->\n                    <div v-if=\"request.is_third_party_request\" class=\"verification-status mb-3\">\n                      <div class=\"card border-0 bg-light\">\n                        <div class=\"card-body py-2 px-3\">\n                          <div class=\"d-flex align-items-center justify-content-between\">\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <i class=\"fas fa-id-card text-primary\"></i>\n                              <small class=\"fw-bold\">Family Verification</small>\n                            </div>\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <!-- Verification Status Badge -->\n                              <span class=\"badge\" :class=\"getBeneficiaryVerificationStatusClass(request.beneficiary_verification_status)\">\n                                {{ getBeneficiaryVerificationStatusText(request.beneficiary_verification_status) }}\n                              </span>\n                              <!-- View/Manage Verification Button -->\n                              <button\n                                v-if=\"request.beneficiary_verification_image\"\n                                class=\"btn btn-sm btn-outline-primary\"\n                                @click=\"openVerificationModal(request)\"\n                                title=\"Manage verification\"\n                              >\n                                <i class=\"fas fa-eye me-1\"></i>Review\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Authorized Pickup Indicator -->\n                    <div v-if=\"request.pickup_person_name\" class=\"pickup-indicator mb-3\">\n                      <div class=\"card border-0 bg-warning-subtle\">\n                        <div class=\"card-body py-2 px-3\">\n                          <div class=\"d-flex align-items-center justify-content-between mb-2\">\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <i class=\"fas fa-hand-paper text-warning\"></i>\n                              <small class=\"fw-bold\">Authorized Pickup</small>\n                            </div>\n                            <span class=\"badge\" :class=\"getAuthorizationStatusClass(request.pickup_authorization_verified ? 'verified' : 'pending')\">\n                              {{ request.pickup_authorization_verified ? 'Verified' : 'Pending' }}\n                            </span>\n                          </div>\n                          <div class=\"small text-muted mb-2\">\n                            Pickup by: <span class=\"fw-medium\">{{ request.pickup_person_name }}</span>\n                          </div>\n                          <!-- Pickup Documents -->\n                          <div class=\"d-flex gap-2\">\n                            <button\n                              v-if=\"request.pickup_id_image\"\n                              class=\"btn btn-sm btn-outline-secondary\"\n                              @click=\"viewVerificationImage(request.id, 'pickup-id')\"\n                              title=\"View pickup person's ID\"\n                            >\n                              <i class=\"fas fa-id-card me-1\"></i>ID\n                            </button>\n                            <button\n                              v-if=\"request.pickup_authorization_letter\"\n                              class=\"btn btn-sm btn-outline-secondary\"\n                              @click=\"viewVerificationImage(request.id, 'pickup-auth')\"\n                              title=\"View authorization letter\"\n                            >\n                              <i class=\"fas fa-file-signature me-1\"></i>Letter\n                            </button>\n                            <!-- View All Documents Button -->\n                            <button\n                              v-if=\"request.pickup_id_image || request.pickup_authorization_letter\"\n                              class=\"btn btn-sm btn-primary\"\n                              @click=\"viewPickupDocuments(request)\"\n                              title=\"View all pickup documents\"\n                            >\n                              <i class=\"fas fa-images me-1\"></i>View All\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Document Type -->\n                    <div class=\"document-type mb-3\">\n                      <div class=\"d-flex align-items-center gap-2\">\n                        <i class=\"fas fa-file-alt text-info\"></i>\n                        <span class=\"badge bg-info-subtle text-info-emphasis px-3 py-2\">\n                          {{ request.document_type }}\n                        </span>\n                      </div>\n                    </div>\n\n                    <!-- Status and Amount -->\n                    <div class=\"request-meta mb-3\">\n                      <div class=\"row g-2\">\n                        <div class=\"col-6\">\n                          <div class=\"meta-item\">\n                            <small class=\"text-muted d-block\">Status</small>\n                            <span class=\"badge\" :class=\"`bg-${getStatusColor(request.status_name)}`\">\n                              {{ formatStatus(request.status_name) }}\n                            </span>\n                          </div>\n                        </div>\n                        <div class=\"col-6\">\n                          <div class=\"meta-item\">\n                            <small class=\"text-muted d-block\">Amount</small>\n                            <div v-if=\"hasConvenienceFee(request)\">\n                              <div class=\"fee-breakdown\">\n                                <div class=\"base-fee\">\n                                  <small class=\"text-muted\">Document Fee:</small>\n                                  <span class=\"fw-bold text-primary\">{{ formatCurrency(getBaseFee(request)) }}</span>\n                                </div>\n                                <div class=\"convenience-fee\">\n                                  <small class=\"text-muted\">Convenience Fee:</small>\n                                  <span class=\"fw-bold text-warning\">{{ formatCurrency(getConvenienceFee(request)) }}</span>\n                                  <i class=\"fas fa-info-circle text-muted ms-1\"\n                                     :title=\"getConvenienceFeeExplanation(request)\"></i>\n                                </div>\n                                <div class=\"total-fee border-top pt-1\">\n                                  <small class=\"text-muted\">Total Payment:</small>\n                                  <span class=\"fw-bold text-success\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                                </div>\n                              </div>\n                            </div>\n                            <div v-else>\n                              <span class=\"fw-bold text-success\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Date -->\n                    <div class=\"request-date\">\n                      <small class=\"text-muted\">\n                        <i class=\"fas fa-calendar-alt me-1\"></i>\n                        Submitted {{ formatDate(request.requested_at) }}\n                      </small>\n                    </div>\n                  </div>\n\n                  <!-- Card Footer -->\n                  <div class=\"request-card-footer\">\n                    <div class=\"d-grid\">\n                      <button class=\"btn btn-sm btn-primary\" @click=\"viewRequestDetails(request.id)\">\n                        <i class=\"fas fa-edit me-1\"></i>Manage Request\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Table View -->\n          <div v-else class=\"modern-table-container\">\n\n            <!-- Empty State -->\n            <div v-if=\"requests.length === 0\" class=\"modern-table-empty\">\n              <div class=\"empty-content\">\n                <div class=\"empty-icon\">\n                  <i class=\"fas fa-inbox\"></i>\n                </div>\n                <h6 class=\"empty-title\">No Active Document Requests Found</h6>\n                <p class=\"empty-text\">There are no active document requests matching your current filters. Completed and cancelled requests can be viewed in Request History.</p>\n              </div>\n            </div>\n\n            <!-- Modern Compact Table -->\n            <div v-else class=\"compact-table-wrapper\">\n              <!-- Table Header -->\n              <div class=\"compact-table-header\">\n                <!-- I dont want to use this check box for now -->\n                <!-- <div class=\"header-cell selection-header\">\n                  <input\n                    type=\"checkbox\"\n                    class=\"form-check-input\"\n                    :checked=\"selectedRequests.length === requests.length && requests.length > 0\"\n                    @change=\"selectAllRequests\"\n                  >\n                </div> -->\n                <div class=\"header-cell\">Request ID</div>\n                <div class=\"header-cell\">Client</div>\n                <div class=\"header-cell\">Document</div>\n                <div class=\"header-cell\">Status</div>\n                <div class=\"header-cell\">Amount</div>\n                <div class=\"header-cell\">Date Requested</div>\n                <div class=\"header-cell\">Actions</div>\n              </div>\n\n              <!-- Table Body -->\n              <div class=\"compact-table-body\">\n                <div v-for=\"request in requests\" :key=\"request.id\"\n                     class=\"compact-row\"\n                     :class=\"{ 'selected': selectedRequests.includes(request.id) }\">\n\n                  <!-- Selection -->\n                  <!-- I dont want to use this check box for now -->\n                  <!-- <div class=\"row-cell selection-cell\">\n                    <input\n                      type=\"checkbox\"\n                      class=\"form-check-input\"\n                      :checked=\"selectedRequests.includes(request.id)\"\n                      @change=\"toggleRequestSelection(request.id)\"\n                    >\n                  </div> -->\n\n                  <!-- Request ID -->\n                  <div class=\"row-cell request-id-cell\">\n                    <div class=\"request-id-content\">\n                      <span class=\"request-number\">{{ request.request_number }}</span>\n                      <!-- never show the actual ID from database -->\n                      <!-- <span class=\"request-id-small\">{{ request.id }}</span> -->\n                    </div>\n                  </div>\n\n                  <!-- Client -->\n                  <div class=\"row-cell client-cell\">\n                    <div class=\"client-compact\">\n                      <div class=\"client-avatar-tiny\">\n                        <i class=\"fas fa-user\"></i>\n                      </div>\n                      <div class=\"client-info-compact\">\n                        <div class=\"client-name-compact\">{{ request.client_name }}</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Document Type -->\n                  <div class=\"row-cell document-cell\">\n                    <span class=\"document-badge\">\n                      <i class=\"fas fa-file-alt\"></i>\n                      {{ request.document_type }}\n                    </span>\n                  </div>\n\n                  <!-- Status -->\n                  <div class=\"row-cell status-cell\">\n                    <span class=\"status-compact\" :class=\"`status-${getStatusColor(request.status_name)}`\">\n                      <i class=\"fas fa-circle\"></i>\n                      {{ formatStatus(request.status_name) }}\n                    </span>\n                  </div>\n\n                  <!-- Amount -->\n                  <div class=\"row-cell amount-cell\">\n                    <div v-if=\"hasConvenienceFee(request)\" class=\"amount-breakdown\">\n                      <div class=\"amount-compact\">{{ formatCurrency(getDisplayFee(request)) }}</div>\n                      <small class=\"text-muted d-block\">\n                        Base: {{ formatCurrency(getBaseFee(request)) }} +\n                        Conv: {{ formatCurrency(getConvenienceFee(request)) }}\n                      </small>\n                    </div>\n                    <div v-else>\n                      <span class=\"amount-compact\">{{ formatCurrency(getDisplayFee(request)) }}</span>\n                    </div>\n                  </div>\n\n                  <!-- Date -->\n                  <div class=\"row-cell date-cell\">\n                    <div class=\"date-compact\">\n                      <span class=\"date-main\">{{ formatDate(request.requested_at) }}</span>\n                      <span class=\"time-small\">{{ formatTime(request.requested_at) }}</span>\n                    </div>\n                  </div>\n\n                  <!-- Actions -->\n                  <div class=\"row-cell actions-cell\">\n                    <div class=\"actions-simple\">\n                      <button class=\"action-btn-sm primary-btn-sm\" @click=\"viewRequestDetails(request.id)\" title=\"View & Manage Request\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Pagination -->\n          <div v-if=\"pagination.totalPages > 1\" class=\"pagination-container\">\n              <nav aria-label=\"Requests pagination\">\n                <ul class=\"pagination pagination-sm justify-content-center mb-0\">\n                  <li class=\"page-item\" :class=\"{ disabled: pagination.currentPage === 1 }\">\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pagination.currentPage - 1)\">\n                      <i class=\"fas fa-chevron-left\"></i>\n                    </a>\n                  </li>\n                  <li\n                    v-for=\"page in Math.min(pagination.totalPages, 10)\"\n                    :key=\"page\"\n                    class=\"page-item\"\n                    :class=\"{ active: page === pagination.currentPage }\"\n                  >\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">{{ page }}</a>\n                  </li>\n                  <li class=\"page-item\" :class=\"{ disabled: pagination.currentPage === pagination.totalPages }\">\n                    <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pagination.currentPage + 1)\">\n                      <i class=\"fas fa-chevron-right\"></i>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n\n          <!-- Request Details Modal -->\n          <div v-if=\"showRequestDetails && currentRequest\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-file-alt me-2\"></i>\n                    Request Details - {{ currentRequest.request_number }}\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"showRequestDetails = false\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"row\">\n                    <!-- Left Column - Request Information -->\n                    <div class=\"col-lg-8\">\n                      <!-- Basic Information -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-info-circle me-2\"></i>Request Information</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Request Number</label>\n                                <p class=\"mb-0\">{{ currentRequest.request_number }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Document Type</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-info\">{{ currentRequest.document_type }}</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Purpose Category</label>\n                                <p class=\"mb-0\">{{ currentRequest.purpose_category }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Purpose Details</label>\n                                <p class=\"mb-0\">{{ currentRequest.purpose_details || 'Not specified' }}</p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Current Status</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"`bg-${getStatusColor(currentRequest.status_name)}`\">\n                                    {{ formatStatus(currentRequest.status_name) }}\n                                  </span>\n                                </p>\n                              </div>\n\n                              <!-- I will comment priority for now  -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Priority</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"currentRequest.priority === 'high' ? 'bg-danger' : currentRequest.priority === 'medium' ? 'bg-warning' : 'bg-secondary'\">\n                                    {{ currentRequest.priority || 'Normal' }}\n                                  </span>\n                                </p>\n                              </div> -->\n\n                              <!-- I will comment priority for now  -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Delivery Method</label>\n                                <p class=\"mb-0\">{{ currentRequest.delivery_method || 'Pickup' }}</p>\n                              </div> -->\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date Submitted</label>\n                                <p class=\"mb-0\">{{ formatDateTime(currentRequest.requested_at) }}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Payment Information Card (Convenience Fee Breakdown) -->\n                      <div v-if=\"hasConvenienceFee(currentRequest)\" class=\"card mb-4\">\n                        <div class=\"card-body\">\n                          <div class=\"alert alert-warning mb-3\">\n                            <div class=\"d-flex align-items-start\">\n                              <i class=\"fas fa-info-circle me-2 mt-1\"></i>\n                              <div>\n                                <strong>Convenience Fee Applied</strong>\n                                <p class=\"mb-0 small\">{{ getConvenienceFeeExplanation(currentRequest) }}</p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div class=\"row\">\n                            <div class=\"col-md-8\">\n                              <div class=\"fee-breakdown-modal\">\n                                <!-- Base Document Fee -->\n                                <div class=\"fee-item d-flex justify-content-between align-items-center py-2\">\n                                  <div class=\"fee-label\">\n                                    <i class=\"fas fa-file-alt text-primary me-2\"></i>\n                                    <span class=\"fw-medium\">Base Document Fee</span>\n                                    <small class=\"text-muted d-block\">Original {{ currentRequest.document_type }} fee</small>\n                                  </div>\n                                  <div class=\"fee-amount\">\n                                    <span class=\"h6 mb-0 text-primary\">{{ formatCurrency(getBaseFee(currentRequest)) }}</span>\n                                  </div>\n                                </div>\n\n                                <!-- Convenience Fee -->\n                                <div class=\"fee-item d-flex justify-content-between align-items-center py-2 bg-warning bg-opacity-10 rounded px-3\">\n                                  <div class=\"fee-label\">\n                                    <i class=\"fas fa-plus-circle text-warning me-2\"></i>\n                                    <span class=\"fw-medium\">Convenience Fee</span>\n                                    <small class=\"text-muted d-block\">PayMongo minimum requirement</small>\n                                  </div>\n                                  <div class=\"fee-amount\">\n                                    <span class=\"h6 mb-0 text-warning\">{{ formatCurrency(getConvenienceFee(currentRequest)) }}</span>\n                                  </div>\n                                </div>\n\n                                <!-- Total Payment -->\n                                <div class=\"fee-item d-flex justify-content-between align-items-center py-3 border-top border-2 mt-2\">\n                                  <div class=\"fee-label\">\n                                    <i class=\"fas fa-calculator text-success me-2\"></i>\n                                    <span class=\"fw-bold\">Total Payment Amount</span>\n                                    <small class=\"text-muted d-block\">Amount charged to customer</small>\n                                  </div>\n                                  <div class=\"fee-amount\">\n                                    <span class=\"h5 mb-0 text-success fw-bold\">{{ formatCurrency(getDisplayFee(currentRequest)) }}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"col-md-4\">\n                              <div class=\"payment-summary-card bg-light rounded p-3\">\n                                <h6 class=\"text-center mb-3\">\n                                  <i class=\"fas fa-receipt me-1\"></i>\n                                  Payment Summary\n                                </h6>\n                                <div class=\"text-center\">\n                                  <div class=\"mb-2\">\n                                    <small class=\"text-muted\">Customer Pays</small>\n                                    <div class=\"h4 text-success mb-0\">{{ formatCurrency(getDisplayFee(currentRequest)) }}</div>\n                                  </div>\n                                  <div class=\"small text-muted\">\n                                    <div>Document: {{ formatCurrency(getBaseFee(currentRequest)) }}</div>\n                                    <div>Service: {{ formatCurrency(getConvenienceFee(currentRequest)) }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Request Type Indicator -->\n                      <div v-if=\"currentRequest.is_third_party_request\" class=\"alert alert-info mb-4\">\n                        <div class=\"d-flex align-items-center\">\n                          <i class=\"fas fa-users me-2\"></i>\n                          <div>\n                            <strong>Third-Party Request</strong>\n                            <p class=\"mb-0 small\">This document is being requested on behalf of another person.</p>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Requestor Information (Person who submitted the request) -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-user-edit me-2\"></i>\n                            {{ currentRequest.is_third_party_request ? 'Requestor Information' : 'Client Information' }}\n                            <small class=\"text-muted ms-2\">\n                              {{ currentRequest.is_third_party_request ? '(Person who submitted this request)' : '' }}\n                            </small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Basic Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': getClientFullName(currentRequest) === 'Not provided' }\">\n                                  <span v-if=\"getClientFullName(currentRequest) !== 'Not provided'\">{{ getClientFullName(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Email Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_email }\">\n                                  <a v-if=\"currentRequest.client_email\" :href=\"`mailto:${currentRequest.client_email}`\">{{ currentRequest.client_email }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_phone }\">\n                                  <a v-if=\"currentRequest.client_phone\" :href=\"`tel:${currentRequest.client_phone}`\">{{ currentRequest.client_phone }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date of Birth</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_birth_date }\">\n                                  <span v-if=\"formatDate(currentRequest.client_birth_date)\">{{ formatDate(currentRequest.client_birth_date) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Gender</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_gender }\">\n                                  <span v-if=\"formatGender(currentRequest.client_gender)\">{{ formatGender(currentRequest.client_gender) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Civil Status</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_civil_status_id }\">\n                                  <span v-if=\"getCivilStatusName(currentRequest.client_civil_status_id)\">{{ getCivilStatusName(currentRequest.client_civil_status_id) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Address Information -->\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Complete Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !getClientFullAddress(currentRequest) }\">\n                                  <span v-if=\"getClientFullAddress(currentRequest)\">{{ getClientFullAddress(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Additional Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Nationality</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.client_nationality }\">\n                                  <span v-if=\"currentRequest.client_nationality\">{{ currentRequest.client_nationality }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Years of Residency</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !getResidencyDisplay(currentRequest) }\">\n                                  <span v-if=\"getResidencyDisplay(currentRequest)\">{{ getResidencyDisplay(currentRequest) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Beneficiary Information (Person the document is for) -->\n                      <div v-if=\"currentRequest.is_third_party_request && currentRequest.beneficiary\" class=\"card mb-4\">\n                        <div class=\"card-header bg-light\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-user-check me-2 text-primary\"></i>\n                            Document Beneficiary Information\n                            <small class=\"text-muted ms-2\">(Person this document is for)</small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Basic Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\">{{ currentRequest.beneficiary.full_name || 'Not provided' }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Email Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.email }\">\n                                  <a v-if=\"currentRequest.beneficiary.email\" :href=\"`mailto:${currentRequest.beneficiary.email}`\">{{ currentRequest.beneficiary.email }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.phone_number }\">\n                                  <a v-if=\"currentRequest.beneficiary.phone_number\" :href=\"`tel:${currentRequest.beneficiary.phone_number}`\">{{ currentRequest.beneficiary.phone_number }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Date of Birth</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.birth_date }\">\n                                  <span v-if=\"formatDate(currentRequest.beneficiary.birth_date)\">{{ formatDate(currentRequest.beneficiary.birth_date) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Gender</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.gender }\">\n                                  <span v-if=\"formatGender(currentRequest.beneficiary.gender)\">{{ formatGender(currentRequest.beneficiary.gender) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Civil Status</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.civil_status_id }\">\n                                  <span v-if=\"getCivilStatusName(currentRequest.beneficiary.civil_status_id)\">{{ getCivilStatusName(currentRequest.beneficiary.civil_status_id) }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Address Information -->\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Complete Address</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.address }\">\n                                  <span v-if=\"currentRequest.beneficiary.address\">{{ currentRequest.beneficiary.address }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Relationship and Additional Information -->\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Relationship to Requestor</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-info-subtle text-info-emphasis px-2 py-1\">\n                                    {{ formatRelationship(currentRequest.beneficiary.relationship_to_requestor) }}\n                                  </span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Nationality</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.beneficiary.nationality }\">\n                                  <span v-if=\"currentRequest.beneficiary.nationality\">{{ currentRequest.beneficiary.nationality }}</span>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n\n\n                          <!-- Verification Image -->\n                          <div v-if=\"currentRequest?.beneficiary?.verification_image_path\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Family Member Verification</label>\n                                <div class=\"d-flex align-items-center gap-3\">\n                                  <!-- I dont want to use or see the status for now in the frontend -->\n                                  <!-- <div class=\"verification-status\">\n                                    <span class=\"badge\" :class=\"getBeneficiaryVerificationStatusClass(currentRequest?.beneficiary?.verification_status)\">\n                                      {{ getBeneficiaryVerificationStatusText(currentRequest?.beneficiary?.verification_status) }}\n                                    </span>\n                                  </div> -->\n                                  <button\n                                    class=\"btn btn-outline-primary btn-sm\"\n                                    @click=\"viewVerificationImage(currentRequest.id, 'beneficiary')\"\n                                    title=\"View family member verification image\"\n                                  >\n                                    <i class=\"fas fa-eye me-1\"></i>View Verification Image\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Requestor Notes -->\n                           <!-- Ill comment this because I dont need this for now -->\n                          <!-- <div v-if=\"currentRequest.requestor_notes\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Additional Notes from Requestor</label>\n                                <div class=\"alert alert-light border\">\n                                  <i class=\"fas fa-sticky-note me-2 text-warning\"></i>\n                                  {{ currentRequest.requestor_notes }}\n                                </div>\n                              </div>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n\n                      <!-- Authorized Pickup Information -->\n                      <div v-if=\"currentRequest.authorized_pickup\" class=\"card mb-4\">\n                        <div class=\"card-header bg-warning-subtle\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-hand-paper me-2 text-warning\"></i>\n                            Authorized Pickup Person\n                            <small class=\"text-muted ms-2\">(Person authorized to collect the document)</small>\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Full Name</label>\n                                <p class=\"mb-0\">{{ currentRequest.authorized_pickup.full_name || 'Not provided' }}</p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Phone Number</label>\n                                <p class=\"mb-0\" :class=\"{ 'text-muted': !currentRequest.authorized_pickup.phone_number }\">\n                                  <a v-if=\"currentRequest.authorized_pickup.phone_number\" :href=\"`tel:${currentRequest.authorized_pickup.phone_number}`\">{{ currentRequest.authorized_pickup.phone_number }}</a>\n                                  <span v-else class=\"not-provided\">Not provided</span>\n                                </p>\n                              </div>\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Relationship to {{ currentRequest.is_third_party_request ? 'Beneficiary' : 'Requestor' }}</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge bg-secondary-subtle text-secondary-emphasis px-2 py-1\">\n                                    {{ formatRelationship(currentRequest.authorized_pickup.relationship_to_beneficiary) }}\n                                  </span>\n                                </p>\n                              </div>\n\n                              <!-- ill comment this status for now because I dont really use it. Ill uncomment this in future -->\n                              <!-- <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Authorization Status</label>\n                                <p class=\"mb-0\">\n                                  <span class=\"badge\" :class=\"getAuthorizationStatusClass(currentRequest.authorized_pickup.verification_status)\">\n                                    <i class=\"fas\" :class=\"getAuthorizationStatusIcon(currentRequest.authorized_pickup.verification_status)\"></i>\n                                    {{ formatAuthorizationStatus(currentRequest.authorized_pickup.verification_status) }}\n                                  </span>\n                                </p>\n                              </div> -->\n\n                            </div>\n                            <div class=\"col-md-6\">\n                              <!-- View Documents Section -->\n                              <div class=\"mb-3\">\n                                <label class=\"form-label fw-bold\">Uploaded Documents</label>\n                                <div class=\"d-flex flex-column gap-2\">\n                                  <div v-if=\"currentRequest.authorized_pickup?.id_image_path || currentRequest.authorized_pickup?.authorization_letter_path\" class=\"document-actions\">\n                                    <button\n                                      class=\"btn btn-primary btn-sm w-100\"\n                                      @click=\"viewPickupDocuments(currentRequest)\"\n                                      title=\"View all pickup authorization documents\"\n                                    >\n                                      <i class=\"fas fa-images me-2\"></i>\n                                      View Authorization Documents\n                                    </button>\n                                    <div class=\"mt-2 small text-muted\">\n                                      <div v-if=\"currentRequest.authorized_pickup?.id_image_path\" class=\"d-flex align-items-center mb-1\">\n                                        <i class=\"fas fa-id-card me-2 text-info\"></i>\n                                        <span>ID Document Available</span>\n                                      </div>\n                                      <div v-if=\"currentRequest.authorized_pickup?.authorization_letter_path\" class=\"d-flex align-items-center\">\n                                        <i class=\"fas fa-file-signature me-2 text-warning\"></i>\n                                        <span>Authorization Letter Available</span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div v-else class=\"text-muted small\">\n                                    <i class=\"fas fa-exclamation-triangle me-2 text-warning\"></i>\n                                    No documents uploaded yet\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Authorization Actions -->\n                          <div v-if=\"currentRequest.authorized_pickup.verification_status === 'pending'\" class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"alert alert-warning\">\n                                <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                                <strong>Action Required:</strong> This pickup authorization needs to be verified before the document can be released.\n                              </div>\n                              <div class=\"d-flex gap-2\">\n                                <button class=\"btn btn-success btn-sm\" @click=\"verifyAuthorization(currentRequest.id, true)\">\n                                  <i class=\"fas fa-check me-1\"></i>\n                                  Verify & Approve\n                                </button>\n                                <button class=\"btn btn-danger btn-sm\" @click=\"verifyAuthorization(currentRequest.id, false)\">\n                                  <i class=\"fas fa-times me-1\"></i>\n                                  Reject Authorization\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Document-Specific Details -->\n                      <div v-if=\"currentRequest.specific_details\" class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\">\n                            <i class=\"fas fa-file-alt me-2\"></i>\n                            {{ currentRequest.document_type }} Application Details\n                          </h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Cedula Application Details -->\n                          <div v-if=\"currentRequest.document_type === 'Cedula'\" class=\"cedula-details\">\n                            <!-- Income Information -->\n                            <div class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-primary mb-3\">\n                                  <i class=\"fas fa-money-bill-wave me-2\"></i>Income Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Annual Income</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.annual_income || 0) }}</p>\n                                    </div>\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Monthly Income</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.monthly_income || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Occupation</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.occupation || 'Not provided' }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.employer_name\">\n                                      <label class=\"form-label fw-bold\">Employer</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.employer_name }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Property Information -->\n                            <div v-if=\"currentRequest.specific_details.has_real_property || currentRequest.specific_details.property_assessed_value > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-success mb-3\">\n                                  <i class=\"fas fa-home me-2\"></i>Real Property Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Assessed Property Value</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.property_assessed_value || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.property_location\">\n                                      <label class=\"form-label fw-bold\">Property Location</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.property_location }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Personal Property Information -->\n                            <div v-if=\"currentRequest.specific_details.has_personal_property || currentRequest.specific_details.personal_property_value > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-info mb-3\">\n                                  <i class=\"fas fa-car me-2\"></i>Personal Property Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Personal Property Value</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.personal_property_value || 0) }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Business Information -->\n                            <div v-if=\"currentRequest.specific_details.business_name || currentRequest.specific_details.business_gross_receipts > 0\" class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-warning mb-3\">\n                                  <i class=\"fas fa-briefcase me-2\"></i>Business/Professional Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_name\">\n                                      <label class=\"form-label fw-bold\">Business Name</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_name }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_type\">\n                                      <label class=\"form-label fw-bold\">Business Type</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_type }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Annual Gross Receipts/Professional Fees</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.business_gross_receipts || 0) }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.business_address\">\n                                      <label class=\"form-label fw-bold\">Business Address</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.business_address }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Tax Computation -->\n                            <div class=\"row\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-danger mb-3\">\n                                  <i class=\"fas fa-calculator me-2\"></i>Tax Computation\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Computed Tax</label>\n                                      <p class=\"mb-0\">{{ formatCurrency(currentRequest.specific_details.computed_tax || 0) }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Total Document Fee</label>\n                                      <p class=\"mb-0 text-success fw-bold\">{{ formatCurrency(currentRequest.total_document_fee || 0) }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Barangay Clearance Application Details -->\n                          <div v-else-if=\"currentRequest.document_type === 'Barangay Clearance'\" class=\"barangay-clearance-details\">\n                            <!-- Pending Cases Information -->\n                            <div class=\"row mb-4\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-warning mb-3\">\n                                  <i class=\"fas fa-gavel me-2\"></i>Legal Status Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Pending Cases</label>\n                                      <p class=\"mb-0\">\n                                        <span class=\"badge\" :class=\"currentRequest.specific_details.has_pending_cases ? 'bg-warning' : 'bg-success'\">\n                                          {{ currentRequest.specific_details.has_pending_cases ? 'Has Pending Cases' : 'No Pending Cases' }}\n                                        </span>\n                                      </p>\n                                    </div>\n                                    <div v-if=\"currentRequest.specific_details.has_pending_cases && currentRequest.specific_details.pending_cases_details\" class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Pending Cases Details</label>\n                                      <div class=\"alert alert-warning\">\n                                        <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                                        {{ currentRequest.specific_details.pending_cases_details }}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.voter_registration_number\">\n                                      <label class=\"form-label fw-bold\">Voter Registration Number</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.voter_registration_number }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.precinct_number\">\n                                      <label class=\"form-label fw-bold\">Precinct Number</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.precinct_number }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Emergency Contact Information -->\n                            <div v-if=\"currentRequest.specific_details.emergency_contact_name\" class=\"row\">\n                              <div class=\"col-12\">\n                                <h6 class=\"text-info mb-3\">\n                                  <i class=\"fas fa-phone me-2\"></i>Emergency Contact Information\n                                </h6>\n                                <div class=\"row\">\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\">\n                                      <label class=\"form-label fw-bold\">Contact Name</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_name }}</p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_relationship\">\n                                      <label class=\"form-label fw-bold\">Relationship</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_relationship }}</p>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-md-6\">\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_phone\">\n                                      <label class=\"form-label fw-bold\">Phone Number</label>\n                                      <p class=\"mb-0\">\n                                        <a :href=\"`tel:${currentRequest.specific_details.emergency_contact_phone}`\">\n                                          {{ currentRequest.specific_details.emergency_contact_phone }}\n                                        </a>\n                                      </p>\n                                    </div>\n                                    <div class=\"mb-3\" v-if=\"currentRequest.specific_details.emergency_contact_address\">\n                                      <label class=\"form-label fw-bold\">Address</label>\n                                      <p class=\"mb-0\">{{ currentRequest.specific_details.emergency_contact_address }}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Uploaded Documents -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-paperclip me-2\"></i>Uploaded Documents</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div v-if=\"currentRequest.uploaded_documents && currentRequest.uploaded_documents.length > 0\">\n                            <div class=\"row g-3\">\n                              <div v-for=\"document in currentRequest.uploaded_documents\" :key=\"document.id\" class=\"col-md-4\">\n                                <div class=\"document-preview-card\">\n                                  <div class=\"document-preview-header\">\n                                    <div class=\"document-type-badge\">\n                                      <i class=\"fas fa-file-alt me-1\"></i>\n                                      {{ getDocumentTypeDisplayName(document.document_type) }}\n                                    </div>\n                                  </div>\n                                  <div class=\"document-preview-content\">\n                                    <!-- Image Preview -->\n                                    <div v-if=\"isImageFile(document.mime_type)\"\n                                         class=\"image-preview\"\n                                         @click=\"openImageModal(document)\"\n                                         @mouseenter=\"preloadImage(document)\">\n                                      <!-- Successfully loaded image -->\n                                      <img\n                                        v-if=\"documentUrls[document.id]\"\n                                        :src=\"documentUrls[document.id]\"\n                                        :alt=\"document.document_name\"\n                                        class=\"document-image\"\n                                        @error=\"handleImageError\"\n                                      />\n\n                                      <!-- Loading state -->\n                                      <div v-else-if=\"loadingDocuments.has(document.id)\" class=\"loading-placeholder\">\n                                        <i class=\"fas fa-spinner fa-spin\"></i>\n                                        <span>Loading image...</span>\n                                      </div>\n\n                                      <!-- Failed state with retry option -->\n                                      <div v-else-if=\"failedDocuments.has(document.id)\" class=\"error-placeholder\" @click.stop=\"retryLoadDocument(document)\">\n                                        <i class=\"fas fa-exclamation-triangle\"></i>\n                                        <span>Failed to load</span>\n                                        <small>Click to retry</small>\n                                      </div>\n\n                                      <!-- Initial state (not yet attempted) -->\n                                      <div v-else class=\"loading-placeholder\">\n                                        <i class=\"fas fa-image\"></i>\n                                        <span>Click to load</span>\n                                      </div>\n                                      <div class=\"image-overlay\">\n                                        <i class=\"fas fa-search-plus\"></i>\n                                        <span>Click to view</span>\n                                      </div>\n                                    </div>\n                                    <!-- PDF Preview -->\n                                    <div v-else-if=\"isPdfFile(document.mime_type)\" class=\"pdf-preview\">\n                                      <div class=\"pdf-icon\">\n                                        <i class=\"fas fa-file-pdf fa-3x text-danger\"></i>\n                                      </div>\n                                      <div class=\"pdf-info\">\n                                        <p class=\"mb-1 fw-bold\">{{ document.document_name }}</p>\n                                        <small class=\"text-muted\">{{ formatFileSize(document.file_size) }}</small>\n                                      </div>\n                                      <button\n                                        class=\"btn btn-sm btn-outline-primary mt-2\"\n                                        @click=\"downloadDocument(document)\"\n                                      >\n                                        <i class=\"fas fa-download me-1\"></i>Download\n                                      </button>\n                                    </div>\n                                    <!-- Other File Types -->\n                                    <div v-else class=\"file-preview\">\n                                      <div class=\"file-icon\">\n                                        <i class=\"fas fa-file fa-3x text-secondary\"></i>\n                                      </div>\n                                      <div class=\"file-info\">\n                                        <p class=\"mb-1 fw-bold\">{{ document.document_name }}</p>\n                                        <small class=\"text-muted\">{{ formatFileSize(document.file_size) }}</small>\n                                      </div>\n                                      <button\n                                        class=\"btn btn-sm btn-outline-primary mt-2\"\n                                        @click=\"downloadDocument(document)\"\n                                      >\n                                        <i class=\"fas fa-download me-1\"></i>Download\n                                      </button>\n                                    </div>\n                                  </div>\n                                  <div class=\"document-preview-footer\">\n                                    <small class=\"text-muted\">\n                                      <i class=\"fas fa-clock me-1\"></i>\n                                      Uploaded {{ formatDate(document.created_at) }}\n                                    </small>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div v-else class=\"no-documents\">\n                            <div class=\"text-center py-4\">\n                              <i class=\"fas fa-folder-open fa-3x text-muted mb-3\"></i>\n                              <h6 class=\"text-muted\">No Documents Uploaded</h6>\n                              <p class=\"text-muted mb-0\">\n                                <span v-if=\"currentRequest.document_type === 'Cedula'\">\n                                  Cedula requests typically don't require supporting documents.\n                                </span>\n                                <span v-else>\n                                  The client hasn't uploaded any supporting documents yet.\n                                </span>\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Right Column - Status Management -->\n                    <div class=\"col-lg-4\">\n                      <!-- Status Management -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-tasks me-2\"></i>Status Management</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <!-- Current Status Display -->\n                          <div class=\"mb-3\">\n                            <label class=\"form-label fw-bold\">Current Status</label>\n                            <div class=\"d-flex align-items-center gap-2\">\n                              <span class=\"badge\" :class=\"`bg-${getStatusColor(currentRequest.status_name)}`\">\n                                {{ formatStatus(currentRequest.status_name) }}\n                              </span>\n                              <small class=\"text-muted\">\n                                <i class=\"fas fa-info-circle me-1\"></i>\n                                {{ getStatusDescription(currentRequest.status_name) }}\n                              </small>\n                            </div>\n                          </div>\n\n                          <!-- Status Progression Buttons -->\n                          <div class=\"mb-3\">\n                            <label class=\"form-label fw-bold\">Available Actions</label>\n                            <div v-if=\"getNextStatusActions().length === 0\" class=\"alert alert-info py-2 px-3 mb-0\">\n                              <i class=\"fas fa-info-circle me-2\"></i>\n                              <small>No further actions available for this request ({{ formatStatus(currentRequest.status_name) }})</small>\n                            </div>\n                            <div v-else class=\"d-flex flex-wrap gap-2\">\n                              <button\n                                v-for=\"action in getNextStatusActions()\"\n                                :key=\"action.status_id\"\n                                class=\"btn\"\n                                :class=\"action.buttonClass\"\n                                @click=\"progressToNextStatus(action.status_id)\"\n                                :title=\"action.description\"\n                              >\n                                <i :class=\"action.icon\" class=\"me-1\"></i>\n                                {{ action.label }}\n                              </button>\n                            </div>\n                          </div>\n\n                          <!-- Separate Cancel Button -->\n                          <div v-if=\"canCancelRequest()\" class=\"d-grid\">\n                            <button\n                              class=\"btn btn-outline-danger\"\n                              @click=\"cancelRequest\"\n                              title=\"Cancel this request permanently\"\n                            >\n                              <i class=\"fas fa-times me-1\"></i>\n                              Cancel Request\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n\n                      <!-- Ill comment this for now because I dont need this for now -->\n                      <!-- Payment Information -->\n                      <div class=\"card mb-4\">\n                        <div class=\"card-header\">\n                          <h6 class=\"mb-0\"><i class=\"fas fa-credit-card me-2\"></i>Payment Information</h6>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"mb-3\">\n                            <label class=\"form-label fw-bold\">Payment Method</label>\n                            <p class=\"mb-0\">{{ currentRequest.payment_method || 'Not specified' }}</p>\n                          </div>\n\n                          <!-- ill comment this for now because I dont need this to show -->\n                          <!-- <div class=\"mb-3\">\n                            <label class=\"form-label fw-bold\">Payment Status</label>\n                            <p class=\"mb-0\">\n                              <span class=\"badge\" :class=\"getPaymentStatusColor(currentRequest.payment_status)\">\n                                {{ formatPaymentStatus(currentRequest.payment_status) }}\n                              </span>\n                            </p>\n                          </div> -->\n                          \n                          <div class=\"row\">\n\n                             <!-- ill comment this for now because I dont need base fees to show -->\n                            <!-- <div class=\"col-6\">\n                              <div class=\"mb-2\">\n                                <label class=\"form-label fw-bold small\">Base Fee</label>\n                                <p class=\"mb-0\">{{ formatCurrency(currentRequest.base_fee) }}</p>\n                              </div>\n                            </div> -->\n\n                             <!-- ill comment this for now because I dont need these fees to show -->\n                            <!-- <div class=\"col-6\">\n                              <div class=\"mb-2\">\n                                <label class=\"form-label fw-bold small\">Additional Fees</label>\n                                <p class=\"mb-0\">{{ formatCurrency(currentRequest.additional_fees) }}</p>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"mb-2\">\n                                <label class=\"form-label fw-bold small\">Processing Fee</label>\n                                <p class=\"mb-0\">{{ formatCurrency(currentRequest.processing_fee) }}</p>\n                              </div>\n                            </div> -->\n                            <div class=\"col-6\">\n                              <div class=\"mb-2\">\n                                <label class=\"form-label fw-bold small\">Total Amount</label>\n                                <p class=\"mb-0 fw-bold text-primary\">{{ formatCurrency(getDisplayFee(currentRequest)) }}</p>\n                              </div>\n                            </div>\n                          </div>\n\n                           <!-- ill comment this for now because I dont need this to show -->\n                          <!-- <div v-if=\"needsPaymentVerification(currentRequest)\" class=\"mt-4 p-3 border rounded bg-light\">\n                            <h6 class=\"text-primary mb-3\">\n                              <i class=\"fas fa-money-bill me-2\"></i>\n                              Verify In-Person Payment\n                            </h6>\n                            <div class=\"row\">\n                              <div class=\"col-md-6\">\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label fw-bold\">Amount Received *</label>\n                                  <input\n                                    type=\"number\"\n                                    class=\"form-control\"\n                                    v-model=\"paymentVerificationForm.amount_received\"\n                                    :min=\"currentRequest.total_document_fee || currentRequest.total_fee\"\n                                    step=\"0.01\"\n                                    placeholder=\"Enter amount received\"\n                                  >\n                                </div>\n                              </div>\n                              <div class=\"col-md-6\">\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label fw-bold\">Receipt Number</label>\n                                  <input\n                                    type=\"text\"\n                                    class=\"form-control\"\n                                    v-model=\"paymentVerificationForm.receipt_number\"\n                                    placeholder=\"Enter receipt number\"\n                                  >\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"d-grid\">\n                              <button\n                                class=\"btn btn-success\"\n                                @click=\"verifyInPersonPayment\"\n                                :disabled=\"!paymentVerificationForm.amount_received || paymentVerificationForm.loading\"\n                              >\n                                <i class=\"fas fa-check-circle me-1\"></i>\n                                <span v-if=\"paymentVerificationForm.loading\">\n                                  <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                                  Verifying...\n                                </span>\n                                <span v-else>Verify Payment</span>\n                              </button>\n                            </div>\n                          </div> -->\n\n                           <!-- ill comment this for now because I dont need this to show -->\n                          <!-- <div v-if=\"canSchedulePickup(currentRequest)\" class=\"mt-4 p-3 border rounded bg-light\">\n                            <h6 class=\"text-info mb-3\">\n                              <i class=\"fas fa-calendar-alt me-2\"></i>\n                              Schedule Pickup Appointment\n                            </h6>\n                            <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label fw-bold\">Date *</label>\n                                  <input\n                                    type=\"date\"\n                                    class=\"form-control\"\n                                    v-model=\"pickupScheduleForm.scheduled_date\"\n                                    :min=\"getTomorrowDate()\"\n                                  >\n                                </div>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label fw-bold\">Start Time *</label>\n                                  <input\n                                    type=\"time\"\n                                    class=\"form-control\"\n                                    v-model=\"pickupScheduleForm.scheduled_time_start\"\n                                  >\n                                </div>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <div class=\"mb-3\">\n                                  <label class=\"form-label fw-bold\">End Time *</label>\n                                  <input\n                                    type=\"time\"\n                                    class=\"form-control\"\n                                    v-model=\"pickupScheduleForm.scheduled_time_end\"\n                                  >\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"d-grid\">\n                              <button\n                                class=\"btn btn-info\"\n                                @click=\"schedulePickup\"\n                                :disabled=\"!isPickupFormValid() || pickupScheduleForm.loading\"\n                              >\n                                <i class=\"fas fa-calendar-check me-1\"></i>\n                                <span v-if=\"pickupScheduleForm.loading\">\n                                  <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                                  Scheduling...\n                                </span>\n                                <span v-else>Schedule Pickup</span>\n                              </button>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Status History Timeline -->\n                  <div class=\"card\">\n                    <div class=\"card-header\">\n                      <h6 class=\"mb-0\"><i class=\"fas fa-history me-2\"></i>Status History</h6>\n                    </div>\n                    <div class=\"card-body\">\n                      <div v-if=\"currentRequest.status_history && currentRequest.status_history.length > 0\" class=\"timeline\">\n                        <div\n                          v-for=\"(history, index) in currentRequest.status_history\"\n                          :key=\"history.id\"\n                          class=\"timeline-item\"\n                          :class=\"{ 'timeline-item-last': index === currentRequest.status_history.length - 1 }\"\n                        >\n                          <div class=\"timeline-marker\" :class=\"`bg-${getStatusColor(history.new_status_name)}`\">\n                            <i class=\"fas fa-circle\"></i>\n                          </div>\n                          <div class=\"timeline-content\">\n                            <div class=\"timeline-header\">\n                              <span class=\"badge\" :class=\"`bg-${getStatusColor(history.new_status_name)}`\">\n                                {{ formatStatus(history.new_status_name) }}\n                              </span>\n                              <small class=\"text-muted ms-2\">{{ formatDateTime(history.changed_at) }}</small>\n                            </div>\n                            <div class=\"timeline-body\">\n                              <p class=\"mb-1\">\n                                <strong>Changed by:</strong> {{ getChangedByName(history) }}\n                              </p>\n                              <p v-if=\"history.old_status_name\" class=\"mb-1\">\n                                <strong>From:</strong> {{ formatStatus(history.old_status_name) }}\n                              </p>\n                              <!-- I dont neeed reason for now -->\n                              <!-- <p v-if=\"history.change_reason\" class=\"mb-0\">\n                                <strong>Reason:</strong> {{ getFormattedReason(history.change_reason) }}\n                              </p> -->\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div v-else class=\"text-center text-muted py-3\">\n                        <i class=\"fas fa-history fa-2x mb-2\"></i>\n                        <p>No status history available</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info me-2\" @click=\"exportSingleRequestToExcel\" :disabled=\"!currentRequest\">\n                    <i class=\"fas fa-file-excel me-1\"></i>\n                    Export to Excel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger me-2\" @click=\"exportSingleRequestToPDF\" :disabled=\"!currentRequest\">\n                    <i class=\"fas fa-file-pdf me-1\"></i>\n                    Export to PDF\n                  </button>\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"showRequestDetails = false\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Close\n                  </button>\n                  <button type=\"button\" class=\"btn btn-primary\" @click=\"refreshRequestDetails\">\n                    <i class=\"fas fa-sync-alt me-1\"></i>\n                    Refresh\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Quick Reject Modal -->\n          <div v-if=\"showQuickReject && selectedRequestForReject\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-times-circle text-danger me-2\"></i>\n                    Reject Request\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"closeQuickRejectModal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"alert alert-warning\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    You are about to reject this document request. This action will notify the client immediately.\n                  </div>\n\n                  <div class=\"mb-3\">\n                    <strong>Request Details:</strong>\n                    <ul class=\"list-unstyled mt-2\">\n                      <li><strong>Request Number:</strong> {{ selectedRequestForReject.request_number }}</li>\n                      <li><strong>Document Type:</strong> {{ selectedRequestForReject.document_type }}</li>\n                      <li><strong>Client:</strong> {{ selectedRequestForReject.client_name }}</li>\n                    </ul>\n                  </div>\n\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeQuickRejectModal\" :disabled=\"quickRejectForm.loading\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Cancel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger\" @click=\"confirmQuickReject\" :disabled=\"quickRejectForm.loading\">\n                    <i class=\"fas fa-times-circle me-1\"></i>\n                    <span v-if=\"quickRejectForm.loading\">\n                      <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                      Rejecting...\n                    </span>\n                    <span v-else>Reject Request</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Quick Approve Modal -->\n          <div v-if=\"showQuickApprove && selectedRequestForApprove\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.5);\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">\n                    <i class=\"fas fa-check-circle text-success me-2\"></i>\n                    Approve Request\n                  </h5>\n                  <button type=\"button\" class=\"btn-close\" @click=\"closeQuickApproveModal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"alert alert-info\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    You are about to approve this document request. This action will notify the client immediately and move the request to the next processing stage.\n                  </div>\n\n                  <div class=\"mb-3\">\n                    <strong>Request Details:</strong>\n                    <ul class=\"list-unstyled mt-2\">\n                      <li><strong>Request Number:</strong> {{ selectedRequestForApprove.request_number }}</li>\n                      <li><strong>Document Type:</strong> {{ selectedRequestForApprove.document_type }}</li>\n                      <li><strong>Client:</strong> {{ selectedRequestForApprove.client_name }}</li>\n                    </ul>\n                  </div>\n\n                  <div v-if=\"quickApproveForm.error\" class=\"alert alert-danger\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    {{ quickApproveForm.error }}\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeQuickApproveModal\" :disabled=\"quickApproveForm.loading\">\n                    <i class=\"fas fa-times me-1\"></i>\n                    Cancel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"confirmQuickApprove\" :disabled=\"quickApproveForm.loading\">\n                    <i class=\"fas fa-check-circle me-1\"></i>\n                    <span v-if=\"quickApproveForm.loading\">\n                      <i class=\"fas fa-spinner fa-spin me-1\"></i>\n                      Approving...\n                    </span>\n                    <span v-else>Approve Request</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n\n    <!-- Image Modal -->\n    <div v-if=\"showImageModal && selectedImage\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background-color: rgba(0,0,0,0.8);\" @click.self=\"closeImageModal\">\n      <div class=\"modal-dialog modal-xl modal-dialog-centered\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header sticky-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-image me-2\"></i>\n              {{ selectedImage.document_name }}\n            </h5>\n            <div class=\"header-controls\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-light btn-sm me-2\"\n                @click=\"downloadDocument(selectedImage)\"\n                :disabled=\"!documentUrls[selectedImage.id] || imageLoadingInModal\"\n                title=\"Download\">\n                <i class=\"fas fa-download\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn-close btn-close-white\"\n                @click=\"closeImageModal\"\n                aria-label=\"Close\"\n                title=\"Close\">\n              </button>\n            </div>\n          </div>\n          <div class=\"modal-body text-center p-0\">\n            <div class=\"image-modal-container\">\n              <!-- Successfully loaded image -->\n              <img\n                v-if=\"documentUrls[selectedImage.id] && !imageLoadingInModal\"\n                :src=\"documentUrls[selectedImage.id]\"\n                :alt=\"selectedImage.document_name\"\n                class=\"modal-image\"\n                @error=\"handleImageError\"\n                @load=\"onModalImageLoad\"\n                loading=\"lazy\"\n              />\n\n              <!-- Loading state -->\n              <div v-else-if=\"imageLoadingInModal || loadingDocuments.has(selectedImage.id)\" class=\"loading-placeholder modal-loading\">\n                <div class=\"loading-content\">\n                  <i class=\"fas fa-spinner fa-spin fa-3x mb-3\"></i>\n                  <span class=\"loading-text\">Loading high-resolution image...</span>\n                  <div class=\"loading-progress mt-2\">\n                    <div class=\"progress-bar\"></div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Failed state -->\n              <div v-else-if=\"modalImageError || failedDocuments.has(selectedImage.id)\" class=\"error-placeholder modal-error\">\n                <i class=\"fas fa-exclamation-triangle fa-3x mb-3\"></i>\n                <span class=\"error-text\">Failed to load image</span>\n                <button\n                  class=\"btn btn-outline-light mt-3\"\n                  @click=\"retryLoadDocument(selectedImage)\"\n                  :disabled=\"imageLoadingInModal\">\n                  <i class=\"fas fa-redo me-2\"></i>Retry\n                </button>\n              </div>\n\n              <!-- Fallback -->\n              <div v-else class=\"loading-placeholder modal-loading\">\n                <i class=\"fas fa-image fa-3x mb-3\"></i>\n                <span class=\"loading-text\">Preparing image...</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"d-flex justify-content-between align-items-center w-100\">\n              <div class=\"image-info\">\n                <span class=\"badge bg-info me-2\">{{ getDocumentTypeDisplayName(selectedImage.document_type) }}</span>\n                <small class=\"text-muted\">\n                  {{ formatFileSize(selectedImage.file_size) }} •\n                  Uploaded {{ formatDate(selectedImage.created_at) }}\n                </small>\n              </div>\n              <div class=\"image-actions\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary me-2\"\n                  @click=\"downloadDocument(selectedImage)\"\n                  :disabled=\"!documentUrls[selectedImage.id] || imageLoadingInModal\">\n                  <i class=\"fas fa-download me-1\"></i>Download\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeImageModal\">\n                  <i class=\"fas fa-times me-1\"></i>Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Verification Status Modal -->\n    <div class=\"modal fade\" id=\"verificationModal\" tabindex=\"-1\" aria-labelledby=\"verificationModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"verificationModalLabel\">\n              <i class=\"fas fa-id-card me-2\"></i>\n              Family Member Verification\n            </h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div v-if=\"currentVerification\">\n              <!-- Beneficiary Information -->\n              <div class=\"card mb-3\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Beneficiary Information</h6>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <strong>Name:</strong> {{ currentVerification.beneficiary_name }}\n                    </div>\n                    <div class=\"col-md-6\">\n                      <strong>Relationship:</strong> {{ currentVerification.relationship }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Verification Image -->\n              <div class=\"card mb-3\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Verification Image</h6>\n                </div>\n                <div class=\"card-body text-center\">\n                  <img\n                    v-if=\"currentVerification.image_url\"\n                    :src=\"currentVerification.image_url\"\n                    class=\"img-fluid rounded border\"\n                    style=\"max-height: 400px;\"\n                    alt=\"Verification Image\"\n                  />\n                  <div v-else class=\"text-muted\">\n                    <i class=\"fas fa-image fa-3x mb-2\"></i>\n                    <p>No verification image available</p>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Verification Actions -->\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">Verification Decision</h6>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <label class=\"form-label\">Status</label>\n                      <select v-model=\"verificationForm.status\" class=\"form-select\">\n                        <option value=\"pending\">Pending Review</option>\n                        <option value=\"approved\">Approved</option>\n                        <option value=\"rejected\">Rejected</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <label class=\"form-label\">Notes (Optional)</label>\n                      <textarea\n                        v-model=\"verificationForm.notes\"\n                        class=\"form-control\"\n                        rows=\"3\"\n                        placeholder=\"Add any notes about the verification decision...\"\n                      ></textarea>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              @click=\"saveVerificationStatus\"\n              :disabled=\"!verificationForm.status\"\n            >\n              <i class=\"fas fa-save me-1\"></i>\n              Save Decision\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Authorized Pickup Documents Modal Component -->\n    <AuthorizedPickupDocumentsModal\n      :request=\"selectedRequestForPickup\"\n      :processing=\"processingPickupAction\"\n      @verify=\"verifyPickupAuthorization\"\n      @reject=\"rejectPickupAuthorization\"\n    />\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport AuthorizedPickupDocumentsModal from './AuthorizedPickupDocumentsModal.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminDocumentService from '@/services/adminDocumentService';\nimport api from '@/services/api';\nimport { Modal } from 'bootstrap';\nimport notificationService from '@/services/notificationService';\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nexport default {\n  name: 'AdminRequests',\n  components: {\n    AdminHeader,\n    AdminSidebar,\n    AuthorizedPickupDocumentsModal\n  },\n\n\n\n  data() {\n    return {\n      // UI State\n      loading: true,\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      errorMessage: '',\n      viewMode: 'table', // 'card' or 'table' - default to table view\n\n      // Request Management Data\n      requests: [],\n      selectedRequests: [],\n      currentRequest: null,\n      statusOptions: [], // All status options (for transitions)\n      filterStatusOptions: [], // Filtered status options (for filter dropdown)\n      selectedRequestForPickup: null,\n      processingPickupAction: false,\n\n      // Pagination\n      pagination: {\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: 0,\n        itemsPerPage: 10\n      },\n\n      // Filters\n      filters: {\n        status: '',\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      },\n\n      // Statistics\n      requestStats: {\n        total: 0,\n        pending: 0,\n        approved: 0,\n        completed: 0,\n        thisMonth: 0\n      },\n\n      // Document Types and Status Options\n      documentTypes: [],\n      searchTimeout: null,\n\n      // UI State\n      showFilters: false,\n      showBulkActions: false,\n      showRequestDetails: false,\n      showRejectForm: false,\n      showQuickReject: false,\n      showQuickApprove: false,\n\n      // Verification Modal\n      currentVerification: null,\n      verificationForm: {\n        status: 'pending',\n        notes: ''\n      },\n      showImageModal: false,\n      selectedImage: null,\n      bulkAction: '',\n      documentUrls: {}, // Store blob URLs for documents\n      loadingDocuments: new Set(), // Track which documents are currently loading\n      failedDocuments: new Set(), // Track which documents failed to load\n      imageLoadingInModal: false, // Track if modal image is loading\n      modalImageError: false, // Track if modal image failed\n\n      // Status Update Forms\n      statusUpdateForm: {\n        status_id: ''\n      },\n      rejectForm: {\n        reason: ''\n      },\n      quickRejectForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForReject: null,\n      quickApproveForm: {\n        loading: false,\n        error: ''\n      },\n      selectedRequestForApprove: null,\n\n      // Payment verification form\n      paymentVerificationForm: {\n        amount_received: '',\n        receipt_number: '',\n        loading: false,\n        error: ''\n      },\n\n      // Pickup scheduling form\n      pickupScheduleForm: {\n        scheduled_date: '',\n        scheduled_time_start: '',\n        scheduled_time_end: '',\n        loading: false,\n        error: ''\n      },\n\n      // Real-time features\n      refreshInterval: null,\n      autoRefreshEnabled: true,\n      refreshRate: 30000, // 30 seconds\n      lastRefresh: null\n    };\n  },\n\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load component data\n    await this.loadComponentData();\n\n    // Initialize real-time features\n    this.initializeRealTimeFeatures();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    // Clean up real-time features\n    this.cleanupRealTimeFeatures();\n\n    // Clean up blob URLs to prevent memory leaks\n    this.cleanupDocumentUrls();\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      // Load saved sidebar state (only on desktop)\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true; // Always collapsed on mobile\n      }\n\n      // Setup resize listener\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true; // Collapse when switching to mobile\n        } else if (!this.isMobile && wasMobile) {\n          // Restore saved state when switching to desktop\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    // Sidebar toggle\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    // Menu navigation\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      // Close sidebar on mobile after navigation\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    // User dropdown toggle\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    // Handle opening request modal from notifications\n    async handleOpenRequestModal(modalData) {\n      console.log('🔔 AdminRequests: Opening request modal from notification:', modalData);\n\n      try {\n        const { requestId, focusTab } = modalData;\n\n        if (!requestId) {\n          console.error('❌ No request ID provided for modal');\n          return;\n        }\n\n        // Use the existing viewRequestDetails method to open the modal\n        await this.viewRequestDetails(requestId);\n\n        // If a specific tab should be focused, handle that after modal opens\n        if (focusTab) {\n          // Wait a bit for the modal to fully render\n          setTimeout(() => {\n            this.focusModalTab(focusTab);\n          }, 300);\n        }\n\n        console.log('✅ Request modal opened successfully');\n\n      } catch (error) {\n        console.error('❌ Error opening request modal:', error);\n        // Show error message to user\n        this.showErrorMessage('Failed to open request details');\n      }\n    },\n\n    // Focus on a specific tab in the request details modal\n    focusModalTab(tabName) {\n      try {\n        console.log('🎯 Focusing on modal tab:', tabName);\n\n        // Map tab names to actual tab elements or actions\n        const tabMappings = {\n          'payment': () => {\n            // Focus on payment section in the modal\n            const paymentSection = document.querySelector('#requestDetailsModal .payment-section');\n            if (paymentSection) {\n              paymentSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              paymentSection.classList.add('highlight-section');\n              setTimeout(() => paymentSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'status': () => {\n            // Focus on status section\n            const statusSection = document.querySelector('#requestDetailsModal .status-section');\n            if (statusSection) {\n              statusSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              statusSection.classList.add('highlight-section');\n              setTimeout(() => statusSection.classList.remove('highlight-section'), 2000);\n            }\n          },\n          'documents': () => {\n            // Focus on documents section\n            const documentsSection = document.querySelector('#requestDetailsModal .documents-section');\n            if (documentsSection) {\n              documentsSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              documentsSection.classList.add('highlight-section');\n              setTimeout(() => documentsSection.classList.remove('highlight-section'), 2000);\n            }\n          }\n        };\n\n        const focusAction = tabMappings[tabName];\n        if (focusAction) {\n          focusAction();\n        } else {\n          console.log('⚠️ Unknown tab name:', tabName);\n        }\n\n      } catch (error) {\n        console.error('❌ Error focusing modal tab:', error);\n      }\n    },\n\n    // Menu actions\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    // Close mobile sidebar\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    // Logout\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    // Load admin profile\n    async loadAdminProfile() {\n      try {\n        const currentUser = unifiedAuthService.getCurrentUser();\n        if (currentUser && currentUser.profile) {\n          this.adminData = currentUser.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: currentUser?.username || 'Admin',\n            role: currentUser?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const currentUser = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: currentUser?.username || 'Admin',\n          role: currentUser?.role || 'admin'\n        };\n      }\n    },\n\n    // Load all component data\n    async loadComponentData() {\n      this.loading = true;\n      try {\n        await Promise.all([\n          this.loadAdminProfile(),\n          this.loadStatusOptions(),\n          this.loadDocumentTypes(),\n          this.loadRequests(),\n          this.loadDashboardStats()\n        ]);\n      } catch (error) {\n        console.error('Failed to load component data:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request data';\n\n        if (errorData.status === 401) {\n          unifiedAuthService.logout();\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // Load status options\n    async loadStatusOptions() {\n      try {\n        console.log('🔄 Loading status options...');\n        const response = await adminDocumentService.getStatusOptions();\n        console.log('📋 Status options response:', response);\n\n        if (response.success) {\n          // Keep all statuses available for status transitions\n          // We'll filter them appropriately in different contexts\n          const allStatuses = response.data || [];\n          this.statusOptions = allStatuses;\n\n          // Create a separate array for filter dropdown (excluding final states)\n          this.filterStatusOptions = allStatuses.filter(status => {\n            const statusName = status.status_name.toLowerCase();\n            return statusName !== 'completed' && statusName !== 'cancelled';\n          });\n\n          console.log('✅ All status options loaded:', this.statusOptions);\n          console.log('✅ Filter status options (active only):', this.filterStatusOptions);\n        } else {\n          console.error('❌ Failed to load status options:', response.message);\n          this.statusOptions = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading status options:', error);\n        this.statusOptions = [];\n        this.showToast('Error', 'Failed to load status options', 'error');\n      }\n    },\n\n    // Load dashboard statistics\n    async loadDashboardStats() {\n      try {\n        console.log('🔄 Loading dashboard stats...');\n        const response = await adminDocumentService.getDashboardStats();\n        console.log('📊 Dashboard stats response:', response);\n\n        if (response.success) {\n          // Map the backend response structure to frontend expectations\n          const data = response.data;\n          this.requestStats = {\n            total: data.overview?.total_requests || 0,\n            pending: data.overview?.pending_requests || 0,\n            approved: data.overview?.approved_requests || 0,\n            completed: data.overview?.completed_requests || 0,\n            thisMonth: data.time_based?.today_requests || 0\n          };\n          console.log('✅ Request stats updated:', this.requestStats);\n        } else {\n          console.error('❌ Failed to load dashboard stats:', response.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading dashboard stats:', error);\n        // Set default values on error\n        this.requestStats = {\n          total: 0,\n          pending: 0,\n          approved: 0,\n          completed: 0,\n          thisMonth: 0\n        };\n      }\n    },\n\n    // Load document types\n    async loadDocumentTypes() {\n      try {\n        console.log('🔄 Loading document types...');\n        const response = await adminDocumentService.getDocumentTypes();\n        console.log('📋 Document types response:', response);\n\n        if (response.success) {\n          this.documentTypes = response.data || [];\n          console.log('✅ Document types loaded:', this.documentTypes);\n        } else {\n          console.error('❌ Failed to load document types:', response.message);\n          this.documentTypes = [];\n        }\n      } catch (error) {\n        console.error('❌ Error loading document types:', error);\n        this.documentTypes = [];\n        this.showToast('Error', 'Failed to load document types', 'error');\n      }\n    },\n\n    // Load requests with current filters and pagination\n    // NOTE: AdminRequests.vue shows ACTIVE requests only (excludes completed and cancelled)\n    // For historical view including cancelled requests, see RequestHistory.vue\n    async loadRequests() {\n      try {\n        const params = {\n          page: this.pagination.currentPage,\n          limit: this.pagination.itemsPerPage,\n          ...this.filters\n        };\n\n        const response = await adminDocumentService.getAllRequests(params);\n        if (response.success) {\n          // Filter out completed and cancelled requests from the response\n          // AdminRequests is for active document management only\n          const filteredRequests = (response.data.requests || []).filter(request => {\n            const statusName = request.status_name.toLowerCase();\n            return statusName !== 'completed' && statusName !== 'cancelled';\n          });\n\n          this.requests = filteredRequests;\n          this.pagination = {\n            currentPage: response.data.pagination?.current_page || 1,\n            totalPages: response.data.pagination?.total_pages || 1,\n            totalItems: filteredRequests.length, // Update to reflect filtered count\n            itemsPerPage: response.data.pagination?.per_page || 10\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load requests';\n        this.requests = [];\n      }\n    },\n\n    // Filter and search methods\n    applyFilters() {\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n\n    // Debounced search method\n    debouncedSearch() {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = setTimeout(() => {\n        this.applyFilters();\n      }, 300);\n    },\n\n    clearFilters() {\n      this.filters = {\n        status: '',\n        document_type: '',\n        priority: '',\n        search: '',\n        date_from: '',\n        date_to: ''\n      };\n      this.applyFilters();\n    },\n\n    // Pagination methods\n    changePage(page) {\n      if (page >= 1 && page <= this.pagination.totalPages) {\n        this.pagination.currentPage = page;\n        this.loadRequests();\n      }\n    },\n\n    changeItemsPerPage(itemsPerPage) {\n      this.pagination.itemsPerPage = itemsPerPage;\n      this.pagination.currentPage = 1;\n      this.loadRequests();\n    },\n\n    goBack() {\n      this.$router.push('/admin/dashboard');\n    },\n\n    // Request selection methods\n    toggleRequestSelection(requestId) {\n      const index = this.selectedRequests.indexOf(requestId);\n      if (index > -1) {\n        this.selectedRequests.splice(index, 1);\n      } else {\n        this.selectedRequests.push(requestId);\n      }\n    },\n\n    selectAllRequests() {\n      if (this.selectedRequests.length === this.requests.length) {\n        this.selectedRequests = [];\n      } else {\n        this.selectedRequests = this.requests.map(r => r.id);\n      }\n    },\n\n    // Request details\n    async viewRequestDetails(requestId) {\n      console.log('🚀 View details clicked for request ID:', requestId);\n\n      try {\n        const response = await adminDocumentService.getRequestDetails(requestId);\n        console.log('📋 API Response received:', response);\n\n        if (response.success) {\n          console.log('✅ Response successful, data:', response.data);\n\n          // Debug client profile fields\n          const data = response.data;\n          console.log('🎯 COMPLETE RESPONSE DATA:', data);\n          console.log('🎯 ALL DATA KEYS:', Object.keys(data));\n          console.log('🎯 CLIENT PROFILE FIELDS DEBUG:');\n          console.log('   Birth Date:', data.client_birth_date);\n          console.log('   Gender:', data.client_gender);\n          console.log('   Civil Status ID:', data.client_civil_status_id);\n          console.log('   Nationality:', data.client_nationality);\n          console.log('   Years of Residency:', data.client_years_of_residency);\n          console.log('   Months of Residency:', data.client_months_of_residency);\n\n          // Check if fields exist with different names\n          console.log('🔍 SEARCHING FOR SIMILAR FIELDS:');\n          Object.keys(data).forEach(key => {\n            if (key.includes('birth') || key.includes('gender') || key.includes('civil') ||\n                key.includes('nationality') || key.includes('residency')) {\n              console.log(`   Found: ${key} = ${data[key]}`);\n            }\n          });\n\n          this.currentRequest = response.data;\n          this.showRequestDetails = true;\n          // Reset forms\n          this.statusUpdateForm = { status_id: '' };\n          this.rejectForm = { reason: '' };\n          this.showRejectForm = false;\n          console.log('📋 Request details loaded:', response.data);\n\n          // Load document URLs for images\n          if (response.data.uploaded_documents && response.data.uploaded_documents.length > 0) {\n            this.loadDocumentUrls(response.data.uploaded_documents);\n          }\n\n          this.showToast('Success', `Request details loaded for ${response.data.request_number}`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to load request details:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load request details';\n        this.showToast('Error', 'Failed to load request details', 'error');\n      }\n    },\n\n    // Refresh request details\n    async refreshRequestDetails() {\n      if (this.currentRequest) {\n        await this.viewRequestDetails(this.currentRequest.id);\n      }\n    },\n\n    // Update request status from modal\n    async updateRequestStatusFromModal() {\n      console.log('🔄 Updating request status...');\n      console.log('📋 Status form data:', this.statusUpdateForm);\n      console.log('📋 Current request:', this.currentRequest);\n\n      if (!this.statusUpdateForm.status_id || !this.currentRequest) {\n        console.error('❌ Missing required data for status update');\n        this.showToast('Error', 'Please select a status to update', 'error');\n        return;\n      }\n\n      // Enhanced debugging for status validation\n      const currentStatus = this.currentRequest.status_name;\n      const newStatusId = this.statusUpdateForm.status_id;\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n\n      console.log('🔍 Status validation debug:');\n      console.log('   Current status:', currentStatus);\n      console.log('   New status ID:', newStatusId, '(type:', typeof newStatusId, ')');\n      console.log('   New status object:', newStatus);\n      console.log('   Available transitions:', this.getAllowedStatusTransitions(currentStatus.toLowerCase()));\n      console.log('   Available status options:', this.getAvailableStatusOptions());\n      console.log('   All status options:', this.statusOptions);\n\n      if (!this.isValidStatusChange(currentStatus, newStatusId)) {\n        console.error('❌ Invalid status change attempted');\n        console.error('   From:', currentStatus, 'To:', newStatus?.status_name);\n        this.showToast('Error', 'This status change is not allowed', 'error');\n        return;\n      }\n\n      try {\n        const updateData = {\n          status_id: parseInt(this.statusUpdateForm.status_id)\n        };\n\n        console.log('📤 Sending status update:', updateData);\n\n        const response = await adminDocumentService.updateRequestStatus(\n          this.currentRequest.id,\n          updateData\n        );\n\n        console.log('📥 Status update response:', response);\n\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n          // Reset form\n          this.statusUpdateForm = { status_id: '' };\n\n          // Show success message\n          this.errorMessage = '';\n          this.showToast('Success', 'Request status updated successfully', 'success');\n        } else {\n          console.error('❌ Status update failed:', response.message);\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error updating request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n\n\n\n    // Reject request from modal\n    async rejectRequestFromModal() {\n      if (!this.currentRequest || !this.rejectForm.reason.trim()) return;\n\n      try {\n        const response = await adminDocumentService.rejectRequest(\n          this.currentRequest.id,\n          { reason: this.rejectForm.reason }\n        );\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n          this.rejectForm = { reason: '' };\n          this.showRejectForm = false;\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n\n    // Status update methods\n    async updateRequestStatus(requestId, statusId, reason = '') {\n      try {\n        const response = await adminDocumentService.updateRequestStatus(requestId, {\n          status_id: statusId,\n          reason: reason\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to update request status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to update request status';\n      }\n    },\n\n    async approveRequest(requestId, reason = '') {\n      try {\n        const response = await adminDocumentService.approveRequest(requestId, { reason });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to approve request';\n      }\n    },\n\n    async rejectRequest(requestId, reason) {\n      if (!reason || reason.trim() === '') {\n        this.errorMessage = 'Rejection reason is required';\n        return;\n      }\n\n      try {\n        const response = await adminDocumentService.rejectRequest(requestId, { reason });\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to reject request';\n      }\n    },\n\n    // Quick approval/rejection methods\n    canApprove(request) {\n      // Can approve if 'approved' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('approved');\n    },\n\n    canReject(request) {\n      // Can reject if 'rejected' is in allowed transitions\n      const allowedTransitions = this.getAllowedStatusTransitions(request.status_name.toLowerCase());\n      return allowedTransitions.includes('rejected');\n    },\n\n    // Helper method to get status explanation for disabled buttons\n    getStatusExplanation(request, action) {\n      const status = request.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(status);\n\n      if (action === 'approve') {\n        if (allowedTransitions.includes('approved')) {\n          return 'Click to approve this request';\n        } else if (status === 'approved') {\n          return 'This request has already been approved';\n        } else if (status === 'rejected') {\n          return 'Rejected requests can be resubmitted, not directly approved';\n        } else if (status === 'completed') {\n          return 'This request has already been completed';\n        } else {\n          return `Cannot approve from ${this.formatStatus(status)} status`;\n        }\n      } else if (action === 'reject') {\n        if (allowedTransitions.includes('rejected')) {\n          return 'Click to reject this request';\n        } else if (status === 'rejected') {\n          return 'This request has already been rejected';\n        } else if (status === 'completed') {\n          return 'Cannot reject a completed request';\n        } else {\n          return `Cannot reject from ${this.formatStatus(status)} status`;\n        }\n      }\n\n      return `Request status: ${this.formatStatus(status)}`;\n    },\n\n    // Check if status change is valid\n    isValidStatusChange(currentStatus, newStatusId) {\n      if (!currentStatus || !newStatusId) return false;\n\n      // Find the new status name\n      const newStatus = this.statusOptions.find(s => s.id == newStatusId);\n      if (!newStatus) return false;\n\n      const currentStatusName = currentStatus.toLowerCase();\n      const newStatusName = newStatus.status_name.toLowerCase();\n\n      // Same status - no change needed\n      if (currentStatusName === newStatusName) {\n        return false;\n      }\n\n      // Check if transition is allowed based on workflow rules\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatusName);\n\n      return allowedTransitions.includes(newStatusName);\n    },\n\n    // Check if request needs payment verification\n    needsPaymentVerification(request) {\n      return request.status_name === 'payment_pending' &&\n             request.payment_method &&\n             !request.payment_method.includes('PayMongo') &&\n             request.payment_status !== 'paid';\n    },\n\n    // Check if pickup can be scheduled\n    canSchedulePickup(request) {\n      return request.status_name === 'ready_for_pickup';\n    },\n\n    // Get payment status color\n    getPaymentStatusColor(status) {\n      const colors = {\n        'pending': 'bg-warning',\n        'processing': 'bg-info',\n        'paid': 'bg-success',\n        'failed': 'bg-danger',\n        'refunded': 'bg-secondary',\n        'cancelled': 'bg-dark'\n      };\n      return colors[status] || 'bg-secondary';\n    },\n\n    // Format payment status\n    formatPaymentStatus(status) {\n      const statuses = {\n        'pending': 'Pending',\n        'processing': 'Processing',\n        'paid': 'Paid',\n        'failed': 'Failed',\n        'refunded': 'Refunded',\n        'cancelled': 'Cancelled'\n      };\n      return statuses[status] || 'Unknown';\n    },\n\n    // Get tomorrow's date for pickup scheduling\n    getTomorrowDate() {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return tomorrow.toISOString().split('T')[0];\n    },\n\n    // Validate pickup form\n    isPickupFormValid() {\n      return this.pickupScheduleForm.scheduled_date &&\n             this.pickupScheduleForm.scheduled_time_start &&\n             this.pickupScheduleForm.scheduled_time_end &&\n             this.pickupScheduleForm.scheduled_time_start < this.pickupScheduleForm.scheduled_time_end;\n    },\n\n    // Get filtered status options based on current status\n    getAvailableStatusOptions() {\n      if (!this.currentRequest || !this.statusOptions) {\n        console.log('🔍 getAvailableStatusOptions: Missing currentRequest or statusOptions');\n        return [];\n      }\n\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n\n      // Only these states are truly final (cannot be changed)\n      const finalStates = ['completed', 'cancelled'];\n\n      // If current status is final, no changes allowed\n      if (finalStates.includes(currentStatus)) {\n        console.log('🔍 getAvailableStatusOptions: Current status is final:', currentStatus);\n        return [];\n      }\n\n      // Define allowed transitions based on current status\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Check if current request uses cash payment\n      const isCashPayment = this.currentRequest &&\n        (this.currentRequest.payment_method === 'Cash Payment' ||\n         this.currentRequest.payment_method === 'Cash' ||\n         this.currentRequest.payment_method_code === 'CASH' ||\n         this.currentRequest.payment_method_id === 1 || // Assuming cash is ID 1\n         this.currentRequest.is_online_payment === false ||\n         this.currentRequest.is_online_payment === 0 ||\n         this.currentRequest.is_online === false ||\n         this.currentRequest.is_online === 0);\n\n      // Filter out \"payment_confirmed\" status for cash payments\n      let filteredTransitions = allowedTransitions;\n      if (isCashPayment) {\n        filteredTransitions = allowedTransitions.filter(transition =>\n          transition !== 'payment_confirmed'\n        );\n        console.log('🔍 Filtered out payment_confirmed for cash payment:', {\n          originalTransitions: allowedTransitions,\n          filteredTransitions: filteredTransitions\n        });\n      }\n\n      // Return only allowed status options\n      const availableOptions = this.statusOptions.filter(status =>\n        filteredTransitions.includes(status.status_name.toLowerCase())\n      );\n\n      console.log('🔍 getAvailableStatusOptions result:', {\n        currentStatus: currentStatus,\n        isCashPayment: isCashPayment,\n        allowedTransitions: allowedTransitions,\n        filteredTransitions: filteredTransitions,\n        availableOptions: availableOptions.map(opt => ({ id: opt.id, name: opt.status_name })),\n        totalStatusOptions: this.statusOptions.length\n      });\n\n      return availableOptions;\n    },\n\n    // Define allowed status transitions based on government workflow best practices\n    // This must match the backend validateStatusTransition logic exactly\n    getAllowedStatusTransitions(currentStatus) {\n      // Check if current request uses cash payment - enhanced detection\n      const isCashPayment = this.currentRequest &&\n        (this.currentRequest.payment_method === 'Cash Payment' ||\n         this.currentRequest.payment_method === 'Cash' ||\n         this.currentRequest.payment_method_code === 'CASH' ||\n         this.currentRequest.payment_method_id === 1 || // Assuming cash is ID 1\n         this.currentRequest.is_online_payment === false ||\n         this.currentRequest.is_online_payment === 0 ||\n         this.currentRequest.is_online === false ||\n         this.currentRequest.is_online === 0);\n\n      console.log('🔍 Cash payment detection for status transitions:', {\n        currentStatus: currentStatus,\n        payment_method: this.currentRequest?.payment_method,\n        payment_method_code: this.currentRequest?.payment_method_code,\n        payment_method_id: this.currentRequest?.payment_method_id,\n        is_online_payment: this.currentRequest?.is_online_payment,\n        isCashPayment: isCashPayment\n      });\n\n      const transitions = {\n        // Simplified workflow matching actual database statuses\n        'pending': ['approved', 'cancelled', 'rejected'],\n        'under_review': ['approved', 'rejected', 'cancelled'],\n        'approved': isCashPayment\n          ? ['payment_confirmed', 'processing', 'cancelled'] // Cash payments can go directly to processing\n          : ['payment_confirmed', 'cancelled'], // Online payments go through PayMongo webhook to payment_confirmed\n        'payment_confirmed': ['processing'], // Automatic transition after payment\n        'processing': ['ready_for_pickup'], // Processing can only complete successfully\n        'ready_for_pickup': ['completed', 'cancelled'], // Allow completion for both cash and online payments\n        'rejected': ['pending', 'under_review'], // Allow resubmission after corrections\n        // Final states - no transitions allowed\n        'completed': [],\n        'cancelled': []\n      };\n\n      const allowedTransitions = transitions[currentStatus] || [];\n      console.log('🔍 Allowed transitions for', currentStatus, ':', allowedTransitions);\n\n      return allowedTransitions;\n    },\n\n    // Get title for update button based on validation state\n    getUpdateButtonTitle() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Please select a new status';\n      }\n      if (!this.isValidStatusChange(this.currentRequest.status_name, this.statusUpdateForm.status_id)) {\n        return 'Invalid status change';\n      }\n      return 'Update request status';\n    },\n\n    // Get dynamic button text based on selected status\n    getActionButtonText() {\n      if (!this.statusUpdateForm.status_id) {\n        return 'Update Status';\n      }\n\n      const selectedStatus = this.statusOptions.find(s => s.id === parseInt(this.statusUpdateForm.status_id));\n      if (!selectedStatus) {\n        return 'Update Status';\n      }\n\n      const statusName = selectedStatus.status_name.toLowerCase();\n\n      // Special button text for common actions\n      switch (statusName) {\n        case 'approved':\n          return 'Approve Request';\n        case 'rejected':\n          return 'Reject Request';\n        case 'under_review':\n          return 'Move to Review';\n        case 'processing':\n          return 'Start Processing';\n        case 'ready_for_pickup':\n          return 'Mark Ready for Pickup';\n        case 'completed':\n          return 'Complete Request';\n        default:\n          return `Update to ${selectedStatus.status_name}`;\n      }\n    },\n\n    // Get status description for current status display\n    getStatusDescription(statusName) {\n      const descriptions = {\n        'pending': 'Waiting for admin review',\n        'under_review': 'Being reviewed by admin',\n        'approved': 'Approved, waiting for payment',\n        'payment_confirmed': 'Payment received, ready for processing',\n        'processing': 'Document is being prepared',\n        'ready_for_pickup': 'Document ready for collection',\n        'completed': 'Request completed successfully',\n        'rejected': 'Request rejected, can be resubmitted',\n        'cancelled': 'Request cancelled permanently'\n      };\n      return descriptions[statusName.toLowerCase()] || 'Status information';\n    },\n\n    // Get next available status actions for automatic progression\n    getNextStatusActions() {\n      if (!this.currentRequest) return [];\n\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n      const allowedTransitions = this.getAllowedStatusTransitions(currentStatus);\n\n      // Filter out 'cancelled' and 'rejected' from regular progression (handled separately)\n      // 'cancelled' is handled by the separate Cancel Request button\n      // 'rejected' is redundant since we have Cancel Request which serves the same purpose\n      const progressionTransitions = allowedTransitions.filter(status =>\n        status !== 'cancelled' && status !== 'rejected'\n      );\n\n      return progressionTransitions.map(statusName => {\n        const statusOption = this.statusOptions.find(s => s.status_name.toLowerCase() === statusName);\n        if (!statusOption) return null;\n\n        return {\n          status_id: statusOption.id,\n          status_name: statusName,\n          label: this.getProgressionButtonLabel(statusName),\n          icon: this.getProgressionButtonIcon(statusName),\n          buttonClass: this.getProgressionButtonClass(statusName),\n          description: this.getProgressionButtonDescription(statusName)\n        };\n      }).filter(action => action !== null);\n    },\n\n    // Get button label for status progression\n    getProgressionButtonLabel(statusName) {\n      const labels = {\n        'approved': 'Approve Request',\n        'rejected': 'Reject Request',\n        'payment_confirmed': 'Confirm Payment',\n        'processing': 'Start Processing',\n        'ready_for_pickup': 'Mark Ready',\n        'completed': 'Complete Request',\n        'under_review': 'Review Request',\n        'pending': 'Mark Pending'\n      };\n      return labels[statusName] || `Change to ${this.formatStatus(statusName)}`;\n    },\n\n    // Get button icon for status progression\n    getProgressionButtonIcon(statusName) {\n      const icons = {\n        'approved': 'fas fa-check',\n        'rejected': 'fas fa-times',\n        'payment_confirmed': 'fas fa-credit-card',\n        'processing': 'fas fa-cogs',\n        'ready_for_pickup': 'fas fa-hand-paper',\n        'completed': 'fas fa-check-circle',\n        'under_review': 'fas fa-search',\n        'pending': 'fas fa-clock'\n      };\n      return icons[statusName] || 'fas fa-arrow-right';\n    },\n\n    // Get button CSS class for status progression\n    getProgressionButtonClass(statusName) {\n      const classes = {\n        'approved': 'btn-success',\n        'rejected': 'btn-danger',\n        'payment_confirmed': 'btn-info',\n        'processing': 'btn-warning',\n        'ready_for_pickup': 'btn-primary',\n        'completed': 'btn-success',\n        'under_review': 'btn-secondary',\n        'pending': 'btn-outline-secondary'\n      };\n      return classes[statusName] || 'btn-outline-primary';\n    },\n\n    // Get button description for status progression\n    getProgressionButtonDescription(statusName) {\n      const descriptions = {\n        'approved': 'Approve this request and proceed to payment',\n        'rejected': 'Reject this request with reason',\n        'payment_confirmed': 'Confirm payment has been received',\n        'processing': 'Start processing the document',\n        'ready_for_pickup': 'Mark document as ready for collection',\n        'completed': 'Mark request as completed',\n        'under_review': 'Move request to review status',\n        'pending': 'Move request back to pending status'\n      };\n      return descriptions[statusName] || `Change status to ${this.formatStatus(statusName)}`;\n    },\n\n    // Check if request can be cancelled\n    canCancelRequest() {\n      if (!this.currentRequest) return false;\n\n      const currentStatus = this.currentRequest.status_name.toLowerCase();\n      const finalStates = ['completed', 'cancelled'];\n\n      // Can cancel if not in final states\n      return !finalStates.includes(currentStatus);\n    },\n\n    // Progress to next status automatically\n    async progressToNextStatus(statusId) {\n      if (!statusId || !this.currentRequest) {\n        this.showToast('Error', 'Invalid status selection', 'error');\n        return;\n      }\n\n      try {\n        const updateData = {\n          status_id: parseInt(statusId)\n        };\n\n        console.log('📤 Progressing to next status:', updateData);\n\n        const response = await adminDocumentService.updateRequestStatus(\n          this.currentRequest.id,\n          updateData\n        );\n\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n\n          // Show success message\n          const newStatus = this.statusOptions.find(s => s.id === parseInt(statusId));\n          this.showToast('Success', `Request status updated to ${this.formatStatus(newStatus.status_name)}`, 'success');\n        } else {\n          this.showToast('Error', response.message || 'Failed to update request status', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error progressing status:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to update request status', 'error');\n      }\n    },\n\n    // Cancel request permanently\n    async cancelRequest() {\n      if (!this.currentRequest) return;\n\n      // Find cancelled status\n      const cancelledStatus = this.statusOptions.find(s => s.status_name.toLowerCase() === 'cancelled');\n      if (!cancelledStatus) {\n        this.showToast('Error', 'Cancelled status not found', 'error');\n        return;\n      }\n\n      // Confirm cancellation\n      if (!confirm(`Are you sure you want to cancel request ${this.currentRequest.request_number}? This action cannot be undone.`)) {\n        return;\n      }\n\n      try {\n        const updateData = {\n          status_id: cancelledStatus.id\n        };\n\n        console.log('📤 Cancelling request:', updateData);\n\n        const response = await adminDocumentService.updateRequestStatus(\n          this.currentRequest.id,\n          updateData\n        );\n\n        if (response.success) {\n          // Refresh the request details\n          await this.refreshRequestDetails();\n          // Refresh the main requests list\n          await this.loadRequests();\n\n          this.showToast('Success', 'Request has been cancelled', 'success');\n        } else {\n          this.showToast('Error', response.message || 'Failed to cancel request', 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error cancelling request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to cancel request', 'error');\n      }\n    },\n\n    async quickApprove(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n\n      try {\n        this.loading = true;\n        const response = await adminDocumentService.approveRequest(request.id, {\n          reason: 'Quick approval from admin interface'\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${request.request_number} approved successfully`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.showToast('Error', errorData.message || 'Failed to approve request', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    showQuickRejectModal(request) {\n      console.log('🚀 Quick reject clicked for request:', request);\n\n      this.selectedRequestForReject = request;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickReject = true;\n    },\n\n    closeQuickRejectModal() {\n      this.showQuickReject = false;\n      this.selectedRequestForReject = null;\n      this.quickRejectForm = {\n        loading: false,\n        error: ''\n      };\n    },\n\n    async confirmQuickReject() {\n      this.quickRejectForm.loading = true;\n      this.quickRejectForm.error = '';\n\n      try {\n        const response = await adminDocumentService.rejectRequest(\n          this.selectedRequestForReject.id,\n          { reason: 'Request rejected by admin' }\n        );\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForReject.request_number} rejected successfully`, 'success');\n          this.closeQuickRejectModal();\n        }\n      } catch (error) {\n        console.error('Failed to reject request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickRejectForm.error = errorData.message || 'Failed to reject request';\n      } finally {\n        this.quickRejectForm.loading = false;\n      }\n    },\n\n    showQuickApproveModal(request) {\n      console.log('🚀 Quick approve clicked for request:', request);\n\n      this.selectedRequestForApprove = request;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n      this.showQuickApprove = true;\n    },\n\n    closeQuickApproveModal() {\n      this.showQuickApprove = false;\n      this.selectedRequestForApprove = null;\n      this.quickApproveForm = {\n        loading: false,\n        error: ''\n      };\n    },\n\n    async confirmQuickApprove() {\n      this.quickApproveForm.loading = true;\n      this.quickApproveForm.error = '';\n\n      try {\n        const response = await adminDocumentService.approveRequest(\n          this.selectedRequestForApprove.id,\n          { reason: 'Quick approval from admin interface' }\n        );\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.showToast('Success', `Request ${this.selectedRequestForApprove.request_number} approved successfully`, 'success');\n          this.closeQuickApproveModal();\n        }\n      } catch (error) {\n        console.error('Failed to approve request:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.quickApproveForm.error = errorData.message || 'Failed to approve request';\n      } finally {\n        this.quickApproveForm.loading = false;\n      }\n    },\n\n    // Bulk operations\n    async performBulkAction() {\n      if (this.selectedRequests.length === 0) {\n        this.errorMessage = 'Please select at least one request';\n        return;\n      }\n\n      if (!this.bulkAction) {\n        this.errorMessage = 'Please select a bulk action';\n        return;\n      }\n\n      try {\n        const response = await adminDocumentService.bulkUpdateRequests({\n          request_ids: this.selectedRequests,\n          status_id: parseInt(this.bulkAction)\n        });\n\n        if (response.success) {\n          await this.loadRequests();\n          await this.loadDashboardStats();\n          this.selectedRequests = [];\n          this.bulkAction = '';\n          this.showBulkActions = false;\n          this.errorMessage = '';\n        }\n      } catch (error) {\n        console.error('Failed to perform bulk action:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to perform bulk action';\n      }\n    },\n\n    // Export functionality\n    async exportRequests() {\n      try {\n        const csvData = await adminDocumentService.exportRequests(this.filters);\n        const filename = `document_requests_${new Date().toISOString().split('T')[0]}.csv`;\n        adminDocumentService.downloadCSV(csvData, filename);\n      } catch (error) {\n        console.error('Failed to export requests:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to export requests';\n      }\n    },\n\n    // Comprehensive Excel export functionality\n    async exportRequestsToExcel() {\n      try {\n        this.showToast('Info', 'Preparing comprehensive Excel export...', 'info');\n\n        // Get all requests with full details (no pagination)\n        const allRequestsResponse = await adminDocumentService.getAllRequests({\n          ...this.filters,\n          page: 1,\n          limit: 10000 // Get all requests\n        });\n\n        if (!allRequestsResponse.success || !allRequestsResponse.data.requests) {\n          throw new Error('Failed to fetch requests data');\n        }\n\n        const requests = allRequestsResponse.data.requests;\n\n        if (requests.length === 0) {\n          this.showToast('Warning', 'No requests found to export', 'warning');\n          return;\n        }\n\n        // For each request, get detailed information\n        const detailedRequests = [];\n        for (const request of requests) {\n          try {\n            const detailResponse = await adminDocumentService.getRequestDetails(request.id);\n            if (detailResponse.success) {\n              detailedRequests.push(detailResponse.data);\n            } else {\n              // If detailed fetch fails, use basic request data\n              detailedRequests.push(request);\n            }\n          } catch (error) {\n            console.warn(`Failed to get details for request ${request.id}:`, error);\n            detailedRequests.push(request);\n          }\n        }\n\n        // Create comprehensive Excel data\n        const excelData = this.prepareExcelData(detailedRequests);\n\n        // Check if xlsx library is available\n        if (typeof XLSX === 'undefined') {\n          // Fallback to CSV if xlsx is not available\n          this.showToast('Warning', 'Excel library not available. Downloading as CSV instead.', 'warning');\n          this.downloadAsCSV(excelData.mainSheet, 'comprehensive_requests_export');\n          return;\n        }\n\n        // Create Excel workbook with multiple sheets\n        this.createExcelWorkbook(excelData);\n\n      } catch (error) {\n        console.error('Failed to export requests to Excel:', error);\n        this.showToast('Error', 'Failed to export requests to Excel', 'error');\n      }\n    },\n\n    // Prepare comprehensive Excel data with vertical key-value layout\n    prepareExcelData(requests) {\n      const mainSheet = [];\n      const cedulaSheet = [];\n      const barangaySheet = [];\n\n      // Process each request with vertical key-value format\n      requests.forEach((request, index) => {\n        // Add request separator and header\n        if (index > 0) {\n          mainSheet.push(['']); // Empty row separator\n        }\n\n        mainSheet.push([`REQUEST #${index + 1}: ${request.request_number || 'N/A'}`]);\n        mainSheet.push(['='.repeat(50)]);\n        mainSheet.push(['']);\n\n        // Request Information Block\n        mainSheet.push(['REQUEST INFORMATION']);\n        mainSheet.push(['Request Number:', request.request_number || '']);\n        mainSheet.push(['Document Type:', request.document_type || '']);\n        mainSheet.push(['Status:', this.formatStatus(request.status_name) || '']);\n        mainSheet.push(['Submitted Date:', this.formatDate(request.requested_at) || '']);\n        mainSheet.push(['Last Updated:', this.formatDate(request.updated_at) || '']);\n        mainSheet.push(['Purpose Category:', request.purpose_category || '']);\n        mainSheet.push(['Purpose Details:', request.purpose_details || '']);\n        mainSheet.push(['']);\n\n        // Client Information Block\n        mainSheet.push(['CLIENT INFORMATION']);\n        mainSheet.push(['Full Name:', this.getClientFullName(request) || '']);\n        mainSheet.push(['Email Address:', request.client_email || '']);\n        mainSheet.push(['Phone Number:', request.client_phone || '']);\n        mainSheet.push(['Date of Birth:', this.formatDate(request.client_birth_date) || '']);\n        mainSheet.push(['Gender:', this.formatGender(request.client_gender) || '']);\n        mainSheet.push(['Civil Status:', this.getCivilStatusName(request.client_civil_status_id) || '']);\n        mainSheet.push(['Nationality:', request.client_nationality || '']);\n        mainSheet.push(['Complete Address:', this.getClientFullAddress(request) || '']);\n        mainSheet.push(['Years of Residency:', this.getResidencyDisplay(request) || '']);\n        mainSheet.push(['']);\n\n        // Third Party Request Information (if applicable)\n        if (request.is_third_party_request) {\n          mainSheet.push(['THIRD PARTY REQUEST']);\n          mainSheet.push(['Is Third Party Request:', 'Yes']);\n\n          if (request.beneficiary) {\n            mainSheet.push(['']);\n            mainSheet.push(['BENEFICIARY INFORMATION']);\n            mainSheet.push(['Full Name:', request.beneficiary.full_name || '']);\n            mainSheet.push(['Email Address:', request.beneficiary.email || '']);\n            mainSheet.push(['Phone Number:', request.beneficiary.phone_number || '']);\n            mainSheet.push(['Date of Birth:', this.formatDate(request.beneficiary.birth_date) || '']);\n            mainSheet.push(['Gender:', this.formatGender(request.beneficiary.gender) || '']);\n            mainSheet.push(['Civil Status:', this.getCivilStatusName(request.beneficiary.civil_status_id) || '']);\n            mainSheet.push(['Nationality:', request.beneficiary.nationality || '']);\n            mainSheet.push(['Address:', request.beneficiary.address || '']);\n            mainSheet.push(['Relationship to Requestor:', this.formatRelationship(request.beneficiary.relationship_to_requestor) || '']);\n          }\n          mainSheet.push(['']);\n        }\n\n        // Authorized Pickup Information (if applicable)\n        if (request.authorized_pickup) {\n          mainSheet.push(['AUTHORIZED PICKUP PERSON']);\n          mainSheet.push(['Full Name:', request.authorized_pickup.full_name || '']);\n          mainSheet.push(['Phone Number:', request.authorized_pickup.phone_number || '']);\n          mainSheet.push(['Relationship:', this.formatRelationship(request.authorized_pickup.relationship_to_beneficiary) || '']);\n          mainSheet.push(['']);\n        }\n\n        // Payment Information\n        mainSheet.push(['PAYMENT INFORMATION']);\n        mainSheet.push(['Payment Method:', request.payment_method || '']);\n        mainSheet.push(['Payment Status:', this.formatPaymentStatus(request.payment_status) || '']);\n        mainSheet.push(['Total Fee:', this.formatCurrency(request.total_fee || 0)]);\n        mainSheet.push(['']);\n\n        // Admin Notes (if any)\n        if (request.admin_notes) {\n          mainSheet.push(['ADMIN NOTES']);\n          mainSheet.push(['Notes:', request.admin_notes]);\n          mainSheet.push(['']);\n        }\n\n        // Document-Specific Information for Cedula\n        if (request.document_type === 'Cedula' && request.specific_details) {\n          // Add to Cedula sheet with vertical format\n          if (cedulaSheet.length === 0) {\n            cedulaSheet.push(['CEDULA DOCUMENT DETAILS']);\n            cedulaSheet.push(['='.repeat(50)]);\n            cedulaSheet.push(['']);\n          } else {\n            cedulaSheet.push(['']); // Separator between requests\n          }\n\n          cedulaSheet.push([`REQUEST: ${request.request_number || 'N/A'}`]);\n          cedulaSheet.push(['Client Name:', this.getClientFullName(request) || '']);\n          cedulaSheet.push(['']);\n\n          cedulaSheet.push(['INCOME INFORMATION']);\n          cedulaSheet.push(['Annual Income:', this.formatCurrency(request.specific_details.annual_income || 0)]);\n          cedulaSheet.push(['Monthly Income:', this.formatCurrency(request.specific_details.monthly_income || 0)]);\n          cedulaSheet.push(['Occupation:', request.specific_details.occupation || '']);\n          cedulaSheet.push(['Employer Name:', request.specific_details.employer_name || '']);\n          cedulaSheet.push(['']);\n\n          if (request.specific_details.has_real_property || request.specific_details.property_assessed_value > 0) {\n            cedulaSheet.push(['REAL PROPERTY INFORMATION']);\n            cedulaSheet.push(['Has Real Property:', request.specific_details.has_real_property ? 'Yes' : 'No']);\n            cedulaSheet.push(['Property Assessed Value:', this.formatCurrency(request.specific_details.property_assessed_value || 0)]);\n            cedulaSheet.push(['Property Location:', request.specific_details.property_location || '']);\n            cedulaSheet.push(['']);\n          }\n\n          if (request.specific_details.has_personal_property || request.specific_details.personal_property_value > 0) {\n            cedulaSheet.push(['PERSONAL PROPERTY INFORMATION']);\n            cedulaSheet.push(['Has Personal Property:', request.specific_details.has_personal_property ? 'Yes' : 'No']);\n            cedulaSheet.push(['Personal Property Value:', this.formatCurrency(request.specific_details.personal_property_value || 0)]);\n            cedulaSheet.push(['']);\n          }\n\n          if (request.specific_details.business_name || request.specific_details.business_gross_receipts > 0) {\n            cedulaSheet.push(['BUSINESS INFORMATION']);\n            cedulaSheet.push(['Business Name:', request.specific_details.business_name || '']);\n            cedulaSheet.push(['Business Type:', request.specific_details.business_type || '']);\n            cedulaSheet.push(['Business Address:', request.specific_details.business_address || '']);\n            cedulaSheet.push(['Annual Gross Receipts:', this.formatCurrency(request.specific_details.business_gross_receipts || 0)]);\n            cedulaSheet.push(['']);\n          }\n\n          cedulaSheet.push(['TAX COMPUTATION']);\n          cedulaSheet.push(['Computed Tax:', this.formatCurrency(request.specific_details.computed_tax || 0)]);\n          cedulaSheet.push(['Total Document Fee:', this.formatCurrency(request.total_document_fee || 0)]);\n          cedulaSheet.push(['']);\n        }\n\n        // Document-Specific Information for Barangay Clearance\n        if (request.document_type === 'Barangay Clearance' && request.specific_details) {\n          // Add to Barangay sheet with vertical format\n          if (barangaySheet.length === 0) {\n            barangaySheet.push(['BARANGAY CLEARANCE DOCUMENT DETAILS']);\n            barangaySheet.push(['='.repeat(50)]);\n            barangaySheet.push(['']);\n          } else {\n            barangaySheet.push(['']); // Separator between requests\n          }\n\n          barangaySheet.push([`REQUEST: ${request.request_number || 'N/A'}`]);\n          barangaySheet.push(['Client Name:', this.getClientFullName(request) || '']);\n          barangaySheet.push(['']);\n\n          barangaySheet.push(['LEGAL STATUS INFORMATION']);\n          barangaySheet.push(['Has Pending Cases:', request.specific_details.has_pending_cases ? 'Yes' : 'No']);\n          if (request.specific_details.has_pending_cases && request.specific_details.pending_cases_details) {\n            barangaySheet.push(['Pending Cases Details:', request.specific_details.pending_cases_details]);\n          }\n          barangaySheet.push(['']);\n\n          if (request.specific_details.voter_registration_number || request.specific_details.precinct_number) {\n            barangaySheet.push(['VOTER INFORMATION']);\n            barangaySheet.push(['Voter Registration Number:', request.specific_details.voter_registration_number || '']);\n            barangaySheet.push(['Precinct Number:', request.specific_details.precinct_number || '']);\n            barangaySheet.push(['']);\n          }\n\n          if (request.specific_details.emergency_contact_name) {\n            barangaySheet.push(['EMERGENCY CONTACT INFORMATION']);\n            barangaySheet.push(['Contact Name:', request.specific_details.emergency_contact_name || '']);\n            barangaySheet.push(['Contact Phone:', request.specific_details.emergency_contact_phone || '']);\n            barangaySheet.push(['Relationship:', request.specific_details.emergency_contact_relationship || '']);\n            barangaySheet.push(['Address:', request.specific_details.emergency_contact_address || '']);\n            barangaySheet.push(['']);\n          }\n        }\n      });\n\n      return {\n        mainSheet,\n        cedulaSheet,\n        barangaySheet\n      };\n    },\n\n    // Create Excel workbook with multiple sheets\n    createExcelWorkbook(excelData) {\n      try {\n        // Create a new workbook\n        const wb = XLSX.utils.book_new();\n\n        // Add main sheet\n        const mainWs = XLSX.utils.aoa_to_sheet(excelData.mainSheet);\n        XLSX.utils.book_append_sheet(wb, mainWs, 'All Requests');\n\n        // Add Cedula-specific sheet if there's data\n        if (excelData.cedulaSheet.length > 1) {\n          const cedulaWs = XLSX.utils.aoa_to_sheet(excelData.cedulaSheet);\n          XLSX.utils.book_append_sheet(wb, cedulaWs, 'Cedula Details');\n        }\n\n        // Add Barangay Clearance-specific sheet if there's data\n        if (excelData.barangaySheet.length > 1) {\n          const barangayWs = XLSX.utils.aoa_to_sheet(excelData.barangaySheet);\n          XLSX.utils.book_append_sheet(wb, barangayWs, 'Barangay Clearance Details');\n        }\n\n        // Set column widths for better readability\n        this.setExcelColumnWidths(wb);\n\n        // Generate filename\n        const timestamp = new Date().toISOString().split('T')[0];\n        const filename = `comprehensive_requests_export_${timestamp}.xlsx`;\n\n        // Write and download the file\n        XLSX.writeFile(wb, filename);\n\n        this.showToast('Success', 'Excel file downloaded successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to create Excel workbook:', error);\n        // Fallback to CSV\n        this.downloadAsCSV(excelData.mainSheet, 'comprehensive_requests_export');\n      }\n    },\n\n    // Set column widths for Excel sheets (optimized for vertical key-value format)\n    setExcelColumnWidths(workbook) {\n      try {\n        // Set column widths for all sheets with vertical key-value format\n        Object.keys(workbook.Sheets).forEach(sheetName => {\n          const sheet = workbook.Sheets[sheetName];\n          if (sheet) {\n            // For vertical key-value format, we need:\n            // Column A: Labels/Keys (wider)\n            // Column B: Values (wider for content)\n            const colWidths = [\n              { wch: 35 }, // Column A: Labels/Keys\n              { wch: 50 }  // Column B: Values/Content\n            ];\n            sheet['!cols'] = colWidths;\n          }\n        });\n      } catch (error) {\n        console.warn('Failed to set column widths:', error);\n      }\n    },\n\n    // CSV fallback method (optimized for vertical key-value format)\n    downloadAsCSV(sheetData, filename) {\n      try {\n        // Convert vertical key-value format to readable CSV\n        const csvContent = sheetData.map(row => {\n          if (Array.isArray(row)) {\n            return row.map(cell => {\n              // Escape commas and quotes in CSV\n              const cellValue = String(cell || '');\n              if (cellValue.includes(',') || cellValue.includes('\"') || cellValue.includes('\\n')) {\n                return `\"${cellValue.replace(/\"/g, '\"\"')}\"`;\n              }\n              return cellValue;\n            }).join(',');\n          }\n          return String(row || '');\n        }).join('\\n');\n\n        // Create and download CSV file\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n\n        link.setAttribute('href', url);\n        link.setAttribute('download', `${filename}_${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        this.showToast('Success', 'CSV file downloaded successfully!', 'success');\n      } catch (error) {\n        console.error('Failed to download CSV:', error);\n        this.showToast('Error', 'Failed to download CSV file', 'error');\n      }\n    },\n\n    // Export single request to Excel\n    async exportSingleRequestToExcel() {\n      try {\n        if (!this.currentRequest) {\n          this.showToast('Warning', 'No request selected for export', 'warning');\n          return;\n        }\n\n        this.showToast('Info', 'Preparing request export...', 'info');\n\n        // Prepare data for single request\n        const excelData = this.prepareExcelData([this.currentRequest]);\n\n        // Check if xlsx library is available\n        if (typeof XLSX === 'undefined') {\n          // Fallback to CSV if xlsx is not available\n          this.showToast('Warning', 'Excel library not available. Downloading as CSV instead.', 'warning');\n          this.downloadAsCSV(excelData.mainSheet, `request_${this.currentRequest.request_number}_export`);\n          return;\n        }\n\n        // Create Excel workbook\n        const wb = XLSX.utils.book_new();\n\n        // Add main sheet with single request data\n        const mainWs = XLSX.utils.aoa_to_sheet(excelData.mainSheet);\n        XLSX.utils.book_append_sheet(wb, mainWs, 'Request Details');\n\n        // Add document-specific sheet if applicable\n        if (this.currentRequest.document_type === 'Cedula' && excelData.cedulaSheet.length > 1) {\n          const cedulaWs = XLSX.utils.aoa_to_sheet(excelData.cedulaSheet);\n          XLSX.utils.book_append_sheet(wb, cedulaWs, 'Cedula Details');\n        } else if (this.currentRequest.document_type === 'Barangay Clearance' && excelData.barangaySheet.length > 1) {\n          const barangayWs = XLSX.utils.aoa_to_sheet(excelData.barangaySheet);\n          XLSX.utils.book_append_sheet(wb, barangayWs, 'Barangay Clearance Details');\n        }\n\n        // Set column widths\n        this.setExcelColumnWidths(wb);\n\n        // Generate filename with request number\n        const filename = `request_${this.currentRequest.request_number}_export_${new Date().toISOString().split('T')[0]}.xlsx`;\n\n        // Write and download the file\n        XLSX.writeFile(wb, filename);\n\n        this.showToast('Success', 'Request exported to Excel successfully!', 'success');\n\n      } catch (error) {\n        console.error('Failed to export single request to Excel:', error);\n        this.showToast('Error', 'Failed to export request to Excel', 'error');\n      }\n    },\n\n    // Export single request to PDF\n    async exportSingleRequestToPDF() {\n      try {\n        if (!this.currentRequest) {\n          this.showToast('Warning', 'No request selected for export', 'warning');\n          return;\n        }\n\n        this.showToast('Info', 'Generating PDF export...', 'info');\n\n        // Create PDF document\n        const pdf = new jsPDF();\n\n        // Generate PDF content\n        this.generateRequestPDF(pdf, this.currentRequest);\n\n        // Generate filename with request number\n        const filename = `Request_${this.currentRequest.request_number || 'Unknown'}.pdf`;\n\n        // Download PDF\n        pdf.save(filename);\n\n        this.showToast('Success', 'Request exported to PDF successfully!', 'success');\n\n      } catch (error) {\n        console.error('Failed to export single request to PDF:', error);\n        this.showToast('Error', 'Failed to export request to PDF', 'error');\n      }\n    },\n\n    // Generate PDF content for single request\n    generateRequestPDF(pdf, request) {\n      // Document Header\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setTextColor(44, 62, 80);\n      pdf.text('BARANGAY DOCUMENT REQUEST DETAILS', 105, 25, { align: 'center' });\n\n      // Decorative line\n      pdf.setDrawColor(52, 152, 219);\n      pdf.setLineWidth(1);\n      pdf.line(20, 30, 190, 30);\n\n      let yPosition = 45;\n      const lineHeight = 8;\n      const sectionSpacing = 12;\n\n      // Helper function to add section header\n      const addSectionHeader = (title) => {\n        // Check if we need a new page before adding section header\n        checkPageBreak(lineHeight + 10); // Reserve space for header and some content\n\n        pdf.setFontSize(14);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(52, 152, 219);\n        pdf.text(title, 20, yPosition);\n        yPosition += lineHeight + 2;\n      };\n\n      // Helper function to check if we need a new page\n      const checkPageBreak = (requiredSpace = 20) => {\n        if (yPosition + requiredSpace > 270) { // Leave space for footer\n          pdf.addPage();\n          yPosition = 20;\n        }\n      };\n\n      // Helper function to add field with text wrapping\n      const addField = (label, value) => {\n        // Check if we need a new page before adding content\n        checkPageBreak(lineHeight * 3); // Reserve space for at least 3 lines\n\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(0, 0, 0);\n        pdf.text(`${label}:`, 20, yPosition);\n\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(60, 60, 60);\n        const displayValue = value || 'N/A';\n\n        // Calculate available width for text (page width - left margin - label width - right margin)\n        const maxWidth = 190 - 80 - 10; // 100 units available for text\n\n        // Split text into lines that fit within the available width\n        const textLines = pdf.splitTextToSize(displayValue, maxWidth);\n\n        // Check if all lines will fit on current page\n        const totalHeight = textLines.length * lineHeight;\n        if (yPosition + totalHeight > 270) {\n          pdf.addPage();\n          yPosition = 20;\n          // Re-add the label on the new page\n          pdf.setFontSize(11);\n          pdf.setFont('helvetica', 'bold');\n          pdf.setTextColor(0, 0, 0);\n          pdf.text(`${label}:`, 20, yPosition);\n        }\n\n        // Add each line\n        textLines.forEach((line, index) => {\n          pdf.text(line, 80, yPosition + (index * lineHeight));\n        });\n\n        // Update yPosition based on number of lines used\n        yPosition += (textLines.length * lineHeight);\n      };\n\n      // Request Information Section\n      addSectionHeader('REQUEST INFORMATION');\n      addField('Request Number', request.request_number);\n      addField('Document Type', request.document_type);\n      addField('Status', this.formatStatus(request.status_name));\n      addField('Submitted Date', this.formatDate(request.requested_at));\n      addField('Last Updated', this.formatDate(request.updated_at));\n      addField('Purpose Category', request.purpose_category);\n      addField('Purpose Details', request.purpose_details);\n      yPosition += sectionSpacing;\n\n      // Client Information Section\n      addSectionHeader('CLIENT INFORMATION');\n      addField('Full Name', this.getClientFullName(request));\n      addField('Email Address', request.client_email);\n      addField('Phone Number', request.client_phone);\n      addField('Date of Birth', this.formatDate(request.client_birth_date));\n      addField('Gender', this.formatGender(request.client_gender));\n      addField('Civil Status', this.getCivilStatusName(request.client_civil_status_id));\n      addField('Nationality', request.client_nationality);\n      addField('Complete Address', this.getClientFullAddress(request));\n      addField('Years of Residency', this.getResidencyDisplay(request));\n      yPosition += sectionSpacing;\n\n      // Third Party Request Information (if applicable)\n      if (request.is_third_party_request && request.beneficiary) {\n        addSectionHeader('THIRD PARTY REQUEST - BENEFICIARY INFORMATION');\n        addField('Full Name', request.beneficiary.full_name);\n        addField('Email Address', request.beneficiary.email);\n        addField('Phone Number', request.beneficiary.phone_number);\n        addField('Date of Birth', this.formatDate(request.beneficiary.birth_date));\n        addField('Gender', this.formatGender(request.beneficiary.gender));\n        addField('Civil Status', this.getCivilStatusName(request.beneficiary.civil_status_id));\n        addField('Nationality', request.beneficiary.nationality);\n        addField('Address', request.beneficiary.address);\n        addField('Relationship to Requestor', this.formatRelationship(request.beneficiary.relationship_to_requestor));\n        yPosition += sectionSpacing;\n      }\n\n      // Authorized Pickup Information (if applicable)\n      if (request.authorized_pickup) {\n        addSectionHeader('AUTHORIZED PICKUP PERSON');\n        addField('Full Name', request.authorized_pickup.full_name);\n        addField('Phone Number', request.authorized_pickup.phone_number);\n        addField('Relationship', this.formatRelationship(request.authorized_pickup.relationship_to_beneficiary));\n        yPosition += sectionSpacing;\n      }\n\n      // Payment Information Section\n      addSectionHeader('PAYMENT INFORMATION');\n      addField('Payment Method', request.payment_method);\n      addField('Payment Status', this.formatPaymentStatus(request.payment_status));\n      addField('Total Fee', this.formatCurrencyForPDF(request.total_fee || request.total_document_fee || 0));\n      yPosition += sectionSpacing;\n\n      // Admin Notes (if any)\n      if (request.admin_notes) {\n        addSectionHeader('ADMIN NOTES');\n        addField('Notes', request.admin_notes);\n        yPosition += sectionSpacing;\n      }\n\n      // Document-Specific Information for Cedula\n      if (request.document_type === 'Cedula' && request.specific_details) {\n        addSectionHeader('CEDULA DOCUMENT DETAILS');\n        addField('Annual Income', this.formatCurrencyForPDF(request.specific_details.annual_income || 0));\n        addField('Occupation', request.specific_details.occupation);\n        addField('Employer/Business', request.specific_details.employer_business);\n        addField('TIN Number', request.specific_details.tin_number);\n        addField('Height (cm)', request.specific_details.height_cm);\n        addField('Weight (kg)', request.specific_details.weight_kg);\n        addField('ICR Number', request.specific_details.icr_number);\n        yPosition += sectionSpacing;\n      }\n\n      // Document-Specific Information for Barangay Clearance\n      if (request.document_type === 'Barangay Clearance' && request.specific_details) {\n        addSectionHeader('BARANGAY CLEARANCE DETAILS');\n        addField('Clearance Type', request.specific_details.clearance_type);\n        addField('Business Name', request.specific_details.business_name);\n        addField('Business Address', request.specific_details.business_address);\n        addField('Business Type', request.specific_details.business_type);\n        yPosition += sectionSpacing;\n      }\n\n      // Add footer\n      this.addPDFFooter(pdf);\n    },\n\n    // Add professional footer to PDF\n    addPDFFooter(pdf) {\n      const pageCount = pdf.internal.getNumberOfPages();\n\n      for (let i = 1; i <= pageCount; i++) {\n        pdf.setPage(i);\n\n        // Footer line\n        pdf.setDrawColor(200, 200, 200);\n        pdf.setLineWidth(0.5);\n        pdf.line(20, 280, 190, 280);\n\n        // Footer text\n        pdf.setFontSize(9);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(100, 100, 100);\n\n        // Left side - Generated info\n        const generatedDate = new Date().toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        pdf.text(`Generated on: ${generatedDate}`, 20, 285);\n\n        // Center - Barangay info\n        pdf.text('Barangay Bula Document Management System', 105, 285, { align: 'center' });\n\n        // Right side - Page number\n        pdf.text(`Page ${i} of ${pageCount}`, 190, 285, { align: 'right' });\n      }\n    },\n\n    // Verify in-person payment\n    async verifyInPersonPayment() {\n      if (!this.paymentVerificationForm.amount_received || !this.currentRequest) {\n        this.showToast('Error', 'Please enter the amount received', 'error');\n        return;\n      }\n\n      const totalFee = parseFloat(this.currentRequest.total_document_fee || this.currentRequest.total_fee);\n      const amountReceived = parseFloat(this.paymentVerificationForm.amount_received);\n\n      if (amountReceived < totalFee) {\n        this.showToast('Error', `Insufficient payment. Required: ${this.formatCurrency(totalFee)}`, 'error');\n        return;\n      }\n\n      this.paymentVerificationForm.loading = true;\n      this.paymentVerificationForm.error = '';\n\n      try {\n        const paymentData = {\n          amount_received: amountReceived,\n          payment_method_id: this.currentRequest.payment_method_id || 1, // Default to cash\n          receipt_number: this.paymentVerificationForm.receipt_number\n        };\n\n        const response = await adminDocumentService.verifyInPersonPayment(this.currentRequest.id, paymentData);\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.paymentVerificationForm = {\n            amount_received: '',\n            receipt_number: '',\n            loading: false,\n            error: ''\n          };\n\n          this.showToast('Success', 'Payment verified successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to verify payment:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.paymentVerificationForm.error = errorData.message || 'Failed to verify payment';\n        this.showToast('Error', errorData.message || 'Failed to verify payment', 'error');\n      } finally {\n        this.paymentVerificationForm.loading = false;\n      }\n    },\n\n    // Schedule pickup appointment\n    async schedulePickup() {\n      if (!this.isPickupFormValid() || !this.currentRequest) {\n        this.showToast('Error', 'Please fill in all required fields', 'error');\n        return;\n      }\n\n      this.pickupScheduleForm.loading = true;\n      this.pickupScheduleForm.error = '';\n\n      try {\n        const scheduleData = {\n          scheduled_date: this.pickupScheduleForm.scheduled_date,\n          scheduled_time_start: this.pickupScheduleForm.scheduled_time_start,\n          scheduled_time_end: this.pickupScheduleForm.scheduled_time_end\n        };\n\n        const response = await adminDocumentService.schedulePickup(this.currentRequest.id, scheduleData);\n\n        if (response.success) {\n          await this.refreshRequestDetails();\n          await this.loadRequests();\n\n          // Reset form\n          this.pickupScheduleForm = {\n            scheduled_date: '',\n            scheduled_time_start: '',\n            scheduled_time_end: '',\n            loading: false,\n            error: ''\n          };\n\n          this.showToast('Success', 'Pickup scheduled successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to schedule pickup:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.pickupScheduleForm.error = errorData.message || 'Failed to schedule pickup';\n        this.showToast('Error', errorData.message || 'Failed to schedule pickup', 'error');\n      } finally {\n        this.pickupScheduleForm.loading = false;\n      }\n    },\n\n    // Utility methods\n    formatStatus(status) {\n      return adminDocumentService.formatStatus(status);\n    },\n\n    getStatusColor(status) {\n      return adminDocumentService.getStatusColor(status);\n    },\n\n    // Enhanced fee display method with debugging\n    getDisplayFee(request) {\n      const totalDocumentFee = parseFloat(request.total_document_fee);\n      const totalFee = parseFloat(request.total_fee);\n\n      // Debug logging for Cedula requests\n      if (request.document_type === 'Cedula') {\n        console.log(`🔍 Cedula Fee Debug - Request ${request.request_number}:`, {\n          total_document_fee: request.total_document_fee,\n          total_fee: request.total_fee,\n          parsed_total_document_fee: totalDocumentFee,\n          parsed_total_fee: totalFee,\n          will_display: totalDocumentFee || totalFee || 0\n        });\n      }\n\n      // Prioritize total_document_fee, fallback to total_fee\n      return totalDocumentFee || totalFee || 0;\n    },\n\n    // Check if request has convenience fee\n    hasConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return totalFee > baseFee && baseFee > 0;\n    },\n\n    // Get base document fee (without convenience fee)\n    getBaseFee(request) {\n      const documentType = request.document_type;\n      const totalFee = this.getDisplayFee(request);\n\n      // For Cedula requests, calculate the actual document fee\n      if (documentType === 'Cedula') {\n        // If total is ₱100.00, the base fee is likely ₱30.00 (with ₱70.00 convenience fee)\n        if (totalFee === 100.00) {\n          return 30.00; // Standard Cedula fee for ₱20K income\n        }\n        // For other amounts, assume no convenience fee for now\n        return totalFee;\n      }\n\n      // For other document types, check if convenience fee was applied\n      const PAYMONGO_MINIMUM = 100.00;\n      if (totalFee === PAYMONGO_MINIMUM && documentType !== 'Barangay Clearance') {\n        // Likely has convenience fee - estimate base fee\n        return totalFee - (PAYMONGO_MINIMUM - totalFee);\n      }\n\n      return totalFee;\n    },\n\n    // Get convenience fee amount\n    getConvenienceFee(request) {\n      const baseFee = this.getBaseFee(request);\n      const totalFee = this.getDisplayFee(request);\n      return Math.max(0, totalFee - baseFee);\n    },\n\n    // Get convenience fee explanation\n    getConvenienceFeeExplanation(request) {\n      const convenienceFee = this.getConvenienceFee(request);\n      if (convenienceFee > 0) {\n        return `PayMongo requires a minimum payment of ₱100.00. A convenience fee of ₱${convenienceFee.toFixed(2)} was added to meet this requirement.`;\n      }\n      return '';\n    },\n\n    formatDate(dateString) {\n      console.log('🗓️ formatDate called with:', dateString);\n      if (!dateString) {\n        console.log('🗓️ formatDate: No date provided, returning null');\n        return null;\n      }\n      const date = new Date(dateString);\n      const formatted = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      console.log('🗓️ formatDate result:', formatted);\n      return formatted;\n    },\n\n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-PH', {\n        style: 'currency',\n        currency: 'PHP'\n      }).format(amount || 0);\n    },\n\n    // PDF-specific currency formatting (avoids special character issues in jsPDF)\n    formatCurrencyForPDF(amount) {\n      const numAmount = parseFloat(amount) || 0;\n      return `PHP ${numAmount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`;\n    },\n\n    formatDateTime(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    // Get formatted changed by name for status history\n    getChangedByName(history) {\n      // If the reason starts with \"SYSTEM:\", show \"System\" regardless of changed_by_name\n      if (history.change_reason && history.change_reason.startsWith('SYSTEM:')) {\n        return 'System';\n      }\n      return history.changed_by_name || 'System';\n    },\n\n    // Get formatted reason for status history\n    getFormattedReason(reason) {\n      if (!reason) return '';\n      // Remove \"SYSTEM:\" prefix if present\n      if (reason.startsWith('SYSTEM:')) {\n        return reason.substring(7).trim(); // Remove \"SYSTEM:\" and trim whitespace\n      }\n      return reason;\n    },\n\n    // New helper methods for complete client information\n    getClientFullName(request) {\n      if (!request) return 'Not provided';\n      const parts = [\n        request.client_first_name,\n        request.client_middle_name,\n        request.client_last_name,\n        request.client_suffix\n      ].filter(Boolean);\n      return parts.length > 0 ? parts.join(' ') : request.client_name || 'Not provided';\n    },\n\n    getClientFullAddress(request) {\n      if (!request) return null;\n      const parts = [\n        request.client_house_number,\n        request.client_street,\n        request.client_subdivision,\n        request.client_barangay,\n        request.client_city_municipality || request.client_city,\n        request.client_province\n      ].filter(Boolean);\n      return parts.length > 0 ? parts.join(', ') : (request.client_address || null);\n    },\n\n    formatGender(gender) {\n      if (!gender) {\n        return null;\n      }\n      return gender.charAt(0).toUpperCase() + gender.slice(1);\n    },\n\n    getCivilStatusName(statusId) {\n      const statuses = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Divorced',\n        4: 'Widowed',\n        5: 'Separated'\n      };\n      return statuses[statusId] || null;\n    },\n\n    // New helper methods for third-party requests\n    formatRelationship(relationship) {\n      if (!relationship) return 'Not specified';\n\n      const relationships = {\n        'spouse': 'Spouse',\n        'child': 'Child',\n        'parent': 'Parent',\n        'sibling': 'Sibling',\n        'relative': 'Other Relative',\n        'friend': 'Friend',\n        'colleague': 'Colleague',\n        // 'other': 'Other',\n        'self': 'Self'\n      };\n\n      return relationships[relationship] || relationship.charAt(0).toUpperCase() + relationship.slice(1);\n    },\n\n\n\n    formatAuthorizationStatus(status) {\n      if (!status) return 'Pending';\n\n      const statuses = {\n        'pending': 'Pending Verification',\n        'verified': 'Verified',\n        'rejected': 'Rejected'\n      };\n\n      return statuses[status] || status.charAt(0).toUpperCase() + status.slice(1);\n    },\n\n    getAuthorizationStatusClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n\n      return classes[status] || 'bg-secondary';\n    },\n\n    getAuthorizationStatusIcon(status) {\n      const icons = {\n        'pending': 'fa-clock',\n        'verified': 'fa-check-circle',\n        'rejected': 'fa-times-circle'\n      };\n\n      return icons[status] || 'fa-question-circle';\n    },\n\n    // Authorization verification methods\n    async verifyAuthorization(requestId, isApproved) {\n      try {\n        // This would call a new API endpoint for authorization verification\n        // const response = await adminDocumentService.verifyAuthorization(requestId, {\n        //   isApproved,\n        //   notes: isApproved ? 'Authorization verified and approved' : 'Authorization rejected'\n        // });\n\n        // For now, show a placeholder message\n        this.showToast(\n          'Authorization ' + (isApproved ? 'Approved' : 'Rejected'),\n          `Pickup authorization has been ${isApproved ? 'approved' : 'rejected'}`,\n          isApproved ? 'success' : 'warning'\n        );\n\n        // Refresh the request details\n        await this.refreshRequestDetails();\n\n      } catch (error) {\n        console.error('Failed to verify authorization:', error);\n        this.errorMessage = 'Failed to verify authorization. Please try again.';\n      }\n    },\n\n    getResidencyDisplay(request) {\n      if (!request) return null;\n      const years = request.client_years_of_residency;\n      const months = request.client_months_of_residency;\n\n      if (!years && !months) return null; // Return null so the template can handle \"Not provided\"\n\n      const parts = [];\n      if (years) parts.push(`${years} year${years > 1 ? 's' : ''}`);\n      if (months) parts.push(`${months} month${months > 1 ? 's' : ''}`);\n\n      return parts.join(' and ');\n    },\n\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    },\n\n    // Real-time features\n    async initializeRealTimeFeatures() {\n      console.log('Initializing real-time features for AdminRequests');\n\n      try {\n        // Initialize notification service\n        await notificationService.init('admin');\n\n        // Listen for request-related notifications\n        notificationService.on('notification', this.handleRealTimeNotification);\n        notificationService.on('request_status_changed', this.handleStatusChange);\n        notificationService.on('new_request', this.handleNewRequest);\n\n        // Start auto-refresh if enabled\n        if (this.autoRefreshEnabled) {\n          this.startAutoRefresh();\n        }\n      } catch (error) {\n        console.error('Failed to initialize real-time features:', error);\n      }\n    },\n\n    cleanupRealTimeFeatures() {\n      console.log('Cleaning up real-time features for AdminRequests');\n\n      // Remove notification listeners\n      notificationService.off('notification', this.handleRealTimeNotification);\n      notificationService.off('request_status_changed', this.handleStatusChange);\n      notificationService.off('new_request', this.handleNewRequest);\n\n      // Cleanup (simplified)\n      notificationService.cleanup();\n\n      // Stop auto-refresh\n      this.stopAutoRefresh();\n    },\n\n    startAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n      }\n\n      this.refreshInterval = setInterval(() => {\n        if (this.autoRefreshEnabled && !this.loading) {\n          console.log('Auto-refreshing requests data...');\n          this.refreshRequestsData();\n        }\n      }, this.refreshRate);\n\n      console.log(`Auto-refresh started with ${this.refreshRate / 1000}s interval`);\n    },\n\n    stopAutoRefresh() {\n      if (this.refreshInterval) {\n        clearInterval(this.refreshInterval);\n        this.refreshInterval = null;\n        console.log('Auto-refresh stopped');\n      }\n    },\n\n    toggleAutoRefresh() {\n      this.autoRefreshEnabled = !this.autoRefreshEnabled;\n\n      if (this.autoRefreshEnabled) {\n        this.startAutoRefresh();\n      } else {\n        this.stopAutoRefresh();\n      }\n    },\n\n    async refreshRequestsData() {\n      try {\n        this.lastRefresh = new Date();\n\n        // Refresh requests list\n        await this.loadRequests();\n\n        // Refresh statistics\n        await this.loadDashboardStats();\n\n        // If request details modal is open, refresh it\n        if (this.showRequestDetails && this.currentRequest) {\n          await this.refreshRequestDetails();\n        }\n\n        console.log('Requests data refreshed successfully');\n      } catch (error) {\n        console.error('Failed to refresh requests data:', error);\n      }\n    },\n\n    handleRealTimeNotification(notification) {\n      console.log('Real-time notification received:', notification);\n\n      // Handle different notification types\n      switch (notification.type) {\n        case 'request_status_changed':\n          this.handleStatusChange(notification.data);\n          break;\n        case 'new_request':\n          this.handleNewRequest(notification.data);\n          break;\n        case 'request_updated':\n          this.handleRequestUpdate(notification.data);\n          break;\n        case 'unread_count_update':\n        case 'heartbeat':\n          // Polling system notifications - handled by notification service\n          break;\n        default:\n          // Only log unknown types, not system types\n          if (!['unread_count_update', 'heartbeat'].includes(notification.type)) {\n            console.log('Unhandled notification type:', notification.type);\n          }\n      }\n    },\n\n    handleStatusChange(data) {\n      console.log('🔄 Request status changed:', data);\n      console.log('🔍 Data properties:', {\n        request_id: data.request_id,\n        new_status: data.new_status,\n        payment_status: data.payment_status,\n        amount: data.amount\n      });\n\n      // Update the request in the list if it exists\n      const requestId = data.request_id;\n      if (!requestId) {\n        console.warn('⚠️ No request_id in status change data');\n        return;\n      }\n\n      const requestIndex = this.requests.findIndex(req => req.id == requestId);\n      if (requestIndex !== -1) {\n        console.log(`📝 Updating request #${data.request_id} in the list`);\n\n        // Update the specific request in the list for immediate UI update\n        const updatedRequest = { ...this.requests[requestIndex] };\n\n        // Map the status based on the new status\n        if (data.new_status === 'payment_confirmed') {\n          updatedRequest.status_name = 'Payment Confirmed';\n          updatedRequest.status_id = 11;\n          updatedRequest.payment_status = 'paid';\n        } else if (data.new_status === 'payment_failed') {\n          updatedRequest.status_name = 'Payment Failed';\n          updatedRequest.payment_status = 'failed';\n        }\n\n        // Update the timestamp\n        updatedRequest.updated_at = data.timestamp || new Date().toISOString();\n\n        // Replace the request in the array\n        this.$set(this.requests, requestIndex, updatedRequest);\n\n        // Also refresh data in background to ensure consistency\n        setTimeout(() => {\n          this.refreshRequestsData();\n        }, 1000);\n\n        console.log(`✅ Request #${data.request_id} updated in real-time`);\n      } else {\n        console.log(`📄 Request #${data.request_id} not in current view, refreshing data`);\n        // If request is not in current view, just refresh\n        this.refreshRequestsData();\n      }\n\n      // Show toast notification with payment-specific message\n      const toastRequestId = data.request_id || 'Unknown';\n      const newStatus = data.new_status || 'unknown';\n\n      let title = 'Status Update';\n      let message = `Request #${toastRequestId} status changed`;\n      let type = 'info';\n\n      if (newStatus === 'payment_confirmed') {\n        title = 'Payment Confirmed';\n        message = `Payment confirmed for request #${toastRequestId}`;\n        type = 'success';\n      } else if (newStatus === 'payment_failed') {\n        title = 'Payment Failed';\n        message = `Payment failed for request #${toastRequestId}`;\n        type = 'error';\n      }\n\n      console.log('🔔 Showing toast:', { title, message, type });\n      this.showToast(title, message, type);\n    },\n\n    handleNewRequest(data) {\n      console.log('New request received:', data);\n\n      // Refresh requests to show the new request\n      this.refreshRequestsData();\n\n      // Show toast notification\n      this.showToast('New Request', `New ${data.document_type} request received`, 'success');\n    },\n\n    handleRequestUpdate(data) {\n      console.log('Request updated:', data);\n\n      // If the updated request is currently being viewed, refresh details\n      if (this.currentRequest && this.currentRequest.id === data.request_id) {\n        this.refreshRequestDetails();\n      }\n\n      // Refresh the requests list\n      this.refreshRequestsData();\n    },\n\n    showToast(title, message, type = 'info') {\n      // Enhanced debugging\n      console.log('🔔 showToast called with:', {\n        title: title,\n        titleType: typeof title,\n        message: message,\n        messageType: typeof message,\n        type: type\n      });\n\n      // Handle undefined values\n      const safeTitle = title || 'Notification';\n      const safeMessage = message || 'No message provided';\n\n      // Log to console for debugging\n      console.log(`[${type.toUpperCase()}] ${safeTitle}: ${safeMessage}`);\n\n      // Create a simple toast notification\n      const toast = document.createElement('div');\n      toast.className = `toast-notification toast-${type}`;\n      toast.innerHTML = `\n        <div class=\"toast-header\">\n          <strong>${safeTitle}</strong>\n          <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n        </div>\n        <div class=\"toast-body\">${safeMessage}</div>\n      `;\n\n      // Add toast styles if not already added\n      if (!document.getElementById('toast-styles')) {\n        const styles = document.createElement('style');\n        styles.id = 'toast-styles';\n        styles.textContent = `\n          .toast-notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            min-width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 9999;\n            animation: slideIn 0.3s ease;\n          }\n          .toast-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 12px 16px 8px;\n            border-bottom: 1px solid #e9ecef;\n          }\n          .toast-body {\n            padding: 8px 16px 12px;\n            color: #6c757d;\n          }\n          .toast-close {\n            background: none;\n            border: none;\n            font-size: 18px;\n            cursor: pointer;\n            color: #6c757d;\n          }\n          .toast-success { border-left: 4px solid #28a745; }\n          .toast-error { border-left: 4px solid #dc3545; }\n          .toast-info { border-left: 4px solid #17a2b8; }\n          .toast-warning { border-left: 4px solid #ffc107; }\n          @keyframes slideIn {\n            from { transform: translateX(100%); opacity: 0; }\n            to { transform: translateX(0); opacity: 1; }\n          }\n        `;\n        document.head.appendChild(styles);\n      }\n\n      // Add toast to page\n      document.body.appendChild(toast);\n\n      // Auto-remove after 5 seconds\n      setTimeout(() => {\n        if (toast.parentElement) {\n          toast.style.animation = 'slideIn 0.3s ease reverse';\n          setTimeout(() => toast.remove(), 300);\n        }\n      }, 5000);\n    },\n\n    // Document handling methods\n    getDocumentTypeDisplayName(type) {\n      const displayNames = {\n        'government_id': 'Government ID',\n        'proof_of_residency': 'Proof of Residency',\n        'cedula': 'Community Tax Certificate (Cedula)',\n        'birth_certificate': 'Birth Certificate',\n        'marriage_certificate': 'Marriage Certificate',\n        'other': 'Other Document'\n      };\n      return displayNames[type] || type;\n    },\n\n    isImageFile(mimeType) {\n      return mimeType && (\n        mimeType.startsWith('image/') ||\n        ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'].includes(mimeType)\n      );\n    },\n\n    isPdfFile(mimeType) {\n      return mimeType === 'application/pdf';\n    },\n\n    async loadDocumentUrls(documents) {\n      // Filter documents that need loading (images only, not already loaded/loading/failed)\n      const documentsToLoad = documents.filter(doc =>\n        this.isImageFile(doc.mime_type) &&\n        !this.documentUrls[doc.id] &&\n        !this.loadingDocuments.has(doc.id) &&\n        !this.failedDocuments.has(doc.id)\n      );\n\n      if (documentsToLoad.length === 0) return;\n\n      // Load documents in parallel with concurrency limit\n      const CONCURRENT_LIMIT = 3;\n      const chunks = this.chunkArray(documentsToLoad, CONCURRENT_LIMIT);\n\n      for (const chunk of chunks) {\n        await Promise.allSettled(\n          chunk.map(document => this.loadSingleDocument(document))\n        );\n      }\n    },\n\n    async loadSingleDocument(document, isForModal = false) {\n      const docId = document.id;\n\n      try {\n        // Mark as loading\n        this.loadingDocuments.add(docId);\n        if (isForModal) this.imageLoadingInModal = true;\n\n        // Use authenticated API call to get the document\n        const response = await api.get(`/documents/view/${docId}`, {\n          responseType: 'blob',\n          timeout: 15000, // Increased timeout for large images\n          onDownloadProgress: (progressEvent) => {\n            // Optional: Could emit progress events here\n            if (progressEvent.lengthComputable) {\n              const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n              console.log(`Loading ${docId}: ${percentCompleted}%`);\n            }\n          }\n        });\n\n        // Validate response\n        if (!response.data || response.data.size === 0) {\n          throw new Error('Empty response received');\n        }\n\n        // Check file size and optimize if needed\n        const blob = response.data;\n        const optimizedBlob = await this.optimizeImageBlob(blob, document.mime_type, isForModal);\n\n        // Create blob URL using requestIdleCallback for better performance\n        await this.createBlobUrlWhenIdle(docId, optimizedBlob);\n\n        // Remove from failed set if it was there\n        this.failedDocuments.delete(docId);\n        if (isForModal) this.modalImageError = false;\n\n      } catch (error) {\n        console.warn(`Failed to load document ${docId}:`, error.message);\n        this.failedDocuments.add(docId);\n        if (isForModal) this.modalImageError = true;\n\n        // Optionally retry after a delay for network errors\n        if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED') {\n          setTimeout(() => {\n            this.failedDocuments.delete(docId);\n          }, 30000); // Retry after 30 seconds\n        }\n      } finally {\n        // Remove from loading set\n        this.loadingDocuments.delete(docId);\n        if (isForModal) this.imageLoadingInModal = false;\n      }\n    },\n\n    chunkArray(array, size) {\n      const chunks = [];\n      for (let i = 0; i < array.length; i += size) {\n        chunks.push(array.slice(i, i + size));\n      }\n      return chunks;\n    },\n\n    async getDocumentUrl(document) {\n      // This method is now deprecated in favor of loadDocumentUrls\n      // Keeping for backward compatibility\n      if (this.documentUrls[document.id]) {\n        return this.documentUrls[document.id];\n      }\n      return null;\n    },\n\n    formatFileSize(bytes) {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n\n    async openImageModal(document) {\n      // Prevent multiple rapid clicks\n      if (this.imageLoadingInModal) return;\n\n      // Don't open modal if document failed to load and we're not retrying\n      if (this.failedDocuments.has(document.id)) {\n        return;\n      }\n\n      // Set modal state immediately for responsiveness\n      this.selectedImage = document;\n      this.showImageModal = true;\n      this.modalImageError = false;\n\n      // Use nextTick to ensure DOM is updated before heavy operations\n      await this.$nextTick();\n\n      // If image isn't loaded yet, try to load it with modal optimization\n      if (!this.documentUrls[document.id] && !this.loadingDocuments.has(document.id)) {\n        await this.loadSingleDocument(document, true);\n      }\n    },\n\n    async retryLoadDocument(document) {\n      // Remove from failed set and retry loading\n      this.failedDocuments.delete(document.id);\n      this.modalImageError = false;\n      await this.loadSingleDocument(document, true);\n    },\n\n    onModalImageLoad() {\n      // Called when modal image finishes loading\n      this.imageLoadingInModal = false;\n    },\n\n    cleanupDocumentUrls() {\n      // Revoke all blob URLs to prevent memory leaks\n      Object.values(this.documentUrls).forEach(url => {\n        if (url) URL.revokeObjectURL(url);\n      });\n\n      // Clear all tracking sets and objects\n      this.documentUrls = {};\n      this.loadingDocuments.clear();\n      this.failedDocuments.clear();\n    },\n\n    preloadImage(document) {\n      // Preload image on hover for better UX\n      if (!this.documentUrls[document.id] &&\n          !this.loadingDocuments.has(document.id) &&\n          !this.failedDocuments.has(document.id)) {\n        this.loadSingleDocument(document, false);\n      }\n    },\n\n    async optimizeImageBlob(blob, mimeType, isForModal = false) {\n      // For very large images, we might want to resize them\n      const MAX_SIZE = isForModal ? 5 * 1024 * 1024 : 2 * 1024 * 1024; // 5MB for modal, 2MB for preview\n\n      if (blob.size <= MAX_SIZE) {\n        return blob; // No optimization needed\n      }\n\n      try {\n        // Create image element for resizing\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        return new Promise((resolve) => {\n          img.onload = () => {\n            // Calculate new dimensions (maintain aspect ratio)\n            const maxDimension = isForModal ? 1920 : 800;\n            let { width, height } = img;\n\n            if (width > height && width > maxDimension) {\n              height = (height * maxDimension) / width;\n              width = maxDimension;\n            } else if (height > maxDimension) {\n              width = (width * maxDimension) / height;\n              height = maxDimension;\n            }\n\n            // Set canvas size and draw resized image\n            canvas.width = width;\n            canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n\n            // Convert to blob with compression\n            canvas.toBlob(\n              (optimizedBlob) => {\n                resolve(optimizedBlob || blob); // Fallback to original if optimization fails\n              },\n              mimeType,\n              0.85 // 85% quality\n            );\n          };\n\n          img.onerror = () => resolve(blob); // Fallback to original\n          img.src = URL.createObjectURL(blob);\n        });\n      } catch (error) {\n        console.warn('Image optimization failed:', error);\n        return blob; // Fallback to original\n      }\n    },\n\n    async createBlobUrlWhenIdle(docId, blob) {\n      return new Promise((resolve) => {\n        const createUrl = () => {\n          this.documentUrls[docId] = URL.createObjectURL(blob);\n          resolve();\n        };\n\n        // Use requestIdleCallback if available, otherwise use setTimeout\n        if (window.requestIdleCallback) {\n          window.requestIdleCallback(createUrl, { timeout: 1000 });\n        } else {\n          setTimeout(createUrl, 0);\n        }\n      });\n    },\n\n    closeImageModal() {\n      // Prevent rapid clicking during image loading\n      if (this.imageLoadingInModal) return;\n\n      this.showImageModal = false;\n      this.selectedImage = null;\n      this.imageLoadingInModal = false;\n      this.modalImageError = false;\n    },\n\n    async downloadDocument(documentFile) {\n      try {\n        // Use authenticated API call to download the document\n        const response = await api.get(`/documents/download/${documentFile.id}`, {\n          responseType: 'blob'\n        });\n\n        // Create a download link\n        const blob = new Blob([response.data], { type: documentFile.mime_type });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = documentFile.document_name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Failed to download document:', error);\n        this.showToast('Error', 'Failed to download document', 'error');\n      }\n    },\n\n    handleImageError(event) {\n      console.error('Failed to load image:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n\n      // Show error message\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'text-center text-muted p-3';\n      errorDiv.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><br>Failed to load image';\n      event.target.parentNode.appendChild(errorDiv);\n    },\n\n    // Beneficiary verification status methods\n    getBeneficiaryVerificationStatusClass(status) {\n      switch (status) {\n        case 'approved':\n          return 'bg-success';\n        case 'rejected':\n          return 'bg-danger';\n        case 'pending':\n        default:\n          return 'bg-warning';\n      }\n    },\n\n    getBeneficiaryVerificationStatusText(status) {\n      switch (status) {\n        case 'approved':\n          return 'Verified';\n        case 'rejected':\n          return 'Rejected';\n        case 'pending':\n        default:\n          return 'Pending';\n      }\n    },\n\n    // View verification image\n    async viewVerificationImage(requestId, imageType) {\n      try {\n        // Find the request to get the filename - check both requests list and currentRequest\n        let request = this.requests.find(r => r.id === requestId);\n\n        // If not found in requests list, check if it's the current request being viewed\n        if (!request && this.currentRequest && this.currentRequest.id === requestId) {\n          request = this.currentRequest;\n        }\n\n        if (!request) {\n          this.showToast('Error', 'Request not found', 'error');\n          return;\n        }\n\n        let filename = '';\n        let documentType = '';\n\n        switch (imageType) {\n          case 'beneficiary':\n            // Handle both list view (beneficiary_verification_image) and detail view (beneficiary.verification_image_path)\n            filename = request.beneficiary_verification_image || request.beneficiary?.verification_image_path;\n            documentType = 'beneficiary';\n            // For beneficiary documents, we need the beneficiary ID, not the request ID\n            if (request.beneficiary?.id) {\n              requestId = request.beneficiary.id;\n            }\n            break;\n          case 'pickup-id':\n            filename = request.pickup_id_image || request.authorized_pickup?.id_image_path;\n            documentType = 'pickup-id';\n            break;\n          case 'pickup-auth':\n            filename = request.pickup_authorization_letter || request.authorized_pickup?.authorization_letter_path;\n            documentType = 'pickup-auth';\n            break;\n          default:\n            this.showToast('Error', 'Invalid image type', 'error');\n            return;\n        }\n\n        if (!filename) {\n          this.showToast('Error', 'No image available', 'error');\n          return;\n        }\n\n        // Extract just the filename from the path (handle both forward and back slashes)\n        const filenameOnly = filename.split(/[/\\\\]/).pop();\n\n        // Construct the URL for the verification document service\n        const imageUrl = `/verification-documents/serve/${documentType}/${requestId}/${filenameOnly}`;\n\n        // Fetch the image with authentication headers and display in modal\n        await this.displayImageInModal(imageUrl, `${documentType} verification image`);\n\n      } catch (error) {\n        console.error('Error viewing verification image:', error);\n        this.showToast('Error', 'Failed to view image', 'error');\n      }\n    },\n\n    // Display image in modal with authentication\n    async displayImageInModal(imageUrl, title) {\n      try {\n        // Import the API service\n        const api = (await import('@/services/api.js')).default;\n\n        // Fetch the image with authentication headers\n        const response = await api.get(imageUrl, {\n          responseType: 'blob'\n        });\n\n        // Create object URL from blob\n        const imageObjectUrl = URL.createObjectURL(response.data);\n\n        // Create and show modal\n        const modalHtml = `\n          <div class=\"modal fade\" id=\"imageViewModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">${title}</h5>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body text-center\">\n                  <img src=\"${imageObjectUrl}\" class=\"img-fluid\" alt=\"${title}\" style=\"max-height: 70vh;\">\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;\n\n        // Remove existing modal if any\n        const existingModal = document.getElementById('imageViewModal');\n        if (existingModal) {\n          existingModal.remove();\n        }\n\n        // Add modal to DOM\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Show modal\n        const modal = new Modal(document.getElementById('imageViewModal'));\n        modal.show();\n\n        // Clean up object URL when modal is hidden\n        document.getElementById('imageViewModal').addEventListener('hidden.bs.modal', () => {\n          URL.revokeObjectURL(imageObjectUrl);\n          document.getElementById('imageViewModal').remove();\n        });\n\n      } catch (error) {\n        console.error('Error displaying image:', error);\n        this.showToast('Error', 'Failed to load image', 'error');\n      }\n    },\n\n    // View pickup documents in modal\n    async viewPickupDocuments(request) {\n      try {\n        // Set the selected request and show the modal\n        this.selectedRequestForPickup = request;\n\n        // Show modal using Bootstrap\n        const modal = new Modal(document.getElementById('authorizedPickupDocumentsModal'));\n        modal.show();\n      } catch (error) {\n        console.error('Error opening pickup documents modal:', error);\n        this.showToast('Error', 'Failed to open documents modal', 'error');\n      }\n    },\n\n    // Verify pickup authorization\n    async verifyPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization verification\n        // const response = await adminDocumentService.verifyPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization verified successfully', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error verifying pickup authorization:', error);\n        this.showToast('Error', 'Failed to verify pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n\n    // Reject pickup authorization\n    async rejectPickupAuthorization() {\n      if (!this.selectedRequestForPickup) return;\n\n      this.processingPickupAction = true;\n      try {\n        // This would call a new API endpoint for pickup authorization rejection\n        // const response = await adminDocumentService.rejectPickupAuthorization(this.selectedRequestForPickup.id);\n\n        this.showToast('Success', 'Pickup authorization rejected', 'success');\n\n        // Close modal\n        const modal = Modal.getInstance(document.getElementById('authorizedPickupDocumentsModal'));\n        if (modal) {\n          modal.hide();\n        }\n\n        // Refresh requests list\n        await this.loadRequests();\n      } catch (error) {\n        console.error('Error rejecting pickup authorization:', error);\n        this.showToast('Error', 'Failed to reject pickup authorization', 'error');\n      } finally {\n        this.processingPickupAction = false;\n      }\n    },\n\n    // Update beneficiary verification status\n    async updateBeneficiaryVerificationStatus(beneficiaryId, status, notes = '') {\n      try {\n        const response = await this.$http.put(\n          `/api/verification-documents/beneficiary/${beneficiaryId}/verification-status`,\n          { status, notes }\n        );\n\n        if (response.data.success) {\n          this.showToast('Success', 'Verification status updated successfully', 'success');\n          // Refresh the requests to show updated status\n          await this.loadRequests();\n        } else {\n          throw new Error(response.data.message || 'Failed to update verification status');\n        }\n\n      } catch (error) {\n        console.error('Error updating verification status:', error);\n        this.showToast('Error', error.response?.data?.message || 'Failed to update verification status', 'error');\n      }\n    },\n\n    // Open verification modal\n    openVerificationModal(request) {\n      this.currentVerification = {\n        requestId: request.id,\n        beneficiaryId: request.beneficiary_id,\n        beneficiary_name: request.beneficiary_name,\n        relationship: request.beneficiary_relationship,\n        image_url: request.beneficiary_verification_image ?\n          `/verification-documents/serve/beneficiary/${request.id}/${request.beneficiary_verification_image.split('/').pop()}` :\n          null,\n        current_status: request.beneficiary_verification_status\n      };\n\n      this.verificationForm = {\n        status: request.beneficiary_verification_status || 'pending',\n        notes: ''\n      };\n\n      // Show the modal using Bootstrap\n      const modal = new Modal(document.getElementById('verificationModal'));\n      modal.show();\n    },\n\n    // Save verification status from modal\n    async saveVerificationStatus() {\n      if (!this.currentVerification) return;\n\n      try {\n        await this.updateBeneficiaryVerificationStatus(\n          this.currentVerification.beneficiaryId,\n          this.verificationForm.status,\n          this.verificationForm.notes\n        );\n\n        // Close the modal\n        const modal = Modal.getInstance(document.getElementById('verificationModal'));\n        modal.hide();\n\n        // Reset form\n        this.currentVerification = null;\n        this.verificationForm = {\n          status: 'pending',\n          notes: ''\n        };\n\n      } catch (error) {\n        // Error handling is done in updateBeneficiaryVerificationStatus\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import './css/adminDashboard.css';\n\n/* Convenience Fee Display Styling */\n.fee-breakdown {\n  font-size: 0.85rem;\n  line-height: 1.3;\n}\n\n.fee-breakdown .base-fee,\n.fee-breakdown .convenience-fee,\n.fee-breakdown .total-fee {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2px;\n}\n\n.fee-breakdown .convenience-fee {\n  background-color: #fff3cd;\n  padding: 2px 4px;\n  border-radius: 3px;\n  border-left: 3px solid #ffc107;\n}\n\n.fee-breakdown .total-fee {\n  margin-top: 4px;\n  padding-top: 4px;\n  font-weight: bold;\n}\n\n.amount-breakdown {\n  text-align: center;\n}\n\n.amount-breakdown .amount-compact {\n  font-weight: bold;\n  color: #198754;\n}\n\n.amount-breakdown small {\n  font-size: 0.7rem;\n  line-height: 1.2;\n}\n\n/* Tooltip styling for convenience fee info */\n.fas.fa-info-circle {\n  cursor: help;\n  opacity: 0.7;\n}\n\n.fas.fa-info-circle:hover {\n  opacity: 1;\n}\n\n/* Modal Fee Breakdown Styling */\n.fee-breakdown-modal {\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  padding: 1rem;\n}\n\n.fee-breakdown-modal .fee-item {\n  border-radius: 6px;\n  transition: all 0.2s ease;\n}\n\n.fee-breakdown-modal .fee-item:hover {\n  background-color: rgba(0, 123, 255, 0.05);\n}\n\n.fee-breakdown-modal .fee-label {\n  flex: 1;\n}\n\n.fee-breakdown-modal .fee-amount {\n  text-align: right;\n  min-width: 120px;\n}\n\n.fee-breakdown-modal .fee-item:last-child {\n  background-color: rgba(25, 135, 84, 0.1) !important;\n  border-color: #198754 !important;\n}\n\n.fee-breakdown-modal .fee-item:last-child:hover {\n  background-color: rgba(25, 135, 84, 0.15) !important;\n}\n\n/* Payment Summary Card */\n.payment-summary-card {\n  border: 2px solid #e9ecef;\n  transition: all 0.3s ease;\n}\n\n.payment-summary-card:hover {\n  border-color: #198754;\n  box-shadow: 0 4px 8px rgba(25, 135, 84, 0.1);\n}\n\n/* Modal Convenience Fee Alert */\n.modal .alert-warning {\n  border-left: 4px solid #ffc107;\n  background-color: #fff3cd;\n}\n\n/* Responsive adjustments for modal fee breakdown */\n@media (max-width: 768px) {\n  .fee-breakdown-modal .fee-item {\n    flex-direction: column;\n    align-items: flex-start !important;\n  }\n\n  .fee-breakdown-modal .fee-amount {\n    text-align: left;\n    min-width: auto;\n    margin-top: 0.5rem;\n  }\n\n  .payment-summary-card {\n    margin-top: 1rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}