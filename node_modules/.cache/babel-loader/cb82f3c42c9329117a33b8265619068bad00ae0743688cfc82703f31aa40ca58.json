{"ast":null,"code":"import _defineProperty from \"D:/brgy_docu_hub/BOSFDR/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { IOBuffer } from 'iobuffer';\nimport { inflate, Inflate as Inflator } from 'pako';\nimport { checkCrc } from './helpers/crc';\nimport { decodeInterlaceAdam7 } from './helpers/decodeInterlaceAdam7';\nimport { decodeInterlaceNull } from './helpers/decodeInterlaceNull';\nimport { checkSignature } from './helpers/signature';\nimport { decodetEXt, readKeyword, textChunkName } from './helpers/text';\nimport { ColorType, CompressionMethod, DisposeOpType, FilterMethod, InterlaceMethod, BlendOpType } from './internalTypes';\nexport default class PngDecoder extends IOBuffer {\n  constructor(data, options = {}) {\n    super(data);\n    _defineProperty(this, \"_checkCrc\", void 0);\n    _defineProperty(this, \"_inflator\", void 0);\n    _defineProperty(this, \"_png\", void 0);\n    _defineProperty(this, \"_apng\", void 0);\n    _defineProperty(this, \"_end\", void 0);\n    _defineProperty(this, \"_hasPalette\", void 0);\n    _defineProperty(this, \"_palette\", void 0);\n    _defineProperty(this, \"_hasTransparency\", void 0);\n    _defineProperty(this, \"_transparency\", void 0);\n    _defineProperty(this, \"_compressionMethod\", void 0);\n    _defineProperty(this, \"_filterMethod\", void 0);\n    _defineProperty(this, \"_interlaceMethod\", void 0);\n    _defineProperty(this, \"_colorType\", void 0);\n    _defineProperty(this, \"_isAnimated\", void 0);\n    _defineProperty(this, \"_numberOfFrames\", void 0);\n    _defineProperty(this, \"_numberOfPlays\", void 0);\n    _defineProperty(this, \"_frames\", void 0);\n    _defineProperty(this, \"_writingDataChunks\", void 0);\n    const {\n      checkCrc = false\n    } = options;\n    this._checkCrc = checkCrc;\n    this._inflator = new Inflator();\n    this._png = {\n      width: -1,\n      height: -1,\n      channels: -1,\n      data: new Uint8Array(0),\n      depth: 1,\n      text: {}\n    };\n    this._apng = {\n      width: -1,\n      height: -1,\n      channels: -1,\n      depth: 1,\n      numberOfFrames: 1,\n      numberOfPlays: 0,\n      text: {},\n      frames: []\n    };\n    this._end = false;\n    this._hasPalette = false;\n    this._palette = [];\n    this._hasTransparency = false;\n    this._transparency = new Uint16Array(0);\n    this._compressionMethod = CompressionMethod.UNKNOWN;\n    this._filterMethod = FilterMethod.UNKNOWN;\n    this._interlaceMethod = InterlaceMethod.UNKNOWN;\n    this._colorType = ColorType.UNKNOWN;\n    this._isAnimated = false;\n    this._numberOfFrames = 1;\n    this._numberOfPlays = 0;\n    this._frames = [];\n    this._writingDataChunks = false;\n    // PNG is always big endian\n    // https://www.w3.org/TR/PNG/#7Integers-and-byte-order\n    this.setBigEndian();\n  }\n  decode() {\n    checkSignature(this);\n    while (!this._end) {\n      const length = this.readUint32();\n      const type = this.readChars(4);\n      this.decodeChunk(length, type);\n    }\n    this.decodeImage();\n    return this._png;\n  }\n  decodeApng() {\n    checkSignature(this);\n    while (!this._end) {\n      const length = this.readUint32();\n      const type = this.readChars(4);\n      this.decodeApngChunk(length, type);\n    }\n    this.decodeApngImage();\n    return this._apng;\n  }\n  // https://www.w3.org/TR/PNG/#5Chunk-layout\n  decodeChunk(length, type) {\n    const offset = this.offset;\n    switch (type) {\n      // 11.2 Critical chunks\n      case 'IHDR':\n        // 11.2.2 IHDR Image header\n        this.decodeIHDR();\n        break;\n      case 'PLTE':\n        // 11.2.3 PLTE Palette\n        this.decodePLTE(length);\n        break;\n      case 'IDAT':\n        // 11.2.4 IDAT Image data\n        this.decodeIDAT(length);\n        break;\n      case 'IEND':\n        // 11.2.5 IEND Image trailer\n        this._end = true;\n        break;\n      // 11.3 Ancillary chunks\n      case 'tRNS':\n        // 11.3.2.1 tRNS Transparency\n        this.decodetRNS(length);\n        break;\n      case 'iCCP':\n        // 11.3.3.3 iCCP Embedded ICC profile\n        this.decodeiCCP(length);\n        break;\n      case textChunkName:\n        // 11.3.4.3 tEXt Textual data\n        decodetEXt(this._png.text, this, length);\n        break;\n      case 'pHYs':\n        // 11.3.5.3 pHYs Physical pixel dimensions\n        this.decodepHYs();\n        break;\n      default:\n        this.skip(length);\n        break;\n    }\n    if (this.offset - offset !== length) {\n      throw new Error(`Length mismatch while decoding chunk ${type}`);\n    }\n    if (this._checkCrc) {\n      checkCrc(this, length + 4, type);\n    } else {\n      this.skip(4);\n    }\n  }\n  decodeApngChunk(length, type) {\n    const offset = this.offset;\n    if (type !== 'fdAT' && type !== 'IDAT' && this._writingDataChunks) {\n      this.pushDataToFrame();\n    }\n    switch (type) {\n      case 'acTL':\n        this.decodeACTL();\n        break;\n      case 'fcTL':\n        this.decodeFCTL();\n        break;\n      case 'fdAT':\n        this.decodeFDAT(length);\n        break;\n      default:\n        this.decodeChunk(length, type);\n        this.offset = offset + length;\n        break;\n    }\n    if (this.offset - offset !== length) {\n      throw new Error(`Length mismatch while decoding chunk ${type}`);\n    }\n    if (this._checkCrc) {\n      checkCrc(this, length + 4, type);\n    } else {\n      this.skip(4);\n    }\n  }\n  // https://www.w3.org/TR/PNG/#11IHDR\n  decodeIHDR() {\n    const image = this._png;\n    image.width = this.readUint32();\n    image.height = this.readUint32();\n    image.depth = checkBitDepth(this.readUint8());\n    const colorType = this.readUint8();\n    this._colorType = colorType;\n    let channels;\n    switch (colorType) {\n      case ColorType.GREYSCALE:\n        channels = 1;\n        break;\n      case ColorType.TRUECOLOUR:\n        channels = 3;\n        break;\n      case ColorType.INDEXED_COLOUR:\n        channels = 1;\n        break;\n      case ColorType.GREYSCALE_ALPHA:\n        channels = 2;\n        break;\n      case ColorType.TRUECOLOUR_ALPHA:\n        channels = 4;\n        break;\n      // Kept for exhaustiveness.\n      // eslint-disable-next-line unicorn/no-useless-switch-case\n      case ColorType.UNKNOWN:\n      default:\n        throw new Error(`Unknown color type: ${colorType}`);\n    }\n    this._png.channels = channels;\n    this._compressionMethod = this.readUint8();\n    if (this._compressionMethod !== CompressionMethod.DEFLATE) {\n      throw new Error(`Unsupported compression method: ${this._compressionMethod}`);\n    }\n    this._filterMethod = this.readUint8();\n    this._interlaceMethod = this.readUint8();\n  }\n  decodeACTL() {\n    this._numberOfFrames = this.readUint32();\n    this._numberOfPlays = this.readUint32();\n    this._isAnimated = true;\n  }\n  decodeFCTL() {\n    const image = {\n      sequenceNumber: this.readUint32(),\n      width: this.readUint32(),\n      height: this.readUint32(),\n      xOffset: this.readUint32(),\n      yOffset: this.readUint32(),\n      delayNumber: this.readUint16(),\n      delayDenominator: this.readUint16(),\n      disposeOp: this.readUint8(),\n      blendOp: this.readUint8(),\n      data: new Uint8Array(0)\n    };\n    this._frames.push(image);\n  }\n  // https://www.w3.org/TR/PNG/#11PLTE\n  decodePLTE(length) {\n    if (length % 3 !== 0) {\n      throw new RangeError(`PLTE field length must be a multiple of 3. Got ${length}`);\n    }\n    const l = length / 3;\n    this._hasPalette = true;\n    const palette = [];\n    this._palette = palette;\n    for (let i = 0; i < l; i++) {\n      palette.push([this.readUint8(), this.readUint8(), this.readUint8()]);\n    }\n  }\n  // https://www.w3.org/TR/PNG/#11IDAT\n  decodeIDAT(length) {\n    this._writingDataChunks = true;\n    const dataLength = length;\n    const dataOffset = this.offset + this.byteOffset;\n    this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n    if (this._inflator.err) {\n      throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n    }\n    this.skip(length);\n  }\n  decodeFDAT(length) {\n    this._writingDataChunks = true;\n    let dataLength = length;\n    let dataOffset = this.offset + this.byteOffset;\n    dataOffset += 4;\n    dataLength -= 4;\n    this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n    if (this._inflator.err) {\n      throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n    }\n    this.skip(length);\n  }\n  // https://www.w3.org/TR/PNG/#11tRNS\n  decodetRNS(length) {\n    switch (this._colorType) {\n      case ColorType.GREYSCALE:\n      case ColorType.TRUECOLOUR:\n        {\n          if (length % 2 !== 0) {\n            throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${length}`);\n          }\n          if (length / 2 > this._png.width * this._png.height) {\n            throw new Error(`tRNS chunk contains more alpha values than there are pixels (${length / 2} vs ${this._png.width * this._png.height})`);\n          }\n          this._hasTransparency = true;\n          this._transparency = new Uint16Array(length / 2);\n          for (let i = 0; i < length / 2; i++) {\n            this._transparency[i] = this.readUint16();\n          }\n          break;\n        }\n      case ColorType.INDEXED_COLOUR:\n        {\n          if (length > this._palette.length) {\n            throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${length} vs ${this._palette.length})`);\n          }\n          let i = 0;\n          for (; i < length; i++) {\n            const alpha = this.readByte();\n            this._palette[i].push(alpha);\n          }\n          for (; i < this._palette.length; i++) {\n            this._palette[i].push(255);\n          }\n          break;\n        }\n      // Kept for exhaustiveness.\n      /* eslint-disable unicorn/no-useless-switch-case */\n      case ColorType.UNKNOWN:\n      case ColorType.GREYSCALE_ALPHA:\n      case ColorType.TRUECOLOUR_ALPHA:\n      default:\n        {\n          throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`);\n        }\n      /* eslint-enable unicorn/no-useless-switch-case */\n    }\n  }\n  // https://www.w3.org/TR/PNG/#11iCCP\n  decodeiCCP(length) {\n    const name = readKeyword(this);\n    const compressionMethod = this.readUint8();\n    if (compressionMethod !== CompressionMethod.DEFLATE) {\n      throw new Error(`Unsupported iCCP compression method: ${compressionMethod}`);\n    }\n    const compressedProfile = this.readBytes(length - name.length - 2);\n    this._png.iccEmbeddedProfile = {\n      name,\n      profile: inflate(compressedProfile)\n    };\n  }\n  // https://www.w3.org/TR/PNG/#11pHYs\n  decodepHYs() {\n    const ppuX = this.readUint32();\n    const ppuY = this.readUint32();\n    const unitSpecifier = this.readByte();\n    this._png.resolution = {\n      x: ppuX,\n      y: ppuY,\n      unit: unitSpecifier\n    };\n  }\n  decodeApngImage() {\n    this._apng.width = this._png.width;\n    this._apng.height = this._png.height;\n    this._apng.channels = this._png.channels;\n    this._apng.depth = this._png.depth;\n    this._apng.numberOfFrames = this._numberOfFrames;\n    this._apng.numberOfPlays = this._numberOfPlays;\n    this._apng.text = this._png.text;\n    this._apng.resolution = this._png.resolution;\n    for (let i = 0; i < this._numberOfFrames; i++) {\n      const newFrame = {\n        sequenceNumber: this._frames[i].sequenceNumber,\n        delayNumber: this._frames[i].delayNumber,\n        delayDenominator: this._frames[i].delayDenominator,\n        data: this._apng.depth === 8 ? new Uint8Array(this._apng.width * this._apng.height * this._apng.channels) : new Uint16Array(this._apng.width * this._apng.height * this._apng.channels)\n      };\n      const frame = this._frames.at(i);\n      if (frame) {\n        frame.data = decodeInterlaceNull({\n          data: frame.data,\n          width: frame.width,\n          height: frame.height,\n          channels: this._apng.channels,\n          depth: this._apng.depth\n        });\n        if (this._hasPalette) {\n          this._apng.palette = this._palette;\n        }\n        if (this._hasTransparency) {\n          this._apng.transparency = this._transparency;\n        }\n        if (i === 0 || frame.xOffset === 0 && frame.yOffset === 0 && frame.width === this._png.width && frame.height === this._png.height) {\n          newFrame.data = frame.data;\n        } else {\n          const prevFrame = this._apng.frames.at(i - 1);\n          this.disposeFrame(frame, prevFrame, newFrame);\n          this.addFrameDataToCanvas(newFrame, frame);\n        }\n        this._apng.frames.push(newFrame);\n      }\n    }\n    return this._apng;\n  }\n  disposeFrame(frame, prevFrame, imageFrame) {\n    switch (frame.disposeOp) {\n      case DisposeOpType.NONE:\n        break;\n      case DisposeOpType.BACKGROUND:\n        for (let row = 0; row < this._png.height; row++) {\n          for (let col = 0; col < this._png.width; col++) {\n            const index = (row * frame.width + col) * this._png.channels;\n            for (let channel = 0; channel < this._png.channels; channel++) {\n              imageFrame.data[index + channel] = 0;\n            }\n          }\n        }\n        break;\n      case DisposeOpType.PREVIOUS:\n        imageFrame.data.set(prevFrame.data);\n        break;\n      default:\n        throw new Error('Unknown disposeOp');\n    }\n  }\n  addFrameDataToCanvas(imageFrame, frame) {\n    const maxValue = 1 << this._png.depth;\n    const calculatePixelIndices = (row, col) => {\n      const index = ((row + frame.yOffset) * this._png.width + frame.xOffset + col) * this._png.channels;\n      const frameIndex = (row * frame.width + col) * this._png.channels;\n      return {\n        index,\n        frameIndex\n      };\n    };\n    switch (frame.blendOp) {\n      case BlendOpType.SOURCE:\n        for (let row = 0; row < frame.height; row++) {\n          for (let col = 0; col < frame.width; col++) {\n            const {\n              index,\n              frameIndex\n            } = calculatePixelIndices(row, col);\n            for (let channel = 0; channel < this._png.channels; channel++) {\n              imageFrame.data[index + channel] = frame.data[frameIndex + channel];\n            }\n          }\n        }\n        break;\n      // https://www.w3.org/TR/png-3/#13Alpha-channel-processing\n      case BlendOpType.OVER:\n        for (let row = 0; row < frame.height; row++) {\n          for (let col = 0; col < frame.width; col++) {\n            const {\n              index,\n              frameIndex\n            } = calculatePixelIndices(row, col);\n            for (let channel = 0; channel < this._png.channels; channel++) {\n              const sourceAlpha = frame.data[frameIndex + this._png.channels - 1] / maxValue;\n              const foregroundValue = channel % (this._png.channels - 1) === 0 ? 1 : frame.data[frameIndex + channel];\n              const value = Math.floor(sourceAlpha * foregroundValue + (1 - sourceAlpha) * imageFrame.data[index + channel]);\n              imageFrame.data[index + channel] += value;\n            }\n          }\n        }\n        break;\n      default:\n        throw new Error('Unknown blendOp');\n    }\n  }\n  decodeImage() {\n    if (this._inflator.err) {\n      throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n    }\n    const data = this._isAnimated ? (this._frames?.at(0)).data : this._inflator.result;\n    if (this._filterMethod !== FilterMethod.ADAPTIVE) {\n      throw new Error(`Filter method ${this._filterMethod} not supported`);\n    }\n    if (this._interlaceMethod === InterlaceMethod.NO_INTERLACE) {\n      this._png.data = decodeInterlaceNull({\n        data: data,\n        width: this._png.width,\n        height: this._png.height,\n        channels: this._png.channels,\n        depth: this._png.depth\n      });\n    } else if (this._interlaceMethod === InterlaceMethod.ADAM7) {\n      this._png.data = decodeInterlaceAdam7({\n        data: data,\n        width: this._png.width,\n        height: this._png.height,\n        channels: this._png.channels,\n        depth: this._png.depth\n      });\n    } else {\n      throw new Error(`Interlace method ${this._interlaceMethod} not supported`);\n    }\n    if (this._hasPalette) {\n      this._png.palette = this._palette;\n    }\n    if (this._hasTransparency) {\n      this._png.transparency = this._transparency;\n    }\n  }\n  pushDataToFrame() {\n    const result = this._inflator.result;\n    const lastFrame = this._frames.at(-1);\n    if (lastFrame) {\n      lastFrame.data = result;\n    } else {\n      this._frames.push({\n        sequenceNumber: 0,\n        width: this._png.width,\n        height: this._png.height,\n        xOffset: 0,\n        yOffset: 0,\n        delayNumber: 0,\n        delayDenominator: 0,\n        disposeOp: DisposeOpType.NONE,\n        blendOp: BlendOpType.SOURCE,\n        data: result\n      });\n    }\n    this._inflator = new Inflator();\n    this._writingDataChunks = false;\n  }\n}\nfunction checkBitDepth(value) {\n  if (value !== 1 && value !== 2 && value !== 4 && value !== 8 && value !== 16) {\n    throw new Error(`invalid bit depth: ${value}`);\n  }\n  return value;\n}","map":{"version":3,"names":["IOBuffer","inflate","Inflate","Inflator","checkCrc","decodeInterlaceAdam7","decodeInterlaceNull","checkSignature","decodetEXt","readKeyword","textChunkName","ColorType","CompressionMethod","DisposeOpType","FilterMethod","InterlaceMethod","BlendOpType","PngDecoder","constructor","data","options","_defineProperty","_checkCrc","_inflator","_png","width","height","channels","Uint8Array","depth","text","_apng","numberOfFrames","numberOfPlays","frames","_end","_hasPalette","_palette","_hasTransparency","_transparency","Uint16Array","_compressionMethod","UNKNOWN","_filterMethod","_interlaceMethod","_colorType","_isAnimated","_numberOfFrames","_numberOfPlays","_frames","_writingDataChunks","setBigEndian","decode","length","readUint32","type","readChars","decodeChunk","decodeImage","decodeApng","decodeApngChunk","decodeApngImage","offset","decodeIHDR","decodePLTE","decodeIDAT","decodetRNS","decodeiCCP","decodepHYs","skip","Error","pushDataToFrame","decodeACTL","decodeFCTL","decodeFDAT","image","checkBitDepth","readUint8","colorType","GREYSCALE","TRUECOLOUR","INDEXED_COLOUR","GREYSCALE_ALPHA","TRUECOLOUR_ALPHA","DEFLATE","sequenceNumber","xOffset","yOffset","delayNumber","readUint16","delayDenominator","disposeOp","blendOp","push","RangeError","l","palette","i","dataLength","dataOffset","byteOffset","buffer","err","alpha","readByte","name","compressionMethod","compressedProfile","readBytes","iccEmbeddedProfile","profile","ppuX","ppuY","unitSpecifier","resolution","x","y","unit","newFrame","frame","at","transparency","prevFrame","disposeFrame","addFrameDataToCanvas","imageFrame","NONE","BACKGROUND","row","col","index","channel","PREVIOUS","set","maxValue","calculatePixelIndices","frameIndex","SOURCE","OVER","sourceAlpha","foregroundValue","value","Math","floor","result","ADAPTIVE","NO_INTERLACE","ADAM7","lastFrame"],"sources":["../src/PngDecoder.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}