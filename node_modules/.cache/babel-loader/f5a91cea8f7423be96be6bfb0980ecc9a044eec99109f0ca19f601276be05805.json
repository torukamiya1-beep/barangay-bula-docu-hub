{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport default {\n  name: 'AuthorizedPickupDocumentsModal',\n  props: {\n    request: {\n      type: Object,\n      default: null\n    },\n    processing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['verify', 'reject'],\n  data() {\n    return {\n      loading: false,\n      error: null,\n      documentBlobUrls: {}\n    };\n  },\n  computed: {\n    hasDocuments() {\n      return this.request?.authorized_pickup && (this.request.authorized_pickup.id_image_path || this.request.authorized_pickup.authorization_letter_path);\n    },\n    canVerify() {\n      return this.request?.authorized_pickup?.verification_status !== 'verified';\n    },\n    isVerified() {\n      return this.request?.authorized_pickup?.verification_status === 'verified';\n    }\n  },\n  watch: {\n    request: {\n      handler(newRequest) {\n        if (newRequest) {\n          console.log('AuthorizedPickupDocumentsModal - Request data:', newRequest);\n          console.log('AuthorizedPickupDocumentsModal - Authorized pickup:', newRequest.authorized_pickup);\n          if (newRequest.authorized_pickup) {\n            console.log('AuthorizedPickupDocumentsModal - ID image path:', newRequest.authorized_pickup.id_image_path);\n            console.log('AuthorizedPickupDocumentsModal - Auth letter path:', newRequest.authorized_pickup.authorization_letter_path);\n            console.log('AuthorizedPickupDocumentsModal - Pickup person ID:', newRequest.authorized_pickup.id);\n          }\n          this.loadDocuments();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async loadDocuments() {\n      if (!this.request || !this.hasDocuments) return;\n      this.loading = true;\n      this.error = null;\n      this.documentBlobUrls = {};\n      try {\n        // Load ID document\n        if (this.request.authorized_pickup?.id_image_path) {\n          await this.loadDocument('pickup-id', this.request.authorized_pickup.id_image_path);\n        }\n\n        // Load authorization letter\n        if (this.request.authorized_pickup?.authorization_letter_path) {\n          await this.loadDocument('pickup-auth', this.request.authorized_pickup.authorization_letter_path);\n        }\n      } catch (error) {\n        console.error('Error loading pickup documents:', error);\n        this.error = 'Failed to load documents. Please try again.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadDocument(type, filename) {\n      try {\n        console.log(`Loading ${type} document from path: \"${filename}\"`);\n\n        // Convert database path to web-accessible URL\n        const webUrl = this.convertPathToUrl(filename);\n        console.log(`Converted to web URL: ${webUrl}`);\n        if (!webUrl) {\n          console.error('Could not convert path to URL');\n          return;\n        }\n\n        // Use fetch directly instead of api (which adds /api prefix)\n        const response = await fetch(`http://localhost:7000${webUrl}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        this.documentBlobUrls[type] = url;\n        console.log(`Successfully loaded ${type} document`);\n      } catch (error) {\n        console.error(`Error loading ${type} document:`, error);\n        console.error(`Failed URL: http://localhost:7000${this.convertPathToUrl(filename)}`);\n        // Don't throw here, just log the error for individual documents\n      }\n    },\n    convertPathToUrl(dbPath) {\n      if (!dbPath) return null;\n\n      // Convert database path to web URL\n      // From: \"uploads\\\\verification\\\\pickup_authorization\\\\filename.jpg\"\n      // To: \"/uploads/verification/pickup_authorization/filename.jpg\"\n\n      let webPath = dbPath;\n\n      // Replace backslashes with forward slashes\n      webPath = webPath.replace(/\\\\/g, '/');\n\n      // Ensure it starts with /\n      if (!webPath.startsWith('/')) {\n        webPath = '/' + webPath;\n      }\n      console.log(`Path conversion: \"${dbPath}\" -> \"${webPath}\"`);\n      return webPath;\n    },\n    viewDocument(type) {\n      let filename = '';\n      switch (type) {\n        case 'pickup-id':\n          filename = this.request.authorized_pickup?.id_image_path;\n          break;\n        case 'pickup-auth':\n          filename = this.request.authorized_pickup?.authorization_letter_path;\n          break;\n        default:\n          return;\n      }\n      if (!filename) return;\n\n      // Convert database path to web-accessible URL\n      const webUrl = this.convertPathToUrl(filename);\n      const fullUrl = `http://localhost:7000${webUrl}`;\n      console.log(`Opening document: ${fullUrl}`);\n      if (webUrl) {\n        window.open(fullUrl, '_blank');\n      }\n    },\n    getFileName(path) {\n      return path ? path.split('/').pop() : 'Unknown';\n    },\n    getStatusBadgeClass(status) {\n      const statusMap = {\n        'pending': 'bg-warning text-dark',\n        'processing': 'bg-info',\n        'approved': 'bg-success',\n        'rejected': 'bg-danger',\n        'completed': 'bg-success'\n      };\n      return statusMap[status?.toLowerCase()] || 'bg-secondary';\n    },\n    getVerificationStatusClass(status) {\n      const statusMap = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n      return statusMap[status?.toLowerCase()] || 'bg-secondary';\n    },\n    formatVerificationStatus(status) {\n      if (!status) return 'Pending';\n      return status.charAt(0).toUpperCase() + status.slice(1);\n    },\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    handleImageError(event) {\n      console.error('Image failed to load:', event.target.src);\n      event.target.style.display = 'none';\n    }\n  },\n  beforeUnmount() {\n    // Clean up blob URLs to prevent memory leaks\n    Object.values(this.documentBlobUrls).forEach(url => {\n      URL.revokeObjectURL(url);\n    });\n  }\n};","map":{"version":3,"names":["name","props","request","type","Object","default","processing","Boolean","emits","data","loading","error","documentBlobUrls","computed","hasDocuments","authorized_pickup","id_image_path","authorization_letter_path","canVerify","verification_status","isVerified","watch","handler","newRequest","console","log","id","loadDocuments","immediate","methods","loadDocument","filename","webUrl","convertPathToUrl","response","fetch","ok","Error","status","blob","url","URL","createObjectURL","dbPath","webPath","replace","startsWith","viewDocument","fullUrl","window","open","getFileName","path","split","pop","getStatusBadgeClass","statusMap","toLowerCase","getVerificationStatusClass","formatVerificationStatus","charAt","toUpperCase","slice","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","handleImageError","event","target","src","style","display","beforeUnmount","values","forEach","revokeObjectURL"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AuthorizedPickupDocumentsModal.vue"],"sourcesContent":["<template>\n  <div class=\"modal fade\" id=\"authorizedPickupDocumentsModal\" tabindex=\"-1\" aria-labelledby=\"authorizedPickupDocumentsModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"authorizedPickupDocumentsModalLabel\">\n            <i class=\"fas fa-hand-paper me-2\"></i>\n            Authorized Pickup Documents Review\n          </h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div v-if=\"request\">\n            <!-- Request Information -->\n            <div class=\"row mb-4\">\n              <div class=\"col-12\">\n                <div class=\"card bg-light\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">\n                      <i class=\"fas fa-file-alt me-2\"></i>\n                      Request Information\n                    </h6>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <p><strong>Request Number:</strong> {{ request.request_number }}</p>\n                        <p><strong>Document Type:</strong> {{ request.document_type }}</p>\n                        <p><strong>Requestor:</strong> {{ request.client_name }}</p>\n                      </div>\n\n                       <!-- ill comment status for now because I dont need it to be display\n                      ill comment request date for now because I dont need it to be display -->\n\n                      <!-- <div class=\"col-md-6\">\n                        <p><strong>Status:</strong>\n                          <span class=\"badge\" :class=\"getStatusBadgeClass(request.status_name)\">\n                            {{ request.status_name }}\n                          </span>\n                        </p>\n                        <p><strong>Request Date:</strong> {{ formatDate(request.created_at) }}</p>\n                      </div> -->\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Authorized Pickup Person Information -->\n            <div v-if=\"request.authorized_pickup\" class=\"row mb-4\">\n              <div class=\"col-12\">\n                <div class=\"card\">\n                  <div class=\"card-header bg-warning-subtle\">\n                    <h6 class=\"mb-0\">\n                      <i class=\"fas fa-user me-2\"></i>\n                      Authorized Pickup Person Details\n                    </h6>\n                  </div>\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <p><strong>Full Name:</strong> {{ request.authorized_pickup.full_name }}</p>\n                        <p><strong>Phone:</strong> {{ request.authorized_pickup.phone_number || 'Not provided' }}</p>\n                        \n                        <!-- ill comment email for now because I dont need it to be display -->\n                        <!-- <p><strong>Email:</strong> {{ request.authorized_pickup.email || 'Not provided' }}</p> -->\n                      </div>\n                      <div class=\"col-md-6\">\n                        <p><strong>Relationship:</strong> {{ request.authorized_pickup.relationship_to_beneficiary }}</p>\n                        \n                        <!-- ill comment the verification status because I dont need it to be display -->\n                        <!-- <p><strong>Verification Status:</strong>\n                          <span class=\"badge\" :class=\"getVerificationStatusClass(request.authorized_pickup.verification_status)\">\n                            {{ formatVerificationStatus(request.authorized_pickup.verification_status) }}\n                          </span>\n                        </p> -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Documents Section -->\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h6 class=\"mb-3\">\n                  <i class=\"fas fa-folder-open me-2\"></i>\n                  Uploaded Documents\n                </h6>\n\n                <!-- Loading State -->\n                <div v-if=\"loading\" class=\"text-center py-4\">\n                  <div class=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading documents...</span>\n                  </div>\n                  <p class=\"mt-2\">Loading documents...</p>\n                </div>\n\n                <!-- Error State -->\n                <div v-else-if=\"error\" class=\"alert alert-danger\">\n                  <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                  {{ error }}\n                </div>\n\n                <!-- No Documents -->\n                <div v-else-if=\"!hasDocuments\" class=\"text-center py-4\">\n                  <i class=\"fas fa-file-slash fa-3x text-muted mb-3\"></i>\n                  <p class=\"text-muted\">No pickup authorization documents found for this request.</p>\n                </div>\n\n                <!-- Documents Grid -->\n                <div v-else class=\"row\">\n                  <!-- ID Document -->\n                  <div v-if=\"request.authorized_pickup?.id_image_path\" class=\"col-md-6 mb-3\">\n                    <div class=\"card h-100 document-card\">\n                      <!-- Document Preview -->\n                      <div class=\"card-img-top document-preview\" @click=\"viewDocument('pickup-id')\">\n                        <img\n                          v-if=\"documentBlobUrls['pickup-id']\"\n                          :src=\"documentBlobUrls['pickup-id']\"\n                          alt=\"Pickup Person ID\"\n                          class=\"preview-image\"\n                          @error=\"handleImageError\"\n                        />\n                        <div v-else class=\"loading-preview\">\n                          <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                          </div>\n                        </div>\n                        <div class=\"preview-overlay\">\n                          <i class=\"fas fa-eye fa-2x\"></i>\n                        </div>\n                      </div>\n                      \n                      <div class=\"card-header d-flex justify-content-between align-items-center\">\n                        <h6 class=\"mb-0\">\n                          <i class=\"fas fa-id-card me-2\"></i>\n                          ID Document\n                        </h6>\n                        <!-- <span class=\"badge bg-info\">Required</span> -->\n                      </div>\n                      <div class=\"card-body\">\n                        <p class=\"card-text\">\n                          <strong>File:</strong> {{ getFileName(request.authorized_pickup?.id_image_path) }}<br>\n                          <strong>Type:</strong> Government-issued ID\n                        </p>\n                        <div class=\"d-grid\">\n                          <button class=\"btn btn-outline-primary btn-sm\" @click=\"viewDocument('pickup-id')\">\n                            <i class=\"fas fa-eye me-1\"></i>\n                            View Document\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Authorization Letter -->\n                  <div v-if=\"request.authorized_pickup?.authorization_letter_path\" class=\"col-md-6 mb-3\">\n                    <div class=\"card h-100 document-card\">\n                      <!-- Document Preview -->\n                      <div class=\"card-img-top document-preview\" @click=\"viewDocument('pickup-auth')\">\n                        <img\n                          v-if=\"documentBlobUrls['pickup-auth']\"\n                          :src=\"documentBlobUrls['pickup-auth']\"\n                          alt=\"Authorization Letter\"\n                          class=\"preview-image\"\n                          @error=\"handleImageError\"\n                        />\n                        <div v-else class=\"loading-preview\">\n                          <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                          </div>\n                        </div>\n                        <div class=\"preview-overlay\">\n                          <i class=\"fas fa-eye fa-2x\"></i>\n                        </div>\n                      </div>\n                      \n                      <div class=\"card-header d-flex justify-content-between align-items-center\">\n                        <h6 class=\"mb-0\">\n                          <i class=\"fas fa-file-signature me-2\"></i>\n                          Authorization Letter\n                        </h6>\n                        <!-- <span class=\"badge bg-info\">Required</span> -->\n                      </div>\n                      <div class=\"card-body\">\n                        <p class=\"card-text\">\n                          <strong>File:</strong> {{ getFileName(request.authorized_pickup?.authorization_letter_path) }}<br>\n                          <strong>Type:</strong> Signed authorization letter\n                        </p>\n                        <div class=\"d-grid\">\n                          <button class=\"btn btn-outline-primary btn-sm\" @click=\"viewDocument('pickup-auth')\">\n                            <i class=\"fas fa-eye me-1\"></i>\n                            View Document\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <!-- Show verification buttons if documents exist and are not verified -->\n          <div v-if=\"hasDocuments && canVerify\" class=\"ms-auto\">\n            <!-- ill comment this button for now  -->\n            <!-- <button\n              type=\"button\"\n              class=\"btn btn-danger me-2\"\n              @click=\"$emit('reject')\"\n              :disabled=\"processing\"\n            >\n              <i class=\"fas fa-times me-1\"></i>\n              Reject\n            </button> -->\n\n            <!-- ill comment this button because I dont need it for now -->\n            <!-- <button\n              type=\"button\"\n              class=\"btn btn-success\"\n              @click=\"$emit('verify')\"\n              :disabled=\"processing\"\n            >\n              <span v-if=\"processing\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n              <i v-else class=\"fas fa-check me-1\"></i>\n              Verify\n            </button> -->\n          </div>\n          <!-- Show status message when verified -->\n          <div v-else-if=\"isVerified\" class=\"ms-auto\">\n            <span class=\"badge bg-success fs-6\">\n              <i class=\"fas fa-check me-1\"></i>\n              Documents Verified\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'AuthorizedPickupDocumentsModal',\n  props: {\n    request: {\n      type: Object,\n      default: null\n    },\n    processing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['verify', 'reject'],\n  \n  data() {\n    return {\n      loading: false,\n      error: null,\n      documentBlobUrls: {}\n    };\n  },\n\n  computed: {\n    hasDocuments() {\n      return this.request?.authorized_pickup && (\n        this.request.authorized_pickup.id_image_path ||\n        this.request.authorized_pickup.authorization_letter_path\n      );\n    },\n\n    canVerify() {\n      return this.request?.authorized_pickup?.verification_status !== 'verified';\n    },\n\n    isVerified() {\n      return this.request?.authorized_pickup?.verification_status === 'verified';\n    }\n  },\n\n  watch: {\n    request: {\n      handler(newRequest) {\n        if (newRequest) {\n          console.log('AuthorizedPickupDocumentsModal - Request data:', newRequest);\n          console.log('AuthorizedPickupDocumentsModal - Authorized pickup:', newRequest.authorized_pickup);\n          if (newRequest.authorized_pickup) {\n            console.log('AuthorizedPickupDocumentsModal - ID image path:', newRequest.authorized_pickup.id_image_path);\n            console.log('AuthorizedPickupDocumentsModal - Auth letter path:', newRequest.authorized_pickup.authorization_letter_path);\n            console.log('AuthorizedPickupDocumentsModal - Pickup person ID:', newRequest.authorized_pickup.id);\n          }\n          this.loadDocuments();\n        }\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    async loadDocuments() {\n      if (!this.request || !this.hasDocuments) return;\n\n      this.loading = true;\n      this.error = null;\n      this.documentBlobUrls = {};\n\n      try {\n        // Load ID document\n        if (this.request.authorized_pickup?.id_image_path) {\n          await this.loadDocument('pickup-id', this.request.authorized_pickup.id_image_path);\n        }\n\n        // Load authorization letter\n        if (this.request.authorized_pickup?.authorization_letter_path) {\n          await this.loadDocument('pickup-auth', this.request.authorized_pickup.authorization_letter_path);\n        }\n      } catch (error) {\n        console.error('Error loading pickup documents:', error);\n        this.error = 'Failed to load documents. Please try again.';\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async loadDocument(type, filename) {\n      try {\n        console.log(`Loading ${type} document from path: \"${filename}\"`);\n\n        // Convert database path to web-accessible URL\n        const webUrl = this.convertPathToUrl(filename);\n        console.log(`Converted to web URL: ${webUrl}`);\n\n        if (!webUrl) {\n          console.error('Could not convert path to URL');\n          return;\n        }\n\n        // Use fetch directly instead of api (which adds /api prefix)\n        const response = await fetch(`http://localhost:7000${webUrl}`);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        this.documentBlobUrls[type] = url;\n        console.log(`Successfully loaded ${type} document`);\n      } catch (error) {\n        console.error(`Error loading ${type} document:`, error);\n        console.error(`Failed URL: http://localhost:7000${this.convertPathToUrl(filename)}`);\n        // Don't throw here, just log the error for individual documents\n      }\n    },\n\n    convertPathToUrl(dbPath) {\n      if (!dbPath) return null;\n\n      // Convert database path to web URL\n      // From: \"uploads\\\\verification\\\\pickup_authorization\\\\filename.jpg\"\n      // To: \"/uploads/verification/pickup_authorization/filename.jpg\"\n\n      let webPath = dbPath;\n\n      // Replace backslashes with forward slashes\n      webPath = webPath.replace(/\\\\/g, '/');\n\n      // Ensure it starts with /\n      if (!webPath.startsWith('/')) {\n        webPath = '/' + webPath;\n      }\n\n      console.log(`Path conversion: \"${dbPath}\" -> \"${webPath}\"`);\n      return webPath;\n    },\n\n    viewDocument(type) {\n      let filename = '';\n      switch (type) {\n        case 'pickup-id':\n          filename = this.request.authorized_pickup?.id_image_path;\n          break;\n        case 'pickup-auth':\n          filename = this.request.authorized_pickup?.authorization_letter_path;\n          break;\n        default:\n          return;\n      }\n\n      if (!filename) return;\n\n      // Convert database path to web-accessible URL\n      const webUrl = this.convertPathToUrl(filename);\n      const fullUrl = `http://localhost:7000${webUrl}`;\n      console.log(`Opening document: ${fullUrl}`);\n\n      if (webUrl) {\n        window.open(fullUrl, '_blank');\n      }\n    },\n\n    getFileName(path) {\n      return path ? path.split('/').pop() : 'Unknown';\n    },\n\n    getStatusBadgeClass(status) {\n      const statusMap = {\n        'pending': 'bg-warning text-dark',\n        'processing': 'bg-info',\n        'approved': 'bg-success',\n        'rejected': 'bg-danger',\n        'completed': 'bg-success'\n      };\n      return statusMap[status?.toLowerCase()] || 'bg-secondary';\n    },\n\n    getVerificationStatusClass(status) {\n      const statusMap = {\n        'pending': 'bg-warning text-dark',\n        'verified': 'bg-success',\n        'rejected': 'bg-danger'\n      };\n      return statusMap[status?.toLowerCase()] || 'bg-secondary';\n    },\n\n    formatVerificationStatus(status) {\n      if (!status) return 'Pending';\n      return status.charAt(0).toUpperCase() + status.slice(1);\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    handleImageError(event) {\n      console.error('Image failed to load:', event.target.src);\n      event.target.style.display = 'none';\n    }\n  },\n\n  beforeUnmount() {\n    // Clean up blob URLs to prevent memory leaks\n    Object.values(this.documentBlobUrls).forEach(url => {\n      URL.revokeObjectURL(url);\n    });\n  }\n};\n</script>\n\n<style scoped>\n.document-card {\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid #dee2e6;\n}\n\n.document-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.document-preview {\n  position: relative;\n  height: 200px;\n  overflow: hidden;\n  cursor: pointer;\n  background: #f8f9fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.document-preview:hover .preview-image {\n  transform: scale(1.05);\n}\n\n.loading-preview {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #6c757d;\n}\n\n.preview-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  color: white;\n}\n\n.document-preview:hover .preview-overlay {\n  opacity: 1;\n}\n\n.card-header h6 {\n  font-size: 0.9rem;\n  font-weight: 600;\n}\n\n.card-text {\n  font-size: 0.85rem;\n  line-height: 1.4;\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n</style>\n"],"mappings":";;AAsPA,eAAe;EACbA,IAAI,EAAE,gCAAgC;EACtCC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;EAE3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,gBAAgB,EAAE,CAAC;IACrB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACZ,OAAO,EAAEa,iBAAgB,KACnC,IAAI,CAACb,OAAO,CAACa,iBAAiB,CAACC,aAAY,IAC3C,IAAI,CAACd,OAAO,CAACa,iBAAiB,CAACE,yBAAwB,CACxD;IACH,CAAC;IAEDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAChB,OAAO,EAAEa,iBAAiB,EAAEI,mBAAkB,KAAM,UAAU;IAC5E,CAAC;IAEDC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAClB,OAAO,EAAEa,iBAAiB,EAAEI,mBAAkB,KAAM,UAAU;IAC5E;EACF,CAAC;EAEDE,KAAK,EAAE;IACLnB,OAAO,EAAE;MACPoB,OAAOA,CAACC,UAAU,EAAE;QAClB,IAAIA,UAAU,EAAE;UACdC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEF,UAAU,CAAC;UACzEC,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEF,UAAU,CAACR,iBAAiB,CAAC;UAChG,IAAIQ,UAAU,CAACR,iBAAiB,EAAE;YAChCS,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEF,UAAU,CAACR,iBAAiB,CAACC,aAAa,CAAC;YAC1GQ,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEF,UAAU,CAACR,iBAAiB,CAACE,yBAAyB,CAAC;YACzHO,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEF,UAAU,CAACR,iBAAiB,CAACW,EAAE,CAAC;UACpG;UACA,IAAI,CAACC,aAAa,CAAC,CAAC;QACtB;MACF,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMF,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACzB,OAAM,IAAK,CAAC,IAAI,CAACY,YAAY,EAAE;MAEzC,IAAI,CAACJ,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI,CAACC,gBAAe,GAAI,CAAC,CAAC;MAE1B,IAAI;QACF;QACA,IAAI,IAAI,CAACV,OAAO,CAACa,iBAAiB,EAAEC,aAAa,EAAE;UACjD,MAAM,IAAI,CAACc,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC5B,OAAO,CAACa,iBAAiB,CAACC,aAAa,CAAC;QACpF;;QAEA;QACA,IAAI,IAAI,CAACd,OAAO,CAACa,iBAAiB,EAAEE,yBAAyB,EAAE;UAC7D,MAAM,IAAI,CAACa,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC5B,OAAO,CAACa,iBAAiB,CAACE,yBAAyB,CAAC;QAClG;MACF,EAAE,OAAON,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAACA,KAAI,GAAI,6CAA6C;MAC5D,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED,MAAMoB,YAAYA,CAAC3B,IAAI,EAAE4B,QAAQ,EAAE;MACjC,IAAI;QACFP,OAAO,CAACC,GAAG,CAAC,WAAWtB,IAAI,yBAAyB4B,QAAQ,GAAG,CAAC;;QAEhE;QACA,MAAMC,MAAK,GAAI,IAAI,CAACC,gBAAgB,CAACF,QAAQ,CAAC;QAC9CP,OAAO,CAACC,GAAG,CAAC,yBAAyBO,MAAM,EAAE,CAAC;QAE9C,IAAI,CAACA,MAAM,EAAE;UACXR,OAAO,CAACb,KAAK,CAAC,+BAA+B,CAAC;UAC9C;QACF;;QAEA;QACA,MAAMuB,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwBH,MAAM,EAAE,CAAC;QAE9D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAG,GAAI,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;QACrC,IAAI,CAAC3B,gBAAgB,CAACT,IAAI,IAAIqC,GAAG;QACjChB,OAAO,CAACC,GAAG,CAAC,uBAAuBtB,IAAI,WAAW,CAAC;MACrD,EAAE,OAAOQ,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,iBAAiBR,IAAI,YAAY,EAAEQ,KAAK,CAAC;QACvDa,OAAO,CAACb,KAAK,CAAC,oCAAoC,IAAI,CAACsB,gBAAgB,CAACF,QAAQ,CAAC,EAAE,CAAC;QACpF;MACF;IACF,CAAC;IAEDE,gBAAgBA,CAACU,MAAM,EAAE;MACvB,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;;MAExB;MACA;MACA;;MAEA,IAAIC,OAAM,GAAID,MAAM;;MAEpB;MACAC,OAAM,GAAIA,OAAO,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;;MAErC;MACA,IAAI,CAACD,OAAO,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;QAC5BF,OAAM,GAAI,GAAE,GAAIA,OAAO;MACzB;MAEApB,OAAO,CAACC,GAAG,CAAC,qBAAqBkB,MAAM,SAASC,OAAO,GAAG,CAAC;MAC3D,OAAOA,OAAO;IAChB,CAAC;IAEDG,YAAYA,CAAC5C,IAAI,EAAE;MACjB,IAAI4B,QAAO,GAAI,EAAE;MACjB,QAAQ5B,IAAI;QACV,KAAK,WAAW;UACd4B,QAAO,GAAI,IAAI,CAAC7B,OAAO,CAACa,iBAAiB,EAAEC,aAAa;UACxD;QACF,KAAK,aAAa;UAChBe,QAAO,GAAI,IAAI,CAAC7B,OAAO,CAACa,iBAAiB,EAAEE,yBAAyB;UACpE;QACF;UACE;MACJ;MAEA,IAAI,CAACc,QAAQ,EAAE;;MAEf;MACA,MAAMC,MAAK,GAAI,IAAI,CAACC,gBAAgB,CAACF,QAAQ,CAAC;MAC9C,MAAMiB,OAAM,GAAI,wBAAwBhB,MAAM,EAAE;MAChDR,OAAO,CAACC,GAAG,CAAC,qBAAqBuB,OAAO,EAAE,CAAC;MAE3C,IAAIhB,MAAM,EAAE;QACViB,MAAM,CAACC,IAAI,CAACF,OAAO,EAAE,QAAQ,CAAC;MAChC;IACF,CAAC;IAEDG,WAAWA,CAACC,IAAI,EAAE;MAChB,OAAOA,IAAG,GAAIA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,IAAI,SAAS;IACjD,CAAC;IAEDC,mBAAmBA,CAACjB,MAAM,EAAE;MAC1B,MAAMkB,SAAQ,GAAI;QAChB,SAAS,EAAE,sBAAsB;QACjC,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,YAAY;QACxB,UAAU,EAAE,WAAW;QACvB,WAAW,EAAE;MACf,CAAC;MACD,OAAOA,SAAS,CAAClB,MAAM,EAAEmB,WAAW,CAAC,CAAC,KAAK,cAAc;IAC3D,CAAC;IAEDC,0BAA0BA,CAACpB,MAAM,EAAE;MACjC,MAAMkB,SAAQ,GAAI;QAChB,SAAS,EAAE,sBAAsB;QACjC,UAAU,EAAE,YAAY;QACxB,UAAU,EAAE;MACd,CAAC;MACD,OAAOA,SAAS,CAAClB,MAAM,EAAEmB,WAAW,CAAC,CAAC,KAAK,cAAc;IAC3D,CAAC;IAEDE,wBAAwBA,CAACrB,MAAM,EAAE;MAC/B,IAAI,CAACA,MAAM,EAAE,OAAO,SAAS;MAC7B,OAAOA,MAAM,CAACsB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIvB,MAAM,CAACwB,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;IAEDC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;MAC7B,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAEDC,gBAAgBA,CAACC,KAAK,EAAE;MACtBjD,OAAO,CAACb,KAAK,CAAC,uBAAuB,EAAE8D,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC;MACxDF,KAAK,CAACC,MAAM,CAACE,KAAK,CAACC,OAAM,GAAI,MAAM;IACrC;EACF,CAAC;EAEDC,aAAaA,CAAA,EAAG;IACd;IACA1E,MAAM,CAAC2E,MAAM,CAAC,IAAI,CAACnE,gBAAgB,CAAC,CAACoE,OAAO,CAACxC,GAAE,IAAK;MAClDC,GAAG,CAACwC,eAAe,CAACzC,GAAG,CAAC;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}