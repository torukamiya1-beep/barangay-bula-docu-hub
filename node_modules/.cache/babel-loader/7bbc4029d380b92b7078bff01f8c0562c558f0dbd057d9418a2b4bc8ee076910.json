{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'UserProfileDropdown',\n  props: {\n    userData: {\n      type: Object,\n      default: () => ({\n        userName: 'User',\n        userEmail: 'user@example.com',\n        userAvatar: null\n      })\n    },\n    isOpen: {\n      type: Boolean,\n      default: false\n    },\n    canRequestDocuments: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: ['toggle', 'menu-action', 'logout'],\n  mounted() {\n    console.log('=== UserProfileDropdown MOUNTED ===');\n    console.log('userData prop received:', this.userData);\n    console.log('userData keys:', Object.keys(this.userData || {}));\n    console.log('userData.profile:', this.userData?.profile);\n    console.log('Initial full name:', this.getFullName());\n  },\n  methods: {\n    handleToggle() {\n      this.$emit('toggle');\n    },\n    handleMenuAction(action) {\n      this.$emit('menu-action', action);\n    },\n    handleLogout() {\n      // Confirm logout action\n      if (confirm('Are you sure you want to sign out?')) {\n        this.$emit('logout');\n      }\n    },\n    getFullName() {\n      // Debug: Log user data structure\n      console.log('UserProfileDropdown - userData:', this.userData);\n      console.log('UserProfileDropdown - userData.profile:', this.userData?.profile);\n      console.log('UserProfileDropdown - userData keys:', Object.keys(this.userData || {}));\n      if (!this.userData) {\n        return 'User';\n      }\n      const parts = [];\n\n      // Try all possible data structure patterns to ensure compatibility\n\n      // Pattern 1: Check if userData has profile object with nested properties (backend structure)\n      if (this.userData.profile && typeof this.userData.profile === 'object') {\n        const profile = this.userData.profile;\n        console.log('UserProfileDropdown - using profile object:', profile);\n        if (profile.first_name) parts.push(profile.first_name);\n        if (profile.middle_name) parts.push(profile.middle_name);\n        if (profile.last_name) parts.push(profile.last_name);\n        if (profile.suffix) parts.push(profile.suffix);\n      }\n\n      // Pattern 2: Check if profile fields are directly on userData (from useUserData composable)\n      if (parts.length === 0 && (this.userData.firstName || this.userData.lastName)) {\n        console.log('UserProfileDropdown - using direct userData properties');\n        if (this.userData.firstName) parts.push(this.userData.firstName);\n        if (this.userData.middleName) parts.push(this.userData.middleName);\n        if (this.userData.lastName) parts.push(this.userData.lastName);\n        if (this.userData.suffix) parts.push(this.userData.suffix);\n      }\n\n      // Pattern 3: Check if userData has first_name, last_name directly (raw backend data)\n      if (parts.length === 0 && (this.userData.first_name || this.userData.last_name)) {\n        console.log('UserProfileDropdown - using raw backend properties');\n        if (this.userData.first_name) parts.push(this.userData.first_name);\n        if (this.userData.middle_name) parts.push(this.userData.middle_name);\n        if (this.userData.last_name) parts.push(this.userData.last_name);\n        if (this.userData.suffix) parts.push(this.userData.suffix);\n      }\n\n      // Pattern 4: Try to extract from any nested user object\n      if (parts.length === 0 && this.userData.user && typeof this.userData.user === 'object') {\n        console.log('UserProfileDropdown - checking nested user object');\n        const user = this.userData.user;\n        if (user.profile) {\n          if (user.profile.first_name) parts.push(user.profile.first_name);\n          if (user.profile.middle_name) parts.push(user.profile.middle_name);\n          if (user.profile.last_name) parts.push(user.profile.last_name);\n          if (user.profile.suffix) parts.push(user.profile.suffix);\n        } else {\n          if (user.first_name) parts.push(user.first_name);\n          if (user.middle_name) parts.push(user.middle_name);\n          if (user.last_name) parts.push(user.last_name);\n          if (user.suffix) parts.push(user.suffix);\n        }\n      }\n      const fullName = parts.join(' ').trim();\n\n      // Final fallback to username if no name parts found\n      const result = fullName || this.userData.username || this.userData.userName || 'User';\n      console.log('UserProfileDropdown - parts found:', parts);\n      console.log('UserProfileDropdown - computed fullName:', result);\n      return result;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}