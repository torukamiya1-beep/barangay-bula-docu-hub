{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport userManagementService from '@/services/userManagementService';\nimport { Modal } from 'bootstrap';\nexport default {\n  name: 'AdminArchive',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      activeMenu: 'archive',\n      loading: false,\n      // User Data\n      archivedUsers: [],\n      viewUserData: null,\n      // Filters and Search\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      // Admin Data\n      adminData: null\n    };\n  },\n  computed: {\n    filteredUsers() {\n      let filtered = [...this.archivedUsers];\n\n      // Apply search filter\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(user => user.full_name?.toLowerCase().includes(query) || user.email?.toLowerCase().includes(query) || user.username?.toLowerCase().includes(query) || user.type?.toLowerCase().includes(query));\n      }\n      return filtered;\n    },\n    paginatedUsers() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredUsers.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredUsers.length / this.itemsPerPage);\n    },\n    visiblePages() {\n      const pages = [];\n      const start = Math.max(1, this.currentPage - 2);\n      const end = Math.min(this.totalPages, this.currentPage + 2);\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n    },\n    itemsPerPage() {\n      this.currentPage = 1;\n    }\n  },\n  async mounted() {\n    await this.loadArchivedUsers();\n  },\n  methods: {\n    // Load archived users\n    async loadArchivedUsers() {\n      try {\n        this.loading = true;\n        const response = await userManagementService.getArchivedUsers(1, 100, this.searchQuery);\n        if (response.success) {\n          this.archivedUsers = response.data.map(user => ({\n            ...user,\n            full_name: `${user.first_name || ''} ${user.last_name || ''}`.trim()\n          }));\n        } else {\n          this.showToast('error', response.message || 'Failed to load archived users');\n        }\n      } catch (error) {\n        console.error('Error loading archived users:', error);\n        this.showToast('error', 'Failed to load archived users');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // View user details\n    async viewUser(user) {\n      try {\n        // Fetch detailed user data from the API\n        const response = await userManagementService.getUser(user.id);\n        if (response.success) {\n          this.viewUserData = userManagementService.formatUserData(response.data);\n          const modal = new Modal(document.getElementById('viewUserModal'));\n          modal.show();\n        } else {\n          throw new Error(response.message || 'Failed to load user details');\n        }\n      } catch (error) {\n        console.error('Error viewing user:', error);\n        const errorMessage = error.response?.data?.message || error.message || 'Failed to load user details';\n        this.showToast('error', errorMessage);\n      }\n    },\n    // Restore user (reactivate)\n    async restoreUser(user) {\n      if (!confirm(`Are you sure you want to restore ${user.full_name}?`)) {\n        return;\n      }\n      try {\n        const response = await userManagementService.restoreUser(user.id);\n        if (response.success) {\n          this.showToast('success', `${user.full_name} has been restored successfully`);\n\n          // Remove user from archived list\n          this.archivedUsers = this.archivedUsers.filter(u => u.id !== user.id);\n\n          // Close modal if open\n          const modal = Modal.getInstance(document.getElementById('viewUserModal'));\n          if (modal) {\n            modal.hide();\n          }\n        } else {\n          this.showToast('error', response.message || 'Failed to restore user');\n        }\n      } catch (error) {\n        console.error('Error restoring user:', error);\n        this.showToast('error', 'Failed to restore user');\n      }\n    },\n    // Pagination\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    // UI Event Handlers\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n    },\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    handleMenuAction(action) {\n      if (action === 'archive') {\n        // Already on archive page\n        return;\n      }\n\n      // Navigate to other pages\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests'\n      };\n      if (routes[action]) {\n        this.$router.push(routes[action]);\n      }\n    },\n    handleLogout() {\n      // Implement logout logic\n      this.$router.push('/admin/login');\n    },\n    // Utility methods\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    showToast(type, message) {\n      // Simple alert for now - can be replaced with proper toast library\n      if (type === 'success') {\n        alert(`✅ ${message}`);\n      } else if (type === 'error') {\n        alert(`❌ ${message}`);\n      } else {\n        alert(`ℹ️ ${message}`);\n      }\n    },\n    // Get civil status label\n    getCivilStatusLabel(civilStatusId) {\n      const labels = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Widowed',\n        4: 'Divorced',\n        5: 'Separated'\n      };\n      return labels[civilStatusId] || 'Not specified';\n    },\n    // Get full address\n    getFullAddress(user) {\n      if (!user) return 'Not provided';\n      const addressParts = [user.house_number, user.street, user.subdivision, user.barangay, user.city_municipality, user.province].filter(part => part && part.trim() !== '');\n      return addressParts.length > 0 ? addressParts.join(', ') : 'Not provided';\n    },\n    // Get residency duration\n    getResidencyDuration(user) {\n      if (!user) return 'Not provided';\n      const years = user.years_of_residency || 0;\n      const months = user.months_of_residency || 0;\n      if (years === 0 && months === 0) return 'Not provided';\n      const parts = [];\n      if (years > 0) parts.push(`${years} year${years !== 1 ? 's' : ''}`);\n      if (months > 0) parts.push(`${months} month${months !== 1 ? 's' : ''}`);\n      return parts.join(', ');\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","userManagementService","Modal","name","components","data","sidebarCollapsed","showUserDropdown","activeMenu","loading","archivedUsers","viewUserData","searchQuery","currentPage","itemsPerPage","adminData","computed","filteredUsers","filtered","query","toLowerCase","filter","user","full_name","includes","email","username","type","paginatedUsers","start","end","slice","totalPages","Math","ceil","length","visiblePages","pages","max","min","i","push","watch","mounted","loadArchivedUsers","methods","response","getArchivedUsers","success","map","first_name","last_name","trim","showToast","message","error","console","viewUser","getUser","id","formatUserData","modal","document","getElementById","show","Error","errorMessage","restoreUser","confirm","u","getInstance","hide","changePage","page","handleSidebarToggle","handleUserDropdownToggle","handleMenuAction","action","routes","$router","handleLogout","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","alert","getCivilStatusLabel","civilStatusId","labels","getFullAddress","addressParts","house_number","street","subdivision","barangay","city_municipality","province","part","join","getResidencyDuration","years","years_of_residency","months","months_of_residency","parts"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminArchive.vue"],"sourcesContent":["<template>\n  <div class=\"admin-archive\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid px-4\">\n          <!-- Archive Table -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header py-3 d-flex justify-content-between align-items-center\">\n                  <h6 class=\"m-0 font-weight-bold text-primary\">\n                    <i class=\"fas fa-archive me-2\"></i>\n                    Archived Users\n                  </h6>\n                  <div class=\"d-flex gap-2 align-items-center\">\n                    <div class=\"input-group\" style=\"width: 300px;\">\n                      <span class=\"input-group-text\">\n                        <i class=\"fas fa-search\"></i>\n                      </span>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Search archived users...\"\n                        v-model=\"searchQuery\"\n                      >\n                    </div>\n                    <div class=\"d-flex align-items-center gap-2\">\n                      <label class=\"form-label mb-0 text-muted small\">Show:</label>\n                      <select class=\"form-select form-select-sm\" v-model=\"itemsPerPage\" style=\"width: auto;\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                      </select>\n                      <span class=\"text-muted small\">entries</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"card-body\">\n                  <!-- Summary Info -->\n                  <div v-if=\"!loading && archivedUsers.length > 0\" class=\"row mb-3\">\n                    <div class=\"col-md-6\">\n                      <p class=\"text-muted mb-0\">\n                        Showing {{ ((currentPage - 1) * itemsPerPage) + 1 }} to {{ Math.min(currentPage * itemsPerPage, filteredUsers.length) }}\n                        of {{ filteredUsers.length }} archived users\n                        <span v-if=\"searchQuery\">(filtered from {{ archivedUsers.length }} total)</span>\n                      </p>\n                    </div>\n                    <div class=\"col-md-6 text-end\">\n                      <small class=\"text-muted\">\n                        <i class=\"fas fa-info-circle me-1\"></i>\n                        Archived users can be restored to active status\n                      </small>\n                    </div>\n                  </div>\n\n                  <!-- Loading State -->\n                  <div v-if=\"loading\" class=\"text-center py-4\">\n                    <div class=\"spinner-border text-primary\" role=\"status\">\n                      <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <p class=\"mt-2 text-muted\">Loading archived users...</p>\n                  </div>\n\n                  <!-- Empty State -->\n                  <div v-else-if=\"!loading && filteredUsers.length === 0\" class=\"text-center py-5\">\n                    <i class=\"fas fa-archive fa-3x text-muted mb-3\"></i>\n                    <h5 class=\"text-muted\">\n                      {{ searchQuery ? 'No Matching Archived Users' : 'No Archived Users' }}\n                    </h5>\n                    <p class=\"text-muted\">\n                      {{ searchQuery\n                        ? `No archived users match your search for \"${searchQuery}\". Try adjusting your search terms.`\n                        : 'There are no archived users to display. Users will appear here when they are deleted from the system.'\n                      }}\n                    </p>\n                    <button v-if=\"searchQuery\" class=\"btn btn-outline-primary btn-sm\" @click=\"searchQuery = ''\">\n                      <i class=\"fas fa-times me-1\"></i>\n                      Clear Search\n                    </button>\n                  </div>\n\n                  <!-- Users Table -->\n                  <div v-else class=\"table-responsive\">\n                    <table class=\"table table-bordered table-hover\">\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th>User Information</th>\n                          <th>Account Type</th>\n                          <th>Status</th>\n                          <th>Archived Date</th>\n                          <th class=\"text-center\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"user in paginatedUsers\" :key=\"user.id\">\n                          <td>\n                            <div class=\"d-flex align-items-center\">\n                              <div class=\"user-avatar me-3\">\n                                <div class=\"avatar-placeholder rounded-circle bg-light d-flex align-items-center justify-content-center\" style=\"width: 40px; height: 40px;\">\n                                  <i :class=\"user.type === 'admin' ? 'fas fa-user-shield text-primary' : 'fas fa-user text-info'\"></i>\n                                </div>\n                              </div>\n                              <div>\n                                <div class=\"fw-bold\">{{ user.full_name || 'No Name' }}</div>\n                                <div class=\"text-muted small\">\n                                  <i class=\"fas fa-envelope me-1\"></i>{{ user.email || 'No email' }}\n                                </div>\n                                <div class=\"text-muted small\">\n                                  <i class=\"fas fa-at me-1\"></i>{{ user.username }}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <span class=\"badge\" :class=\"user.type === 'admin' ? 'bg-primary' : 'bg-info'\">\n                              <i :class=\"user.type === 'admin' ? 'fas fa-user-shield me-1' : 'fas fa-user me-1'\"></i>\n                              {{ user.type === 'admin' ? 'Administrator' : 'Client' }}\n                            </span>\n                          </td>\n                          <td>\n                            <span class=\"badge bg-secondary\">\n                              <i class=\"fas fa-archive me-1\"></i>\n                              Archived\n                            </span>\n                          </td>\n                          <td>\n                            <div class=\"text-muted small\">\n                              <i class=\"fas fa-calendar me-1\"></i>\n                              {{ formatDate(user.updated_at) }}\n                            </div>\n                          </td>\n                          <td class=\"text-center\">\n                            <div class=\"btn-group btn-group-sm\">\n                              <button\n                                class=\"btn btn-outline-info\"\n                                @click=\"viewUser(user)\"\n                                title=\"View Details\"\n                              >\n                                <i class=\"fas fa-eye\"></i>\n                              </button>\n                              <button\n                                class=\"btn btn-outline-success\"\n                                @click=\"restoreUser(user)\"\n                                title=\"Restore User\"\n                              >\n                                <i class=\"fas fa-undo\"></i>\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  <!-- Pagination -->\n                  <div v-if=\"filteredUsers.length > 0\" class=\"d-flex justify-content-between align-items-center mt-3\">\n                    <div class=\"text-muted small\">\n                      <i class=\"fas fa-info-circle me-1\"></i>\n                      Page {{ currentPage }} of {{ totalPages }}\n                      ({{ ((currentPage - 1) * itemsPerPage) + 1 }} to {{ Math.min(currentPage * itemsPerPage, filteredUsers.length) }} of {{ filteredUsers.length }} entries)\n                    </div>\n                    <nav v-if=\"totalPages > 1\">\n                      <ul class=\"pagination pagination-sm mb-0\">\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">\n                            <i class=\"fas fa-chevron-left\"></i>\n                            Previous\n                          </button>\n                        </li>\n                        <li v-for=\"page in visiblePages\" :key=\"page\" class=\"page-item\" :class=\"{ active: page === currentPage }\">\n                          <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n                        </li>\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">\n                            Next\n                            <i class=\"fas fa-chevron-right\"></i>\n                          </button>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n\n    <!-- View User Modal -->\n    <div class=\"modal fade\" id=\"viewUserModal\" tabindex=\"-1\" aria-labelledby=\"viewUserModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-light\">\n            <h5 class=\"modal-title\" id=\"viewUserModalLabel\">\n              <i class=\"fas fa-user-circle me-2\"></i>\n              Archived User Details\n            </h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body p-4\">\n            <div v-if=\"viewUserData\" class=\"container-fluid\">\n              <!-- User Profile Header -->\n              <div class=\"row align-items-center mb-4\">\n                <div class=\"col-auto\">\n                  <div class=\"avatar-placeholder-large rounded-circle bg-light d-flex align-items-center justify-content-center\" style=\"width: 80px; height: 80px;\">\n                    <i :class=\"viewUserData.type === 'admin' ? 'fas fa-user-shield fa-3x text-primary' : 'fas fa-user fa-3x text-info'\"></i>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <h4 class=\"mb-0\">{{ viewUserData.full_name || 'No Name' }}</h4>\n                  <p class=\"text-muted mb-0\">@{{ viewUserData.username }}</p>\n                  <div class=\"mt-2\">\n                    <span class=\"badge\" :class=\"viewUserData.type === 'admin' ? 'bg-primary' : 'bg-info'\">\n                      <i :class=\"viewUserData.type === 'admin' ? 'fas fa-user-shield me-1' : 'fas fa-user me-1'\"></i>\n                      {{ viewUserData.type === 'admin' ? 'Administrator' : 'Client' }}\n                    </span>\n                    <span class=\"badge bg-secondary ms-2\">\n                      <i class=\"fas fa-archive me-1\"></i>\n                      Archived\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <!-- User Information Sections -->\n              <div class=\"row\">\n                <!-- Personal Information -->\n                <div class=\"col-md-6 mb-4\">\n                  <div class=\"card h-100\">\n                    <div class=\"card-header\">\n                      <h6 class=\"mb-0\">\n                        <i class=\"fas fa-id-card me-2\"></i>\n                        Personal Information\n                      </h6>\n                    </div>\n                    <div class=\"card-body\">\n                      <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Full Name:</strong>\n                          <span class=\"value-text\">{{ viewUserData.full_name || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Gender:</strong>\n                          <span class=\"value-text\">{{ viewUserData.gender ? viewUserData.gender.charAt(0).toUpperCase() + viewUserData.gender.slice(1) : 'Not specified' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Birth Date:</strong>\n                          <span class=\"value-text\">{{ viewUserData.birth_date ? formatDate(viewUserData.birth_date) : 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Civil Status:</strong>\n                          <span class=\"value-text\">{{ getCivilStatusLabel(viewUserData.civil_status_id) }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Nationality:</strong>\n                          <span class=\"value-text\">{{ viewUserData.nationality || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'admin'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Employee ID:</strong>\n                          <span class=\"value-text\">{{ viewUserData.employee_id || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'admin'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Position:</strong>\n                          <span class=\"value-text\">{{ viewUserData.position || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'admin'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Department:</strong>\n                          <span class=\"value-text\">{{ viewUserData.department || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'admin'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Hire Date:</strong>\n                          <span class=\"value-text\">{{ viewUserData.hire_date ? formatDate(viewUserData.hire_date) : 'Not provided' }}</span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Contact Information -->\n                <div class=\"col-md-6 mb-4\">\n                  <div class=\"card h-100\">\n                    <div class=\"card-header\">\n                      <h6 class=\"mb-0\">\n                        <i class=\"fas fa-address-book me-2\"></i>\n                        Contact Information\n                      </h6>\n                    </div>\n                    <div class=\"card-body\">\n                      <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Email:</strong>\n                          <span class=\"value-text\">{{ viewUserData.email || 'Not provided' }}</span>\n                        </li>\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Phone:</strong>\n                          <span class=\"value-text\">{{ viewUserData.phone_number || 'Not provided' }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-start\">\n                          <strong>Address:</strong>\n                          <span class=\"value-text text-end\">{{ getFullAddress(viewUserData) }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Years of Residency:</strong>\n                          <span class=\"value-text\">{{ getResidencyDuration(viewUserData) }}</span>\n                        </li>\n                        \n                        <!-- I will comment email and phone number verification since this is archive view -->\n                        <!-- <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Email Verified:</strong>\n                          <span class=\"value-text\">\n                            <span :class=\"viewUserData.email_verified ? 'badge bg-success' : 'badge bg-warning'\">\n                              {{ viewUserData.email_verified ? 'Yes' : 'No' }}\n                            </span>\n                          </span>\n                        </li>\n                        <li v-if=\"viewUserData.type === 'client'\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Phone Verified:</strong>\n                          <span class=\"value-text\">\n                            <span :class=\"viewUserData.phone_verified ? 'badge bg-success' : 'badge bg-warning'\">\n                              {{ viewUserData.phone_verified ? 'Yes' : 'No' }}\n                            </span>\n                          </span>\n                        </li> -->\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- I will comment this -->\n              <!-- Client Verification Status (only for clients) -->\n              <!-- <div v-if=\"viewUserData.type === 'client'\" class=\"row mb-4\">\n                <div class=\"col-12\">\n                  <div class=\"card\">\n                    <div class=\"card-header\">\n                      <h6 class=\"mb-0\">\n                        <i class=\"fas fa-shield-alt me-2\"></i>\n                        Verification Status\n                      </h6>\n                    </div>\n                    <div class=\"card-body\">\n                      <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Profile Verified:</strong>\n                          <span class=\"value-text\">\n                            <span :class=\"viewUserData.is_verified ? 'badge bg-success' : 'badge bg-warning'\">\n                              {{ viewUserData.is_verified ? 'Verified' : 'Pending' }}\n                            </span>\n                          </span>\n                        </li>\n                        <li v-if=\"viewUserData.verified_by\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Verified By:</strong>\n                          <span class=\"value-text\">Admin ID: {{ viewUserData.verified_by }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.verified_at\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Verified At:</strong>\n                          <span class=\"value-text\">{{ formatDate(viewUserData.verified_at) }}</span>\n                        </li>\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Residency Verified:</strong>\n                          <span class=\"value-text\">\n                            <span :class=\"viewUserData.residency_verified ? 'badge bg-success' : 'badge bg-warning'\">\n                              {{ viewUserData.residency_verified ? 'Verified' : 'Pending' }}\n                            </span>\n                          </span>\n                        </li>\n                        <li v-if=\"viewUserData.residency_verified_by\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Residency Verified By:</strong>\n                          <span class=\"value-text\">Admin ID: {{ viewUserData.residency_verified_by }}</span>\n                        </li>\n                        <li v-if=\"viewUserData.residency_verified_at\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <strong>Residency Verified At:</strong>\n                          <span class=\"value-text\">{{ formatDate(viewUserData.residency_verified_at) }}</span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n\n              <!-- Account Status -->\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h6 class=\"mb-0\">\n                    <i class=\"fas fa-cogs me-2\"></i>\n                    Account Status\n                  </h6>\n                </div>\n                <div class=\"card-body\">\n                  <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      <strong>Account Created:</strong>\n                      <span class=\"value-text\">{{ formatDate(viewUserData.created_at) }}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      <strong>Last Updated:</strong>\n                      <span class=\"value-text\">{{ formatDate(viewUserData.updated_at) }}</span>\n                    </li>\n                    <li v-if=\"viewUserData.last_login\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      <strong>Last Login:</strong>\n                      <span class=\"value-text\">{{ formatDate(viewUserData.last_login) }}</span>\n                    </li>\n                    <li v-if=\"viewUserData.password_changed_at\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      <strong>Password Changed:</strong>\n                      <span class=\"value-text\">{{ formatDate(viewUserData.password_changed_at) }}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      <strong>Archived Date:</strong>\n                      <span class=\"value-text\">{{ formatDate(viewUserData.updated_at) }}</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"text-center\">\n              <p>No user data to display.</p>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\n              <i class=\"fas fa-times me-1\"></i>\n              Close\n            </button>\n            <button type=\"button\" class=\"btn btn-success\" @click=\"restoreUser(viewUserData)\">\n              <i class=\"fas fa-undo me-1\"></i>\n              Restore User\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport userManagementService from '@/services/userManagementService';\nimport { Modal } from 'bootstrap';\n\nexport default {\n  name: 'AdminArchive',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      activeMenu: 'archive',\n      loading: false,\n\n      // User Data\n      archivedUsers: [],\n      viewUserData: null,\n\n      // Filters and Search\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n\n      // Admin Data\n      adminData: null\n    };\n  },\n  computed: {\n    filteredUsers() {\n      let filtered = [...this.archivedUsers];\n\n      // Apply search filter\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(user =>\n          user.full_name?.toLowerCase().includes(query) ||\n          user.email?.toLowerCase().includes(query) ||\n          user.username?.toLowerCase().includes(query) ||\n          user.type?.toLowerCase().includes(query)\n        );\n      }\n\n      return filtered;\n    },\n\n    paginatedUsers() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredUsers.slice(start, end);\n    },\n\n    totalPages() {\n      return Math.ceil(this.filteredUsers.length / this.itemsPerPage);\n    },\n\n    visiblePages() {\n      const pages = [];\n      const start = Math.max(1, this.currentPage - 2);\n      const end = Math.min(this.totalPages, this.currentPage + 2);\n\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    }\n  },\n\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n    },\n    itemsPerPage() {\n      this.currentPage = 1;\n    }\n  },\n\n  async mounted() {\n    await this.loadArchivedUsers();\n  },\n\n  methods: {\n    // Load archived users\n    async loadArchivedUsers() {\n      try {\n        this.loading = true;\n        const response = await userManagementService.getArchivedUsers(1, 100, this.searchQuery);\n        \n        if (response.success) {\n          this.archivedUsers = response.data.map(user => ({\n            ...user,\n            full_name: `${user.first_name || ''} ${user.last_name || ''}`.trim()\n          }));\n        } else {\n          this.showToast('error', response.message || 'Failed to load archived users');\n        }\n      } catch (error) {\n        console.error('Error loading archived users:', error);\n        this.showToast('error', 'Failed to load archived users');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // View user details\n    async viewUser(user) {\n      try {\n        // Fetch detailed user data from the API\n        const response = await userManagementService.getUser(user.id);\n        if (response.success) {\n          this.viewUserData = userManagementService.formatUserData(response.data);\n          const modal = new Modal(document.getElementById('viewUserModal'));\n          modal.show();\n        } else {\n          throw new Error(response.message || 'Failed to load user details');\n        }\n      } catch (error) {\n        console.error('Error viewing user:', error);\n        const errorMessage = error.response?.data?.message || error.message || 'Failed to load user details';\n        this.showToast('error', errorMessage);\n      }\n    },\n\n    // Restore user (reactivate)\n    async restoreUser(user) {\n      if (!confirm(`Are you sure you want to restore ${user.full_name}?`)) {\n        return;\n      }\n\n      try {\n        const response = await userManagementService.restoreUser(user.id);\n\n        if (response.success) {\n          this.showToast('success', `${user.full_name} has been restored successfully`);\n\n          // Remove user from archived list\n          this.archivedUsers = this.archivedUsers.filter(u => u.id !== user.id);\n\n          // Close modal if open\n          const modal = Modal.getInstance(document.getElementById('viewUserModal'));\n          if (modal) {\n            modal.hide();\n          }\n        } else {\n          this.showToast('error', response.message || 'Failed to restore user');\n        }\n      } catch (error) {\n        console.error('Error restoring user:', error);\n        this.showToast('error', 'Failed to restore user');\n      }\n    },\n\n    // Pagination\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n\n    // UI Event Handlers\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n    },\n\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    handleMenuAction(action) {\n      if (action === 'archive') {\n        // Already on archive page\n        return;\n      }\n      \n      // Navigate to other pages\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests'\n      };\n\n      if (routes[action]) {\n        this.$router.push(routes[action]);\n      }\n    },\n\n    handleLogout() {\n      // Implement logout logic\n      this.$router.push('/admin/login');\n    },\n\n    // Utility methods\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    showToast(type, message) {\n      // Simple alert for now - can be replaced with proper toast library\n      if (type === 'success') {\n        alert(`✅ ${message}`);\n      } else if (type === 'error') {\n        alert(`❌ ${message}`);\n      } else {\n        alert(`ℹ️ ${message}`);\n      }\n    },\n\n    // Get civil status label\n    getCivilStatusLabel(civilStatusId) {\n      const labels = {\n        1: 'Single',\n        2: 'Married',\n        3: 'Widowed',\n        4: 'Divorced',\n        5: 'Separated'\n      };\n      return labels[civilStatusId] || 'Not specified';\n    },\n\n    // Get full address\n    getFullAddress(user) {\n      if (!user) return 'Not provided';\n\n      const addressParts = [\n        user.house_number,\n        user.street,\n        user.subdivision,\n        user.barangay,\n        user.city_municipality,\n        user.province\n      ].filter(part => part && part.trim() !== '');\n\n      return addressParts.length > 0 ? addressParts.join(', ') : 'Not provided';\n    },\n\n    // Get residency duration\n    getResidencyDuration(user) {\n      if (!user) return 'Not provided';\n\n      const years = user.years_of_residency || 0;\n      const months = user.months_of_residency || 0;\n\n      if (years === 0 && months === 0) return 'Not provided';\n\n      const parts = [];\n      if (years > 0) parts.push(`${years} year${years !== 1 ? 's' : ''}`);\n      if (months > 0) parts.push(`${months} month${months !== 1 ? 's' : ''}`);\n\n      return parts.join(', ');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-archive {\n  min-height: 100vh;\n  background-color: #f8f9fc;\n}\n\n.dashboard-container {\n  display: flex;\n  min-height: calc(100vh - 70px); /* Adjust based on header height */\n}\n\n.main-content {\n  padding: 100px 20px 20px 20px; /* Combined padding-top with other paddings */\n  flex: 1;\n  margin-left: 250px;\n  transition: margin-left 0.3s ease;\n}\n\n.main-content.sidebar-collapsed {\n  margin-left: 80px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.table th {\n  border-top: none;\n  font-weight: 600;\n  color: #5a5c69;\n  background-color: #f8f9fc;\n}\n\n.table td {\n  vertical-align: middle;\n}\n\n.btn-sm {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n\n@media (max-width: 768px) {\n  .main-content,\n  .main-content.sidebar-collapsed {\n    margin-left: 0;\n  }\n}\n\n.value-text {\n  word-break: break-word;\n  max-width: 70%;\n  text-align: right;\n}\n</style>"],"mappings":";;;;AAgdA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,qBAAoB,MAAO,kCAAkC;AACpE,SAASC,KAAI,QAAS,WAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVL,WAAW;IACXC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,gBAAgB,EAAE,KAAK;MACvBC,gBAAgB,EAAE,KAAK;MACvBC,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,KAAK;MAEd;MACAC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE,IAAI;MAElB;MACAC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE;MAEhB;MACAC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAIC,QAAO,GAAI,CAAC,GAAG,IAAI,CAACR,aAAa,CAAC;;MAEtC;MACA,IAAI,IAAI,CAACE,WAAW,EAAE;QACpB,MAAMO,KAAI,GAAI,IAAI,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC;QAC5CF,QAAO,GAAIA,QAAQ,CAACG,MAAM,CAACC,IAAG,IAC5BA,IAAI,CAACC,SAAS,EAAEH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,KAC5CG,IAAI,CAACG,KAAK,EAAEL,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,KACxCG,IAAI,CAACI,QAAQ,EAAEN,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,KAC3CG,IAAI,CAACK,IAAI,EAAEP,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,CACzC,CAAC;MACH;MAEA,OAAOD,QAAQ;IACjB,CAAC;IAEDU,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAAChB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMgB,GAAE,GAAID,KAAI,GAAI,IAAI,CAACf,YAAY;MACrC,OAAO,IAAI,CAACG,aAAa,CAACc,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC7C,CAAC;IAEDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACjB,aAAa,CAACkB,MAAK,GAAI,IAAI,CAACrB,YAAY,CAAC;IACjE,CAAC;IAEDsB,YAAYA,CAAA,EAAG;MACb,MAAMC,KAAI,GAAI,EAAE;MAChB,MAAMR,KAAI,GAAII,IAAI,CAACK,GAAG,CAAC,CAAC,EAAE,IAAI,CAACzB,WAAU,GAAI,CAAC,CAAC;MAC/C,MAAMiB,GAAE,GAAIG,IAAI,CAACM,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE,IAAI,CAACnB,WAAU,GAAI,CAAC,CAAC;MAE3D,KAAK,IAAI2B,CAAA,GAAIX,KAAK,EAAEW,CAAA,IAAKV,GAAG,EAAEU,CAAC,EAAE,EAAE;QACjCH,KAAK,CAACI,IAAI,CAACD,CAAC,CAAC;MACf;MAEA,OAAOH,KAAK;IACd;EACF,CAAC;EAEDK,KAAK,EAAE;IACL9B,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,WAAU,GAAI,CAAC;IACtB,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACD,WAAU,GAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAM8B,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAChC,CAAC;EAEDC,OAAO,EAAE;IACP;IACA,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACnC,OAAM,GAAI,IAAI;QACnB,MAAMqC,QAAO,GAAI,MAAM7C,qBAAqB,CAAC8C,gBAAgB,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAACnC,WAAW,CAAC;QAEvF,IAAIkC,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAI,CAACtC,aAAY,GAAIoC,QAAQ,CAACzC,IAAI,CAAC4C,GAAG,CAAC3B,IAAG,KAAM;YAC9C,GAAGA,IAAI;YACPC,SAAS,EAAE,GAAGD,IAAI,CAAC4B,UAAS,IAAK,EAAE,IAAI5B,IAAI,CAAC6B,SAAQ,IAAK,EAAE,EAAE,CAACC,IAAI,CAAC;UACrE,CAAC,CAAC,CAAC;QACL,OAAO;UACL,IAAI,CAACC,SAAS,CAAC,OAAO,EAAEP,QAAQ,CAACQ,OAAM,IAAK,+BAA+B,CAAC;QAC9E;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACF,SAAS,CAAC,OAAO,EAAE,+BAA+B,CAAC;MAC1D,UAAU;QACR,IAAI,CAAC5C,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED;IACA,MAAMgD,QAAQA,CAACnC,IAAI,EAAE;MACnB,IAAI;QACF;QACA,MAAMwB,QAAO,GAAI,MAAM7C,qBAAqB,CAACyD,OAAO,CAACpC,IAAI,CAACqC,EAAE,CAAC;QAC7D,IAAIb,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAI,CAACrC,YAAW,GAAIV,qBAAqB,CAAC2D,cAAc,CAACd,QAAQ,CAACzC,IAAI,CAAC;UACvE,MAAMwD,KAAI,GAAI,IAAI3D,KAAK,CAAC4D,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC;UACjEF,KAAK,CAACG,IAAI,CAAC,CAAC;QACd,OAAO;UACL,MAAM,IAAIC,KAAK,CAACnB,QAAQ,CAACQ,OAAM,IAAK,6BAA6B,CAAC;QACpE;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,MAAMW,YAAW,GAAIX,KAAK,CAACT,QAAQ,EAAEzC,IAAI,EAAEiD,OAAM,IAAKC,KAAK,CAACD,OAAM,IAAK,6BAA6B;QACpG,IAAI,CAACD,SAAS,CAAC,OAAO,EAAEa,YAAY,CAAC;MACvC;IACF,CAAC;IAED;IACA,MAAMC,WAAWA,CAAC7C,IAAI,EAAE;MACtB,IAAI,CAAC8C,OAAO,CAAC,oCAAoC9C,IAAI,CAACC,SAAS,GAAG,CAAC,EAAE;QACnE;MACF;MAEA,IAAI;QACF,MAAMuB,QAAO,GAAI,MAAM7C,qBAAqB,CAACkE,WAAW,CAAC7C,IAAI,CAACqC,EAAE,CAAC;QAEjE,IAAIb,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAI,CAACK,SAAS,CAAC,SAAS,EAAE,GAAG/B,IAAI,CAACC,SAAS,iCAAiC,CAAC;;UAE7E;UACA,IAAI,CAACb,aAAY,GAAI,IAAI,CAACA,aAAa,CAACW,MAAM,CAACgD,CAAA,IAAKA,CAAC,CAACV,EAAC,KAAMrC,IAAI,CAACqC,EAAE,CAAC;;UAErE;UACA,MAAME,KAAI,GAAI3D,KAAK,CAACoE,WAAW,CAACR,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC;UACzE,IAAIF,KAAK,EAAE;YACTA,KAAK,CAACU,IAAI,CAAC,CAAC;UACd;QACF,OAAO;UACL,IAAI,CAAClB,SAAS,CAAC,OAAO,EAAEP,QAAQ,CAACQ,OAAM,IAAK,wBAAwB,CAAC;QACvE;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,IAAI,CAACF,SAAS,CAAC,OAAO,EAAE,wBAAwB,CAAC;MACnD;IACF,CAAC;IAED;IACAmB,UAAUA,CAACC,IAAI,EAAE;MACf,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAK,IAAI,CAACzC,UAAU,EAAE;QACxC,IAAI,CAACnB,WAAU,GAAI4D,IAAI;MACzB;IACF,CAAC;IAED;IACAC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACpE,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAChD,CAAC;IAEDqE,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACpE,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAChD,CAAC;IAEDqE,gBAAgBA,CAACC,MAAM,EAAE;MACvB,IAAIA,MAAK,KAAM,SAAS,EAAE;QACxB;QACA;MACF;;MAEA;MACA,MAAMC,MAAK,GAAI;QACb,WAAW,EAAE,kBAAkB;QAC/B,OAAO,EAAE,cAAc;QACvB,UAAU,EAAE;MACd,CAAC;MAED,IAAIA,MAAM,CAACD,MAAM,CAAC,EAAE;QAClB,IAAI,CAACE,OAAO,CAACtC,IAAI,CAACqC,MAAM,CAACD,MAAM,CAAC,CAAC;MACnC;IACF,CAAC;IAEDG,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACD,OAAO,CAACtC,IAAI,CAAC,cAAc,CAAC;IACnC,CAAC;IAED;IACAwC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;MAC1B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAEDrC,SAASA,CAAC1B,IAAI,EAAE2B,OAAO,EAAE;MACvB;MACA,IAAI3B,IAAG,KAAM,SAAS,EAAE;QACtBgE,KAAK,CAAC,KAAKrC,OAAO,EAAE,CAAC;MACvB,OAAO,IAAI3B,IAAG,KAAM,OAAO,EAAE;QAC3BgE,KAAK,CAAC,KAAKrC,OAAO,EAAE,CAAC;MACvB,OAAO;QACLqC,KAAK,CAAC,MAAMrC,OAAO,EAAE,CAAC;MACxB;IACF,CAAC;IAED;IACAsC,mBAAmBA,CAACC,aAAa,EAAE;MACjC,MAAMC,MAAK,GAAI;QACb,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,UAAU;QACb,CAAC,EAAE;MACL,CAAC;MACD,OAAOA,MAAM,CAACD,aAAa,KAAK,eAAe;IACjD,CAAC;IAED;IACAE,cAAcA,CAACzE,IAAI,EAAE;MACnB,IAAI,CAACA,IAAI,EAAE,OAAO,cAAc;MAEhC,MAAM0E,YAAW,GAAI,CACnB1E,IAAI,CAAC2E,YAAY,EACjB3E,IAAI,CAAC4E,MAAM,EACX5E,IAAI,CAAC6E,WAAW,EAChB7E,IAAI,CAAC8E,QAAQ,EACb9E,IAAI,CAAC+E,iBAAiB,EACtB/E,IAAI,CAACgF,QAAO,CACb,CAACjF,MAAM,CAACkF,IAAG,IAAKA,IAAG,IAAKA,IAAI,CAACnD,IAAI,CAAC,MAAM,EAAE,CAAC;MAE5C,OAAO4C,YAAY,CAAC7D,MAAK,GAAI,IAAI6D,YAAY,CAACQ,IAAI,CAAC,IAAI,IAAI,cAAc;IAC3E,CAAC;IAED;IACAC,oBAAoBA,CAACnF,IAAI,EAAE;MACzB,IAAI,CAACA,IAAI,EAAE,OAAO,cAAc;MAEhC,MAAMoF,KAAI,GAAIpF,IAAI,CAACqF,kBAAiB,IAAK,CAAC;MAC1C,MAAMC,MAAK,GAAItF,IAAI,CAACuF,mBAAkB,IAAK,CAAC;MAE5C,IAAIH,KAAI,KAAM,KAAKE,MAAK,KAAM,CAAC,EAAE,OAAO,cAAc;MAEtD,MAAME,KAAI,GAAI,EAAE;MAChB,IAAIJ,KAAI,GAAI,CAAC,EAAEI,KAAK,CAACrE,IAAI,CAAC,GAAGiE,KAAK,QAAQA,KAAI,KAAM,IAAI,GAAE,GAAI,EAAE,EAAE,CAAC;MACnE,IAAIE,MAAK,GAAI,CAAC,EAAEE,KAAK,CAACrE,IAAI,CAAC,GAAGmE,MAAM,SAASA,MAAK,KAAM,IAAI,GAAE,GAAI,EAAE,EAAE,CAAC;MAEvE,OAAOE,KAAK,CAACN,IAAI,CAAC,IAAI,CAAC;IACzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}