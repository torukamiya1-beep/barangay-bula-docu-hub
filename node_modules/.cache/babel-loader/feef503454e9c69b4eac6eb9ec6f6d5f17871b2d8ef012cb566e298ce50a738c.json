{"ast":null,"code":"// src/main.js\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n// Import Tailwind CSS\nimport './assets/css/tailwind.css';\n\n// Import Bootstrap’s CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Import Bootstrap's JS\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\n// Import Font-Awesome’s JS\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n// Import and initialize unified auth service\nimport unifiedAuthService from './services/unifiedAuthService';\nimport clientAuthService from './services/clientAuthService';\n\n// Initialize unified authentication service with error handling\ntry {\n  // First migrate any legacy client auth\n  if (clientAuthService && typeof clientAuthService.migrateLegacyAuth === 'function') {\n    clientAuthService.migrateLegacyAuth();\n  }\n\n  // Then initialize unified auth\n  if (unifiedAuthService && typeof unifiedAuthService.initializeAuth === 'function') {\n    unifiedAuthService.initializeAuth();\n  }\n} catch (error) {\n  console.warn('Auth service initialization failed:', error);\n}\nconst app = createApp(App);\n\n// Add global error handler\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err);\n  console.error('Component instance:', instance);\n  console.error('Error info:', info);\n};\n\n// Add global warning handler\napp.config.warnHandler = (msg, instance, trace) => {\n  console.warn('Global warning:', msg);\n  console.warn('Component instance:', instance);\n  console.warn('Trace:', trace);\n};\n\n// Make unified auth service available globally\napp.config.globalProperties.$auth = unifiedAuthService;\napp.config.globalProperties.$clientAuth = unifiedAuthService; // For backward compatibility\napp.config.globalProperties.$adminAuth = unifiedAuthService; // For backward compatibility\n\napp.use(router);\napp.mount('#app');\nconsole.log('Vue app mounted successfully');","map":{"version":3,"names":["createApp","App","router","unifiedAuthService","clientAuthService","migrateLegacyAuth","initializeAuth","error","console","warn","app","config","errorHandler","err","instance","info","warnHandler","msg","trace","globalProperties","$auth","$clientAuth","$adminAuth","use","mount","log"],"sources":["D:/brgy_docu_hub/BOSFDR/src/main.js"],"sourcesContent":["// src/main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\n// Import Tailwind CSS\nimport './assets/css/tailwind.css'\n\n// Import Bootstrap’s CSS\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Import Bootstrap's JS\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\n\n// Import Font-Awesome’s JS\nimport '@fortawesome/fontawesome-free/js/all.js'\n\n// Import and initialize unified auth service\nimport unifiedAuthService from './services/unifiedAuthService'\nimport clientAuthService from './services/clientAuthService'\n\n// Initialize unified authentication service with error handling\ntry {\n  // First migrate any legacy client auth\n  if (clientAuthService && typeof clientAuthService.migrateLegacyAuth === 'function') {\n    clientAuthService.migrateLegacyAuth()\n  }\n\n  // Then initialize unified auth\n  if (unifiedAuthService && typeof unifiedAuthService.initializeAuth === 'function') {\n    unifiedAuthService.initializeAuth()\n  }\n} catch (error) {\n  console.warn('Auth service initialization failed:', error)\n}\n\nconst app = createApp(App)\n\n// Add global error handler\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err)\n  console.error('Component instance:', instance)\n  console.error('Error info:', info)\n}\n\n// Add global warning handler\napp.config.warnHandler = (msg, instance, trace) => {\n  console.warn('Global warning:', msg)\n  console.warn('Component instance:', instance)\n  console.warn('Trace:', trace)\n}\n\n// Make unified auth service available globally\napp.config.globalProperties.$auth = unifiedAuthService\napp.config.globalProperties.$clientAuth = unifiedAuthService // For backward compatibility\napp.config.globalProperties.$adminAuth = unifiedAuthService // For backward compatibility\n\napp.use(router)\napp.mount('#app')\n\nconsole.log('Vue app mounted successfully')"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,OAAO,2BAA2B;;AAElC;AACA,OAAO,sCAAsC;;AAE7C;AACA,OAAO,2CAA2C;;AAElD;AACA,OAAO,yCAAyC;;AAEhD;AACA,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,iBAAiB,MAAM,8BAA8B;;AAE5D;AACA,IAAI;EACF;EACA,IAAIA,iBAAiB,IAAI,OAAOA,iBAAiB,CAACC,iBAAiB,KAAK,UAAU,EAAE;IAClFD,iBAAiB,CAACC,iBAAiB,CAAC,CAAC;EACvC;;EAEA;EACA,IAAIF,kBAAkB,IAAI,OAAOA,kBAAkB,CAACG,cAAc,KAAK,UAAU,EAAE;IACjFH,kBAAkB,CAACG,cAAc,CAAC,CAAC;EACrC;AACF,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdC,OAAO,CAACC,IAAI,CAAC,qCAAqC,EAAEF,KAAK,CAAC;AAC5D;AAEA,MAAMG,GAAG,GAAGV,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACAS,GAAG,CAACC,MAAM,CAACC,YAAY,GAAG,CAACC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACjDP,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEM,GAAG,CAAC;EACnCL,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEO,QAAQ,CAAC;EAC9CN,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEQ,IAAI,CAAC;AACpC,CAAC;;AAED;AACAL,GAAG,CAACC,MAAM,CAACK,WAAW,GAAG,CAACC,GAAG,EAAEH,QAAQ,EAAEI,KAAK,KAAK;EACjDV,OAAO,CAACC,IAAI,CAAC,iBAAiB,EAAEQ,GAAG,CAAC;EACpCT,OAAO,CAACC,IAAI,CAAC,qBAAqB,EAAEK,QAAQ,CAAC;EAC7CN,OAAO,CAACC,IAAI,CAAC,QAAQ,EAAES,KAAK,CAAC;AAC/B,CAAC;;AAED;AACAR,GAAG,CAACC,MAAM,CAACQ,gBAAgB,CAACC,KAAK,GAAGjB,kBAAkB;AACtDO,GAAG,CAACC,MAAM,CAACQ,gBAAgB,CAACE,WAAW,GAAGlB,kBAAkB,EAAC;AAC7DO,GAAG,CAACC,MAAM,CAACQ,gBAAgB,CAACG,UAAU,GAAGnB,kBAAkB,EAAC;;AAE5DO,GAAG,CAACa,GAAG,CAACrB,MAAM,CAAC;AACfQ,GAAG,CAACc,KAAK,CAAC,MAAM,CAAC;AAEjBhB,OAAO,CAACiB,GAAG,CAAC,8BAA8B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}