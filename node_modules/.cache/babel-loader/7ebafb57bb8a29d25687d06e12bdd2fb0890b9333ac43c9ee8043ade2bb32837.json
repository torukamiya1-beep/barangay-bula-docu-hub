{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, normalizeClass as _normalizeClass, withDirectives as _withDirectives, vShow as _vShow, vModelText as _vModelText, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"address-selector\"\n};\nconst _hoisted_2 = {\n  class: \"mb-3\"\n};\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = [\"id\", \"disabled\"];\nconst _hoisted_5 = {\n  value: \"\"\n};\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = [\"for\"];\nconst _hoisted_10 = [\"id\", \"disabled\"];\nconst _hoisted_11 = {\n  value: \"\"\n};\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_14 = {\n  class: \"mb-3\"\n};\nconst _hoisted_15 = [\"for\"];\nconst _hoisted_16 = [\"id\", \"disabled\"];\nconst _hoisted_17 = {\n  value: \"\"\n};\nconst _hoisted_18 = [\"value\"];\nconst _hoisted_19 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_20 = {\n  class: \"mb-3\"\n};\nconst _hoisted_21 = [\"for\"];\nconst _hoisted_22 = [\"id\", \"disabled\"];\nconst _hoisted_23 = {\n  value: \"\"\n};\nconst _hoisted_24 = [\"value\"];\nconst _hoisted_25 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_26 = {\n  key: 4,\n  class: \"address-display\"\n};\nconst _hoisted_27 = {\n  key: 5,\n  class: \"alert alert-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Region Dropdown - Hidden by default \"), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", {\n    for: $options.regionId,\n    class: \"form-label\"\n  }, _cache[12] || (_cache[12] = [_createTextVNode(\" Region \"), _createElementVNode(\"span\", {\n    class: \"text-danger\"\n  }, \"*\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_3), _withDirectives(_createElementVNode(\"select\", {\n    id: $options.regionId,\n    class: _normalizeClass([\"form-select\", {\n      'is-invalid': $data.errors.region\n    }]),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedRegion = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onRegionChange && $options.onRegionChange(...args)),\n    disabled: $data.loading.regions,\n    required: \"\"\n  }, [_createElementVNode(\"option\", _hoisted_5, _toDisplayString($data.loading.regions ? 'Loading regions...' : 'Select Region'), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.regions, region => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: region.region_code,\n      value: region.region_code\n    }, _toDisplayString(region.region_name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelSelect, $data.selectedRegion]]), $data.errors.region ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.errors.region), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vShow, !$data.hideDropdowns]]), _createCommentVNode(\" Hidden input to maintain region value \"), $data.hideDropdowns ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    type: \"hidden\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedRegion = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.selectedRegion]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Province Dropdown - Hidden by default \"), _withDirectives(_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"label\", {\n    for: $options.provinceId,\n    class: \"form-label\"\n  }, _cache[13] || (_cache[13] = [_createTextVNode(\" Province \"), _createElementVNode(\"span\", {\n    class: \"text-danger\"\n  }, \"*\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_9), _withDirectives(_createElementVNode(\"select\", {\n    id: $options.provinceId,\n    class: _normalizeClass([\"form-select\", {\n      'is-invalid': $data.errors.province\n    }]),\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectedProvince = $event),\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.onProvinceChange && $options.onProvinceChange(...args)),\n    disabled: !$data.selectedRegion || $data.loading.provinces,\n    required: \"\"\n  }, [_createElementVNode(\"option\", _hoisted_11, _toDisplayString($options.getProvinceOptionText()), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.provinces, province => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: province.province_code,\n      value: province.province_code\n    }, _toDisplayString(province.province_name), 9 /* TEXT, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_10), [[_vModelSelect, $data.selectedProvince]]), $data.errors.province ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _toDisplayString($data.errors.province), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vShow, !$data.hideDropdowns]]), _createCommentVNode(\" Hidden input to maintain province value \"), $data.hideDropdowns ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"hidden\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.selectedProvince = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.selectedProvince]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" City/Municipality Dropdown - Hidden by default \"), _withDirectives(_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"label\", {\n    for: $options.cityId,\n    class: \"form-label\"\n  }, _cache[14] || (_cache[14] = [_createTextVNode(\" City/Municipality \"), _createElementVNode(\"span\", {\n    class: \"text-danger\"\n  }, \"*\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_15), _withDirectives(_createElementVNode(\"select\", {\n    id: $options.cityId,\n    class: _normalizeClass([\"form-select\", {\n      'is-invalid': $data.errors.city\n    }]),\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.selectedCity = $event),\n    onChange: _cache[7] || (_cache[7] = (...args) => $options.onCityChange && $options.onCityChange(...args)),\n    disabled: !$data.selectedProvince || $data.loading.cities,\n    required: \"\"\n  }, [_createElementVNode(\"option\", _hoisted_17, _toDisplayString($options.getCityOptionText()), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cities, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: city.city_code,\n      value: city.city_code\n    }, _toDisplayString(city.city_name), 9 /* TEXT, PROPS */, _hoisted_18);\n  }), 128 /* KEYED_FRAGMENT */))], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_16), [[_vModelSelect, $data.selectedCity]]), $data.errors.city ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _toDisplayString($data.errors.city), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vShow, !$data.hideDropdowns]]), _createCommentVNode(\" Hidden input to maintain city value \"), $data.hideDropdowns ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 2,\n    type: \"hidden\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.selectedCity = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.selectedCity]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Barangay Dropdown - Hidden by default \"), _withDirectives(_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"label\", {\n    for: $options.barangayId,\n    class: \"form-label\"\n  }, _cache[15] || (_cache[15] = [_createTextVNode(\" Barangay \"), _createElementVNode(\"span\", {\n    class: \"text-danger\"\n  }, \"*\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_21), _withDirectives(_createElementVNode(\"select\", {\n    id: $options.barangayId,\n    class: _normalizeClass([\"form-select\", {\n      'is-invalid': $data.errors.barangay\n    }]),\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.selectedBarangay = $event),\n    onChange: _cache[10] || (_cache[10] = (...args) => $options.onBarangayChange && $options.onBarangayChange(...args)),\n    disabled: !$data.selectedCity || $data.loading.barangays,\n    required: \"\"\n  }, [_createElementVNode(\"option\", _hoisted_23, _toDisplayString($options.getBarangayOptionText()), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.barangays, barangay => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: barangay.brgy_code,\n      value: barangay.brgy_code\n    }, _toDisplayString(barangay.brgy_name), 9 /* TEXT, PROPS */, _hoisted_24);\n  }), 128 /* KEYED_FRAGMENT */))], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_22), [[_vModelSelect, $data.selectedBarangay]]), $data.errors.barangay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _toDisplayString($data.errors.barangay), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vShow, !$data.hideDropdowns]]), _createCommentVNode(\" Hidden input to maintain barangay value \"), $data.hideDropdowns ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 3,\n    type: \"hidden\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.selectedBarangay = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.selectedBarangay]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display current address when dropdowns are hidden \"), $data.hideDropdowns ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, _cache[16] || (_cache[16] = [_createStaticVNode(\"<div class=\\\"alert alert-info\\\" data-v-349a923f><h6 data-v-349a923f><i class=\\\"fas fa-map-marker-alt me-2\\\" data-v-349a923f></i>Address Information</h6><p class=\\\"mb-0\\\" data-v-349a923f><strong data-v-349a923f>Region:</strong> Region XII (SOCCSKSARGEN)<br data-v-349a923f><strong data-v-349a923f>Province:</strong> South Cotabato<br data-v-349a923f><strong data-v-349a923f>City/Municipality:</strong> General Santos City (Dadiangas)<br data-v-349a923f><strong data-v-349a923f>Barangay:</strong> Bula </p></div>\", 1)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Error Display \"), $data.generalError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_cache[17] || (_cache[17] = _createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-triangle me-2\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.generalError), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","value","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","for","$options","regionId","id","_normalizeClass","$data","errors","region","selectedRegion","$event","onChange","_cache","args","onRegionChange","disabled","loading","regions","required","_hoisted_5","_toDisplayString","_Fragment","_renderList","key","region_code","region_name","_hoisted_6","_hoisted_7","hideDropdowns","type","_hoisted_8","provinceId","province","selectedProvince","onProvinceChange","provinces","_hoisted_11","getProvinceOptionText","province_code","province_name","_hoisted_12","_hoisted_13","_hoisted_14","cityId","city","selectedCity","onCityChange","cities","_hoisted_17","getCityOptionText","city_code","city_name","_hoisted_18","_hoisted_19","_hoisted_20","barangayId","barangay","selectedBarangay","onBarangayChange","barangays","_hoisted_23","getBarangayOptionText","brgy_code","brgy_name","_hoisted_24","_hoisted_25","_hoisted_26","generalError","_hoisted_27"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\common\\AddressSelector.vue"],"sourcesContent":["<template>\n  <div class=\"address-selector\">\n    <!-- Region Dropdown - Hidden by default -->\n    <div class=\"mb-3\" v-show=\"!hideDropdowns\">\n      <label :for=\"regionId\" class=\"form-label\">\n        Region <span class=\"text-danger\">*</span>\n      </label>\n      <select\n        :id=\"regionId\"\n        class=\"form-select\"\n        :class=\"{ 'is-invalid': errors.region }\"\n        v-model=\"selectedRegion\"\n        @change=\"onRegionChange\"\n        :disabled=\"loading.regions\"\n        required\n      >\n        <option value=\"\">\n          {{ loading.regions ? 'Loading regions...' : 'Select Region' }}\n        </option>\n        <option\n          v-for=\"region in regions\"\n          :key=\"region.region_code\"\n          :value=\"region.region_code\"\n        >\n          {{ region.region_name }}\n        </option>\n      </select>\n      <div v-if=\"errors.region\" class=\"invalid-feedback\">\n        {{ errors.region }}\n      </div>\n    </div>\n\n    <!-- Hidden input to maintain region value -->\n    <input v-if=\"hideDropdowns\" type=\"hidden\" v-model=\"selectedRegion\" />\n\n    <!-- Province Dropdown - Hidden by default -->\n    <div class=\"mb-3\" v-show=\"!hideDropdowns\">\n      <label :for=\"provinceId\" class=\"form-label\">\n        Province <span class=\"text-danger\">*</span>\n      </label>\n      <select\n        :id=\"provinceId\"\n        class=\"form-select\"\n        :class=\"{ 'is-invalid': errors.province }\"\n        v-model=\"selectedProvince\"\n        @change=\"onProvinceChange\"\n        :disabled=\"!selectedRegion || loading.provinces\"\n        required\n      >\n        <option value=\"\">\n          {{ getProvinceOptionText() }}\n        </option>\n        <option\n          v-for=\"province in provinces\"\n          :key=\"province.province_code\"\n          :value=\"province.province_code\"\n        >\n          {{ province.province_name }}\n        </option>\n      </select>\n      <div v-if=\"errors.province\" class=\"invalid-feedback\">\n        {{ errors.province }}\n      </div>\n    </div>\n\n    <!-- Hidden input to maintain province value -->\n    <input v-if=\"hideDropdowns\" type=\"hidden\" v-model=\"selectedProvince\" />\n\n    <!-- City/Municipality Dropdown - Hidden by default -->\n    <div class=\"mb-3\" v-show=\"!hideDropdowns\">\n      <label :for=\"cityId\" class=\"form-label\">\n        City/Municipality <span class=\"text-danger\">*</span>\n      </label>\n      <select\n        :id=\"cityId\"\n        class=\"form-select\"\n        :class=\"{ 'is-invalid': errors.city }\"\n        v-model=\"selectedCity\"\n        @change=\"onCityChange\"\n        :disabled=\"!selectedProvince || loading.cities\"\n        required\n      >\n        <option value=\"\">\n          {{ getCityOptionText() }}\n        </option>\n        <option\n          v-for=\"city in cities\"\n          :key=\"city.city_code\"\n          :value=\"city.city_code\"\n        >\n          {{ city.city_name }}\n        </option>\n      </select>\n      <div v-if=\"errors.city\" class=\"invalid-feedback\">\n        {{ errors.city }}\n      </div>\n    </div>\n\n    <!-- Hidden input to maintain city value -->\n    <input v-if=\"hideDropdowns\" type=\"hidden\" v-model=\"selectedCity\" />\n\n    <!-- Barangay Dropdown - Hidden by default -->\n    <div class=\"mb-3\" v-show=\"!hideDropdowns\">\n      <label :for=\"barangayId\" class=\"form-label\">\n        Barangay <span class=\"text-danger\">*</span>\n      </label>\n      <select\n        :id=\"barangayId\"\n        class=\"form-select\"\n        :class=\"{ 'is-invalid': errors.barangay }\"\n        v-model=\"selectedBarangay\"\n        @change=\"onBarangayChange\"\n        :disabled=\"!selectedCity || loading.barangays\"\n        required\n      >\n        <option value=\"\">\n          {{ getBarangayOptionText() }}\n        </option>\n        <option\n          v-for=\"barangay in barangays\"\n          :key=\"barangay.brgy_code\"\n          :value=\"barangay.brgy_code\"\n        >\n          {{ barangay.brgy_name }}\n        </option>\n      </select>\n      <div v-if=\"errors.barangay\" class=\"invalid-feedback\">\n        {{ errors.barangay }}\n      </div>\n    </div>\n\n    <!-- Hidden input to maintain barangay value -->\n    <input v-if=\"hideDropdowns\" type=\"hidden\" v-model=\"selectedBarangay\" />\n\n    <!-- Display current address when dropdowns are hidden -->\n    <div v-if=\"hideDropdowns\" class=\"address-display\">\n      <div class=\"alert alert-info\">\n        <h6><i class=\"fas fa-map-marker-alt me-2\"></i>Address Information</h6>\n        <p class=\"mb-0\">\n          <strong>Region:</strong> Region XII (SOCCSKSARGEN)<br>\n          <strong>Province:</strong> South Cotabato<br>\n          <strong>City/Municipality:</strong> General Santos City (Dadiangas)<br>\n          <strong>Barangay:</strong> Bula\n        </p>\n      </div>\n    </div>\n\n\n\n    <!-- Error Display -->\n    <div v-if=\"generalError\" class=\"alert alert-danger\">\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>\n      {{ generalError }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport addressService from '@/services/addressService';\n\nexport default {\n  name: 'AddressSelector',\n  props: {\n    // Initial values\n    initialRegion: {\n      type: String,\n      default: ''\n    },\n    initialProvince: {\n      type: String,\n      default: ''\n    },\n    initialCity: {\n      type: String,\n      default: ''\n    },\n    initialBarangay: {\n      type: String,\n      default: ''\n    },\n\n    // Custom validation errors\n    validationErrors: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      // Selected values - set to default General Santos City values\n      selectedRegion: this.initialRegion || '12',\n      selectedProvince: this.initialProvince || '1263',\n      selectedCity: this.initialCity || '126303',\n      selectedBarangay: this.initialBarangay || '126303005',\n\n      // Data arrays\n      regions: [],\n      provinces: [],\n      cities: [],\n      barangays: [],\n\n      // Loading states\n      loading: {\n        regions: false,\n        provinces: false,\n        cities: false,\n        barangays: false\n      },\n\n      // Errors\n      errors: {},\n      generalError: '',\n\n      // Hide dropdowns flag\n      hideDropdowns: true\n    };\n  },\n  computed: {\n    // Generate unique IDs for form elements\n    regionId() {\n      return `region-${this._uid}`;\n    },\n    provinceId() {\n      return `province-${this._uid}`;\n    },\n    cityId() {\n      return `city-${this._uid}`;\n    },\n    barangayId() {\n      return `barangay-${this._uid}`;\n    }\n  },\n  watch: {\n    // Watch for external validation errors\n    validationErrors: {\n      handler(newErrors) {\n        this.errors = { ...newErrors };\n      },\n      deep: true\n    }\n  },\n  async mounted() {\n    await this.loadRegions();\n\n    // Load default address data for General Santos City\n    if (this.hideDropdowns) {\n      await this.loadProvinces('12'); // Region XII\n      await this.loadCities('1263'); // South Cotabato\n      await this.loadBarangays('126303'); // General Santos City\n\n      // Emit the default address data\n      this.emitChange();\n    } else {\n      // Load initial data if provided\n      if (this.initialRegion) {\n        await this.loadProvinces(this.initialRegion);\n        if (this.initialProvince) {\n          await this.loadCities(this.initialProvince);\n          if (this.initialCity) {\n            await this.loadBarangays(this.initialCity);\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    // Load regions\n    async loadRegions() {\n      this.loading.regions = true;\n      this.generalError = '';\n\n      try {\n        const response = await addressService.getRegions();\n        // Handle both direct array and API response format\n        this.regions = Array.isArray(response) ? response : (response.data || []);\n        console.log('Loaded regions:', this.regions.length, 'items');\n      } catch (error) {\n        this.generalError = 'Failed to load regions. Please try again.';\n        console.error('Error loading regions:', error);\n        this.regions = [];\n      } finally {\n        this.loading.regions = false;\n      }\n    },\n    \n    // Load provinces by region\n    async loadProvinces(regionCode) {\n      this.loading.provinces = true;\n      this.provinces = [];\n      this.cities = [];\n      this.barangays = [];\n\n      try {\n        const response = await addressService.getProvincesByRegion(regionCode);\n        this.provinces = Array.isArray(response) ? response : (response.data || []);\n        console.log('Loaded provinces:', this.provinces.length, 'items for region', regionCode);\n      } catch (error) {\n        this.generalError = 'Failed to load provinces. Please try again.';\n        console.error('Error loading provinces:', error);\n        this.provinces = [];\n      } finally {\n        this.loading.provinces = false;\n      }\n    },\n    \n    // Load cities by province\n    async loadCities(provinceCode) {\n      this.loading.cities = true;\n      this.cities = [];\n      this.barangays = [];\n\n      try {\n        const response = await addressService.getCitiesByProvince(provinceCode);\n        this.cities = Array.isArray(response) ? response : (response.data || []);\n        console.log('Loaded cities:', this.cities.length, 'items for province', provinceCode);\n      } catch (error) {\n        this.generalError = 'Failed to load cities. Please try again.';\n        console.error('Error loading cities:', error);\n        this.cities = [];\n      } finally {\n        this.loading.cities = false;\n      }\n    },\n    \n    // Load barangays by city\n    async loadBarangays(cityCode) {\n      this.loading.barangays = true;\n      this.barangays = [];\n\n      try {\n        const response = await addressService.getBarangaysByCity(cityCode);\n        this.barangays = Array.isArray(response) ? response : (response.data || []);\n        console.log('Loaded barangays:', this.barangays.length, 'items for city', cityCode);\n      } catch (error) {\n        this.generalError = 'Failed to load barangays. Please try again.';\n        console.error('Error loading barangays:', error);\n        this.barangays = [];\n      } finally {\n        this.loading.barangays = false;\n      }\n    },\n\n    // Event handlers\n    async onRegionChange() {\n      this.clearError('region');\n      this.selectedProvince = '';\n      this.selectedCity = '';\n      this.selectedBarangay = '';\n\n      if (this.selectedRegion) {\n        await this.loadProvinces(this.selectedRegion);\n      }\n\n      this.emitChange();\n    },\n\n    async onProvinceChange() {\n      this.clearError('province');\n      this.selectedCity = '';\n      this.selectedBarangay = '';\n\n      if (this.selectedProvince) {\n        await this.loadCities(this.selectedProvince);\n      }\n\n      this.emitChange();\n    },\n\n    async onCityChange() {\n      this.clearError('city');\n      this.selectedBarangay = '';\n\n      if (this.selectedCity) {\n        await this.loadBarangays(this.selectedCity);\n      }\n\n      this.emitChange();\n    },\n\n    onBarangayChange() {\n      this.clearError('barangay');\n      this.emitChange();\n    },\n\n    // Helper text methods\n    getProvinceOptionText() {\n      if (!this.selectedRegion) return 'Select region first';\n      if (this.loading.provinces) return 'Loading provinces...';\n      return 'Select Province';\n    },\n\n    getCityOptionText() {\n      if (!this.selectedProvince) return 'Select province first';\n      if (this.loading.cities) return 'Loading cities...';\n      return 'Select City/Municipality';\n    },\n\n    getBarangayOptionText() {\n      if (!this.selectedCity) return 'Select city first';\n      if (this.loading.barangays) return 'Loading barangays...';\n      return 'Select Barangay';\n    },\n\n\n\n    // Emit change event\n    emitChange() {\n      const addressData = {\n        region: {\n          code: this.selectedRegion,\n          name: Array.isArray(this.regions)\n            ? this.regions.find(r => r.region_code === this.selectedRegion)?.region_name || ''\n            : ''\n        },\n        province: {\n          code: this.selectedProvince,\n          name: Array.isArray(this.provinces)\n            ? this.provinces.find(p => p.province_code === this.selectedProvince)?.province_name || ''\n            : ''\n        },\n        city: {\n          code: this.selectedCity,\n          name: Array.isArray(this.cities)\n            ? this.cities.find(c => c.city_code === this.selectedCity)?.city_name || ''\n            : ''\n        },\n        barangay: {\n          code: this.selectedBarangay,\n          name: Array.isArray(this.barangays)\n            ? this.barangays.find(b => b.brgy_code === this.selectedBarangay)?.brgy_name || ''\n            : ''\n        }\n      };\n\n      this.$emit('address-change', addressData);\n    },\n\n    // Clear specific error\n    clearError(field) {\n      if (this.errors[field]) {\n        this.errors = { ...this.errors };\n        delete this.errors[field];\n      }\n    },\n\n    // Validate the component\n    validate() {\n      const errors = {};\n\n      if (!this.selectedRegion) {\n        errors.region = 'Region is required';\n      }\n\n      if (!this.selectedProvince) {\n        errors.province = 'Province is required';\n      }\n\n      if (!this.selectedCity) {\n        errors.city = 'City/Municipality is required';\n      }\n\n      if (!this.selectedBarangay) {\n        errors.barangay = 'Barangay is required';\n      }\n\n      this.errors = errors;\n      return Object.keys(errors).length === 0;\n    },\n\n    // Get current address data\n    getAddressData() {\n      return {\n        region_code: this.selectedRegion,\n        province_code: this.selectedProvince,\n        city_code: this.selectedCity,\n        barangay_code: this.selectedBarangay,\n        region_name: this.regions.find(r => r.region_code === this.selectedRegion)?.region_name || '',\n        province_name: this.provinces.find(p => p.province_code === this.selectedProvince)?.province_name || '',\n        city_name: this.cities.find(c => c.city_code === this.selectedCity)?.city_name || '',\n        barangay_name: this.barangays.find(b => b.brgy_code === this.selectedBarangay)?.brgy_name || ''\n      };\n    },\n\n    // Reset the component\n    reset() {\n      this.selectedRegion = '';\n      this.selectedProvince = '';\n      this.selectedCity = '';\n      this.selectedBarangay = '';\n      this.provinces = [];\n      this.cities = [];\n      this.barangays = [];\n      this.errors = {};\n      this.generalError = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.address-selector .form-select:disabled {\n  background-color: #f8f9fa;\n  opacity: 0.65;\n}\n\n.address-selector .list-group-item {\n  cursor: pointer;\n  transition: background-color 0.15s ease-in-out;\n}\n\n.address-selector .list-group-item:hover {\n  background-color: #f8f9fa;\n}\n\n.address-selector .spinner-border-sm {\n  width: 0.875rem;\n  height: 0.875rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}