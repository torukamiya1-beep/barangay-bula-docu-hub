{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport activityLogService from '@/services/activityLogService';\nimport adminDocumentService from '@/services/adminDocumentService';\nexport default {\n  name: 'AdminActivityLogs',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      loading: false,\n      logs: [],\n      filteredLogs: [],\n      currentPage: 1,\n      itemsPerPage: 20,\n      filtersExpanded: false,\n      // Start with filters collapsed\n      filters: {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      }\n    };\n  },\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    },\n    paginatedLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredLogs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredLogs.length / this.itemsPerPage);\n    },\n    visiblePages() {\n      const pages = [];\n      const start = Math.max(1, this.currentPage - 2);\n      const end = Math.min(this.totalPages, this.currentPage + 2);\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Set default date range (last 30 days)\n    const today = new Date();\n    const thirtyDaysAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n    this.filters.dateTo = today.toISOString().split('T')[0];\n    this.filters.dateFrom = thirtyDaysAgo.toISOString().split('T')[0];\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadLogs();\n  },\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n    async loadLogs() {\n      this.loading = true;\n      try {\n        console.log('üîÑ Loading activity logs...');\n        let activityData = null;\n\n        // Primary approach: Use comprehensive activity logs API (from audit_logs table)\n        try {\n          console.log('üîÑ Loading from comprehensive activity logs API...');\n          const apiResponse = await activityLogService.getComprehensiveActivityLogs(this.filters, 1, 100);\n          if (apiResponse.success && apiResponse.data && apiResponse.data.activities && apiResponse.data.activities.length > 0) {\n            console.log('‚úÖ Loaded data from comprehensive activity logs API:', apiResponse.data.activities.length, 'records');\n            activityData = apiResponse.data.activities;\n          } else {\n            throw new Error('Comprehensive API returned no data');\n          }\n        } catch (primaryError) {\n          console.log('‚ö†Ô∏è  Comprehensive activity logs API failed:', primaryError.message);\n\n          // Fallback 1: Try legacy activity logs API (from request_status_history)\n          try {\n            console.log('üîÑ Fallback: Loading from legacy activity logs API...');\n            const legacyResponse = await activityLogService.getActivityLogs(this.filters, 1, 100);\n            if (legacyResponse.success && legacyResponse.data && legacyResponse.data.activities && legacyResponse.data.activities.length > 0) {\n              console.log('‚úÖ Loaded data from legacy activity logs API:', legacyResponse.data.activities.length, 'records');\n              activityData = legacyResponse.data.activities;\n            }\n          } catch (fallbackError) {\n            console.log('‚ö†Ô∏è  Legacy activity logs API failed:', fallbackError.message);\n\n            // Final fallback: Try adminDocumentService (for document status changes)\n            try {\n              console.log('üîÑ Final fallback: Loading from adminDocumentService...');\n              const response = await adminDocumentService.getRecentActivity(100);\n              if (response.success && response.data && response.data.length > 0) {\n                console.log('‚úÖ Loaded data from adminDocumentService:', response.data.length, 'records');\n\n                // Transform the data to match our frontend format\n                activityData = response.data.map(item => ({\n                  id: item.id,\n                  timestamp: item.changed_at,\n                  user_name: item.changed_by_name || 'System',\n                  user_role: this.determineUserRole(item.changed_by_name),\n                  user_type: this.determineUserType(item.changed_by_name),\n                  activity: this.generateActivityDescription(item),\n                  type: 'status_change',\n                  document_type: item.document_type,\n                  status_change: item.new_status,\n                  ip_address: 'N/A',\n                  details: this.generateDetailedDescription(item)\n                }));\n              }\n            } catch (finalError) {\n              console.log('‚ö†Ô∏è  AdminDocumentService final fallback failed:', finalError.message);\n            }\n          }\n        }\n\n        // If we have real data, use it\n        if (activityData && activityData.length > 0) {\n          this.logs = activityData;\n          console.log('‚úÖ Successfully loaded activity logs:', this.logs.length, 'records');\n        } else {\n          console.log('‚ö†Ô∏è  No real activity data available, showing system status');\n          // Show informative system status if no real data is available\n          this.logs = [{\n            id: 1,\n            timestamp: new Date().toISOString(),\n            user_name: 'System',\n            user_role: 'System',\n            user_type: 'system',\n            activity: 'Activity logging system initialized',\n            type: 'info',\n            document_type: null,\n            status_change: null,\n            ip_address: 'N/A',\n            details: 'The activity logging system is properly configured. Real activity data will appear here when:\\n‚Ä¢ Users log in/out of the system\\n‚Ä¢ Document requests are submitted\\n‚Ä¢ Status changes are made by administrators\\n‚Ä¢ Administrative actions are performed\\n\\nCurrent database status: 15 activity records available in audit_logs table, 6 records in request_status_history table.'\n          }, {\n            id: 2,\n            timestamp: new Date(Date.now() - 60000).toISOString(),\n            user_name: 'System',\n            user_role: 'System',\n            user_type: 'system',\n            activity: 'Backend services status check',\n            type: 'info',\n            document_type: null,\n            status_change: null,\n            ip_address: 'N/A',\n            details: 'Backend API endpoints are configured and ready:\\n‚Ä¢ /api/admin/activity-logs/comprehensive - Primary endpoint (audit_logs table)\\n‚Ä¢ /api/admin/activity-logs - Legacy endpoint (request_status_history table)\\n‚Ä¢ /api/admin/documents/recent-activity - Fallback endpoint\\n\\nIf you see this message, it means the frontend is working but unable to connect to the backend services. Please ensure the backend server is running on port 7000.'\n          }];\n        }\n        this.filteredLogs = [...this.logs];\n        this.applyFilters(); // Apply default filters\n      } catch (error) {\n        console.error('Failed to load activity logs:', error);\n\n        // If everything fails, show error message\n        this.logs = [{\n          id: 1,\n          timestamp: new Date().toISOString(),\n          user_name: 'System',\n          user_role: 'System',\n          user_type: 'system',\n          activity: 'Activity logs service unavailable',\n          type: 'error',\n          document_type: null,\n          status_change: null,\n          ip_address: 'N/A',\n          details: 'Unable to load activity logs from server. Please check your connection and try again.'\n        }];\n        this.filteredLogs = [...this.logs];\n      } finally {\n        this.loading = false;\n      }\n    },\n    applyFilters() {\n      let filtered = [...this.logs];\n\n      // Apply date filters\n      if (this.filters.dateFrom) {\n        filtered = filtered.filter(log => new Date(log.timestamp) >= new Date(this.filters.dateFrom));\n      }\n      if (this.filters.dateTo) {\n        filtered = filtered.filter(log => new Date(log.timestamp) <= new Date(this.filters.dateTo + 'T23:59:59'));\n      }\n\n      // Apply activity type filter\n      if (this.filters.type) {\n        filtered = filtered.filter(log => log.type === this.filters.type);\n      }\n\n      // Apply user type filter\n      if (this.filters.userType) {\n        filtered = filtered.filter(log => log.user_type === this.filters.userType);\n      }\n\n      // Apply document type filter\n      if (this.filters.documentType) {\n        filtered = filtered.filter(log => log.document_type === this.filters.documentType);\n      }\n\n      // Apply status change filter\n      if (this.filters.statusChange) {\n        filtered = filtered.filter(log => log.status_change === this.filters.statusChange);\n      }\n\n      // Apply user search filter\n      if (this.filters.user) {\n        const query = this.filters.user.toLowerCase();\n        filtered = filtered.filter(log => log.user_name.toLowerCase().includes(query) || log.user_role.toLowerCase().includes(query));\n      }\n\n      // Apply IP address filter\n      if (this.filters.ipAddress) {\n        const query = this.filters.ipAddress.toLowerCase();\n        filtered = filtered.filter(log => log.ip_address.toLowerCase().includes(query));\n      }\n      this.filteredLogs = filtered;\n      this.currentPage = 1;\n    },\n    clearFilters() {\n      this.filters = {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      };\n      this.filteredLogs = [...this.logs];\n      this.currentPage = 1;\n    },\n    toggleFilters() {\n      this.filtersExpanded = !this.filtersExpanded;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    getInitials(name) {\n      if (!name) return '?';\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase().slice(0, 2);\n    },\n    getTypeBadgeClass(type) {\n      const classes = {\n        'login': 'bg-success',\n        'logout': 'bg-secondary',\n        'document_request': 'bg-warning',\n        'status_change': 'bg-primary',\n        'approval': 'bg-success',\n        'rejection': 'bg-danger',\n        'payment': 'bg-info',\n        'user_management': 'bg-purple',\n        'system': 'bg-info',\n        'error': 'bg-danger'\n      };\n      return classes[type] || 'bg-secondary';\n    },\n    getUserTypeBadgeClass(userType) {\n      const classes = {\n        'admin': 'badge-admin',\n        'employee': 'badge-employee',\n        'client': 'badge-client',\n        'system': 'badge-system'\n      };\n      return classes[userType] || 'badge-secondary';\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'approved': 'bg-success',\n        'processing': 'bg-primary',\n        'ready_for_pickup': 'bg-info',\n        'completed': 'bg-success',\n        'rejected': 'bg-danger',\n        'cancelled': 'bg-secondary'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n    formatType(type) {\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n    formatUserType(userType) {\n      const types = {\n        'admin': 'Administrator',\n        'employee': 'Employee',\n        'client': 'Client',\n        'system': 'System'\n      };\n      return types[userType] || userType;\n    },\n    formatStatus(status) {\n      return status.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n    // Helper methods for data transformation\n    determineUserRole(userName) {\n      if (!userName || userName === 'System') return 'System';\n      // In a real system, you'd get this from the database\n      return 'Administrator'; // Default for now\n    },\n    determineUserType(userName) {\n      if (!userName || userName === 'System') return 'system';\n      // In a real system, you'd get this from the database\n      return 'admin'; // Default for now\n    },\n    generateActivityDescription(item) {\n      const action = item.old_status ? `changed status from \"${item.old_status}\" to \"${item.new_status}\"` : `set status to \"${item.new_status}\"`;\n      return `${item.changed_by_name || 'System'} ${action} for ${item.document_type} request ${item.request_number}`;\n    },\n    generateDetailedDescription(item) {\n      let details = `Request: ${item.request_number}\\n`;\n      details += `Document Type: ${item.document_type}\\n`;\n      details += `Client: ${item.client_name || 'Unknown'}\\n`;\n      if (item.old_status) {\n        details += `Status Changed: ${item.old_status} ‚Üí ${item.new_status}\\n`;\n      } else {\n        details += `Status Set: ${item.new_status}\\n`;\n      }\n      if (item.change_reason) {\n        details += `Reason: ${item.change_reason}\\n`;\n      }\n      details += `Changed At: ${new Date(item.changed_at).toLocaleString()}\\n`;\n      details += `Changed By: ${item.changed_by_name || 'System'}`;\n      return details;\n    },\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    viewDetails(log) {\n      const details = `\nActivity Log Details\n\nTimestamp: ${this.formatDateTime(log.timestamp)}\nUser: ${log.user_name} (${log.user_role})\nUser Type: ${this.formatUserType(log.user_type)}\nActivity: ${log.activity}\nType: ${this.formatType(log.type)}\nDocument Type: ${log.document_type || 'N/A'}\nStatus Change: ${log.status_change ? this.formatStatus(log.status_change) : 'N/A'}\nIP Address: ${log.ip_address}\n\nDetails:\n${log.details}\n      `.trim();\n      alert(details);\n    },\n    exportLogs() {\n      try {\n        // Create CSV content\n        const headers = ['Timestamp', 'User Name', 'User Type', 'Activity', 'Type', 'Document Type', 'Status Change', 'IP Address', 'Details'];\n        const csvContent = [headers.join(','), ...this.filteredLogs.map(log => [this.formatDateTime(log.timestamp), `\"${log.user_name}\"`, log.user_type || '', `\"${log.activity}\"`, log.type, log.document_type || '', log.status_change || '', log.ip_address, `\"${log.details}\"`].join(','))].join('\\n');\n\n        // Create and download file\n        const blob = new Blob([csvContent], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `activity-logs-${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n        console.log('Activity logs exported successfully');\n      } catch (error) {\n        console.error('Failed to export logs:', error);\n        alert('Failed to export activity logs. Please try again.');\n      }\n    },\n    printLogs() {\n      try {\n        // Create print content\n        const printContent = `\n          <html>\n            <head>\n              <title>Activity Logs Report</title>\n              <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                .header { text-align: center; margin-bottom: 30px; }\n                .filters { margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 5px; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; font-size: 12px; }\n                th { background-color: #f2f2f2; font-weight: bold; }\n                .timestamp { white-space: nowrap; }\n                .activity { max-width: 200px; word-wrap: break-word; }\n                .details { max-width: 300px; word-wrap: break-word; }\n                .badge { padding: 2px 6px; border-radius: 3px; font-size: 10px; }\n                .badge-login { background: #d4edda; color: #155724; }\n                .badge-logout { background: #d1ecf1; color: #0c5460; }\n                .badge-document_request { background: #fff3cd; color: #856404; }\n                .badge-status_change { background: #cce5ff; color: #004085; }\n                .badge-approval { background: #d4edda; color: #155724; }\n                .badge-rejection { background: #f8d7da; color: #721c24; }\n                .badge-payment { background: #e2e3e5; color: #383d41; }\n                .badge-user_management { background: #ffeaa7; color: #6c5ce7; }\n                .badge-system { background: #74b9ff; color: #0984e3; }\n                .badge-error { background: #fd79a8; color: #e84393; }\n                @media print {\n                  body { margin: 0; }\n                  .no-print { display: none; }\n                }\n              </style>\n            </head>\n            <body>\n              <div class=\"header\">\n                <h1>Activity Logs Report</h1>\n                <p>Generated on: ${new Date().toLocaleString()}</p>\n                <p>Total Records: ${this.filteredLogs.length}</p>\n              </div>\n\n              <div class=\"filters\">\n                <h3>Applied Filters:</h3>\n                <p><strong>Date Range:</strong> ${this.filters.dateFrom || 'All'} to ${this.filters.dateTo || 'All'}</p>\n                <p><strong>Activity Type:</strong> ${this.filters.type || 'All'}</p>\n                <p><strong>User Type:</strong> ${this.filters.userType || 'All'}</p>\n                <p><strong>Document Type:</strong> ${this.filters.documentType || 'All'}</p>\n                <p><strong>Status Change:</strong> ${this.filters.statusChange || 'All'}</p>\n                <p><strong>User Search:</strong> ${this.filters.user || 'None'}</p>\n                <p><strong>IP Address:</strong> ${this.filters.ipAddress || 'All'}</p>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>User</th>\n                    <th>Activity</th>\n                    <th>Type</th>\n                    <th>Document</th>\n                    <th>Status</th>\n                    <th>IP Address</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.filteredLogs.map(log => `\n                    <tr>\n                      <td class=\"timestamp\">${this.formatDateTime(log.timestamp)}</td>\n                      <td>\n                        <strong>${log.user_name}</strong><br>\n                        <small>${log.user_role}</small>\n                      </td>\n                      <td class=\"activity\">${log.activity}</td>\n                      <td><span class=\"badge badge-${log.type}\">${this.formatType(log.type)}</span></td>\n                      <td>${log.document_type || '-'}</td>\n                      <td>${log.status_change || '-'}</td>\n                      <td>${log.ip_address}</td>\n                      <td class=\"details\">${log.details}</td>\n                    </tr>\n                  `).join('')}\n                </tbody>\n              </table>\n            </body>\n          </html>\n        `;\n\n        // Open print window\n        const printWindow = window.open('', '_blank');\n        printWindow.document.write(printContent);\n        printWindow.document.close();\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n      } catch (error) {\n        console.error('Failed to print logs:', error);\n        alert('Failed to print activity logs. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["AdminHeader","AdminSidebar","unifiedAuthService","activityLogService","adminDocumentService","name","components","data","sidebarCollapsed","showUserDropdown","isMobile","adminData","loading","logs","filteredLogs","currentPage","itemsPerPage","filtersExpanded","filters","dateFrom","dateTo","type","userType","documentType","statusChange","user","ipAddress","computed","activeMenu","path","$route","includes","paginatedLogs","start","end","slice","totalPages","Math","ceil","length","visiblePages","pages","max","min","i","push","mounted","isLoggedIn","getUserType","$router","initializeUI","today","Date","thirtyDaysAgo","getTime","toISOString","split","loadAdminProfile","loadLogs","beforeUnmount","handleResize","window","removeEventListener","methods","innerWidth","saved","localStorage","getItem","JSON","parse","wasMobile","addEventListener","handleSidebarToggle","setItem","stringify","handleMenuChange","menu","routes","handleUserDropdownToggle","handleMenuAction","action","closeMobileSidebar","handleLogout","logout","getCurrentUser","profile","first_name","username","role","error","console","log","activityData","apiResponse","getComprehensiveActivityLogs","success","activities","Error","primaryError","message","legacyResponse","getActivityLogs","fallbackError","response","getRecentActivity","map","item","id","timestamp","changed_at","user_name","changed_by_name","user_role","determineUserRole","user_type","determineUserType","activity","generateActivityDescription","document_type","status_change","new_status","ip_address","details","generateDetailedDescription","finalError","now","applyFilters","filtered","filter","query","toLowerCase","clearFilters","toggleFilters","changePage","page","getInitials","n","charAt","join","toUpperCase","getTypeBadgeClass","classes","getUserTypeBadgeClass","getStatusBadgeClass","status","formatType","replace","l","formatUserType","types","formatStatus","userName","old_status","request_number","client_name","change_reason","toLocaleString","formatDateTime","dateString","date","year","month","day","hour","minute","viewDetails","trim","alert","exportLogs","headers","csvContent","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","printLogs","printContent","printWindow","open","write","close","focus","print"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminActivityLogs.vue"],"sourcesContent":["<template>\n  <div class=\"admin-activity-logs\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n      \n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid p-4\">\n          <!-- Page Header -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n\n                <div class=\"d-flex gap-2\">\n                  <button class=\"btn btn-outline-success btn-sm\" @click=\"loadLogs\" :disabled=\"loading\">\n                    <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                    Refresh\n                  </button>\n                  <button class=\"btn btn-success btn-sm\" @click=\"exportLogs\">\n                    <i class=\"fas fa-download me-1\"></i>\n                    Export\n                  </button>\n                  <button class=\"btn btn-info btn-sm\" @click=\"printLogs\">\n                    <i class=\"fas fa-print me-1\"></i>\n                    Print\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Filters -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\n                  <h6 class=\"mb-0\">\n                    <i class=\"fas fa-filter me-2\"></i>\n                    Activity Filters\n                  </h6>\n                  <button\n                    class=\"btn btn-sm btn-outline-primary\"\n                    @click=\"toggleFilters\"\n                    :aria-expanded=\"filtersExpanded\"\n                    aria-controls=\"filtersCollapse\"\n                  >\n                    <i class=\"fas\" :class=\"filtersExpanded ? 'fa-chevron-up' : 'fa-chevron-down'\"></i>\n                    {{ filtersExpanded ? 'Hide' : 'Show' }} Filters\n                  </button>\n                </div>\n                <div class=\"card-body\" id=\"filtersCollapse\" :class=\"{ 'collapse': !filtersExpanded }\">\n                  <div class=\"row\">\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Date From</label>\n                      <input type=\"date\" class=\"form-control\" v-model=\"filters.dateFrom\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Date To</label>\n                      <input type=\"date\" class=\"form-control\" v-model=\"filters.dateTo\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Activity Type</label>\n                      <select class=\"form-select\" v-model=\"filters.type\">\n                        <option value=\"\">All Types</option>\n                        <option value=\"login\">Login</option>\n                        <option value=\"logout\">Logout</option>\n                        <option value=\"document_request\">Document Request</option>\n                        <option value=\"status_change\">Status Change</option>\n                        <option value=\"approval\">Approval</option>\n                        <option value=\"rejection\">Rejection</option>\n                        <option value=\"user_management\">User Management</option>\n                        <option value=\"payment\">Payment</option>\n                        <option value=\"system\">System</option>\n                        <option value=\"error\">Error</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">User Type</label>\n                      <select class=\"form-select\" v-model=\"filters.userType\">\n                        <option value=\"\">All User Types</option>\n                        <option value=\"admin\">Administrator</option>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"client\">Client</option>\n                        <option value=\"system\">System</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Document Type</label>\n                      <select class=\"form-select\" v-model=\"filters.documentType\">\n                        <option value=\"\">All Document Types</option>\n                        <option value=\"Cedula\">Cedula</option>\n                        <option value=\"Barangay Clearance\">Barangay Clearance</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Status Changes</label>\n                      <select class=\"form-select\" v-model=\"filters.statusChange\">\n                        <option value=\"\">All Status Changes</option>\n                        <option value=\"pending\">To Pending</option>\n                        <option value=\"approved\">To Approved</option>\n                        <option value=\"processing\">To Processing</option>\n                        <option value=\"ready_for_pickup\">To Ready for Pickup</option>\n                        <option value=\"completed\">To Completed</option>\n                        <option value=\"rejected\">To Rejected</option>\n                        <option value=\"cancelled\">To Cancelled</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">User Search</label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Search by user name...\" v-model=\"filters.user\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">IP Address</label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Search by IP...\" v-model=\"filters.ipAddress\">\n                    </div>\n                  </div>\n                  <div class=\"text-end\">\n                    <button class=\"btn btn-primary btn-sm\" @click=\"applyFilters\">\n                      <i class=\"fas fa-filter me-1\"></i>\n                      Apply Filters\n                    </button>\n                    <button class=\"btn btn-outline-secondary btn-sm ms-2\" @click=\"clearFilters\">\n                      <i class=\"fas fa-times me-1\"></i>\n                      Clear\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Activity Logs Table -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header py-3\">\n                  <h6 class=\"m-0 font-weight-bold text-primary\">\n                    <i class=\"fas fa-list me-2\"></i>\n                    Activity Log Entries\n                  </h6>\n                </div>\n                <div class=\"card-body\">\n                  <!-- Loading State -->\n                  <div v-if=\"loading\" class=\"text-center py-4\">\n                    <div class=\"spinner-border text-primary\" role=\"status\">\n                      <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <p class=\"text-muted mt-2\">Loading activity logs...</p>\n                  </div>\n\n                  <!-- Empty State -->\n                  <div v-else-if=\"filteredLogs.length === 0\" class=\"text-center py-5\">\n                    <i class=\"fas fa-clipboard-list fa-3x text-gray-300 mb-3\"></i>\n                    <h5 class=\"text-gray-600\">No activity logs found</h5>\n                    <p class=\"text-muted\">No activities match your current filters.</p>\n                  </div>\n\n                  <!-- Logs Table -->\n                  <div v-else class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th>Timestamp</th>\n                          <th>User</th>\n                          <th>Activity</th>\n                          <th>Type</th>\n                          <th>Document</th>\n                          <th>Status</th>\n                          <th>IP Address</th>\n                          <th>Details</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"log in paginatedLogs\" :key=\"log.id\">\n                          <td>{{ formatDateTime(log.timestamp) }}</td>\n                          <td>\n                            <div>\n                              <div class=\"fw-bold\">{{ log.user_name }}</div>\n                              <div class=\"text-muted small\">{{ log.user_role }}</div>\n                              <div class=\"text-muted small\">\n                                <span class=\"badge badge-outline\" :class=\"getUserTypeBadgeClass(log.user_type)\">\n                                  {{ formatUserType(log.user_type) }}\n                                </span>\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div class=\"activity-cell\">\n                              {{ log.activity }}\n                            </div>\n                          </td>\n                          <td>\n                            <span class=\"badge\" :class=\"getTypeBadgeClass(log.type)\">\n                              {{ formatType(log.type) }}\n                            </span>\n                          </td>\n                          <td>\n                            <span v-if=\"log.document_type\" class=\"badge bg-info text-white\">\n                              {{ log.document_type }}\n                            </span>\n                            <span v-else class=\"text-muted\">-</span>\n                          </td>\n                          <td>\n                            <span v-if=\"log.status_change\" class=\"badge\" :class=\"getStatusBadgeClass(log.status_change)\">\n                              {{ formatStatus(log.status_change) }}\n                            </span>\n                            <span v-else class=\"text-muted\">-</span>\n                          </td>\n                          <td>\n                            <code class=\"small\">{{ log.ip_address }}</code>\n                          </td>\n                          <td>\n                            <button class=\"btn btn-outline-info btn-sm\" @click=\"viewDetails(log)\" title=\"View Details\">\n                              <i class=\"fas fa-eye\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  <!-- Pagination -->\n                  <div v-if=\"totalPages > 1\" class=\"d-flex justify-content-between align-items-center mt-3\">\n                    <div class=\"text-muted\">\n                      Showing {{ (currentPage - 1) * itemsPerPage + 1 }} to {{ Math.min(currentPage * itemsPerPage, filteredLogs.length) }} of {{ filteredLogs.length }} entries\n                    </div>\n                    <nav>\n                      <ul class=\"pagination pagination-sm mb-0\">\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">\n                            Previous\n                          </button>\n                        </li>\n                        <li \n                          v-for=\"page in visiblePages\" \n                          :key=\"page\" \n                          class=\"page-item\" \n                          :class=\"{ active: page === currentPage }\"\n                        >\n                          <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n                        </li>\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">\n                            Next\n                          </button>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport activityLogService from '@/services/activityLogService';\nimport adminDocumentService from '@/services/adminDocumentService';\n\nexport default {\n  name: 'AdminActivityLogs',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      loading: false,\n      logs: [],\n      filteredLogs: [],\n      currentPage: 1,\n      itemsPerPage: 20,\n      filtersExpanded: false, // Start with filters collapsed\n      filters: {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      }\n    };\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    },\n\n    paginatedLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredLogs.slice(start, end);\n    },\n\n    totalPages() {\n      return Math.ceil(this.filteredLogs.length / this.itemsPerPage);\n    },\n\n    visiblePages() {\n      const pages = [];\n      const start = Math.max(1, this.currentPage - 2);\n      const end = Math.min(this.totalPages, this.currentPage + 2);\n      \n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  \n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Set default date range (last 30 days)\n    const today = new Date();\n    const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));\n\n    this.filters.dateTo = today.toISOString().split('T')[0];\n    this.filters.dateFrom = thirtyDaysAgo.toISOString().split('T')[0];\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadLogs();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n\n    async loadLogs() {\n      this.loading = true;\n      try {\n        console.log('üîÑ Loading activity logs...');\n\n        let activityData = null;\n\n        // Primary approach: Use comprehensive activity logs API (from audit_logs table)\n        try {\n          console.log('üîÑ Loading from comprehensive activity logs API...');\n          const apiResponse = await activityLogService.getComprehensiveActivityLogs(this.filters, 1, 100);\n\n          if (apiResponse.success && apiResponse.data && apiResponse.data.activities && apiResponse.data.activities.length > 0) {\n            console.log('‚úÖ Loaded data from comprehensive activity logs API:', apiResponse.data.activities.length, 'records');\n            activityData = apiResponse.data.activities;\n          } else {\n            throw new Error('Comprehensive API returned no data');\n          }\n        } catch (primaryError) {\n          console.log('‚ö†Ô∏è  Comprehensive activity logs API failed:', primaryError.message);\n\n          // Fallback 1: Try legacy activity logs API (from request_status_history)\n          try {\n            console.log('üîÑ Fallback: Loading from legacy activity logs API...');\n            const legacyResponse = await activityLogService.getActivityLogs(this.filters, 1, 100);\n\n            if (legacyResponse.success && legacyResponse.data && legacyResponse.data.activities && legacyResponse.data.activities.length > 0) {\n              console.log('‚úÖ Loaded data from legacy activity logs API:', legacyResponse.data.activities.length, 'records');\n              activityData = legacyResponse.data.activities;\n            }\n          } catch (fallbackError) {\n            console.log('‚ö†Ô∏è  Legacy activity logs API failed:', fallbackError.message);\n\n            // Final fallback: Try adminDocumentService (for document status changes)\n            try {\n              console.log('üîÑ Final fallback: Loading from adminDocumentService...');\n              const response = await adminDocumentService.getRecentActivity(100);\n\n              if (response.success && response.data && response.data.length > 0) {\n                console.log('‚úÖ Loaded data from adminDocumentService:', response.data.length, 'records');\n\n                // Transform the data to match our frontend format\n                activityData = response.data.map(item => ({\n                  id: item.id,\n                  timestamp: item.changed_at,\n                  user_name: item.changed_by_name || 'System',\n                  user_role: this.determineUserRole(item.changed_by_name),\n                  user_type: this.determineUserType(item.changed_by_name),\n                  activity: this.generateActivityDescription(item),\n                  type: 'status_change',\n                  document_type: item.document_type,\n                  status_change: item.new_status,\n                  ip_address: 'N/A',\n                  details: this.generateDetailedDescription(item)\n                }));\n              }\n            } catch (finalError) {\n              console.log('‚ö†Ô∏è  AdminDocumentService final fallback failed:', finalError.message);\n            }\n          }\n        }\n\n        // If we have real data, use it\n        if (activityData && activityData.length > 0) {\n          this.logs = activityData;\n          console.log('‚úÖ Successfully loaded activity logs:', this.logs.length, 'records');\n        } else {\n          console.log('‚ö†Ô∏è  No real activity data available, showing system status');\n          // Show informative system status if no real data is available\n          this.logs = [\n            {\n              id: 1,\n              timestamp: new Date().toISOString(),\n              user_name: 'System',\n              user_role: 'System',\n              user_type: 'system',\n              activity: 'Activity logging system initialized',\n              type: 'info',\n              document_type: null,\n              status_change: null,\n              ip_address: 'N/A',\n              details: 'The activity logging system is properly configured. Real activity data will appear here when:\\n‚Ä¢ Users log in/out of the system\\n‚Ä¢ Document requests are submitted\\n‚Ä¢ Status changes are made by administrators\\n‚Ä¢ Administrative actions are performed\\n\\nCurrent database status: 15 activity records available in audit_logs table, 6 records in request_status_history table.'\n            },\n            {\n              id: 2,\n              timestamp: new Date(Date.now() - 60000).toISOString(),\n              user_name: 'System',\n              user_role: 'System',\n              user_type: 'system',\n              activity: 'Backend services status check',\n              type: 'info',\n              document_type: null,\n              status_change: null,\n              ip_address: 'N/A',\n              details: 'Backend API endpoints are configured and ready:\\n‚Ä¢ /api/admin/activity-logs/comprehensive - Primary endpoint (audit_logs table)\\n‚Ä¢ /api/admin/activity-logs - Legacy endpoint (request_status_history table)\\n‚Ä¢ /api/admin/documents/recent-activity - Fallback endpoint\\n\\nIf you see this message, it means the frontend is working but unable to connect to the backend services. Please ensure the backend server is running on port 7000.'\n            }\n          ];\n        }\n\n        this.filteredLogs = [...this.logs];\n        this.applyFilters(); // Apply default filters\n      } catch (error) {\n        console.error('Failed to load activity logs:', error);\n\n        // If everything fails, show error message\n        this.logs = [\n          {\n            id: 1,\n            timestamp: new Date().toISOString(),\n            user_name: 'System',\n            user_role: 'System',\n            user_type: 'system',\n            activity: 'Activity logs service unavailable',\n            type: 'error',\n            document_type: null,\n            status_change: null,\n            ip_address: 'N/A',\n            details: 'Unable to load activity logs from server. Please check your connection and try again.'\n          }\n        ];\n        this.filteredLogs = [...this.logs];\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    applyFilters() {\n      let filtered = [...this.logs];\n\n      // Apply date filters\n      if (this.filters.dateFrom) {\n        filtered = filtered.filter(log => new Date(log.timestamp) >= new Date(this.filters.dateFrom));\n      }\n      if (this.filters.dateTo) {\n        filtered = filtered.filter(log => new Date(log.timestamp) <= new Date(this.filters.dateTo + 'T23:59:59'));\n      }\n\n      // Apply activity type filter\n      if (this.filters.type) {\n        filtered = filtered.filter(log => log.type === this.filters.type);\n      }\n\n      // Apply user type filter\n      if (this.filters.userType) {\n        filtered = filtered.filter(log => log.user_type === this.filters.userType);\n      }\n\n      // Apply document type filter\n      if (this.filters.documentType) {\n        filtered = filtered.filter(log => log.document_type === this.filters.documentType);\n      }\n\n      // Apply status change filter\n      if (this.filters.statusChange) {\n        filtered = filtered.filter(log => log.status_change === this.filters.statusChange);\n      }\n\n      // Apply user search filter\n      if (this.filters.user) {\n        const query = this.filters.user.toLowerCase();\n        filtered = filtered.filter(log =>\n          log.user_name.toLowerCase().includes(query) ||\n          log.user_role.toLowerCase().includes(query)\n        );\n      }\n\n      // Apply IP address filter\n      if (this.filters.ipAddress) {\n        const query = this.filters.ipAddress.toLowerCase();\n        filtered = filtered.filter(log =>\n          log.ip_address.toLowerCase().includes(query)\n        );\n      }\n\n      this.filteredLogs = filtered;\n      this.currentPage = 1;\n    },\n\n    clearFilters() {\n      this.filters = {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      };\n      this.filteredLogs = [...this.logs];\n      this.currentPage = 1;\n    },\n\n    toggleFilters() {\n      this.filtersExpanded = !this.filtersExpanded;\n    },\n\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n\n    getInitials(name) {\n      if (!name) return '?';\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase().slice(0, 2);\n    },\n\n    getTypeBadgeClass(type) {\n      const classes = {\n        'login': 'bg-success',\n        'logout': 'bg-secondary',\n        'document_request': 'bg-warning',\n        'status_change': 'bg-primary',\n        'approval': 'bg-success',\n        'rejection': 'bg-danger',\n        'payment': 'bg-info',\n        'user_management': 'bg-purple',\n        'system': 'bg-info',\n        'error': 'bg-danger'\n      };\n      return classes[type] || 'bg-secondary';\n    },\n\n    getUserTypeBadgeClass(userType) {\n      const classes = {\n        'admin': 'badge-admin',\n        'employee': 'badge-employee',\n        'client': 'badge-client',\n        'system': 'badge-system'\n      };\n      return classes[userType] || 'badge-secondary';\n    },\n\n\n\n    getStatusBadgeClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'approved': 'bg-success',\n        'processing': 'bg-primary',\n        'ready_for_pickup': 'bg-info',\n        'completed': 'bg-success',\n        'rejected': 'bg-danger',\n        'cancelled': 'bg-secondary'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n\n    formatType(type) {\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n\n    formatUserType(userType) {\n      const types = {\n        'admin': 'Administrator',\n        'employee': 'Employee',\n        'client': 'Client',\n        'system': 'System'\n      };\n      return types[userType] || userType;\n    },\n\n    formatStatus(status) {\n      return status.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n\n    // Helper methods for data transformation\n    determineUserRole(userName) {\n      if (!userName || userName === 'System') return 'System';\n      // In a real system, you'd get this from the database\n      return 'Administrator'; // Default for now\n    },\n\n    determineUserType(userName) {\n      if (!userName || userName === 'System') return 'system';\n      // In a real system, you'd get this from the database\n      return 'admin'; // Default for now\n    },\n\n    generateActivityDescription(item) {\n      const action = item.old_status ?\n        `changed status from \"${item.old_status}\" to \"${item.new_status}\"` :\n        `set status to \"${item.new_status}\"`;\n\n      return `${item.changed_by_name || 'System'} ${action} for ${item.document_type} request ${item.request_number}`;\n    },\n\n    generateDetailedDescription(item) {\n      let details = `Request: ${item.request_number}\\n`;\n      details += `Document Type: ${item.document_type}\\n`;\n      details += `Client: ${item.client_name || 'Unknown'}\\n`;\n\n      if (item.old_status) {\n        details += `Status Changed: ${item.old_status} ‚Üí ${item.new_status}\\n`;\n      } else {\n        details += `Status Set: ${item.new_status}\\n`;\n      }\n\n      if (item.change_reason) {\n        details += `Reason: ${item.change_reason}\\n`;\n      }\n\n      details += `Changed At: ${new Date(item.changed_at).toLocaleString()}\\n`;\n      details += `Changed By: ${item.changed_by_name || 'System'}`;\n\n      return details;\n    },\n\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    viewDetails(log) {\n      const details = `\nActivity Log Details\n\nTimestamp: ${this.formatDateTime(log.timestamp)}\nUser: ${log.user_name} (${log.user_role})\nUser Type: ${this.formatUserType(log.user_type)}\nActivity: ${log.activity}\nType: ${this.formatType(log.type)}\nDocument Type: ${log.document_type || 'N/A'}\nStatus Change: ${log.status_change ? this.formatStatus(log.status_change) : 'N/A'}\nIP Address: ${log.ip_address}\n\nDetails:\n${log.details}\n      `.trim();\n\n      alert(details);\n    },\n\n    exportLogs() {\n      try {\n        // Create CSV content\n        const headers = ['Timestamp', 'User Name', 'User Type', 'Activity', 'Type', 'Document Type', 'Status Change', 'IP Address', 'Details'];\n        const csvContent = [\n          headers.join(','),\n          ...this.filteredLogs.map(log => [\n            this.formatDateTime(log.timestamp),\n            `\"${log.user_name}\"`,\n            log.user_type || '',\n            `\"${log.activity}\"`,\n            log.type,\n            log.document_type || '',\n            log.status_change || '',\n            log.ip_address,\n            `\"${log.details}\"`\n          ].join(','))\n        ].join('\\n');\n\n        // Create and download file\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n\n        link.setAttribute('href', url);\n        link.setAttribute('download', `activity-logs-${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        console.log('Activity logs exported successfully');\n      } catch (error) {\n        console.error('Failed to export logs:', error);\n        alert('Failed to export activity logs. Please try again.');\n      }\n    },\n\n    printLogs() {\n      try {\n        // Create print content\n        const printContent = `\n          <html>\n            <head>\n              <title>Activity Logs Report</title>\n              <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                .header { text-align: center; margin-bottom: 30px; }\n                .filters { margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 5px; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; font-size: 12px; }\n                th { background-color: #f2f2f2; font-weight: bold; }\n                .timestamp { white-space: nowrap; }\n                .activity { max-width: 200px; word-wrap: break-word; }\n                .details { max-width: 300px; word-wrap: break-word; }\n                .badge { padding: 2px 6px; border-radius: 3px; font-size: 10px; }\n                .badge-login { background: #d4edda; color: #155724; }\n                .badge-logout { background: #d1ecf1; color: #0c5460; }\n                .badge-document_request { background: #fff3cd; color: #856404; }\n                .badge-status_change { background: #cce5ff; color: #004085; }\n                .badge-approval { background: #d4edda; color: #155724; }\n                .badge-rejection { background: #f8d7da; color: #721c24; }\n                .badge-payment { background: #e2e3e5; color: #383d41; }\n                .badge-user_management { background: #ffeaa7; color: #6c5ce7; }\n                .badge-system { background: #74b9ff; color: #0984e3; }\n                .badge-error { background: #fd79a8; color: #e84393; }\n                @media print {\n                  body { margin: 0; }\n                  .no-print { display: none; }\n                }\n              </style>\n            </head>\n            <body>\n              <div class=\"header\">\n                <h1>Activity Logs Report</h1>\n                <p>Generated on: ${new Date().toLocaleString()}</p>\n                <p>Total Records: ${this.filteredLogs.length}</p>\n              </div>\n\n              <div class=\"filters\">\n                <h3>Applied Filters:</h3>\n                <p><strong>Date Range:</strong> ${this.filters.dateFrom || 'All'} to ${this.filters.dateTo || 'All'}</p>\n                <p><strong>Activity Type:</strong> ${this.filters.type || 'All'}</p>\n                <p><strong>User Type:</strong> ${this.filters.userType || 'All'}</p>\n                <p><strong>Document Type:</strong> ${this.filters.documentType || 'All'}</p>\n                <p><strong>Status Change:</strong> ${this.filters.statusChange || 'All'}</p>\n                <p><strong>User Search:</strong> ${this.filters.user || 'None'}</p>\n                <p><strong>IP Address:</strong> ${this.filters.ipAddress || 'All'}</p>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>User</th>\n                    <th>Activity</th>\n                    <th>Type</th>\n                    <th>Document</th>\n                    <th>Status</th>\n                    <th>IP Address</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.filteredLogs.map(log => `\n                    <tr>\n                      <td class=\"timestamp\">${this.formatDateTime(log.timestamp)}</td>\n                      <td>\n                        <strong>${log.user_name}</strong><br>\n                        <small>${log.user_role}</small>\n                      </td>\n                      <td class=\"activity\">${log.activity}</td>\n                      <td><span class=\"badge badge-${log.type}\">${this.formatType(log.type)}</span></td>\n                      <td>${log.document_type || '-'}</td>\n                      <td>${log.status_change || '-'}</td>\n                      <td>${log.ip_address}</td>\n                      <td class=\"details\">${log.details}</td>\n                    </tr>\n                  `).join('')}\n                </tbody>\n              </table>\n            </body>\n          </html>\n        `;\n\n        // Open print window\n        const printWindow = window.open('', '_blank');\n        printWindow.document.write(printContent);\n        printWindow.document.close();\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n\n      } catch (error) {\n        console.error('Failed to print logs:', error);\n        alert('Failed to print activity logs. Please try again.');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped src=\"./css/adminDashboard.css\"></style>\n<style scoped>\n\n\n.badge-outline {\n  border: 1px solid;\n  background: transparent !important;\n  font-size: 0.65rem;\n}\n\n.badge-admin {\n  color: #dc3545;\n  border-color: #dc3545;\n}\n\n.badge-employee {\n  color: #007bff;\n  border-color: #007bff;\n}\n\n.badge-client {\n  color: #28a745;\n  border-color: #28a745;\n}\n\n.badge-system {\n  color: #6c757d;\n  border-color: #6c757d;\n}\n\n.activity-cell {\n  max-width: 200px;\n  word-wrap: break-word;\n  line-height: 1.3;\n}\n\n.bg-purple {\n  background-color: #6f42c1 !important;\n}\n\ncode.small {\n  font-size: 0.75rem;\n  color: #495057;\n  background-color: #f8f9fa;\n  padding: 2px 4px;\n  border-radius: 3px;\n}\n\n.table td {\n  vertical-align: middle;\n}\n\n/* Collapsible filters */\n.collapse {\n  display: none;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.card-header h6 {\n  color: #495057;\n  font-weight: 600;\n}\n\n.btn-outline-primary:hover {\n  transform: translateY(-1px);\n  transition: all 0.2s ease;\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}