{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:7000/api',\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true // Enable credentials for CORS\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  // Get unified auth token\n  const authToken = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n\n  // Add auth token to all requests if available\n  if (authToken) {\n    config.headers.Authorization = `Bearer ${authToken}`;\n  }\n\n  // Debug logging for API requests\n  if (config.url?.includes('/users') || config.url?.includes('/admin/') || config.url?.includes('/client/')) {\n    console.log('ðŸ”— API Request:', {\n      url: config.url,\n      hasAuthToken: !!authToken,\n      authHeader: config.headers.Authorization ? 'Bearer ***' : 'None'\n    });\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Enhanced error logging for debugging\n  const errorDetails = {\n    url: error.config?.url,\n    method: error.config?.method?.toUpperCase(),\n    status: error.response?.status,\n    statusText: error.response?.statusText,\n    message: error.response?.data?.message || error.message,\n    data: error.response?.data,\n    requestData: error.config?.data\n  };\n  console.error('API Error Details:', errorDetails);\n  console.error('Full Error Object:', error);\n  if (error.response?.status === 401) {\n    // Token expired or invalid - clear unified auth data\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('auth_user');\n    sessionStorage.removeItem('auth_token');\n    sessionStorage.removeItem('auth_user');\n    // Don't redirect here, let components handle it\n  }\n\n  // Add more helpful error messages\n  if (!error.response) {\n    error.message = 'Network error - please check if the backend server is running on port 7000';\n  } else if (error.response.status === 500) {\n    error.message = 'Server error - please check the backend logs for details';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","VUE_APP_API_URL","timeout","headers","withCredentials","interceptors","request","use","config","authToken","localStorage","getItem","sessionStorage","Authorization","url","includes","console","log","hasAuthToken","authHeader","error","Promise","reject","response","errorDetails","method","toUpperCase","status","statusText","message","data","requestData","removeItem"],"sources":["D:/brgy_docu_hub/BOSFDR/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:7000/api',\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: true, // Enable credentials for CORS\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    // Get unified auth token\n    const authToken = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n\n    // Add auth token to all requests if available\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n\n    // Debug logging for API requests\n    if (config.url?.includes('/users') || config.url?.includes('/admin/') || config.url?.includes('/client/')) {\n      console.log('ðŸ”— API Request:', {\n        url: config.url,\n        hasAuthToken: !!authToken,\n        authHeader: config.headers.Authorization ? 'Bearer ***' : 'None'\n      });\n    }\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Enhanced error logging for debugging\n    const errorDetails = {\n      url: error.config?.url,\n      method: error.config?.method?.toUpperCase(),\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      message: error.response?.data?.message || error.message,\n      data: error.response?.data,\n      requestData: error.config?.data\n    };\n\n    console.error('API Error Details:', errorDetails);\n    console.error('Full Error Object:', error);\n\n    if (error.response?.status === 401) {\n      // Token expired or invalid - clear unified auth data\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('auth_user');\n      sessionStorage.removeItem('auth_token');\n      sessionStorage.removeItem('auth_user');\n      // Don't redirect here, let components handle it\n    }\n\n    // Add more helpful error messages\n    if (!error.response) {\n      error.message = 'Network error - please check if the backend server is running on port 7000';\n    } else if (error.response.status === 500) {\n      error.message = 'Server error - please check the backend logs for details';\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}