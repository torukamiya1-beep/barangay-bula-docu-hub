{"ast":null,"code":"import api from './api';\n\n/**\n * Service for handling residency verification status\n */\nclass ResidencyVerificationService {\n  /**\n   * Get the current user's residency verification status\n   * @returns {Promise<Object>} Verification status information\n   */\n  async getResidencyVerificationStatus() {\n    try {\n      const response = await api.get('/residency/verification-status');\n      if (response.data.success) {\n        return {\n          success: true,\n          status: response.data.data.status,\n          // 'pending', 'approved', 'rejected'\n          canRequestDocuments: response.data.data.canRequestDocuments,\n          message: response.data.data.message,\n          documents: response.data.data.documents || []\n        };\n      } else {\n        return {\n          success: false,\n          status: 'unknown',\n          canRequestDocuments: false,\n          message: response.data.message || 'Failed to get verification status',\n          documents: []\n        };\n      }\n    } catch (error) {\n      console.error('Error getting residency verification status:', error);\n\n      // If there's an error, assume user needs to upload residency documents\n      return {\n        success: false,\n        status: 'no_documents',\n        canRequestDocuments: false,\n        message: 'Please upload residency documents for verification',\n        documents: []\n      };\n    }\n  }\n\n  /**\n   * Check if user can request documents based on residency verification\n   * @returns {Promise<boolean>} True if user can request documents\n   */\n  async canRequestDocuments() {\n    const status = await this.getResidencyVerificationStatus();\n    return status.canRequestDocuments;\n  }\n\n  /**\n   * Get user-friendly status message\n   * @returns {Promise<string>} Status message for display\n   */\n  async getStatusMessage() {\n    const status = await this.getResidencyVerificationStatus();\n    switch (status.status) {\n      case 'approved':\n        return 'Your residency has been verified. You can now request documents.';\n      case 'pending':\n        return 'Your residency documents are under review. You cannot request documents yet.';\n      case 'rejected':\n        return 'Your residency document is rejected.';\n      case 'no_documents':\n        return 'Please upload residency documents for verification before requesting documents.';\n      default:\n        return 'Unable to determine residency verification status.';\n    }\n  }\n\n  /**\n   * Get the CSS class for status display\n   * @returns {Promise<string>} CSS class name\n   */\n  async getStatusClass() {\n    const status = await this.getResidencyVerificationStatus();\n    switch (status.status) {\n      case 'approved':\n        return 'status-approved';\n      case 'pending':\n        return 'status-pending';\n      case 'rejected':\n        return 'status-rejected';\n      case 'no_documents':\n        return 'status-no-documents';\n      default:\n        return 'status-unknown';\n    }\n  }\n}\nexport default new ResidencyVerificationService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}