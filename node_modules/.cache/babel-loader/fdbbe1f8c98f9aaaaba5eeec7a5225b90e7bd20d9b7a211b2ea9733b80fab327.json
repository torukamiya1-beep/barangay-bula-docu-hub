{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-content\"\n};\nconst _hoisted_2 = {\n  class: \"header-left\"\n};\nconst _hoisted_3 = {\n  class: \"page-title\"\n};\nconst _hoisted_4 = {\n  class: \"header-actions\"\n};\nconst _hoisted_5 = {\n  class: \"user-info\"\n};\nconst _hoisted_6 = {\n  class: \"user-name\"\n};\nconst _hoisted_7 = {\n  class: \"user-role\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"dropdown-menu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AdminNotifications = _resolveComponent(\"AdminNotifications\");\n  return _openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass([\"dashboard-header\", {\n      'sidebar-collapsed': $props.sidebarCollapsed\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Left Section \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"sidebar-toggle\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleSidebarToggle && $options.handleSidebarToggle(...args))\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n    class: \"fas fa-bars\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString($options.getPageTitle()), 1 /* TEXT */)])]), _createCommentVNode(\" Header Actions \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Notifications \"), _createVNode(_component_AdminNotifications, {\n    onNewNotification: $options.handleNewNotification,\n    onNotificationClick: $options.handleNotificationClick,\n    onOpenRequestModal: $options.handleOpenRequestModal,\n    onOpenUserModal: $options.handleOpenUserModal,\n    onError: $options.handleNotificationError\n  }, null, 8 /* PROPS */, [\"onNewNotification\", \"onNotificationClick\", \"onOpenRequestModal\", \"onOpenUserModal\", \"onError\"]), _createCommentVNode(\" User Profile \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"user-dropdown\", {\n      active: $props.showUserDropdown\n    }])\n  }, [_createElementVNode(\"button\", {\n    class: \"user-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleUserDropdownToggle && $options.handleUserDropdownToggle(...args))\n  }, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"user-avatar\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-user-circle\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.displayUserName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($options.displayUserRole), 1 /* TEXT */)]), _createCommentVNode(\" <i class=\\\"fas fa-chevron-down dropdown-arrow\\\"></i> \")]), $props.showUserDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"dropdown-item\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.handleMenuAction('profile', $event))\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"i\", {\n    class: \"fas fa-user me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" My Profile \")])), _createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"dropdown-item\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.handleMenuAction('settings', $event))\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    class: \"fas fa-cog me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Settings \")])), _createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"dropdown-item\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.handleMenuAction('account', $event))\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    class: \"fas fa-id-card me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Account Info \")])), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"dropdown-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"dropdown-item\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.handleLogout($event))\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"i\", {\n    class: \"fas fa-sign-out-alt me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Logout \")]))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","sidebarCollapsed","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","handleSidebarToggle","_hoisted_3","_toDisplayString","getPageTitle","_hoisted_4","_createVNode","_component_AdminNotifications","onNewNotification","handleNewNotification","onNotificationClick","handleNotificationClick","onOpenRequestModal","handleOpenRequestModal","onOpenUserModal","handleOpenUserModal","onError","handleNotificationError","active","showUserDropdown","handleUserDropdownToggle","_hoisted_5","_hoisted_6","displayUserName","_hoisted_7","displayUserRole","_hoisted_8","href","$event","handleMenuAction","handleLogout"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminHeader.vue"],"sourcesContent":["<template>\n  <header class=\"dashboard-header\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n    <div class=\"header-content\">\n      <!-- Left Section -->\n      <div class=\"header-left\">\n        <button class=\"sidebar-toggle\" @click=\"handleSidebarToggle\">\n          <i class=\"fas fa-bars\"></i>\n        </button>\n        <div class=\"page-title\">\n          <h1>{{ getPageTitle() }}</h1>\n        </div>\n      </div>\n\n      <!-- Header Actions -->\n      <div class=\"header-actions\">\n        <!-- Notifications -->\n        <AdminNotifications\n          @new-notification=\"handleNewNotification\"\n          @notification-click=\"handleNotificationClick\"\n          @open-request-modal=\"handleOpenRequestModal\"\n          @open-user-modal=\"handleOpenUserModal\"\n          @error=\"handleNotificationError\"\n        />\n\n        <!-- User Profile -->\n        <div class=\"user-dropdown\" :class=\"{ active: showUserDropdown }\">\n          <button class=\"user-btn\" @click=\"handleUserDropdownToggle\">\n            <div class=\"user-avatar\">\n              <i class=\"fas fa-user-circle\"></i>\n            </div>\n            <div class=\"user-info\">\n              <span class=\"user-name\">{{ displayUserName }}</span>\n              <span class=\"user-role\">{{ displayUserRole }}</span>\n            </div>\n            <!-- <i class=\"fas fa-chevron-down dropdown-arrow\"></i> -->\n          </button>\n\n          <div v-if=\"showUserDropdown\" class=\"dropdown-menu\">\n            <a href=\"#\" class=\"dropdown-item\" @click=\"handleMenuAction('profile', $event)\">\n              <i class=\"fas fa-user me-2\"></i>\n              My Profile\n            </a>\n            <a href=\"#\" class=\"dropdown-item\" @click=\"handleMenuAction('settings', $event)\">\n              <i class=\"fas fa-cog me-2\"></i>\n              Settings\n            </a>\n            <a href=\"#\" class=\"dropdown-item\" @click=\"handleMenuAction('account', $event)\">\n              <i class=\"fas fa-id-card me-2\"></i>\n              Account Info\n            </a>\n            <div class=\"dropdown-divider\"></div>\n            <a href=\"#\" class=\"dropdown-item\" @click=\"handleLogout($event)\">\n              <i class=\"fas fa-sign-out-alt me-2\"></i>\n              Logout\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script>\nimport AdminNotifications from './AdminNotifications.vue';\n\nexport default {\n  name: 'AdminHeader',\n  components: {\n    AdminNotifications\n  },\n  props: {\n    userName: {\n      type: String,\n      default: 'Admin'\n    },\n    showUserDropdown: {\n      type: Boolean,\n      default: false\n    },\n    sidebarCollapsed: {\n      type: Boolean,\n      default: false\n    },\n    activeMenu: {\n      type: String,\n      default: 'dashboard'\n    }\n  },\n\n  emits: [\n    'sidebar-toggle',\n    'user-dropdown-toggle',\n    'menu-action',\n    'logout',\n    'error',\n    'new-notification'\n  ],\n\n  computed: {\n    // Get display name from admin data or fallback to prop\n    displayUserName() {\n      const adminData = this.$adminAuth?.getAdminData();\n      if (adminData) {\n        // Check if user has profile data\n        if (adminData.profile && adminData.profile.first_name) {\n          return adminData.profile.last_name\n            ? `${adminData.profile.first_name} ${adminData.profile.last_name}`\n            : adminData.profile.first_name;\n        }\n        // Fallback to username\n        return adminData.username || this.userName;\n      }\n      return this.userName || 'Admin';\n    },\n\n    // Get display role from admin data\n    displayUserRole() {\n      const adminData = this.$adminAuth?.getAdminData();\n      if (adminData && adminData.role) {\n        return adminData.role.charAt(0).toUpperCase() + adminData.role.slice(1);\n      }\n      return 'Admin';\n    }\n  },\n\n\n\n  mounted() {\n    // Setup event listeners for outside clicks\n    document.addEventListener('click', this.handleOutsideClick);\n  },\n\n  beforeUnmount() {\n    // Clean up event listeners\n    document.removeEventListener('click', this.handleOutsideClick);\n  },\n\n  methods: {\n    // Get page title based on current route\n    getPageTitle() {\n      const path = this.$route.path;\n      const routeTitles = {\n        '/admin/dashboard': 'Admin Dashboard',\n        '/admin/users': 'User Management',\n        '/admin/requests': 'Document Requests',\n        '/admin/reports': 'Reports & Analytics',\n        '/admin/settings': 'System Settings',\n        '/admin/activity-logs': 'Activity Logs',\n        '/admin/audit-logs': 'Audit Logs',\n        '/admin/profile': 'Admin Profile'\n      };\n\n      // Use route-based title first, then fall back to activeMenu prop, then default\n      return routeTitles[path] || this.$route.meta?.title || 'Admin Dashboard';\n    },\n\n    // Handle sidebar toggle\n    handleSidebarToggle() {\n      this.$emit('sidebar-toggle');\n    },\n\n\n\n    // Handle user dropdown toggle\n    handleUserDropdownToggle() {\n      this.$emit('user-dropdown-toggle');\n    },\n\n    // Handle menu actions (profile, settings, etc.)\n    handleMenuAction(action, event) {\n      // Prevent default link behavior\n      if (event) {\n        event.preventDefault();\n      }\n\n      // Navigate to the appropriate route\n      const routes = {\n        'profile': '/admin/profile',\n        'settings': '/admin/settings',\n        'account': '/admin/profile' // Account info redirects to profile\n      };\n\n      const route = routes[action];\n      if (route && this.$route.path !== route) {\n        this.$router.push(route).catch(err => {\n          // Handle navigation errors gracefully\n          if (err.name !== 'NavigationDuplicated') {\n            console.error('Navigation error:', err);\n          }\n        });\n      }\n\n      // Close dropdown after navigation\n      if (this.showUserDropdown) {\n        this.$emit('user-dropdown-toggle');\n      }\n\n      // Still emit for parent components that need to track actions\n      this.$emit('menu-action', action);\n    },\n\n    // Handle logout\n    handleLogout(event) {\n      // Prevent default link behavior\n      if (event) {\n        event.preventDefault();\n      }\n      this.$emit('logout');\n    },\n\n\n\n    // Handle outside clicks to close dropdowns\n    handleOutsideClick(event) {\n      // Check if click is outside user dropdown\n      if (!event.target.closest('.user-dropdown')) {\n        if (this.showUserDropdown) {\n          this.$emit('user-dropdown-toggle');\n        }\n      }\n    },\n\n    // Notification handlers\n    handleNewNotification(notification) {\n      console.log('New notification received:', notification);\n      // Emit to parent component if needed\n      this.$emit('new-notification', notification);\n    },\n\n    async handleNotificationClick(notification) {\n      console.log('🔔 AdminHeader: Notification clicked:', notification);\n\n      try {\n        // The AdminNotifications component now handles navigation internally,\n        // but we can add additional logic here if needed\n\n        // Parse notification data\n        const notificationData = typeof notification.data === 'string'\n          ? JSON.parse(notification.data)\n          : notification.data || {};\n\n        // Log navigation for debugging\n        console.log('📊 AdminHeader: Notification data:', notificationData);\n\n        // Additional header-specific logic can go here\n        // For example, updating header state, showing badges, etc.\n\n        // The navigation is now handled by the AdminNotifications component\n        // This handler can focus on header-specific updates\n\n      } catch (error) {\n        console.error('❌ AdminHeader: Error handling notification click:', error);\n      }\n\n      // Always emit the event for other components that might need it\n      this.$emit('notification-click', notification);\n    },\n\n    handleOpenRequestModal(modalData) {\n      console.log('🔔 AdminHeader: Request to open modal:', modalData);\n\n      // Emit event to parent component (likely AdminRequests or main layout)\n      // to handle opening the request details modal\n      this.$emit('open-request-modal', modalData);\n    },\n\n    handleOpenUserModal(modalData) {\n      console.log('🔔 AdminHeader: Request to open user modal:', modalData);\n\n      // Emit event to parent component (likely AdminUsers or main layout)\n      // to handle opening the user details modal\n      this.$emit('open-user-modal', modalData);\n    },\n\n    handleNotificationError(error) {\n      console.error('Notification error:', error);\n      this.$emit('error', error);\n    }\n  }\n};\n</script>\n\n<style scoped src=\"./css/adminHeader.css\"></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}