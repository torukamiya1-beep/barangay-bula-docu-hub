{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload-component\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_5 = {\n  class: \"file-input-wrapper\"\n};\nconst _hoisted_6 = [\"id\", \"accept\", \"required\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"file-input-placeholder\"\n};\nconst _hoisted_8 = {\n  class: \"text-muted d-block mt-1\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"file-selected\"\n};\nconst _hoisted_10 = {\n  class: \"file-info\"\n};\nconst _hoisted_11 = {\n  class: \"file-name\"\n};\nconst _hoisted_12 = {\n  class: \"file-size text-muted\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"file-uploaded\"\n};\nconst _hoisted_14 = {\n  class: \"file-info\"\n};\nconst _hoisted_15 = {\n  class: \"file-name\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"upload-progress mt-2\"\n};\nconst _hoisted_17 = {\n  class: \"progress\"\n};\nconst _hoisted_18 = {\n  class: \"text-muted\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"alert alert-danger mt-2\"\n};\nconst _hoisted_20 = {\n  key: 2,\n  class: \"form-text text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", {\n    for: $data.inputId,\n    class: \"form-label\"\n  }, [_createTextVNode(_toDisplayString($props.label) + \" \", 1 /* TEXT */), $props.required ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"*\")) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" File input \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"input\", {\n    id: $data.inputId,\n    type: \"file\",\n    accept: $props.acceptedTypes,\n    required: $props.required,\n    class: \"file-input\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args)),\n    ref: \"fileInput\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), _createCommentVNode(\" Custom file input display \"), _createElementVNode(\"div\", {\n    class: \"file-input-display\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.triggerFileInput && $options.triggerFileInput(...args))\n  }, [!$data.selectedFile && !$data.uploadedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[4] || (_cache[4] = _createElementVNode(\"i\", {\n    class: \"fas fa-cloud-upload-alt\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString($props.placeholder), 1 /* TEXT */), _createElementVNode(\"small\", _hoisted_8, _toDisplayString($props.acceptedTypesText), 1 /* TEXT */)])) : $data.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"i\", {\n    class: _normalizeClass($options.getFileIcon($data.selectedFile.type))\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString($data.selectedFile.name), 1 /* TEXT */), _createElementVNode(\"small\", _hoisted_12, _toDisplayString($options.formatFileSize($data.selectedFile.size)), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-sm btn-outline-danger\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.removeFile && $options.removeFile(...args), [\"stop\"]))\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n    class: \"fas fa-times\"\n  }, null, -1 /* HOISTED */)]))])) : $data.uploadedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_cache[8] || (_cache[8] = _createElementVNode(\"i\", {\n    class: \"fas fa-check-circle text-success\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($data.uploadedFile.name), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"small\", {\n    class: \"text-success\"\n  }, \"Uploaded successfully\", -1 /* HOISTED */))]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-sm btn-outline-secondary\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.replaceFile && $options.replaceFile(...args), [\"stop\"]))\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n    class: \"fas fa-edit\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Replace \")]))])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" Upload progress \"), $data.uploading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", {\n    class: \"progress-bar\",\n    style: _normalizeStyle({\n      width: $data.uploadProgress + '%'\n    })\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"small\", _hoisted_18, \"Uploading... \" + _toDisplayString($data.uploadProgress) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Error message \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-triangle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Help text \"), $props.helpText ? (_openBlock(), _createElementBlock(\"small\", _hoisted_20, _toDisplayString($props.helpText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","for","$data","inputId","$props","label","required","_hoisted_4","_createCommentVNode","_hoisted_5","id","type","accept","acceptedTypes","onChange","_cache","args","$options","handleFileSelect","ref","onClick","triggerFileInput","selectedFile","uploadedFile","_hoisted_7","_toDisplayString","placeholder","_hoisted_8","acceptedTypesText","_hoisted_9","_normalizeClass","getFileIcon","_hoisted_10","_hoisted_11","name","_hoisted_12","formatFileSize","size","_withModifiers","removeFile","_hoisted_13","_hoisted_14","_hoisted_15","replaceFile","uploading","_hoisted_16","_hoisted_17","style","_normalizeStyle","width","uploadProgress","_hoisted_18","errorMessage","_hoisted_19","helpText","_hoisted_20"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\common\\FileUpload.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload-component\">\n    <div class=\"form-group\">\n      <label :for=\"inputId\" class=\"form-label\">\n        {{ label }}\n        <span v-if=\"required\" class=\"text-danger\">*</span>\n      </label>\n      \n      <!-- File input -->\n      <div class=\"file-input-wrapper\">\n        <input\n          :id=\"inputId\"\n          type=\"file\"\n          :accept=\"acceptedTypes\"\n          :required=\"required\"\n          class=\"file-input\"\n          @change=\"handleFileSelect\"\n          ref=\"fileInput\"\n        >\n        \n        <!-- Custom file input display -->\n        <div class=\"file-input-display\" @click=\"triggerFileInput\">\n          <div v-if=\"!selectedFile && !uploadedFile\" class=\"file-input-placeholder\">\n            <i class=\"fas fa-cloud-upload-alt\"></i>\n            <span>{{ placeholder }}</span>\n            <small class=\"text-muted d-block mt-1\">{{ acceptedTypesText }}</small>\n          </div>\n          \n          <div v-else-if=\"selectedFile\" class=\"file-selected\">\n            <i :class=\"getFileIcon(selectedFile.type)\"></i>\n            <div class=\"file-info\">\n              <span class=\"file-name\">{{ selectedFile.name }}</span>\n              <small class=\"file-size text-muted\">{{ formatFileSize(selectedFile.size) }}</small>\n            </div>\n            <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" @click.stop=\"removeFile\">\n              <i class=\"fas fa-times\"></i>\n            </button>\n          </div>\n          \n          <div v-else-if=\"uploadedFile\" class=\"file-uploaded\">\n            <i class=\"fas fa-check-circle text-success\"></i>\n            <div class=\"file-info\">\n              <span class=\"file-name\">{{ uploadedFile.name }}</span>\n              <small class=\"text-success\">Uploaded successfully</small>\n            </div>\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" @click.stop=\"replaceFile\">\n              <i class=\"fas fa-edit\"></i> Replace\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Upload progress -->\n      <div v-if=\"uploading\" class=\"upload-progress mt-2\">\n        <div class=\"progress\">\n          <div class=\"progress-bar\" :style=\"{ width: uploadProgress + '%' }\"></div>\n        </div>\n        <small class=\"text-muted\">Uploading... {{ uploadProgress }}%</small>\n      </div>\n      \n      <!-- Error message -->\n      <div v-if=\"errorMessage\" class=\"alert alert-danger mt-2\">\n        <i class=\"fas fa-exclamation-triangle\"></i>\n        {{ errorMessage }}\n      </div>\n      \n      <!-- Help text -->\n      <small v-if=\"helpText\" class=\"form-text text-muted\">{{ helpText }}</small>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FileUpload',\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    placeholder: {\n      type: String,\n      default: 'Click to select file or drag and drop'\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    acceptedTypes: {\n      type: String,\n      default: 'image/*'\n    },\n    acceptedTypesText: {\n      type: String,\n      default: 'Accepted: JPEG, PNG, GIF (Max 5MB)'\n    },\n    helpText: {\n      type: String,\n      default: ''\n    },\n    maxSize: {\n      type: Number,\n      default: 5 * 1024 * 1024 // 5MB\n    },\n    uploadUrl: {\n      type: String,\n      default: ''\n    },\n    autoUpload: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      selectedFile: null,\n      uploadedFile: null,\n      uploading: false,\n      uploadProgress: 0,\n      errorMessage: '',\n      inputId: `file-input-${Math.random().toString(36).substr(2, 9)}`\n    };\n  },\n  methods: {\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    \n    handleFileSelect(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      \n      // Validate file\n      const validation = this.validateFile(file);\n      if (!validation.valid) {\n        this.errorMessage = validation.message;\n        return;\n      }\n      \n      this.errorMessage = '';\n      this.selectedFile = file;\n      this.uploadedFile = null;\n      \n      // Emit file selected event\n      this.$emit('file-selected', file);\n      \n      // Auto upload if enabled\n      if (this.autoUpload && this.uploadUrl) {\n        this.uploadFile();\n      }\n    },\n    \n    validateFile(file) {\n      // Check file size\n      if (file.size > this.maxSize) {\n        return {\n          valid: false,\n          message: `File size too large. Maximum size is ${this.formatFileSize(this.maxSize)}.`\n        };\n      }\n      \n      // Check file type\n      const acceptedTypes = this.acceptedTypes.split(',').map(type => type.trim());\n      const isValidType = acceptedTypes.some(type => {\n        if (type === 'image/*') {\n          return file.type.startsWith('image/');\n        }\n        if (type === 'application/*') {\n          return file.type.startsWith('application/');\n        }\n        return file.type === type;\n      });\n      \n      if (!isValidType) {\n        return {\n          valid: false,\n          message: 'Invalid file type. ' + this.acceptedTypesText\n        };\n      }\n      \n      return { valid: true };\n    },\n    \n    async uploadFile() {\n      if (!this.selectedFile || !this.uploadUrl) return;\n      \n      this.uploading = true;\n      this.uploadProgress = 0;\n      this.errorMessage = '';\n      \n      try {\n        const formData = new FormData();\n        formData.append('file', this.selectedFile);\n        \n        const response = await this.$http.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: (progressEvent) => {\n            this.uploadProgress = Math.round(\n              (progressEvent.loaded * 100) / progressEvent.total\n            );\n          }\n        });\n        \n        if (response.data.success) {\n          this.uploadedFile = {\n            name: this.selectedFile.name,\n            ...response.data.data\n          };\n          this.selectedFile = null;\n          this.$emit('upload-success', this.uploadedFile);\n        } else {\n          throw new Error(response.data.message || 'Upload failed');\n        }\n        \n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || error.message || 'Upload failed';\n        this.$emit('upload-error', error);\n      } finally {\n        this.uploading = false;\n        this.uploadProgress = 0;\n      }\n    },\n    \n    removeFile() {\n      this.selectedFile = null;\n      this.uploadedFile = null;\n      this.errorMessage = '';\n      this.$refs.fileInput.value = '';\n      this.$emit('file-removed');\n    },\n    \n    replaceFile() {\n      this.uploadedFile = null;\n      this.triggerFileInput();\n    },\n    \n    getFileIcon(mimeType) {\n      if (mimeType.startsWith('image/')) {\n        return 'fas fa-image text-primary';\n      } else if (mimeType === 'application/pdf') {\n        return 'fas fa-file-pdf text-danger';\n      } else if (mimeType.includes('word')) {\n        return 'fas fa-file-word text-primary';\n      } else {\n        return 'fas fa-file text-secondary';\n      }\n    },\n    \n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.file-upload-component {\n  margin-bottom: 1rem;\n}\n\n.file-input-wrapper {\n  position: relative;\n}\n\n.file-input {\n  display: none;\n}\n\n.file-input-display {\n  border: 2px dashed #dee2e6;\n  border-radius: 0.375rem;\n  padding: 1.5rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background-color: #f8f9fa;\n}\n\n.file-input-display:hover {\n  border-color: #0d6efd;\n  background-color: #e7f1ff;\n}\n\n.file-input-placeholder i {\n  font-size: 2rem;\n  color: #6c757d;\n  margin-bottom: 0.5rem;\n  display: block;\n}\n\n.file-selected,\n.file-uploaded {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  text-align: left;\n  background-color: white;\n  border: 1px solid #dee2e6;\n  border-radius: 0.375rem;\n  padding: 1rem;\n}\n\n.file-selected i,\n.file-uploaded i {\n  font-size: 1.5rem;\n}\n\n.file-info {\n  flex: 1;\n}\n\n.file-name {\n  font-weight: 500;\n  display: block;\n}\n\n.file-size {\n  font-size: 0.875rem;\n}\n\n.upload-progress {\n  margin-top: 0.5rem;\n}\n\n.progress {\n  height: 0.5rem;\n  background-color: #e9ecef;\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: #0d6efd;\n  transition: width 0.3s ease;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}