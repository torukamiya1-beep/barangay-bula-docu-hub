{"ast":null,"code":"import api from './api';\nclass ResidencyService {\n  constructor() {\n    this.baseURL = '/residency';\n  }\n\n  /**\n   * Get residency documents for a specific account\n   */\n  async getAccountDocuments(accountId) {\n    try {\n      const response = await api.get(`${this.baseURL}/documents/${accountId}`);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Get pending residency verifications for admin review\n   */\n  async getPendingVerifications(params = {}) {\n    try {\n      const response = await api.get(`${this.baseURL}/pending`, {\n        params\n      });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Approve residency verification\n   */\n  async approveVerification(accountId, documentIds = []) {\n    try {\n      const response = await api.post(`${this.baseURL}/approve`, {\n        account_id: accountId,\n        document_ids: documentIds\n      });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Reject residency verification\n   */\n  async rejectVerification(accountId, rejectionReason, documentIds = []) {\n    try {\n      const response = await api.post(`${this.baseURL}/reject`, {\n        account_id: accountId,\n        rejection_reason: rejectionReason,\n        document_ids: documentIds\n      });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Get document file URL for viewing\n   */\n  getDocumentFileUrl(documentId) {\n    // Use the API base URL to construct the full URL\n    const API_BASE_URL = process.env.VUE_APP_API_URL || 'http://localhost:7000/api';\n    return `${API_BASE_URL}/residency/documents/${documentId}/file`;\n  }\n\n  /**\n   * Delete a residency document\n   */\n  async deleteDocument(documentId) {\n    try {\n      const response = await api.delete(`${this.baseURL}/documents/${documentId}`);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Handle successful API response\n   */\n  handleResponse(response) {\n    if (response.data.success) {\n      return {\n        success: true,\n        data: response.data.data,\n        message: response.data.message\n      };\n    } else {\n      throw new Error(response.data.message || 'Operation failed');\n    }\n  }\n\n  /**\n   * Handle API errors\n   */\n  handleError(error) {\n    console.error('Residency Service Error:', error);\n    let message = 'An unexpected error occurred';\n    let errors = [];\n    let status = 0;\n    if (error.response) {\n      // Server responded with error status\n      status = error.response.status;\n      const errorData = error.response.data;\n      if (errorData) {\n        message = errorData.message || errorData.error || message;\n        errors = errorData.errors || errorData.details || [];\n      }\n    } else if (error.request) {\n      // Request was made but no response received\n      message = 'Network error - please check your connection';\n    } else {\n      // Something else happened\n      message = error.message || message;\n    }\n    return {\n      success: false,\n      message,\n      errors,\n      status\n    };\n  }\n\n  /**\n   * Format document type for display\n   */\n  formatDocumentType(type) {\n    const typeLabels = {\n      'utility_bill': 'Utility Bill',\n      'barangay_certificate': 'Barangay Certificate',\n      'valid_id': 'Valid ID',\n      'lease_contract': 'Lease Contract',\n      'other': 'Other Document'\n    };\n    return typeLabels[type] || type;\n  }\n\n  /**\n   * Format verification status for display\n   */\n  formatVerificationStatus(status) {\n    const statusLabels = {\n      'pending': 'Pending Review',\n      'approved': 'Approved',\n      'rejected': 'Rejected'\n    };\n    return statusLabels[status] || status;\n  }\n\n  /**\n   * Get status badge class for verification status\n   */\n  getStatusBadgeClass(status) {\n    const statusClasses = {\n      'pending': 'bg-warning',\n      'approved': 'bg-success',\n      'rejected': 'bg-danger'\n    };\n    return statusClasses[status] || 'bg-secondary';\n  }\n}\nexport default new ResidencyService();","map":{"version":3,"names":["api","ResidencyService","constructor","baseURL","getAccountDocuments","accountId","response","get","handleResponse","error","handleError","getPendingVerifications","params","approveVerification","documentIds","post","account_id","document_ids","rejectVerification","rejectionReason","rejection_reason","getDocumentFileUrl","documentId","API_BASE_URL","process","env","VUE_APP_API_URL","deleteDocument","delete","data","success","message","Error","console","errors","status","errorData","details","request","formatDocumentType","type","typeLabels","formatVerificationStatus","statusLabels","getStatusBadgeClass","statusClasses"],"sources":["D:/brgy_docu_hub/BOSFDR/src/services/residencyService.js"],"sourcesContent":["import api from './api';\n\nclass ResidencyService {\n  constructor() {\n    this.baseURL = '/residency';\n  }\n\n  /**\n   * Get residency documents for a specific account\n   */\n  async getAccountDocuments(accountId) {\n    try {\n      const response = await api.get(`${this.baseURL}/documents/${accountId}`);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Get pending residency verifications for admin review\n   */\n  async getPendingVerifications(params = {}) {\n    try {\n      const response = await api.get(`${this.baseURL}/pending`, { params });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Approve residency verification\n   */\n  async approveVerification(accountId, documentIds = []) {\n    try {\n      const response = await api.post(`${this.baseURL}/approve`, {\n        account_id: accountId,\n        document_ids: documentIds\n      });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Reject residency verification\n   */\n  async rejectVerification(accountId, rejectionReason, documentIds = []) {\n    try {\n      const response = await api.post(`${this.baseURL}/reject`, {\n        account_id: accountId,\n        rejection_reason: rejectionReason,\n        document_ids: documentIds\n      });\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Get document file URL for viewing\n   */\n  getDocumentFileUrl(documentId) {\n    // Use the API base URL to construct the full URL\n    const API_BASE_URL = process.env.VUE_APP_API_URL || 'http://localhost:7000/api';\n    return `${API_BASE_URL}/residency/documents/${documentId}/file`;\n  }\n\n  /**\n   * Delete a residency document\n   */\n  async deleteDocument(documentId) {\n    try {\n      const response = await api.delete(`${this.baseURL}/documents/${documentId}`);\n      return this.handleResponse(response);\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  /**\n   * Handle successful API response\n   */\n  handleResponse(response) {\n    if (response.data.success) {\n      return {\n        success: true,\n        data: response.data.data,\n        message: response.data.message\n      };\n    } else {\n      throw new Error(response.data.message || 'Operation failed');\n    }\n  }\n\n  /**\n   * Handle API errors\n   */\n  handleError(error) {\n    console.error('Residency Service Error:', error);\n    \n    let message = 'An unexpected error occurred';\n    let errors = [];\n    let status = 0;\n\n    if (error.response) {\n      // Server responded with error status\n      status = error.response.status;\n      const errorData = error.response.data;\n      \n      if (errorData) {\n        message = errorData.message || errorData.error || message;\n        errors = errorData.errors || errorData.details || [];\n      }\n    } else if (error.request) {\n      // Request was made but no response received\n      message = 'Network error - please check your connection';\n    } else {\n      // Something else happened\n      message = error.message || message;\n    }\n\n    return {\n      success: false,\n      message,\n      errors,\n      status\n    };\n  }\n\n  /**\n   * Format document type for display\n   */\n  formatDocumentType(type) {\n    const typeLabels = {\n      'utility_bill': 'Utility Bill',\n      'barangay_certificate': 'Barangay Certificate',\n      'valid_id': 'Valid ID',\n      'lease_contract': 'Lease Contract',\n      'other': 'Other Document'\n    };\n    return typeLabels[type] || type;\n  }\n\n  /**\n   * Format verification status for display\n   */\n  formatVerificationStatus(status) {\n    const statusLabels = {\n      'pending': 'Pending Review',\n      'approved': 'Approved',\n      'rejected': 'Rejected'\n    };\n    return statusLabels[status] || status;\n  }\n\n  /**\n   * Get status badge class for verification status\n   */\n  getStatusBadgeClass(status) {\n    const statusClasses = {\n      'pending': 'bg-warning',\n      'approved': 'bg-success',\n      'rejected': 'bg-danger'\n    };\n    return statusClasses[status] || 'bg-secondary';\n  }\n}\n\nexport default new ResidencyService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}