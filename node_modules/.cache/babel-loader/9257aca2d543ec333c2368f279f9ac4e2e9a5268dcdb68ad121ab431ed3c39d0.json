{"ast":null,"code":"import { applyUnfilter } from './applyUnfilter';\nconst uint16 = new Uint16Array([0x00ff]);\nconst uint8 = new Uint8Array(uint16.buffer);\nconst osIsLittleEndian = uint8[0] === 0xff;\n/**\n * Decodes the Adam7 interlaced PNG data.\n *\n * @param params - DecodeInterlaceNullParams\n * @returns - array of pixel data.\n */\nexport function decodeInterlaceAdam7(params) {\n  const {\n    data,\n    width,\n    height,\n    channels,\n    depth\n  } = params;\n  // Adam7 interlacing pattern\n  const passes = [{\n    x: 0,\n    y: 0,\n    xStep: 8,\n    yStep: 8\n  },\n  // Pass 1\n  {\n    x: 4,\n    y: 0,\n    xStep: 8,\n    yStep: 8\n  },\n  // Pass 2\n  {\n    x: 0,\n    y: 4,\n    xStep: 4,\n    yStep: 8\n  },\n  // Pass 3\n  {\n    x: 2,\n    y: 0,\n    xStep: 4,\n    yStep: 4\n  },\n  // Pass 4\n  {\n    x: 0,\n    y: 2,\n    xStep: 2,\n    yStep: 4\n  },\n  // Pass 5\n  {\n    x: 1,\n    y: 0,\n    xStep: 2,\n    yStep: 2\n  },\n  // Pass 6\n  {\n    x: 0,\n    y: 1,\n    xStep: 1,\n    yStep: 2\n  } // Pass 7\n  ];\n  const bytesPerPixel = Math.ceil(depth / 8) * channels;\n  const resultData = new Uint8Array(height * width * bytesPerPixel);\n  let offset = 0;\n  // Process each pass\n  for (let passIndex = 0; passIndex < 7; passIndex++) {\n    const pass = passes[passIndex];\n    // Calculate pass dimensions\n    const passWidth = Math.ceil((width - pass.x) / pass.xStep);\n    const passHeight = Math.ceil((height - pass.y) / pass.yStep);\n    if (passWidth <= 0 || passHeight <= 0) continue;\n    const passLineBytes = passWidth * bytesPerPixel;\n    const prevLine = new Uint8Array(passLineBytes);\n    // Process each scanline in this pass\n    for (let y = 0; y < passHeight; y++) {\n      // First byte is the filter type\n      const filterType = data[offset++];\n      const currentLine = data.subarray(offset, offset + passLineBytes);\n      offset += passLineBytes;\n      // Create a new line for the unfiltered data\n      const newLine = new Uint8Array(passLineBytes);\n      // Apply the appropriate unfilter\n      applyUnfilter(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n      prevLine.set(newLine);\n      for (let x = 0; x < passWidth; x++) {\n        const outputX = pass.x + x * pass.xStep;\n        const outputY = pass.y + y * pass.yStep;\n        if (outputX >= width || outputY >= height) continue;\n        for (let i = 0; i < bytesPerPixel; i++) {\n          resultData[(outputY * width + outputX) * bytesPerPixel + i] = newLine[x * bytesPerPixel + i];\n        }\n      }\n    }\n  }\n  if (depth === 16) {\n    const uint16Data = new Uint16Array(resultData.buffer);\n    if (osIsLittleEndian) {\n      for (let k = 0; k < uint16Data.length; k++) {\n        // PNG is always big endian. Swap the bytes.\n        uint16Data[k] = swap16(uint16Data[k]);\n      }\n    }\n    return uint16Data;\n  } else {\n    return resultData;\n  }\n}\nfunction swap16(val) {\n  return (val & 0xff) << 8 | val >> 8 & 0xff;\n}","map":{"version":3,"names":["applyUnfilter","uint16","Uint16Array","uint8","Uint8Array","buffer","osIsLittleEndian","decodeInterlaceAdam7","params","data","width","height","channels","depth","passes","x","y","xStep","yStep","bytesPerPixel","Math","ceil","resultData","offset","passIndex","pass","passWidth","passHeight","passLineBytes","prevLine","filterType","currentLine","subarray","newLine","set","outputX","outputY","i","uint16Data","k","length","swap16","val"],"sources":["../../src/helpers/decodeInterlaceAdam7.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}