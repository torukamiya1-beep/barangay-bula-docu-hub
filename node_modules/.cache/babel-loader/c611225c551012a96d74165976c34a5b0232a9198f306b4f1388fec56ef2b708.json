{"ast":null,"code":"import { version } from 'vue';\nexport default {\n  name: 'AdminTest',\n  data() {\n    return {\n      vueVersion: version,\n      adminServiceStatus: {\n        text: 'Unknown',\n        class: 'bg-secondary'\n      },\n      clientServiceStatus: {\n        text: 'Unknown',\n        class: 'bg-secondary'\n      }\n    };\n  },\n  async mounted() {\n    console.log('AdminTest component mounted successfully');\n    this.checkServices();\n  },\n  methods: {\n    async checkServices() {\n      // Check admin auth service\n      try {\n        const adminAuthService = await import('@/services/adminAuthService');\n        if (adminAuthService.default) {\n          this.adminServiceStatus = {\n            text: 'Available',\n            class: 'bg-success'\n          };\n        } else {\n          this.adminServiceStatus = {\n            text: 'Not Available',\n            class: 'bg-danger'\n          };\n        }\n      } catch (error) {\n        console.error('Admin service check failed:', error);\n        this.adminServiceStatus = {\n          text: 'Error',\n          class: 'bg-danger'\n        };\n      }\n\n      // Check client auth service\n      try {\n        const clientAuthService = await import('@/services/clientAuthService');\n        if (clientAuthService.default) {\n          this.clientServiceStatus = {\n            text: 'Available',\n            class: 'bg-success'\n          };\n        } else {\n          this.clientServiceStatus = {\n            text: 'Not Available',\n            class: 'bg-danger'\n          };\n        }\n      } catch (error) {\n        console.error('Client service check failed:', error);\n        this.clientServiceStatus = {\n          text: 'Error',\n          class: 'bg-danger'\n        };\n      }\n    }\n  }\n};","map":{"version":3,"names":["version","name","data","vueVersion","adminServiceStatus","text","class","clientServiceStatus","mounted","console","log","checkServices","methods","adminAuthService","default","error","clientAuthService"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminTest.vue"],"sourcesContent":["<template>\n  <div class=\"admin-test\">\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n          <div class=\"card\">\n            <div class=\"card-header bg-dark text-white\">\n              <h3 class=\"mb-0\">Admin System Test</h3>\n            </div>\n            <div class=\"card-body\">\n              <h5>âœ… Admin routing is working!</h5>\n              <p>This test page confirms that the admin routing system is functioning correctly.</p>\n              \n              <div class=\"mt-4\">\n                <h6>Available Admin Routes:</h6>\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span>/admin/login</span>\n                    <router-link to=\"/admin/login\" class=\"btn btn-sm btn-primary\">Go to Login</router-link>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span>/admin/register</span>\n                    <router-link to=\"/admin/register\" class=\"btn btn-sm btn-success\">Go to Register</router-link>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span>/admin/dashboard</span>\n                    <router-link to=\"/admin/dashboard\" class=\"btn btn-sm btn-info\">Go to Dashboard</router-link>\n                  </li>\n                </ul>\n              </div>\n\n              <div class=\"mt-4\">\n                <h6>System Information:</h6>\n                <ul class=\"list-unstyled\">\n                  <li><strong>Current Route:</strong> {{ $route.path }}</li>\n                  <li><strong>Component Name:</strong> {{ $options.name }}</li>\n                  <li><strong>Vue Version:</strong> {{ vueVersion }}</li>\n                  <li><strong>Router Mode:</strong> History</li>\n                </ul>\n              </div>\n\n              <div class=\"mt-4\">\n                <h6>Service Status:</h6>\n                <ul class=\"list-unstyled\">\n                  <li>\n                    <span class=\"badge\" :class=\"adminServiceStatus.class\">\n                      {{ adminServiceStatus.text }}\n                    </span>\n                    Admin Auth Service\n                  </li>\n                  <li>\n                    <span class=\"badge\" :class=\"clientServiceStatus.class\">\n                      {{ clientServiceStatus.text }}\n                    </span>\n                    Client Auth Service\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { version } from 'vue';\n\nexport default {\n  name: 'AdminTest',\n  data() {\n    return {\n      vueVersion: version,\n      adminServiceStatus: { text: 'Unknown', class: 'bg-secondary' },\n      clientServiceStatus: { text: 'Unknown', class: 'bg-secondary' }\n    };\n  },\n  \n  async mounted() {\n    console.log('AdminTest component mounted successfully');\n    this.checkServices();\n  },\n  \n  methods: {\n    async checkServices() {\n      // Check admin auth service\n      try {\n        const adminAuthService = await import('@/services/adminAuthService');\n        if (adminAuthService.default) {\n          this.adminServiceStatus = { text: 'Available', class: 'bg-success' };\n        } else {\n          this.adminServiceStatus = { text: 'Not Available', class: 'bg-danger' };\n        }\n      } catch (error) {\n        console.error('Admin service check failed:', error);\n        this.adminServiceStatus = { text: 'Error', class: 'bg-danger' };\n      }\n\n      // Check client auth service\n      try {\n        const clientAuthService = await import('@/services/clientAuthService');\n        if (clientAuthService.default) {\n          this.clientServiceStatus = { text: 'Available', class: 'bg-success' };\n        } else {\n          this.clientServiceStatus = { text: 'Not Available', class: 'bg-danger' };\n        }\n      } catch (error) {\n        console.error('Client service check failed:', error);\n        this.clientServiceStatus = { text: 'Error', class: 'bg-danger' };\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-test {\n  min-height: 100vh;\n  background: #f8f9fa;\n  padding: 2rem 0;\n}\n\n.card {\n  border: none;\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n.badge {\n  color: white;\n  margin-right: 0.5rem;\n}\n</style>\n"],"mappings":"AAmEA,SAASA,OAAM,QAAS,KAAK;AAE7B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAEH,OAAO;MACnBI,kBAAkB,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAe,CAAC;MAC9DC,mBAAmB,EAAE;QAAEF,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAe;IAChE,CAAC;EACH,CAAC;EAED,MAAME,OAAOA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACvD,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB;MACA,IAAI;QACF,MAAME,gBAAe,GAAI,MAAM,MAAM,CAAC,6BAA6B,CAAC;QACpE,IAAIA,gBAAgB,CAACC,OAAO,EAAE;UAC5B,IAAI,CAACV,kBAAiB,GAAI;YAAEC,IAAI,EAAE,WAAW;YAAEC,KAAK,EAAE;UAAa,CAAC;QACtE,OAAO;UACL,IAAI,CAACF,kBAAiB,GAAI;YAAEC,IAAI,EAAE,eAAe;YAAEC,KAAK,EAAE;UAAY,CAAC;QACzE;MACF,EAAE,OAAOS,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAI,CAACX,kBAAiB,GAAI;UAAEC,IAAI,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAY,CAAC;MACjE;;MAEA;MACA,IAAI;QACF,MAAMU,iBAAgB,GAAI,MAAM,MAAM,CAAC,8BAA8B,CAAC;QACtE,IAAIA,iBAAiB,CAACF,OAAO,EAAE;UAC7B,IAAI,CAACP,mBAAkB,GAAI;YAAEF,IAAI,EAAE,WAAW;YAAEC,KAAK,EAAE;UAAa,CAAC;QACvE,OAAO;UACL,IAAI,CAACC,mBAAkB,GAAI;YAAEF,IAAI,EAAE,eAAe;YAAEC,KAAK,EAAE;UAAY,CAAC;QAC1E;MACF,EAAE,OAAOS,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACR,mBAAkB,GAAI;UAAEF,IAAI,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAY,CAAC;MAClE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}