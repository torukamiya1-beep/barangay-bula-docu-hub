{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, renderList as _renderList, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-activity-logs\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_3 = {\n  class: \"container-fluid p-4\"\n};\nconst _hoisted_4 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"col-12\"\n};\nconst _hoisted_6 = {\n  class: \"d-flex justify-content-between align-items-center flex-wrap\"\n};\nconst _hoisted_7 = {\n  class: \"d-flex gap-2\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_10 = {\n  class: \"col-12\"\n};\nconst _hoisted_11 = {\n  class: \"card shadow\"\n};\nconst _hoisted_12 = {\n  class: \"card-header d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_13 = [\"aria-expanded\"];\nconst _hoisted_14 = {\n  class: \"row\"\n};\nconst _hoisted_15 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_16 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_17 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_18 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_19 = {\n  class: \"row\"\n};\nconst _hoisted_20 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_21 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_22 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_23 = {\n  class: \"col-md-3 mb-3\"\n};\nconst _hoisted_24 = {\n  class: \"text-end\"\n};\nconst _hoisted_25 = {\n  class: \"row\"\n};\nconst _hoisted_26 = {\n  class: \"col-12\"\n};\nconst _hoisted_27 = {\n  class: \"card shadow\"\n};\nconst _hoisted_28 = {\n  class: \"card-body\"\n};\nconst _hoisted_29 = {\n  key: 0,\n  class: \"text-center py-4\"\n};\nconst _hoisted_30 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_31 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_32 = {\n  class: \"fw-bold\"\n};\nconst _hoisted_33 = {\n  class: \"text-muted small\"\n};\nconst _hoisted_34 = {\n  class: \"text-muted small\"\n};\nconst _hoisted_35 = {\n  class: \"activity-cell\"\n};\nconst _hoisted_36 = {\n  key: 0,\n  class: \"badge bg-info text-white\"\n};\nconst _hoisted_37 = {\n  key: 1,\n  class: \"text-muted\"\n};\nconst _hoisted_38 = {\n  key: 1,\n  class: \"text-muted\"\n};\nconst _hoisted_39 = {\n  class: \"small\"\n};\nconst _hoisted_40 = [\"onClick\"];\nconst _hoisted_41 = {\n  key: 3,\n  class: \"d-flex justify-content-between align-items-center mt-3\"\n};\nconst _hoisted_42 = {\n  class: \"text-muted\"\n};\nconst _hoisted_43 = {\n  class: \"pagination pagination-sm mb-0\"\n};\nconst _hoisted_44 = [\"disabled\"];\nconst _hoisted_45 = [\"onClick\"];\nconst _hoisted_46 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AdminHeader = _resolveComponent(\"AdminHeader\");\n  const _component_AdminSidebar = _resolveComponent(\"AdminSidebar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AdminHeader, {\n    userName: $data.adminData?.first_name || 'Admin',\n    showUserDropdown: $data.showUserDropdown,\n    sidebarCollapsed: $data.sidebarCollapsed,\n    activeMenu: $options.activeMenu,\n    onSidebarToggle: $options.handleSidebarToggle,\n    onUserDropdownToggle: $options.handleUserDropdownToggle,\n    onMenuAction: $options.handleMenuAction,\n    onLogout: $options.handleLogout\n  }, null, 8 /* PROPS */, [\"userName\", \"showUserDropdown\", \"sidebarCollapsed\", \"activeMenu\", \"onSidebarToggle\", \"onUserDropdownToggle\", \"onMenuAction\", \"onLogout\"]), _createCommentVNode(\" Mobile Overlay \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"mobile-overlay\", {\n      active: !$data.sidebarCollapsed && $data.isMobile\n    }]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeMobileSidebar && $options.closeMobileSidebar(...args))\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_AdminSidebar, {\n    collapsed: $data.sidebarCollapsed,\n    activeMenu: $options.activeMenu,\n    onMenuChange: $options.handleMenuChange,\n    onLogout: $options.handleLogout,\n    onToggleSidebar: $options.handleSidebarToggle\n  }, null, 8 /* PROPS */, [\"collapsed\", \"activeMenu\", \"onMenuChange\", \"onLogout\", \"onToggleSidebar\"]), _createElementVNode(\"main\", {\n    class: _normalizeClass([\"main-content\", {\n      'sidebar-collapsed': $data.sidebarCollapsed\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Page Header \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"btn btn-outline-success btn-sm\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.loadLogs && $options.loadLogs(...args)),\n    disabled: $data.loading\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass([\"fas fa-sync-alt me-1\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */), _cache[17] || (_cache[17] = _createTextVNode(\" Refresh \"))], 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n    class: \"btn btn-success btn-sm\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.exportLogs && $options.exportLogs(...args))\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    class: \"fas fa-download me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Export \")])), _createElementVNode(\"button\", {\n    class: \"btn btn-info btn-sm\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.printLogs && $options.printLogs(...args))\n  }, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    class: \"fas fa-print me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Print \")]))])])])]), _createCommentVNode(\" Filters \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[20] || (_cache[20] = _createElementVNode(\"h6\", {\n    class: \"mb-0\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-filter me-2\"\n  }), _createTextVNode(\" Activity Filters \")], -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-outline-primary\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.toggleFilters && $options.toggleFilters(...args)),\n    \"aria-expanded\": $data.filtersExpanded,\n    \"aria-controls\": \"filtersCollapse\"\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass([\"fas\", $data.filtersExpanded ? 'fa-chevron-up' : 'fa-chevron-down'])\n  }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($data.filtersExpanded ? 'Hide' : 'Show') + \" Filters \", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_13)]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"card-body\", {\n      'collapse': !$data.filtersExpanded\n    }]),\n    id: \"filtersCollapse\"\n  }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Date From\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.filters.dateFrom = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.dateFrom]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Date To\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.filters.dateTo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.dateTo]])]), _createElementVNode(\"div\", _hoisted_17, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Activity Type\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.filters.type = $event)\n  }, _cache[23] || (_cache[23] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-729a130d>All Types</option><option value=\\\"login\\\" data-v-729a130d>Login</option><option value=\\\"logout\\\" data-v-729a130d>Logout</option><option value=\\\"document_request\\\" data-v-729a130d>Document Request</option><option value=\\\"status_change\\\" data-v-729a130d>Status Change</option><option value=\\\"approval\\\" data-v-729a130d>Approval</option><option value=\\\"rejection\\\" data-v-729a130d>Rejection</option><option value=\\\"user_management\\\" data-v-729a130d>User Management</option><option value=\\\"payment\\\" data-v-729a130d>Payment</option><option value=\\\"system\\\" data-v-729a130d>System</option><option value=\\\"error\\\" data-v-729a130d>Error</option>\", 11)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.filters.type]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"User Type\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.filters.userType = $event)\n  }, _cache[25] || (_cache[25] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-729a130d>All User Types</option><option value=\\\"admin\\\" data-v-729a130d>Administrator</option><option value=\\\"employee\\\" data-v-729a130d>Employee</option><option value=\\\"client\\\" data-v-729a130d>Client</option><option value=\\\"system\\\" data-v-729a130d>System</option>\", 5)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.filters.userType]])])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Document Type\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.filters.documentType = $event)\n  }, _cache[27] || (_cache[27] = [_createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Document Types\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Cedula\"\n  }, \"Cedula\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Barangay Clearance\"\n  }, \"Barangay Clearance\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.filters.documentType]])]), _createElementVNode(\"div\", _hoisted_21, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Status Changes\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.filters.statusChange = $event)\n  }, _cache[29] || (_cache[29] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-729a130d>All Status Changes</option><option value=\\\"pending\\\" data-v-729a130d>To Pending</option><option value=\\\"approved\\\" data-v-729a130d>To Approved</option><option value=\\\"processing\\\" data-v-729a130d>To Processing</option><option value=\\\"ready_for_pickup\\\" data-v-729a130d>To Ready for Pickup</option><option value=\\\"completed\\\" data-v-729a130d>To Completed</option><option value=\\\"rejected\\\" data-v-729a130d>To Rejected</option><option value=\\\"cancelled\\\" data-v-729a130d>To Cancelled</option>\", 8)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.filters.statusChange]])]), _createElementVNode(\"div\", _hoisted_22, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"User Search\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Search by user name...\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.filters.user = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.user]])]), _createElementVNode(\"div\", _hoisted_23, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"IP Address\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Search by IP...\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.filters.ipAddress = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.ipAddress]])])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-sm\",\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.applyFilters && $options.applyFilters(...args))\n  }, _cache[33] || (_cache[33] = [_createElementVNode(\"i\", {\n    class: \"fas fa-filter me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Apply Filters \")])), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm ms-2\",\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.clearFilters && $options.clearFilters(...args))\n  }, _cache[34] || (_cache[34] = [_createElementVNode(\"i\", {\n    class: \"fas fa-times me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Clear \")]))])], 2 /* CLASS */)])])]), _createCommentVNode(\" Activity Logs Table \"), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_cache[39] || (_cache[39] = _createElementVNode(\"div\", {\n    class: \"card-header py-3\"\n  }, [_createElementVNode(\"h6\", {\n    class: \"m-0 font-weight-bold text-primary\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-list me-2\"\n  }), _createTextVNode(\" Activity Log Entries \")])], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_28, [_createCommentVNode(\" Loading State \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, _cache[35] || (_cache[35] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Loading...\")], -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"text-muted mt-2\"\n  }, \"Loading activity logs...\", -1 /* HOISTED */)]))) : $data.filteredLogs.length === 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Empty State \"), _cache[36] || (_cache[36] = _createElementVNode(\"div\", {\n    class: \"text-center py-5\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clipboard-list fa-3x text-gray-300 mb-3\"\n  }), _createElementVNode(\"h5\", {\n    class: \"text-gray-600\"\n  }, \"No activity logs found\"), _createElementVNode(\"p\", {\n    class: \"text-muted\"\n  }, \"No activities match your current filters.\")], -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Logs Table \"), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"table\", _hoisted_31, [_cache[38] || (_cache[38] = _createElementVNode(\"thead\", {\n    class: \"table-light\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Timestamp\"), _createElementVNode(\"th\", null, \"User\"), _createElementVNode(\"th\", null, \"Activity\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Document\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"IP Address\"), _createElementVNode(\"th\", null, \"Details\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedLogs, log => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: log.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString($options.formatDateTime(log.timestamp)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_32, _toDisplayString(log.user_name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_33, _toDisplayString(log.user_role), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"badge badge-outline\", $options.getUserTypeBadgeClass(log.user_type)])\n    }, _toDisplayString($options.formatUserType(log.user_type)), 3 /* TEXT, CLASS */)])])]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_35, _toDisplayString(log.activity), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"badge\", $options.getTypeBadgeClass(log.type)])\n    }, _toDisplayString($options.formatType(log.type)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [log.document_type ? (_openBlock(), _createElementBlock(\"span\", _hoisted_36, _toDisplayString(log.document_type), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_37, \"-\"))]), _createElementVNode(\"td\", null, [log.status_change ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: _normalizeClass([\"badge\", $options.getStatusBadgeClass(log.status_change)])\n    }, _toDisplayString($options.formatStatus(log.status_change)), 3 /* TEXT, CLASS */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_38, \"-\"))]), _createElementVNode(\"td\", null, [_createElementVNode(\"code\", _hoisted_39, _toDisplayString(log.ip_address), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-outline-info btn-sm\",\n      onClick: $event => $options.viewDetails(log),\n      title: \"View Details\"\n    }, [...(_cache[37] || (_cache[37] = [_createElementVNode(\"i\", {\n      class: \"fas fa-eye\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_40)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Pagination \"), $options.totalPages > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, \" Showing \" + _toDisplayString(($data.currentPage - 1) * $data.itemsPerPage + 1) + \" to \" + _toDisplayString(Math.min($data.currentPage * $data.itemsPerPage, $data.filteredLogs.length)) + \" of \" + _toDisplayString($data.filteredLogs.length) + \" entries \", 1 /* TEXT */), _createElementVNode(\"nav\", null, [_createElementVNode(\"ul\", _hoisted_43, [_createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      disabled: $data.currentPage === 1\n    }])\n  }, [_createElementVNode(\"button\", {\n    class: \"page-link\",\n    onClick: _cache[15] || (_cache[15] = $event => $options.changePage($data.currentPage - 1)),\n    disabled: $data.currentPage === 1\n  }, \" Previous \", 8 /* PROPS */, _hoisted_44)], 2 /* CLASS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: page,\n      class: _normalizeClass([\"page-item\", {\n        active: page === $data.currentPage\n      }])\n    }, [_createElementVNode(\"button\", {\n      class: \"page-link\",\n      onClick: $event => $options.changePage(page)\n    }, _toDisplayString(page), 9 /* TEXT, PROPS */, _hoisted_45)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      disabled: $data.currentPage === $options.totalPages\n    }])\n  }, [_createElementVNode(\"button\", {\n    class: \"page-link\",\n    onClick: _cache[16] || (_cache[16] = $event => $options.changePage($data.currentPage + 1)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \" Next \", 8 /* PROPS */, _hoisted_46)], 2 /* CLASS */)])])])) : _createCommentVNode(\"v-if\", true)])])])])])], 2 /* CLASS */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_AdminHeader","userName","$data","adminData","first_name","showUserDropdown","sidebarCollapsed","activeMenu","$options","onSidebarToggle","handleSidebarToggle","onUserDropdownToggle","handleUserDropdownToggle","onMenuAction","handleMenuAction","onLogout","handleLogout","_createCommentVNode","_createElementVNode","_normalizeClass","active","isMobile","onClick","_cache","args","closeMobileSidebar","_hoisted_2","_component_AdminSidebar","collapsed","onMenuChange","handleMenuChange","onToggleSidebar","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","loadLogs","disabled","loading","exportLogs","printLogs","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","toggleFilters","filtersExpanded","_toDisplayString","id","_hoisted_14","_hoisted_15","type","filters","dateFrom","$event","_hoisted_16","dateTo","_hoisted_17","_hoisted_18","userType","_hoisted_19","_hoisted_20","documentType","value","_hoisted_21","statusChange","_hoisted_22","placeholder","user","_hoisted_23","ipAddress","_hoisted_24","applyFilters","clearFilters","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","role","filteredLogs","length","_Fragment","key","_hoisted_30","_hoisted_31","_renderList","paginatedLogs","log","formatDateTime","timestamp","_hoisted_32","user_name","_hoisted_33","user_role","_hoisted_34","getUserTypeBadgeClass","user_type","formatUserType","_hoisted_35","activity","getTypeBadgeClass","formatType","document_type","_hoisted_36","_hoisted_37","status_change","getStatusBadgeClass","formatStatus","_hoisted_38","_hoisted_39","ip_address","viewDetails","title","totalPages","_hoisted_41","_hoisted_42","currentPage","itemsPerPage","Math","min","_hoisted_43","changePage","_hoisted_44","visiblePages","page","_hoisted_45","_hoisted_46"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminActivityLogs.vue"],"sourcesContent":["<template>\n  <div class=\"admin-activity-logs\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n      \n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid p-4\">\n          <!-- Page Header -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n\n                <div class=\"d-flex gap-2\">\n                  <button class=\"btn btn-outline-success btn-sm\" @click=\"loadLogs\" :disabled=\"loading\">\n                    <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                    Refresh\n                  </button>\n                  <button class=\"btn btn-success btn-sm\" @click=\"exportLogs\">\n                    <i class=\"fas fa-download me-1\"></i>\n                    Export\n                  </button>\n                  <button class=\"btn btn-info btn-sm\" @click=\"printLogs\">\n                    <i class=\"fas fa-print me-1\"></i>\n                    Print\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Filters -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\n                  <h6 class=\"mb-0\">\n                    <i class=\"fas fa-filter me-2\"></i>\n                    Activity Filters\n                  </h6>\n                  <button\n                    class=\"btn btn-sm btn-outline-primary\"\n                    @click=\"toggleFilters\"\n                    :aria-expanded=\"filtersExpanded\"\n                    aria-controls=\"filtersCollapse\"\n                  >\n                    <i class=\"fas\" :class=\"filtersExpanded ? 'fa-chevron-up' : 'fa-chevron-down'\"></i>\n                    {{ filtersExpanded ? 'Hide' : 'Show' }} Filters\n                  </button>\n                </div>\n                <div class=\"card-body\" id=\"filtersCollapse\" :class=\"{ 'collapse': !filtersExpanded }\">\n                  <div class=\"row\">\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Date From</label>\n                      <input type=\"date\" class=\"form-control\" v-model=\"filters.dateFrom\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Date To</label>\n                      <input type=\"date\" class=\"form-control\" v-model=\"filters.dateTo\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Activity Type</label>\n                      <select class=\"form-select\" v-model=\"filters.type\">\n                        <option value=\"\">All Types</option>\n                        <option value=\"login\">Login</option>\n                        <option value=\"logout\">Logout</option>\n                        <option value=\"document_request\">Document Request</option>\n                        <option value=\"status_change\">Status Change</option>\n                        <option value=\"approval\">Approval</option>\n                        <option value=\"rejection\">Rejection</option>\n                        <option value=\"user_management\">User Management</option>\n                        <option value=\"payment\">Payment</option>\n                        <option value=\"system\">System</option>\n                        <option value=\"error\">Error</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">User Type</label>\n                      <select class=\"form-select\" v-model=\"filters.userType\">\n                        <option value=\"\">All User Types</option>\n                        <option value=\"admin\">Administrator</option>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"client\">Client</option>\n                        <option value=\"system\">System</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Document Type</label>\n                      <select class=\"form-select\" v-model=\"filters.documentType\">\n                        <option value=\"\">All Document Types</option>\n                        <option value=\"Cedula\">Cedula</option>\n                        <option value=\"Barangay Clearance\">Barangay Clearance</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">Status Changes</label>\n                      <select class=\"form-select\" v-model=\"filters.statusChange\">\n                        <option value=\"\">All Status Changes</option>\n                        <option value=\"pending\">To Pending</option>\n                        <option value=\"approved\">To Approved</option>\n                        <option value=\"processing\">To Processing</option>\n                        <option value=\"ready_for_pickup\">To Ready for Pickup</option>\n                        <option value=\"completed\">To Completed</option>\n                        <option value=\"rejected\">To Rejected</option>\n                        <option value=\"cancelled\">To Cancelled</option>\n                      </select>\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">User Search</label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Search by user name...\" v-model=\"filters.user\">\n                    </div>\n                    <div class=\"col-md-3 mb-3\">\n                      <label class=\"form-label\">IP Address</label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Search by IP...\" v-model=\"filters.ipAddress\">\n                    </div>\n                  </div>\n                  <div class=\"text-end\">\n                    <button class=\"btn btn-primary btn-sm\" @click=\"applyFilters\">\n                      <i class=\"fas fa-filter me-1\"></i>\n                      Apply Filters\n                    </button>\n                    <button class=\"btn btn-outline-secondary btn-sm ms-2\" @click=\"clearFilters\">\n                      <i class=\"fas fa-times me-1\"></i>\n                      Clear\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Activity Logs Table -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header py-3\">\n                  <h6 class=\"m-0 font-weight-bold text-primary\">\n                    <i class=\"fas fa-list me-2\"></i>\n                    Activity Log Entries\n                  </h6>\n                </div>\n                <div class=\"card-body\">\n                  <!-- Loading State -->\n                  <div v-if=\"loading\" class=\"text-center py-4\">\n                    <div class=\"spinner-border text-primary\" role=\"status\">\n                      <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <p class=\"text-muted mt-2\">Loading activity logs...</p>\n                  </div>\n\n                  <!-- Empty State -->\n                  <div v-else-if=\"filteredLogs.length === 0\" class=\"text-center py-5\">\n                    <i class=\"fas fa-clipboard-list fa-3x text-gray-300 mb-3\"></i>\n                    <h5 class=\"text-gray-600\">No activity logs found</h5>\n                    <p class=\"text-muted\">No activities match your current filters.</p>\n                  </div>\n\n                  <!-- Logs Table -->\n                  <div v-else class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th>Timestamp</th>\n                          <th>User</th>\n                          <th>Activity</th>\n                          <th>Type</th>\n                          <th>Document</th>\n                          <th>Status</th>\n                          <th>IP Address</th>\n                          <th>Details</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"log in paginatedLogs\" :key=\"log.id\">\n                          <td>{{ formatDateTime(log.timestamp) }}</td>\n                          <td>\n                            <div>\n                              <div class=\"fw-bold\">{{ log.user_name }}</div>\n                              <div class=\"text-muted small\">{{ log.user_role }}</div>\n                              <div class=\"text-muted small\">\n                                <span class=\"badge badge-outline\" :class=\"getUserTypeBadgeClass(log.user_type)\">\n                                  {{ formatUserType(log.user_type) }}\n                                </span>\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div class=\"activity-cell\">\n                              {{ log.activity }}\n                            </div>\n                          </td>\n                          <td>\n                            <span class=\"badge\" :class=\"getTypeBadgeClass(log.type)\">\n                              {{ formatType(log.type) }}\n                            </span>\n                          </td>\n                          <td>\n                            <span v-if=\"log.document_type\" class=\"badge bg-info text-white\">\n                              {{ log.document_type }}\n                            </span>\n                            <span v-else class=\"text-muted\">-</span>\n                          </td>\n                          <td>\n                            <span v-if=\"log.status_change\" class=\"badge\" :class=\"getStatusBadgeClass(log.status_change)\">\n                              {{ formatStatus(log.status_change) }}\n                            </span>\n                            <span v-else class=\"text-muted\">-</span>\n                          </td>\n                          <td>\n                            <code class=\"small\">{{ log.ip_address }}</code>\n                          </td>\n                          <td>\n                            <button class=\"btn btn-outline-info btn-sm\" @click=\"viewDetails(log)\" title=\"View Details\">\n                              <i class=\"fas fa-eye\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  <!-- Pagination -->\n                  <div v-if=\"totalPages > 1\" class=\"d-flex justify-content-between align-items-center mt-3\">\n                    <div class=\"text-muted\">\n                      Showing {{ (currentPage - 1) * itemsPerPage + 1 }} to {{ Math.min(currentPage * itemsPerPage, filteredLogs.length) }} of {{ filteredLogs.length }} entries\n                    </div>\n                    <nav>\n                      <ul class=\"pagination pagination-sm mb-0\">\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">\n                            Previous\n                          </button>\n                        </li>\n                        <li \n                          v-for=\"page in visiblePages\" \n                          :key=\"page\" \n                          class=\"page-item\" \n                          :class=\"{ active: page === currentPage }\"\n                        >\n                          <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n                        </li>\n                        <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                          <button class=\"page-link\" @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">\n                            Next\n                          </button>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport activityLogService from '@/services/activityLogService';\nimport adminDocumentService from '@/services/adminDocumentService';\n\nexport default {\n  name: 'AdminActivityLogs',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n\n  data() {\n    return {\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Component Data\n      loading: false,\n      logs: [],\n      filteredLogs: [],\n      currentPage: 1,\n      itemsPerPage: 20,\n      filtersExpanded: false, // Start with filters collapsed\n      filters: {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      }\n    };\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    },\n\n    paginatedLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredLogs.slice(start, end);\n    },\n\n    totalPages() {\n      return Math.ceil(this.filteredLogs.length / this.itemsPerPage);\n    },\n\n    visiblePages() {\n      const pages = [];\n      const start = Math.max(1, this.currentPage - 2);\n      const end = Math.min(this.totalPages, this.currentPage + 2);\n      \n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  \n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Set default date range (last 30 days)\n    const today = new Date();\n    const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));\n\n    this.filters.dateTo = today.toISOString().split('T')[0];\n    this.filters.dateFrom = thirtyDaysAgo.toISOString().split('T')[0];\n\n    // Load component data\n    await this.loadAdminProfile();\n    await this.loadLogs();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true;\n      }\n\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true;\n        } else if (!this.isMobile && wasMobile) {\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    async loadAdminProfile() {\n      try {\n        const user = unifiedAuthService.getCurrentUser();\n        if (user && user.profile) {\n          this.adminData = user.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: user?.username || 'Admin',\n            role: user?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const user = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: user?.username || 'Admin',\n          role: user?.role || 'admin'\n        };\n      }\n    },\n\n    async loadLogs() {\n      this.loading = true;\n      try {\n        console.log('🔄 Loading activity logs...');\n\n        let activityData = null;\n\n        // Primary approach: Use comprehensive activity logs API (from audit_logs table)\n        try {\n          console.log('🔄 Loading from comprehensive activity logs API...');\n          const apiResponse = await activityLogService.getComprehensiveActivityLogs(this.filters, 1, 100);\n\n          if (apiResponse.success && apiResponse.data && apiResponse.data.activities && apiResponse.data.activities.length > 0) {\n            console.log('✅ Loaded data from comprehensive activity logs API:', apiResponse.data.activities.length, 'records');\n            activityData = apiResponse.data.activities;\n          } else {\n            throw new Error('Comprehensive API returned no data');\n          }\n        } catch (primaryError) {\n          console.log('⚠️  Comprehensive activity logs API failed:', primaryError.message);\n\n          // Fallback 1: Try legacy activity logs API (from request_status_history)\n          try {\n            console.log('🔄 Fallback: Loading from legacy activity logs API...');\n            const legacyResponse = await activityLogService.getActivityLogs(this.filters, 1, 100);\n\n            if (legacyResponse.success && legacyResponse.data && legacyResponse.data.activities && legacyResponse.data.activities.length > 0) {\n              console.log('✅ Loaded data from legacy activity logs API:', legacyResponse.data.activities.length, 'records');\n              activityData = legacyResponse.data.activities;\n            }\n          } catch (fallbackError) {\n            console.log('⚠️  Legacy activity logs API failed:', fallbackError.message);\n\n            // Final fallback: Try adminDocumentService (for document status changes)\n            try {\n              console.log('🔄 Final fallback: Loading from adminDocumentService...');\n              const response = await adminDocumentService.getRecentActivity(100);\n\n              if (response.success && response.data && response.data.length > 0) {\n                console.log('✅ Loaded data from adminDocumentService:', response.data.length, 'records');\n\n                // Transform the data to match our frontend format\n                activityData = response.data.map(item => ({\n                  id: item.id,\n                  timestamp: item.changed_at,\n                  user_name: item.changed_by_name || 'System',\n                  user_role: this.determineUserRole(item.changed_by_name),\n                  user_type: this.determineUserType(item.changed_by_name),\n                  activity: this.generateActivityDescription(item),\n                  type: 'status_change',\n                  document_type: item.document_type,\n                  status_change: item.new_status,\n                  ip_address: 'N/A',\n                  details: this.generateDetailedDescription(item)\n                }));\n              }\n            } catch (finalError) {\n              console.log('⚠️  AdminDocumentService final fallback failed:', finalError.message);\n            }\n          }\n        }\n\n        // If we have real data, use it\n        if (activityData && activityData.length > 0) {\n          this.logs = activityData;\n          console.log('✅ Successfully loaded activity logs:', this.logs.length, 'records');\n        } else {\n          console.log('⚠️  No real activity data available, showing system status');\n          // Show informative system status if no real data is available\n          this.logs = [\n            {\n              id: 1,\n              timestamp: new Date().toISOString(),\n              user_name: 'System',\n              user_role: 'System',\n              user_type: 'system',\n              activity: 'Activity logging system initialized',\n              type: 'info',\n              document_type: null,\n              status_change: null,\n              ip_address: 'N/A',\n              details: 'The activity logging system is properly configured. Real activity data will appear here when:\\n• Users log in/out of the system\\n• Document requests are submitted\\n• Status changes are made by administrators\\n• Administrative actions are performed\\n\\nCurrent database status: 15 activity records available in audit_logs table, 6 records in request_status_history table.'\n            },\n            {\n              id: 2,\n              timestamp: new Date(Date.now() - 60000).toISOString(),\n              user_name: 'System',\n              user_role: 'System',\n              user_type: 'system',\n              activity: 'Backend services status check',\n              type: 'info',\n              document_type: null,\n              status_change: null,\n              ip_address: 'N/A',\n              details: 'Backend API endpoints are configured and ready:\\n• /api/admin/activity-logs/comprehensive - Primary endpoint (audit_logs table)\\n• /api/admin/activity-logs - Legacy endpoint (request_status_history table)\\n• /api/admin/documents/recent-activity - Fallback endpoint\\n\\nIf you see this message, it means the frontend is working but unable to connect to the backend services. Please ensure the backend server is running on port 7000.'\n            }\n          ];\n        }\n\n        this.filteredLogs = [...this.logs];\n        this.applyFilters(); // Apply default filters\n      } catch (error) {\n        console.error('Failed to load activity logs:', error);\n\n        // If everything fails, show error message\n        this.logs = [\n          {\n            id: 1,\n            timestamp: new Date().toISOString(),\n            user_name: 'System',\n            user_role: 'System',\n            user_type: 'system',\n            activity: 'Activity logs service unavailable',\n            type: 'error',\n            document_type: null,\n            status_change: null,\n            ip_address: 'N/A',\n            details: 'Unable to load activity logs from server. Please check your connection and try again.'\n          }\n        ];\n        this.filteredLogs = [...this.logs];\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    applyFilters() {\n      let filtered = [...this.logs];\n\n      // Apply date filters\n      if (this.filters.dateFrom) {\n        filtered = filtered.filter(log => new Date(log.timestamp) >= new Date(this.filters.dateFrom));\n      }\n      if (this.filters.dateTo) {\n        filtered = filtered.filter(log => new Date(log.timestamp) <= new Date(this.filters.dateTo + 'T23:59:59'));\n      }\n\n      // Apply activity type filter\n      if (this.filters.type) {\n        filtered = filtered.filter(log => log.type === this.filters.type);\n      }\n\n      // Apply user type filter\n      if (this.filters.userType) {\n        filtered = filtered.filter(log => log.user_type === this.filters.userType);\n      }\n\n      // Apply document type filter\n      if (this.filters.documentType) {\n        filtered = filtered.filter(log => log.document_type === this.filters.documentType);\n      }\n\n      // Apply status change filter\n      if (this.filters.statusChange) {\n        filtered = filtered.filter(log => log.status_change === this.filters.statusChange);\n      }\n\n      // Apply user search filter\n      if (this.filters.user) {\n        const query = this.filters.user.toLowerCase();\n        filtered = filtered.filter(log =>\n          log.user_name.toLowerCase().includes(query) ||\n          log.user_role.toLowerCase().includes(query)\n        );\n      }\n\n      // Apply IP address filter\n      if (this.filters.ipAddress) {\n        const query = this.filters.ipAddress.toLowerCase();\n        filtered = filtered.filter(log =>\n          log.ip_address.toLowerCase().includes(query)\n        );\n      }\n\n      this.filteredLogs = filtered;\n      this.currentPage = 1;\n    },\n\n    clearFilters() {\n      this.filters = {\n        dateFrom: '',\n        dateTo: '',\n        type: '',\n        userType: '',\n        documentType: '',\n        statusChange: '',\n        user: '',\n        ipAddress: ''\n      };\n      this.filteredLogs = [...this.logs];\n      this.currentPage = 1;\n    },\n\n    toggleFilters() {\n      this.filtersExpanded = !this.filtersExpanded;\n    },\n\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n\n    getInitials(name) {\n      if (!name) return '?';\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase().slice(0, 2);\n    },\n\n    getTypeBadgeClass(type) {\n      const classes = {\n        'login': 'bg-success',\n        'logout': 'bg-secondary',\n        'document_request': 'bg-warning',\n        'status_change': 'bg-primary',\n        'approval': 'bg-success',\n        'rejection': 'bg-danger',\n        'payment': 'bg-info',\n        'user_management': 'bg-purple',\n        'system': 'bg-info',\n        'error': 'bg-danger'\n      };\n      return classes[type] || 'bg-secondary';\n    },\n\n    getUserTypeBadgeClass(userType) {\n      const classes = {\n        'admin': 'badge-admin',\n        'employee': 'badge-employee',\n        'client': 'badge-client',\n        'system': 'badge-system'\n      };\n      return classes[userType] || 'badge-secondary';\n    },\n\n\n\n    getStatusBadgeClass(status) {\n      const classes = {\n        'pending': 'bg-warning text-dark',\n        'approved': 'bg-success',\n        'processing': 'bg-primary',\n        'ready_for_pickup': 'bg-info',\n        'completed': 'bg-success',\n        'rejected': 'bg-danger',\n        'cancelled': 'bg-secondary'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n\n    formatType(type) {\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n\n    formatUserType(userType) {\n      const types = {\n        'admin': 'Administrator',\n        'employee': 'Employee',\n        'client': 'Client',\n        'system': 'System'\n      };\n      return types[userType] || userType;\n    },\n\n    formatStatus(status) {\n      return status.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    },\n\n    // Helper methods for data transformation\n    determineUserRole(userName) {\n      if (!userName || userName === 'System') return 'System';\n      // In a real system, you'd get this from the database\n      return 'Administrator'; // Default for now\n    },\n\n    determineUserType(userName) {\n      if (!userName || userName === 'System') return 'system';\n      // In a real system, you'd get this from the database\n      return 'admin'; // Default for now\n    },\n\n    generateActivityDescription(item) {\n      const action = item.old_status ?\n        `changed status from \"${item.old_status}\" to \"${item.new_status}\"` :\n        `set status to \"${item.new_status}\"`;\n\n      return `${item.changed_by_name || 'System'} ${action} for ${item.document_type} request ${item.request_number}`;\n    },\n\n    generateDetailedDescription(item) {\n      let details = `Request: ${item.request_number}\\n`;\n      details += `Document Type: ${item.document_type}\\n`;\n      details += `Client: ${item.client_name || 'Unknown'}\\n`;\n\n      if (item.old_status) {\n        details += `Status Changed: ${item.old_status} → ${item.new_status}\\n`;\n      } else {\n        details += `Status Set: ${item.new_status}\\n`;\n      }\n\n      if (item.change_reason) {\n        details += `Reason: ${item.change_reason}\\n`;\n      }\n\n      details += `Changed At: ${new Date(item.changed_at).toLocaleString()}\\n`;\n      details += `Changed By: ${item.changed_by_name || 'System'}`;\n\n      return details;\n    },\n\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    viewDetails(log) {\n      const details = `\nActivity Log Details\n\nTimestamp: ${this.formatDateTime(log.timestamp)}\nUser: ${log.user_name} (${log.user_role})\nUser Type: ${this.formatUserType(log.user_type)}\nActivity: ${log.activity}\nType: ${this.formatType(log.type)}\nDocument Type: ${log.document_type || 'N/A'}\nStatus Change: ${log.status_change ? this.formatStatus(log.status_change) : 'N/A'}\nIP Address: ${log.ip_address}\n\nDetails:\n${log.details}\n      `.trim();\n\n      alert(details);\n    },\n\n    exportLogs() {\n      try {\n        // Create CSV content\n        const headers = ['Timestamp', 'User Name', 'User Type', 'Activity', 'Type', 'Document Type', 'Status Change', 'IP Address', 'Details'];\n        const csvContent = [\n          headers.join(','),\n          ...this.filteredLogs.map(log => [\n            this.formatDateTime(log.timestamp),\n            `\"${log.user_name}\"`,\n            log.user_type || '',\n            `\"${log.activity}\"`,\n            log.type,\n            log.document_type || '',\n            log.status_change || '',\n            log.ip_address,\n            `\"${log.details}\"`\n          ].join(','))\n        ].join('\\n');\n\n        // Create and download file\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n\n        link.setAttribute('href', url);\n        link.setAttribute('download', `activity-logs-${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        console.log('Activity logs exported successfully');\n      } catch (error) {\n        console.error('Failed to export logs:', error);\n        alert('Failed to export activity logs. Please try again.');\n      }\n    },\n\n    printLogs() {\n      try {\n        // Create print content\n        const printContent = `\n          <html>\n            <head>\n              <title>Activity Logs Report</title>\n              <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                .header { text-align: center; margin-bottom: 30px; }\n                .filters { margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 5px; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; font-size: 12px; }\n                th { background-color: #f2f2f2; font-weight: bold; }\n                .timestamp { white-space: nowrap; }\n                .activity { max-width: 200px; word-wrap: break-word; }\n                .details { max-width: 300px; word-wrap: break-word; }\n                .badge { padding: 2px 6px; border-radius: 3px; font-size: 10px; }\n                .badge-login { background: #d4edda; color: #155724; }\n                .badge-logout { background: #d1ecf1; color: #0c5460; }\n                .badge-document_request { background: #fff3cd; color: #856404; }\n                .badge-status_change { background: #cce5ff; color: #004085; }\n                .badge-approval { background: #d4edda; color: #155724; }\n                .badge-rejection { background: #f8d7da; color: #721c24; }\n                .badge-payment { background: #e2e3e5; color: #383d41; }\n                .badge-user_management { background: #ffeaa7; color: #6c5ce7; }\n                .badge-system { background: #74b9ff; color: #0984e3; }\n                .badge-error { background: #fd79a8; color: #e84393; }\n                @media print {\n                  body { margin: 0; }\n                  .no-print { display: none; }\n                }\n              </style>\n            </head>\n            <body>\n              <div class=\"header\">\n                <h1>Activity Logs Report</h1>\n                <p>Generated on: ${new Date().toLocaleString()}</p>\n                <p>Total Records: ${this.filteredLogs.length}</p>\n              </div>\n\n              <div class=\"filters\">\n                <h3>Applied Filters:</h3>\n                <p><strong>Date Range:</strong> ${this.filters.dateFrom || 'All'} to ${this.filters.dateTo || 'All'}</p>\n                <p><strong>Activity Type:</strong> ${this.filters.type || 'All'}</p>\n                <p><strong>User Type:</strong> ${this.filters.userType || 'All'}</p>\n                <p><strong>Document Type:</strong> ${this.filters.documentType || 'All'}</p>\n                <p><strong>Status Change:</strong> ${this.filters.statusChange || 'All'}</p>\n                <p><strong>User Search:</strong> ${this.filters.user || 'None'}</p>\n                <p><strong>IP Address:</strong> ${this.filters.ipAddress || 'All'}</p>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>User</th>\n                    <th>Activity</th>\n                    <th>Type</th>\n                    <th>Document</th>\n                    <th>Status</th>\n                    <th>IP Address</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.filteredLogs.map(log => `\n                    <tr>\n                      <td class=\"timestamp\">${this.formatDateTime(log.timestamp)}</td>\n                      <td>\n                        <strong>${log.user_name}</strong><br>\n                        <small>${log.user_role}</small>\n                      </td>\n                      <td class=\"activity\">${log.activity}</td>\n                      <td><span class=\"badge badge-${log.type}\">${this.formatType(log.type)}</span></td>\n                      <td>${log.document_type || '-'}</td>\n                      <td>${log.status_change || '-'}</td>\n                      <td>${log.ip_address}</td>\n                      <td class=\"details\">${log.details}</td>\n                    </tr>\n                  `).join('')}\n                </tbody>\n              </table>\n            </body>\n          </html>\n        `;\n\n        // Open print window\n        const printWindow = window.open('', '_blank');\n        printWindow.document.write(printContent);\n        printWindow.document.close();\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n\n      } catch (error) {\n        console.error('Failed to print logs:', error);\n        alert('Failed to print activity logs. Please try again.');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped src=\"./css/adminDashboard.css\"></style>\n<style scoped>\n\n\n.badge-outline {\n  border: 1px solid;\n  background: transparent !important;\n  font-size: 0.65rem;\n}\n\n.badge-admin {\n  color: #dc3545;\n  border-color: #dc3545;\n}\n\n.badge-employee {\n  color: #007bff;\n  border-color: #007bff;\n}\n\n.badge-client {\n  color: #28a745;\n  border-color: #28a745;\n}\n\n.badge-system {\n  color: #6c757d;\n  border-color: #6c757d;\n}\n\n.activity-cell {\n  max-width: 200px;\n  word-wrap: break-word;\n  line-height: 1.3;\n}\n\n.bg-purple {\n  background-color: #6f42c1 !important;\n}\n\ncode.small {\n  font-size: 0.75rem;\n  color: #495057;\n  background-color: #f8f9fa;\n  padding: 2px 4px;\n  border-radius: 3px;\n}\n\n.table td {\n  vertical-align: middle;\n}\n\n/* Collapsible filters */\n.collapse {\n  display: none;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.card-header h6 {\n  color: #495057;\n  font-weight: 600;\n}\n\n.btn-outline-primary:hover {\n  transform: translateY(-1px);\n  transition: all 0.2s ease;\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}