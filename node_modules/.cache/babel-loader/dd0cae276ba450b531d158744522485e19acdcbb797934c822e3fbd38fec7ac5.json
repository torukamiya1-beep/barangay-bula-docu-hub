{"ast":null,"code":"// src/main.js\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n// Import Tailwind CSS\nimport './assets/css/tailwind.css';\n\n// Import Bootstrap’s CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Import Bootstrap's JS\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\n// Import Font-Awesome’s JS\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n// Import and initialize unified auth service\nimport unifiedAuthService from './services/unifiedAuthService';\nimport clientAuthService from './services/clientAuthService';\n\n// Initialize unified authentication service with error handling\ntry {\n  // First migrate any legacy client auth\n  if (clientAuthService && typeof clientAuthService.migrateLegacyAuth === 'function') {\n    clientAuthService.migrateLegacyAuth();\n  }\n\n  // Then initialize unified auth\n  if (unifiedAuthService && typeof unifiedAuthService.initializeAuth === 'function') {\n    unifiedAuthService.initializeAuth();\n  }\n} catch (error) {\n  console.warn('Auth service initialization failed:', error);\n}\nconst app = createApp(App);\n\n// Add global error handler\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err);\n  console.error('Component instance:', instance);\n  console.error('Error info:', info);\n};\n\n// Add global warning handler\napp.config.warnHandler = (msg, instance, trace) => {\n  console.warn('Global warning:', msg);\n  console.warn('Component instance:', instance);\n  console.warn('Trace:', trace);\n};\n\n// Make unified auth service available globally\napp.config.globalProperties.$auth = unifiedAuthService;\napp.config.globalProperties.$clientAuth = unifiedAuthService; // For backward compatibility\napp.config.globalProperties.$adminAuth = unifiedAuthService; // For backward compatibility\n\napp.use(router);\napp.mount('#app');\nconsole.log('Vue app mounted successfully');","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}