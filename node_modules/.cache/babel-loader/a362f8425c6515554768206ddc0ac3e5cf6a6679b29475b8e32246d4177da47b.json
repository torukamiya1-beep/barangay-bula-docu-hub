{"ast":null,"code":"export default {\n  name: 'ImageViewer',\n  props: {\n    imageUrl: {\n      type: String,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    filename: {\n      type: String,\n      default: ''\n    },\n    imageType: {\n      type: String,\n      default: ''\n    },\n    downloadUrl: {\n      type: String,\n      default: ''\n    },\n    showMeta: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      error: null,\n      zoomLevel: 1,\n      minZoom: 0.5,\n      maxZoom: 3,\n      zoomStep: 0.25,\n      imageLoadAttempts: 0,\n      maxLoadAttempts: 3\n    };\n  },\n  computed: {\n    shouldShowImage() {\n      return !this.loading && !this.error && this.imageUrl;\n    }\n  },\n  watch: {\n    imageUrl: {\n      handler(newUrl, oldUrl) {\n        console.log('🔄 ImageViewer: imageUrl changed:', {\n          oldUrl: oldUrl ? oldUrl.substring(0, 50) + '...' : 'none',\n          newUrl: newUrl ? newUrl.substring(0, 50) + '...' : 'none',\n          isBlobUrl: newUrl?.startsWith('blob:'),\n          isDataUrl: newUrl?.startsWith('data:')\n        });\n        if (newUrl) {\n          this.loading = true;\n          this.error = null;\n          this.imageLoadAttempts = 0;\n\n          // Preload the image manually to ensure it works\n          this.preloadImage(newUrl);\n        }\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    // Add keyboard event listeners\n    document.addEventListener('keydown', this.handleKeydown);\n\n    // Add touch event listeners for mobile gestures\n    this.addTouchListeners();\n\n    // Check if image is already loaded (for cached blob URLs)\n    this.$nextTick(() => {\n      const img = this.$el?.querySelector('.main-image');\n      if (img) {\n        console.log('🔍 ImageViewer mounted, checking image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight\n        });\n\n        // If image is already loaded (cached), update loading state\n        if (img.complete && img.naturalWidth > 0) {\n          console.log('✅ Image was already loaded, updating state');\n          this.loading = false;\n          this.error = null;\n        } else if (this.imageUrl) {\n          // Validate blob URL\n          this.validateImageUrl(this.imageUrl);\n\n          // Set multiple timeout checks for robust loading\n          setTimeout(() => this.checkImageLoadingState(), 1000); // Quick check\n          setTimeout(() => this.checkImageLoadingState(), 3000); // Medium check\n          setTimeout(() => this.checkImageLoadingState(), 5000); // Final check\n        }\n      }\n    });\n  },\n  beforeUnmount() {\n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this.handleKeydown);\n\n    // Remove touch event listeners\n    this.removeTouchListeners();\n  },\n  methods: {\n    handleOverlayClick() {\n      this.$emit('close');\n    },\n    onImageLoadStart(event) {\n      console.log('🔄 ImageViewer: Image load started:', {\n        src: event.target.src.substring(0, 50) + '...',\n        loadingState: this.loading\n      });\n    },\n    onImageLoadEnd(event) {\n      console.log('🏁 ImageViewer: Image load ended:', {\n        src: event.target.src.substring(0, 50) + '...',\n        complete: event.target.complete,\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight\n      });\n    },\n    onImageLoad(event) {\n      console.log('✅ ImageViewer: Image loaded successfully:', {\n        src: event.target.src.substring(0, 50) + '...',\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = null;\n        console.log('✅ ImageViewer: Loading state updated to false');\n      });\n    },\n    onImageError(event) {\n      console.error('❌ ImageViewer: Image failed to load:', {\n        src: event.target.src.substring(0, 50) + '...',\n        error: event.target.error,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = 'Failed to load image. The image file may be missing or corrupted.';\n        console.log('❌ ImageViewer: Error state updated');\n      });\n    },\n    retryLoad() {\n      console.log('🔄 ImageViewer: Retrying image load');\n      this.loading = true;\n      this.error = null;\n\n      // Force image reload\n      const img = this.$el.querySelector('.main-image');\n      if (img) {\n        // For blob URLs, we can't add query parameters, so force reload differently\n        if (this.imageUrl.startsWith('blob:')) {\n          console.log('🔄 Retrying blob URL load');\n          img.src = '';\n          this.$nextTick(() => {\n            img.src = this.imageUrl;\n          });\n        } else {\n          console.log('🔄 Retrying regular URL load with cache bust');\n          img.src = this.imageUrl + '?t=' + Date.now();\n        }\n      }\n    },\n    zoomIn() {\n      if (this.zoomLevel < this.maxZoom) {\n        this.zoomLevel = Math.min(this.maxZoom, this.zoomLevel + this.zoomStep);\n      }\n    },\n    zoomOut() {\n      if (this.zoomLevel > this.minZoom) {\n        this.zoomLevel = Math.max(this.minZoom, this.zoomLevel - this.zoomStep);\n      }\n    },\n    resetZoom() {\n      this.zoomLevel = 1;\n    },\n    handleWheel(event) {\n      event.preventDefault();\n      if (event.deltaY < 0) {\n        this.zoomIn();\n      } else {\n        this.zoomOut();\n      }\n    },\n    handleKeydown(event) {\n      switch (event.key) {\n        case 'Escape':\n          this.$emit('close');\n          break;\n        case '+':\n        case '=':\n          event.preventDefault();\n          this.zoomIn();\n          break;\n        case '-':\n          event.preventDefault();\n          this.zoomOut();\n          break;\n        case '0':\n          event.preventDefault();\n          this.resetZoom();\n          break;\n      }\n    },\n    async downloadImage() {\n      if (!this.downloadUrl) return;\n      try {\n        // If downloadUrl is already a blob URL, use it directly\n        if (this.downloadUrl.startsWith('blob:')) {\n          const link = document.createElement('a');\n          link.href = this.downloadUrl;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else {\n          // For regular URLs, fetch with authentication\n          const api = (await import('@/services/api.js')).default;\n          const response = await api.get(this.downloadUrl, {\n            responseType: 'blob'\n          });\n          const blob = response.data;\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          URL.revokeObjectURL(url);\n        }\n      } catch (error) {\n        console.error('Error downloading image:', error);\n        this.$emit('error', 'Failed to download image');\n      }\n    },\n    validateImageUrl(url) {\n      console.log('🔍 ImageViewer: Validating image URL:', {\n        url: url.substring(0, 50) + '...',\n        isBlobUrl: url.startsWith('blob:'),\n        isDataUrl: url.startsWith('data:'),\n        isHttpUrl: url.startsWith('http')\n      });\n\n      // For blob URLs, try to validate they're still valid\n      if (url.startsWith('blob:')) {\n        try {\n          // Create a test image to validate the blob URL\n          const testImg = new Image();\n          testImg.onload = () => {\n            console.log('✅ Blob URL validation: URL is accessible');\n          };\n          testImg.onerror = () => {\n            console.error('❌ Blob URL validation: URL is not accessible');\n          };\n          testImg.src = url;\n        } catch (error) {\n          console.error('❌ Blob URL validation error:', error);\n        }\n      }\n    },\n    debugImageState() {\n      const img = this.$refs.mainImage;\n      if (img) {\n        console.log('🔍 ImageViewer: Current image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight,\n          readyState: img.readyState,\n          loading: this.loading,\n          error: this.error\n        });\n      } else {\n        console.log('🔍 ImageViewer: No image ref found');\n      }\n    },\n    forceImageReload() {\n      console.log('🔄 ImageViewer: Force reloading image');\n      this.imageLoadAttempts++;\n      if (this.imageLoadAttempts > this.maxLoadAttempts) {\n        console.error('❌ ImageViewer: Max load attempts reached, giving up');\n        this.loading = false;\n        this.error = 'Image failed to load after multiple attempts';\n        return;\n      }\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n      [img, hiddenImg].forEach(imgEl => {\n        if (imgEl && this.imageUrl) {\n          // Clear the src and reload\n          imgEl.src = '';\n          this.$nextTick(() => {\n            imgEl.src = this.imageUrl;\n            console.log('🔄 ImageViewer: Image src reset and reloaded');\n          });\n        }\n      });\n    },\n    checkImageLoadingState() {\n      if (!this.loading) {\n        return; // Already loaded or errored\n      }\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n\n      // Check both visible and hidden images\n      [img, hiddenImg].forEach((imgEl, index) => {\n        if (imgEl) {\n          const imgType = index === 0 ? 'main' : 'hidden';\n          console.log(`🔍 Checking ${imgType} image state:`, {\n            complete: imgEl.complete,\n            naturalWidth: imgEl.naturalWidth,\n            naturalHeight: imgEl.naturalHeight,\n            src: imgEl.src ? imgEl.src.substring(0, 30) + '...' : 'none'\n          });\n\n          // If image is actually loaded but events didn't fire\n          if (imgEl.complete && imgEl.naturalWidth > 0 && this.loading) {\n            console.log(`✅ ${imgType} image is loaded but state not updated, fixing...`);\n            this.loading = false;\n            this.error = null;\n            return;\n          }\n        }\n      });\n\n      // If still loading after checks, provide more info\n      if (this.loading) {\n        console.log('⏰ Image still loading, current state:', {\n          loading: this.loading,\n          error: this.error,\n          imageUrl: this.imageUrl ? this.imageUrl.substring(0, 50) + '...' : 'none',\n          attempts: this.imageLoadAttempts\n        });\n      }\n    },\n    preloadImage(url) {\n      console.log('🔄 ImageViewer: Preloading image manually:', url.substring(0, 50) + '...');\n\n      // Create a new image element for preloading\n      const preloadImg = new Image();\n      preloadImg.onload = () => {\n        console.log('✅ ImageViewer: Preload successful, updating component state');\n        this.loading = false;\n        this.error = null;\n\n        // Update the actual image elements\n        this.$nextTick(() => {\n          const img = this.$refs.mainImage;\n          const hiddenImg = this.$refs.hiddenImage;\n          [img, hiddenImg].forEach(imgEl => {\n            if (imgEl && imgEl.src !== url) {\n              imgEl.src = url;\n            }\n          });\n        });\n      };\n      preloadImg.onerror = error => {\n        console.error('❌ ImageViewer: Preload failed:', error);\n        this.loading = false;\n        this.error = 'Failed to load image. The image may be corrupted or unavailable.';\n      };\n\n      // Start preloading\n      preloadImg.src = url;\n\n      // Fallback timeout\n      setTimeout(() => {\n        if (this.loading) {\n          console.log('⏰ Preload timeout, checking if image actually loaded...');\n          if (preloadImg.complete && preloadImg.naturalWidth > 0) {\n            console.log('✅ Image was loaded but events may have been missed');\n            this.loading = false;\n            this.error = null;\n          }\n        }\n      }, 10000);\n    },\n    addTouchListeners() {\n      // Add touch gesture support for mobile devices\n      const imageDisplay = this.$refs.viewerContent;\n      if (imageDisplay) {\n        let initialDistance = 0;\n        let initialZoom = 1;\n        let lastTouchTime = 0;\n\n        // Handle pinch-to-zoom\n        imageDisplay.addEventListener('touchstart', e => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            initialDistance = Math.hypot(touch2.clientX - touch1.clientX, touch2.clientY - touch1.clientY);\n            initialZoom = this.zoomLevel;\n          } else if (e.touches.length === 1) {\n            // Handle double-tap to reset zoom\n            const currentTime = new Date().getTime();\n            const tapLength = currentTime - lastTouchTime;\n            if (tapLength < 500 && tapLength > 0) {\n              e.preventDefault();\n              this.resetZoom();\n            }\n            lastTouchTime = currentTime;\n          }\n        }, {\n          passive: false\n        });\n        imageDisplay.addEventListener('touchmove', e => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            const currentDistance = Math.hypot(touch2.clientX - touch1.clientX, touch2.clientY - touch1.clientY);\n            const scale = currentDistance / initialDistance;\n            const newZoom = Math.max(this.minZoom, Math.min(this.maxZoom, initialZoom * scale));\n            this.zoomLevel = newZoom;\n          }\n        }, {\n          passive: false\n        });\n      }\n    },\n    removeTouchListeners() {\n      // Touch listeners are added with anonymous functions, so they'll be cleaned up automatically\n      // when the component is destroyed\n    }\n  }\n};","map":{"version":3,"names":["name","props","imageUrl","type","String","required","title","default","filename","imageType","downloadUrl","showMeta","Boolean","data","loading","error","zoomLevel","minZoom","maxZoom","zoomStep","imageLoadAttempts","maxLoadAttempts","computed","shouldShowImage","watch","handler","newUrl","oldUrl","console","log","substring","isBlobUrl","startsWith","isDataUrl","preloadImage","immediate","mounted","document","addEventListener","handleKeydown","addTouchListeners","$nextTick","img","$el","querySelector","src","complete","naturalWidth","naturalHeight","validateImageUrl","setTimeout","checkImageLoadingState","beforeUnmount","removeEventListener","removeTouchListeners","methods","handleOverlayClick","$emit","onImageLoadStart","event","target","loadingState","onImageLoadEnd","onImageLoad","currentLoadingState","onImageError","retryLoad","Date","now","zoomIn","Math","min","zoomOut","max","resetZoom","handleWheel","preventDefault","deltaY","key","downloadImage","link","createElement","href","download","body","appendChild","click","removeChild","api","response","get","responseType","blob","url","URL","createObjectURL","revokeObjectURL","isHttpUrl","testImg","Image","onload","onerror","debugImageState","$refs","mainImage","readyState","forceImageReload","hiddenImg","hiddenImage","forEach","imgEl","index","imgType","attempts","preloadImg","imageDisplay","viewerContent","initialDistance","initialZoom","lastTouchTime","e","touches","length","touch1","touch2","hypot","clientX","clientY","currentTime","getTime","tapLength","passive","currentDistance","scale","newZoom"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\common\\ImageViewer.vue"],"sourcesContent":["<template>\n  <div class=\"image-viewer-overlay\" @click=\"handleOverlayClick\">\n    <div class=\"image-viewer-container\" @click.stop>\n      <div class=\"viewer-header\">\n        <div class=\"image-info\">\n          <h4 class=\"image-title\">\n            <i class=\"fas fa-image me-2\"></i>\n            {{ title || 'Document Image' }}\n          </h4>\n          <div class=\"image-meta\" v-if=\"showMeta\">\n            <span class=\"filename\">{{ filename }}</span>\n            <span class=\"image-type\">{{ imageType }}</span>\n          </div>\n        </div>\n        \n        <div class=\"viewer-controls\">\n          <div class=\"main-controls\">\n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"zoomOut\"\n              :disabled=\"zoomLevel <= 0.5\"\n            >\n              <i class=\"fas fa-search-minus\"></i>\n            </button>\n            \n            <span class=\"zoom-level me-2\">{{ Math.round(zoomLevel * 100) }}%</span>\n            \n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"zoomIn\"\n              :disabled=\"zoomLevel >= 3\"\n            >\n              <i class=\"fas fa-search-plus\"></i>\n            </button>\n            \n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"resetZoom\"\n            >\n              <i class=\"fas fa-expand-arrows-alt\"></i>\n            </button>\n            \n            <button \n              v-if=\"downloadUrl\" \n              class=\"btn btn-outline-primary btn-sm me-2\" \n              @click=\"downloadImage\"\n            >\n              <i class=\"fas fa-download me-1\"></i>\n            </button>\n          </div>\n          \n          <button class=\"btn btn-outline-secondary btn-sm close-button\" @click=\"$emit('close')\">\n            <i class=\"fas fa-times me-1\"></i>\n            Close\n          </button>\n        </div>\n      </div>\n\n      <div class=\"viewer-content\" ref=\"viewerContent\">\n        <!-- Debug Info (only in development) -->\n        <div v-if=\"$root.$data && $root.$data.isDevelopment\" class=\"debug-info\">\n          <small>Loading: {{ loading }}, Error: {{ error }}, URL: {{ imageUrl ? imageUrl.substring(0, 30) + '...' : 'none' }}</small>\n        </div>\n\n        <!-- Loading State -->\n        <div v-if=\"loading && !error\" class=\"loading-state\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <p class=\"mt-2\">Loading image...</p>\n          <button class=\"btn btn-outline-secondary btn-sm mt-2\" @click=\"debugImageState\">\n            <i class=\"fas fa-bug me-1\"></i>\n            Debug Info\n          </button>\n        </div>\n\n        <!-- Error State -->\n        <div v-else-if=\"error\" class=\"error-state\">\n          <i class=\"fas fa-exclamation-triangle fa-3x text-danger mb-3\"></i>\n          <h5>Unable to Load Image</h5>\n          <p class=\"text-muted\">{{ error }}</p>\n          <button class=\"btn btn-primary\" @click=\"retryLoad\">\n            <i class=\"fas fa-redo me-1\"></i>\n            Try Again\n          </button>\n        </div>\n\n        <!-- Image Display -->\n        <div v-show=\"shouldShowImage\" class=\"image-display\">\n          <img\n            :src=\"imageUrl\"\n            :alt=\"title || 'Document Image'\"\n            :style=\"{ transform: `scale(${zoomLevel})` }\"\n            class=\"main-image\"\n            @load=\"onImageLoad\"\n            @error=\"onImageError\"\n            @wheel=\"handleWheel\"\n            @loadstart=\"onImageLoadStart\"\n            @loadend=\"onImageLoadEnd\"\n            draggable=\"false\"\n            ref=\"mainImage\"\n          />\n        </div>\n\n        <!-- Always render image for debugging (hidden) -->\n        <img\n          v-if=\"imageUrl && loading\"\n          :src=\"imageUrl\"\n          style=\"position: absolute; opacity: 0; pointer-events: none; width: 1px; height: 1px;\"\n          @load=\"onImageLoad\"\n          @error=\"onImageError\"\n          ref=\"hiddenImage\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageViewer',\n  props: {\n    imageUrl: {\n      type: String,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    filename: {\n      type: String,\n      default: ''\n    },\n    imageType: {\n      type: String,\n      default: ''\n    },\n    downloadUrl: {\n      type: String,\n      default: ''\n    },\n    showMeta: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      error: null,\n      zoomLevel: 1,\n      minZoom: 0.5,\n      maxZoom: 3,\n      zoomStep: 0.25,\n      imageLoadAttempts: 0,\n      maxLoadAttempts: 3\n    };\n  },\n  computed: {\n    shouldShowImage() {\n      return !this.loading && !this.error && this.imageUrl;\n    }\n  },\n  watch: {\n    imageUrl: {\n      handler(newUrl, oldUrl) {\n        console.log('🔄 ImageViewer: imageUrl changed:', {\n          oldUrl: oldUrl ? oldUrl.substring(0, 50) + '...' : 'none',\n          newUrl: newUrl ? newUrl.substring(0, 50) + '...' : 'none',\n          isBlobUrl: newUrl?.startsWith('blob:'),\n          isDataUrl: newUrl?.startsWith('data:')\n        });\n\n        if (newUrl) {\n          this.loading = true;\n          this.error = null;\n          this.imageLoadAttempts = 0;\n\n          // Preload the image manually to ensure it works\n          this.preloadImage(newUrl);\n        }\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    // Add keyboard event listeners\n    document.addEventListener('keydown', this.handleKeydown);\n\n    // Add touch event listeners for mobile gestures\n    this.addTouchListeners();\n\n    // Check if image is already loaded (for cached blob URLs)\n    this.$nextTick(() => {\n      const img = this.$el?.querySelector('.main-image');\n      if (img) {\n        console.log('🔍 ImageViewer mounted, checking image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight\n        });\n\n        // If image is already loaded (cached), update loading state\n        if (img.complete && img.naturalWidth > 0) {\n          console.log('✅ Image was already loaded, updating state');\n          this.loading = false;\n          this.error = null;\n        } else if (this.imageUrl) {\n          // Validate blob URL\n          this.validateImageUrl(this.imageUrl);\n\n          // Set multiple timeout checks for robust loading\n          setTimeout(() => this.checkImageLoadingState(), 1000);  // Quick check\n          setTimeout(() => this.checkImageLoadingState(), 3000);  // Medium check\n          setTimeout(() => this.checkImageLoadingState(), 5000);  // Final check\n        }\n      }\n    });\n  },\n  beforeUnmount() {\n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this.handleKeydown);\n\n    // Remove touch event listeners\n    this.removeTouchListeners();\n  },\n  methods: {\n    handleOverlayClick() {\n      this.$emit('close');\n    },\n\n    onImageLoadStart(event) {\n      console.log('🔄 ImageViewer: Image load started:', {\n        src: event.target.src.substring(0, 50) + '...',\n        loadingState: this.loading\n      });\n    },\n\n    onImageLoadEnd(event) {\n      console.log('🏁 ImageViewer: Image load ended:', {\n        src: event.target.src.substring(0, 50) + '...',\n        complete: event.target.complete,\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight\n      });\n    },\n\n    onImageLoad(event) {\n      console.log('✅ ImageViewer: Image loaded successfully:', {\n        src: event.target.src.substring(0, 50) + '...',\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = null;\n        console.log('✅ ImageViewer: Loading state updated to false');\n      });\n    },\n\n    onImageError(event) {\n      console.error('❌ ImageViewer: Image failed to load:', {\n        src: event.target.src.substring(0, 50) + '...',\n        error: event.target.error,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = 'Failed to load image. The image file may be missing or corrupted.';\n        console.log('❌ ImageViewer: Error state updated');\n      });\n    },\n\n    retryLoad() {\n      console.log('🔄 ImageViewer: Retrying image load');\n      this.loading = true;\n      this.error = null;\n\n      // Force image reload\n      const img = this.$el.querySelector('.main-image');\n      if (img) {\n        // For blob URLs, we can't add query parameters, so force reload differently\n        if (this.imageUrl.startsWith('blob:')) {\n          console.log('🔄 Retrying blob URL load');\n          img.src = '';\n          this.$nextTick(() => {\n            img.src = this.imageUrl;\n          });\n        } else {\n          console.log('🔄 Retrying regular URL load with cache bust');\n          img.src = this.imageUrl + '?t=' + Date.now();\n        }\n      }\n    },\n\n    zoomIn() {\n      if (this.zoomLevel < this.maxZoom) {\n        this.zoomLevel = Math.min(this.maxZoom, this.zoomLevel + this.zoomStep);\n      }\n    },\n\n    zoomOut() {\n      if (this.zoomLevel > this.minZoom) {\n        this.zoomLevel = Math.max(this.minZoom, this.zoomLevel - this.zoomStep);\n      }\n    },\n\n    resetZoom() {\n      this.zoomLevel = 1;\n    },\n\n    handleWheel(event) {\n      event.preventDefault();\n      if (event.deltaY < 0) {\n        this.zoomIn();\n      } else {\n        this.zoomOut();\n      }\n    },\n\n    handleKeydown(event) {\n      switch (event.key) {\n        case 'Escape':\n          this.$emit('close');\n          break;\n        case '+':\n        case '=':\n          event.preventDefault();\n          this.zoomIn();\n          break;\n        case '-':\n          event.preventDefault();\n          this.zoomOut();\n          break;\n        case '0':\n          event.preventDefault();\n          this.resetZoom();\n          break;\n      }\n    },\n\n    async downloadImage() {\n      if (!this.downloadUrl) return;\n\n      try {\n        // If downloadUrl is already a blob URL, use it directly\n        if (this.downloadUrl.startsWith('blob:')) {\n          const link = document.createElement('a');\n          link.href = this.downloadUrl;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else {\n          // For regular URLs, fetch with authentication\n          const api = (await import('@/services/api.js')).default;\n          const response = await api.get(this.downloadUrl, { responseType: 'blob' });\n          const blob = response.data;\n          const url = URL.createObjectURL(blob);\n\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          URL.revokeObjectURL(url);\n        }\n      } catch (error) {\n        console.error('Error downloading image:', error);\n        this.$emit('error', 'Failed to download image');\n      }\n    },\n\n    validateImageUrl(url) {\n      console.log('🔍 ImageViewer: Validating image URL:', {\n        url: url.substring(0, 50) + '...',\n        isBlobUrl: url.startsWith('blob:'),\n        isDataUrl: url.startsWith('data:'),\n        isHttpUrl: url.startsWith('http')\n      });\n\n      // For blob URLs, try to validate they're still valid\n      if (url.startsWith('blob:')) {\n        try {\n          // Create a test image to validate the blob URL\n          const testImg = new Image();\n          testImg.onload = () => {\n            console.log('✅ Blob URL validation: URL is accessible');\n          };\n          testImg.onerror = () => {\n            console.error('❌ Blob URL validation: URL is not accessible');\n          };\n          testImg.src = url;\n        } catch (error) {\n          console.error('❌ Blob URL validation error:', error);\n        }\n      }\n    },\n\n    debugImageState() {\n      const img = this.$refs.mainImage;\n      if (img) {\n        console.log('🔍 ImageViewer: Current image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight,\n          readyState: img.readyState,\n          loading: this.loading,\n          error: this.error\n        });\n      } else {\n        console.log('🔍 ImageViewer: No image ref found');\n      }\n    },\n\n    forceImageReload() {\n      console.log('🔄 ImageViewer: Force reloading image');\n      this.imageLoadAttempts++;\n\n      if (this.imageLoadAttempts > this.maxLoadAttempts) {\n        console.error('❌ ImageViewer: Max load attempts reached, giving up');\n        this.loading = false;\n        this.error = 'Image failed to load after multiple attempts';\n        return;\n      }\n\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n\n      [img, hiddenImg].forEach(imgEl => {\n        if (imgEl && this.imageUrl) {\n          // Clear the src and reload\n          imgEl.src = '';\n          this.$nextTick(() => {\n            imgEl.src = this.imageUrl;\n            console.log('🔄 ImageViewer: Image src reset and reloaded');\n          });\n        }\n      });\n    },\n\n    checkImageLoadingState() {\n      if (!this.loading) {\n        return; // Already loaded or errored\n      }\n\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n\n      // Check both visible and hidden images\n      [img, hiddenImg].forEach((imgEl, index) => {\n        if (imgEl) {\n          const imgType = index === 0 ? 'main' : 'hidden';\n          console.log(`🔍 Checking ${imgType} image state:`, {\n            complete: imgEl.complete,\n            naturalWidth: imgEl.naturalWidth,\n            naturalHeight: imgEl.naturalHeight,\n            src: imgEl.src ? imgEl.src.substring(0, 30) + '...' : 'none'\n          });\n\n          // If image is actually loaded but events didn't fire\n          if (imgEl.complete && imgEl.naturalWidth > 0 && this.loading) {\n            console.log(`✅ ${imgType} image is loaded but state not updated, fixing...`);\n            this.loading = false;\n            this.error = null;\n            return;\n          }\n        }\n      });\n\n      // If still loading after checks, provide more info\n      if (this.loading) {\n        console.log('⏰ Image still loading, current state:', {\n          loading: this.loading,\n          error: this.error,\n          imageUrl: this.imageUrl ? this.imageUrl.substring(0, 50) + '...' : 'none',\n          attempts: this.imageLoadAttempts\n        });\n      }\n    },\n\n    preloadImage(url) {\n      console.log('🔄 ImageViewer: Preloading image manually:', url.substring(0, 50) + '...');\n\n      // Create a new image element for preloading\n      const preloadImg = new Image();\n\n      preloadImg.onload = () => {\n        console.log('✅ ImageViewer: Preload successful, updating component state');\n        this.loading = false;\n        this.error = null;\n\n        // Update the actual image elements\n        this.$nextTick(() => {\n          const img = this.$refs.mainImage;\n          const hiddenImg = this.$refs.hiddenImage;\n\n          [img, hiddenImg].forEach(imgEl => {\n            if (imgEl && imgEl.src !== url) {\n              imgEl.src = url;\n            }\n          });\n        });\n      };\n\n      preloadImg.onerror = (error) => {\n        console.error('❌ ImageViewer: Preload failed:', error);\n        this.loading = false;\n        this.error = 'Failed to load image. The image may be corrupted or unavailable.';\n      };\n\n      // Start preloading\n      preloadImg.src = url;\n\n      // Fallback timeout\n      setTimeout(() => {\n        if (this.loading) {\n          console.log('⏰ Preload timeout, checking if image actually loaded...');\n          if (preloadImg.complete && preloadImg.naturalWidth > 0) {\n            console.log('✅ Image was loaded but events may have been missed');\n            this.loading = false;\n            this.error = null;\n          }\n        }\n      }, 10000);\n    },\n\n    addTouchListeners() {\n      // Add touch gesture support for mobile devices\n      const imageDisplay = this.$refs.viewerContent;\n      if (imageDisplay) {\n        let initialDistance = 0;\n        let initialZoom = 1;\n        let lastTouchTime = 0;\n\n        // Handle pinch-to-zoom\n        imageDisplay.addEventListener('touchstart', (e) => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            initialDistance = Math.hypot(\n              touch2.clientX - touch1.clientX,\n              touch2.clientY - touch1.clientY\n            );\n            initialZoom = this.zoomLevel;\n          } else if (e.touches.length === 1) {\n            // Handle double-tap to reset zoom\n            const currentTime = new Date().getTime();\n            const tapLength = currentTime - lastTouchTime;\n            if (tapLength < 500 && tapLength > 0) {\n              e.preventDefault();\n              this.resetZoom();\n            }\n            lastTouchTime = currentTime;\n          }\n        }, { passive: false });\n\n        imageDisplay.addEventListener('touchmove', (e) => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            const currentDistance = Math.hypot(\n              touch2.clientX - touch1.clientX,\n              touch2.clientY - touch1.clientY\n            );\n\n            const scale = currentDistance / initialDistance;\n            const newZoom = Math.max(this.minZoom, Math.min(this.maxZoom, initialZoom * scale));\n            this.zoomLevel = newZoom;\n          }\n        }, { passive: false });\n      }\n    },\n\n    removeTouchListeners() {\n      // Touch listeners are added with anonymous functions, so they'll be cleaned up automatically\n      // when the component is destroyed\n    }\n  }\n};\n</script>\n\n<style scoped>\n.image-viewer-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1060;\n  backdrop-filter: blur(2px);\n  overflow: hidden; /* Prevent scrolling on mobile */\n  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */\n}\n\n.image-viewer-container {\n  background: white;\n  border-radius: 8px;\n  width: 95%;\n  height: 95%;\n  max-width: 1400px;\n  max-height: 900px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n}\n\n.viewer-header {\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid #dee2e6;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f8f9fa;\n  border-radius: 8px 8px 0 0;\n  flex-shrink: 0;\n}\n\n.image-title {\n  margin: 0;\n  color: #495057;\n  font-size: 1.25rem;\n}\n\n.image-meta {\n  display: flex;\n  gap: 1rem;\n  font-size: 0.875rem;\n  color: #6c757d;\n  margin-top: 0.25rem;\n}\n\n.viewer-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.zoom-level {\n  font-size: 0.875rem;\n  color: #6c757d;\n  min-width: 50px;\n  text-align: center;\n  font-weight: 500;\n}\n\n.viewer-content {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  background: #f8f9fa;\n  position: relative;\n}\n\n.loading-state,\n.error-state {\n  text-align: center;\n  padding: 2rem;\n}\n\n.image-display {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  padding: 1rem;\n}\n\n.main-image {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  transition: transform 0.2s ease;\n  cursor: grab;\n  border-radius: 4px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.main-image:active {\n  cursor: grabbing;\n}\n\n.debug-info {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  z-index: 10;\n}\n\n.header-top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.close-btn-mobile {\n  min-height: 44px;\n  min-width: 44px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem;\n}\n\n/* Tablet responsiveness */\n@media (max-width: 768px) {\n  .image-viewer-overlay {\n    padding: 0;\n    /* Ensure full viewport coverage */\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    height: 100vh;\n  }\n\n  .image-viewer-container {\n    width: 100vw;\n    height: 100vh;\n    border-radius: 0;\n    max-width: none;\n    max-height: none;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    /* Ensure container takes full space */\n    position: relative;\n  }\n\n  .viewer-header {\n    padding: 1rem;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n    border-radius: 0;\n    /* Optimize header height for mobile */\n    min-height: auto;\n    flex-shrink: 0;\n  }\n\n  .image-info {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .image-title {\n    font-size: 1.1rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .image-meta {\n    flex-direction: column;\n    gap: 0.25rem;\n    font-size: 0.8rem;\n  }\n\n  .viewer-controls {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n    align-items: stretch;\n  }\n\n  .main-controls {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    flex-wrap: wrap;\n  }\n\n  .viewer-controls .btn {\n    min-height: 48px; /* Larger touch-friendly size */\n    min-width: 48px;\n    padding: 0.75rem;\n    font-size: 0.9rem;\n    border-radius: 8px;\n    transition: all 0.2s ease;\n  }\n\n  .close-button {\n    width: 100%;\n    background-color: #dc3545;\n    border-color: #dc3545;\n    color: white;\n    font-weight: 600;\n    margin-top: 0.5rem;\n  }\n\n  .close-button:hover {\n    background-color: #c82333;\n    border-color: #bd2130;\n  }\n\n  .zoom-level {\n    order: -1;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 0.75rem;\n    font-size: 1.1rem;\n    font-weight: 600;\n    background: rgba(0, 123, 255, 0.1);\n    padding: 0.5rem;\n    border-radius: 6px;\n    border: 1px solid rgba(0, 123, 255, 0.2);\n  }\n\n  .viewer-content {\n    padding: 0;\n    flex: 1;\n    overflow: hidden;\n    /* Ensure content area uses remaining space */\n    height: calc(100vh - 120px); /* Account for header height */\n  }\n\n  .image-display {\n    padding: 0.5rem;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    /* Prevent horizontal scrolling */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .main-image {\n    max-width: calc(100vw - 1rem); /* Account for padding */\n    max-height: calc(100vh - 140px); /* Account for header and padding */\n    width: auto;\n    height: auto;\n    object-fit: contain;\n    /* Prevent image from causing horizontal scroll */\n    display: block;\n  }\n}\n\n/* Mobile phone responsiveness */\n@media (max-width: 480px) {\n  .image-viewer-overlay {\n    padding: 0;\n    background-color: rgba(0, 0, 0, 0.95); /* Darker background for better focus */\n    /* Ensure full viewport coverage on mobile */\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    height: 100vh;\n    /* Prevent any scrolling */\n    overflow: hidden;\n  }\n\n  .image-viewer-container {\n    height: 100vh; /* Full viewport height */\n    width: 100vw; /* Full viewport width */\n    border-radius: 0;\n    position: relative;\n    /* Remove any margins or padding that could cause issues */\n    margin: 0;\n    padding: 0;\n    /* Ensure container fills entire screen */\n    max-width: 100vw;\n    max-height: 100vh;\n  }\n\n  .viewer-header {\n    padding: 0.75rem;\n    gap: 0.75rem;\n    flex-shrink: 0; /* Prevent header from shrinking */\n    background: rgba(255, 255, 255, 0.98);\n    backdrop-filter: blur(10px);\n    /* Set CSS custom property for header height calculation */\n    --header-height: 160px;\n    min-height: var(--header-height);\n  }\n\n  .image-title {\n    font-size: 1rem;\n    line-height: 1.3;\n  }\n\n  .image-meta {\n    font-size: 0.75rem;\n  }\n\n  .viewer-controls {\n    gap: 0.25rem;\n  }\n\n  .viewer-controls {\n    flex-wrap: wrap;\n    gap: 0.75rem;\n    justify-content: center;\n    width: 100%;\n  }\n\n  .main-controls {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 100%;\n    gap: 0.5rem;\n    margin-bottom: 0.75rem;\n  }\n\n  .main-controls .btn {\n    min-height: 52px; /* Extra large touch targets for phones */\n    min-width: 52px;\n    padding: 0.875rem;\n    font-size: 1rem;\n    flex: 1;\n    max-width: 80px;\n    border-radius: 12px;\n    transition: all 0.2s ease;\n    font-weight: 500;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .main-controls .btn:active {\n    transform: scale(0.92);\n    background-color: rgba(0, 123, 255, 0.3);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  }\n\n  .main-controls .btn i {\n    font-size: 1.1rem;\n  }\n\n  .close-button {\n    width: 100%;\n    min-height: 52px;\n    padding: 0.875rem;\n    font-size: 1rem;\n    font-weight: 600;\n    border-radius: 12px;\n    background-color: #dc3545;\n    border-color: #dc3545;\n    color: white;\n    box-shadow: 0 3px 6px rgba(220, 53, 69, 0.3);\n    transition: all 0.2s ease;\n  }\n\n  .close-button:active {\n    transform: scale(0.95);\n    background-color: #c82333;\n    box-shadow: 0 2px 4px rgba(220, 53, 69, 0.4);\n  }\n\n  .zoom-level {\n    font-size: 0.9rem;\n    margin-bottom: 0.75rem;\n    padding: 0.5rem;\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n  }\n\n  .viewer-content {\n    padding: 0;\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* Calculate available height more precisely */\n    height: calc(100vh - var(--header-height, 160px));\n    position: relative;\n  }\n\n  .image-display {\n    padding: 0.25rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    /* Prevent any scrolling */\n    position: relative;\n  }\n\n  .main-image {\n    max-width: calc(100vw - 0.5rem); /* Account for minimal padding */\n    max-height: calc(100vh - var(--header-height, 160px) - 0.5rem);\n    width: auto;\n    height: auto;\n    object-fit: contain; /* Ensure image fits without distortion */\n    touch-action: pan-x pan-y pinch-zoom; /* Enable touch gestures */\n    /* Prevent image from overflowing */\n    display: block;\n    margin: 0 auto;\n    /* Smooth transitions for zoom */\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .loading-state,\n  .error-state {\n    padding: 1rem;\n    text-align: center;\n  }\n\n  .loading-state .spinner-border {\n    width: 3rem;\n    height: 3rem;\n  }\n\n  .error-state .btn {\n    min-height: 48px;\n    padding: 0.75rem 1.5rem;\n    font-size: 1rem;\n  }\n\n  /* Debug info positioning for mobile */\n  .debug-info {\n    position: relative;\n    top: 0;\n    left: 0;\n    margin-bottom: 0.5rem;\n    font-size: 10px;\n  }\n}\n\n/* Extra small devices */\n@media (max-width: 360px) {\n  .viewer-header {\n    padding: 0.5rem;\n    --header-height: 140px;\n    min-height: var(--header-height);\n    gap: 0.5rem;\n  }\n\n  .image-title {\n    font-size: 0.9rem;\n    line-height: 1.2;\n    margin-bottom: 0.25rem;\n  }\n\n  .image-meta {\n    font-size: 0.7rem;\n    gap: 0.125rem;\n  }\n\n  .main-controls {\n    gap: 0.25rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .main-controls .btn {\n    padding: 0.625rem 0.5rem;\n    font-size: 0.85rem;\n    min-height: 48px;\n    min-width: 48px;\n    max-width: 70px;\n  }\n\n  .main-controls .btn .me-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .close-button {\n    min-height: 48px;\n    font-size: 0.9rem;\n    padding: 0.75rem;\n  }\n\n  .zoom-level {\n    font-size: 0.85rem;\n    padding: 0.375rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .viewer-content {\n    height: calc(100vh - var(--header-height));\n  }\n\n  .main-image {\n    max-width: calc(100vw - 0.25rem);\n    max-height: calc(100vh - var(--header-height) - 0.25rem);\n  }\n}\n\n/* Touch device optimizations */\n@media (hover: none) and (pointer: coarse) {\n  .main-controls .btn {\n    min-height: 52px;\n    min-width: 52px;\n    padding: 0.875rem;\n    /* Enhanced touch feedback */\n    -webkit-tap-highlight-color: rgba(0, 123, 255, 0.3);\n  }\n\n  .close-button {\n    min-height: 56px;\n    padding: 1rem;\n    /* Enhanced close button for touch */\n    -webkit-tap-highlight-color: rgba(220, 53, 69, 0.3);\n  }\n\n  .viewer-controls .btn:hover {\n    background-color: initial; /* Remove hover effects on touch */\n  }\n\n  .viewer-controls .btn:active {\n    background-color: rgba(0, 123, 255, 0.2);\n    transform: scale(0.92);\n  }\n\n  .close-button:active {\n    background-color: rgba(220, 53, 69, 0.8);\n    transform: scale(0.95);\n  }\n\n  .main-image {\n    touch-action: pan-x pan-y pinch-zoom;\n    user-select: none;\n    -webkit-user-select: none;\n    /* Improve touch responsiveness */\n    -webkit-touch-callout: none;\n    -webkit-user-drag: none;\n  }\n\n  /* Improve zoom level display on touch devices */\n  .zoom-level {\n    -webkit-tap-highlight-color: transparent;\n    user-select: none;\n  }\n}\n\n/* Landscape orientation on mobile */\n@media (max-width: 768px) and (orientation: landscape) {\n  .viewer-header {\n    padding: 0.5rem 1rem;\n    --header-height: 100px;\n    min-height: var(--header-height);\n    flex-direction: row;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .image-info {\n    flex: 1;\n    margin-bottom: 0;\n  }\n\n  .image-title {\n    font-size: 0.9rem;\n    margin-bottom: 0.25rem;\n  }\n\n  .image-meta {\n    flex-direction: row;\n    gap: 0.5rem;\n    font-size: 0.75rem;\n  }\n\n  .viewer-controls {\n    flex-direction: row;\n    width: auto;\n    gap: 0.5rem;\n  }\n\n  .main-controls {\n    flex-direction: row;\n    margin-bottom: 0;\n    gap: 0.25rem;\n  }\n\n  .main-controls .btn {\n    min-height: 44px;\n    min-width: 44px;\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    max-width: 60px;\n  }\n\n  .close-button {\n    width: auto;\n    min-width: 80px;\n    margin-top: 0;\n    min-height: 44px;\n    padding: 0.5rem 1rem;\n    font-size: 0.85rem;\n  }\n\n  .zoom-level {\n    order: 0;\n    width: auto;\n    margin-bottom: 0;\n    margin-right: 0.5rem;\n    font-size: 0.8rem;\n    padding: 0.25rem 0.5rem;\n  }\n\n  .viewer-content {\n    height: calc(100vh - var(--header-height));\n  }\n\n  .main-image {\n    max-height: calc(100vh - var(--header-height) - 0.5rem);\n    max-width: calc(100vw - 0.5rem);\n  }\n}\n\n/* Additional mobile optimizations */\n@media (max-width: 768px) {\n  /* Prevent zoom on double-tap for better UX */\n  .image-viewer-overlay {\n    touch-action: manipulation;\n  }\n\n  /* Optimize scrolling behavior */\n  .viewer-content {\n    -webkit-overflow-scrolling: touch;\n    overscroll-behavior: contain;\n  }\n\n  /* Improve button accessibility */\n  .viewer-controls .btn {\n    /* Ensure buttons are easily tappable */\n    position: relative;\n    z-index: 1;\n  }\n\n  /* Prevent text selection on mobile */\n  .viewer-header,\n  .viewer-controls {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  /* Optimize image container for mobile */\n  .image-display {\n    /* Prevent any potential overflow issues */\n    position: relative;\n    overflow: hidden;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}