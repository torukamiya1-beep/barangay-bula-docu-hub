{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport DocumentViewer from './DocumentViewer.vue';\nimport residencyService from '@/services/residencyService';\nimport api from '@/services/api';\nexport default {\n  name: 'ResidencyDocumentsModal',\n  components: {\n    DocumentViewer\n  },\n  props: {\n    user: {\n      type: Object,\n      default: null\n    },\n    processing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      documents: [],\n      loading: false,\n      error: null,\n      selectedDocument: null,\n      documentBlobUrls: {},\n      // Store blob URLs for thumbnails\n      isDestroyed: false // Track component lifecycle\n    };\n  },\n  watch: {\n    user: {\n      handler(newUser) {\n        if (newUser) {\n          this.loadDocuments();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    // Check if all documents are already approved\n    allDocumentsApproved() {\n      if (!this.documents || this.documents.length === 0) return false;\n      // Check if all documents are approved OR if user's residency verification status is approved\n      return this.documents.every(doc => doc.verification_status === 'approved') || this.user?.residency_verification_status === 'approved';\n    }\n  },\n  beforeUnmount() {\n    // Mark component as destroyed\n    this.isDestroyed = true;\n\n    // Clean up blob URLs to prevent memory leaks\n    Object.values(this.documentBlobUrls).forEach(url => {\n      URL.revokeObjectURL(url);\n    });\n  },\n  methods: {\n    async loadDocuments() {\n      if (!this.user || this.isDestroyed) return;\n      this.loading = true;\n      this.error = null;\n      this.documents = [];\n      try {\n        // Use the actual account ID, not the composite ID\n        const accountId = this.user.original_id || this.user.id;\n\n        // Extract numeric ID if it's in format like 'client_32'\n        const numericId = typeof accountId === 'string' && accountId.includes('_') ? accountId.split('_')[1] : accountId;\n        const response = await residencyService.getAccountDocuments(numericId);\n\n        // Check if component is still mounted before updating state\n        if (this.isDestroyed) return;\n        if (response.success) {\n          this.documents = response.data || [];\n          // Load blob URLs for image documents\n          await this.loadDocumentThumbnails();\n        } else {\n          throw new Error(response.message || 'Failed to load documents');\n        }\n      } catch (error) {\n        console.error('Failed to load residency documents:', error);\n\n        // Check if component is still mounted before updating state\n        if (!this.isDestroyed) {\n          this.error = error.message || 'Failed to load documents';\n        }\n      } finally {\n        // Check if component is still mounted before updating state\n        if (!this.isDestroyed) {\n          this.loading = false;\n        }\n      }\n    },\n    viewDocument(document) {\n      this.selectedDocument = document;\n    },\n    closeDocumentViewer() {\n      this.selectedDocument = null;\n    },\n    async loadDocumentThumbnails() {\n      // Load blob URLs for image documents\n      for (const document of this.documents) {\n        // Check if component is still mounted\n        if (this.isDestroyed) return;\n        if (this.isImageDocument(document)) {\n          try {\n            const response = await api.get(`/residency/documents/${document.id}/file`, {\n              responseType: 'blob'\n            });\n\n            // Check if component is still mounted before updating state\n            if (!this.isDestroyed) {\n              const blob = new Blob([response.data], {\n                type: document.mime_type\n              });\n              this.documentBlobUrls[document.id] = URL.createObjectURL(blob);\n            }\n          } catch (error) {\n            console.error(`Failed to load thumbnail for document ${document.id}:`, error);\n            // Don't set a blob URL, the template will show loading spinner\n          }\n        }\n      }\n    },\n    isImageDocument(document) {\n      const imageTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n      return imageTypes.includes(document.mime_type?.toLowerCase());\n    },\n    getDocumentPreviewUrl(documentId) {\n      return residencyService.getDocumentFileUrl(documentId);\n    },\n    handleImageError(event) {\n      console.error('Image failed to load:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n    },\n    getDocumentIcon(type) {\n      const iconMap = {\n        'utility_bill': 'fas fa-file-invoice text-warning',\n        'barangay_certificate': 'fas fa-certificate text-success',\n        'valid_id': 'fas fa-id-card text-info',\n        'lease_contract': 'fas fa-file-contract text-primary',\n        'other': 'fas fa-file text-secondary'\n      };\n      return iconMap[type] || 'fas fa-file text-secondary';\n    },\n    formatDocumentType(type) {\n      return residencyService.formatDocumentType(type);\n    },\n    formatDocumentStatus(status) {\n      return residencyService.formatVerificationStatus(status);\n    },\n    getDocumentStatusBadgeClass(status) {\n      return residencyService.getStatusBadgeClass(status);\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        'active': 'bg-success',\n        'inactive': 'bg-secondary',\n        'pending': 'bg-warning',\n        'suspended': 'bg-danger',\n        'pending_verification': 'bg-warning',\n        'pending_residency_verification': 'bg-info',\n        'residency_rejected': 'bg-danger',\n        'residency_approved': 'bg-success',\n        'no_residency_documents': 'bg-warning'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n    formatStatus(status) {\n      return status?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()) || 'Unknown';\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatFileSize(bytes) {\n      if (!bytes) return 'Unknown size';\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(1024));\n      return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n    }\n  }\n};","map":{"version":3,"names":["DocumentViewer","residencyService","api","name","components","props","user","type","Object","default","processing","Boolean","data","documents","loading","error","selectedDocument","documentBlobUrls","isDestroyed","watch","handler","newUser","loadDocuments","immediate","computed","allDocumentsApproved","length","every","doc","verification_status","residency_verification_status","beforeUnmount","values","forEach","url","URL","revokeObjectURL","methods","accountId","original_id","id","numericId","includes","split","response","getAccountDocuments","success","loadDocumentThumbnails","Error","message","console","viewDocument","document","closeDocumentViewer","isImageDocument","get","responseType","blob","Blob","mime_type","createObjectURL","imageTypes","toLowerCase","getDocumentPreviewUrl","documentId","getDocumentFileUrl","handleImageError","event","target","src","style","display","getDocumentIcon","iconMap","formatDocumentType","formatDocumentStatus","status","formatVerificationStatus","getDocumentStatusBadgeClass","getStatusBadgeClass","classes","formatStatus","replace","l","toUpperCase","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","formatFileSize","bytes","sizes","i","Math","floor","log","round","pow"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\ResidencyDocumentsModal.vue"],"sourcesContent":["<template>\n  <div class=\"modal fade\" id=\"residencyDocumentsModal\" tabindex=\"-1\" aria-labelledby=\"residencyDocumentsModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"residencyDocumentsModalLabel\">\n            <i class=\"fas fa-file-image me-2\"></i>\n            Residency Documents Review\n          </h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div v-if=\"user\">\n            <!-- User Information -->\n            <div class=\"row mb-4\">\n              <div class=\"col-12\">\n                <div class=\"card bg-light\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">\n                      <i class=\"fas fa-user me-2\"></i>\n                      User Information\n                    </h6>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <p><strong>Name:</strong> {{ user.full_name }}</p>\n                        <p><strong>Username:</strong> {{ user.username }}</p>\n                        <p><strong>Email:</strong> {{ user.email }}</p>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <p><strong>Status:</strong>\n                          <span class=\"badge\" :class=\"getStatusBadgeClass(user.status)\">\n                            {{ formatStatus(user.status) }}\n                          </span>\n                        </p>\n                        <p><strong>Registration Date:</strong> {{ formatDate(user.created_at) }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Documents Section -->\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h6 class=\"mb-3\">\n                  <i class=\"fas fa-folder-open me-2\"></i>\n                  Uploaded Documents\n                </h6>\n\n                <!-- Loading State -->\n                <div v-if=\"loading\" class=\"text-center py-4\">\n                  <div class=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading documents...</span>\n                  </div>\n                  <p class=\"mt-2\">Loading documents...</p>\n                </div>\n\n                <!-- Error State -->\n                <div v-else-if=\"error\" class=\"alert alert-danger\">\n                  <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                  {{ error }}\n                </div>\n\n                <!-- No Documents -->\n                <div v-else-if=\"!documents || documents.length === 0\" class=\"text-center py-4\">\n                  <i class=\"fas fa-file-slash fa-3x text-muted mb-3\"></i>\n                  <p class=\"text-muted\">No residency documents found for this user.</p>\n                </div>\n\n                <!-- Documents Grid -->\n                <div v-else class=\"row\">\n                  <div v-for=\"document in documents\" :key=\"document.id\" class=\"col-md-6 col-lg-4 mb-3\">\n                    <div class=\"card h-100 document-card\">\n                      <!-- Document Preview -->\n                      <div class=\"card-img-top document-preview\" @click=\"viewDocument(document)\">\n                        <img\n                          v-if=\"isImageDocument(document) && documentBlobUrls[document.id]\"\n                          :src=\"documentBlobUrls[document.id]\"\n                          :alt=\"document.document_name\"\n                          class=\"preview-image\"\n                          @error=\"handleImageError\"\n                        />\n                        <div v-else-if=\"isImageDocument(document)\" class=\"loading-preview\">\n                          <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                          </div>\n                        </div>\n                        <div v-else class=\"file-icon-preview\">\n                          <i :class=\"getDocumentIcon(document.document_type)\" class=\"fa-3x\"></i>\n                        </div>\n                        <div class=\"preview-overlay\">\n                          <i class=\"fas fa-eye fa-2x\"></i>\n                        </div>\n                      </div>\n                      \n                      <div class=\"card-header d-flex justify-content-between align-items-center\">\n                        <h6 class=\"mb-0\">{{ formatDocumentType(document.document_type) }}</h6>\n                        <span class=\"badge\" :class=\"getDocumentStatusBadgeClass(document.verification_status)\">\n                          {{ formatDocumentStatus(document.verification_status) }}\n                        </span>\n                      </div>\n                      <div class=\"card-body\">\n                        <p class=\"card-text\">\n                          <strong>File:</strong> {{ document.document_name }}<br>\n                          <strong>Size:</strong> {{ formatFileSize(document.file_size) }}<br>\n                          <strong>Uploaded:</strong> {{ formatDate(document.created_at) }}\n                        </p>\n                        <div class=\"d-grid\">\n                          <button class=\"btn btn-outline-primary btn-sm\" @click=\"viewDocument(document)\">\n                            <i class=\"fas fa-eye me-1\"></i>\n                            View Document\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <!-- Show approve/reject buttons only if documents exist and are not all approved -->\n          <div v-if=\"documents && documents.length > 0 && !allDocumentsApproved\" class=\"ms-auto\">\n            <button\n              type=\"button\"\n              class=\"btn btn-danger me-2\"\n              @click=\"$emit('reject')\"\n              :disabled=\"processing\"\n            >\n              <i class=\"fas fa-times me-1\"></i>\n              Reject\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-success\"\n              @click=\"$emit('approve')\"\n              :disabled=\"processing\"\n            >\n              <span v-if=\"processing\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n              <i v-else class=\"fas fa-check me-1\"></i>\n              Approve\n            </button>\n          </div>\n          <!-- Show status message when all documents are approved -->\n          <div v-else-if=\"allDocumentsApproved\" class=\"ms-auto\">\n            <span class=\"badge bg-success fs-6\">\n              <i class=\"fas fa-check me-1\"></i>\n              All Documents Approved\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Document Viewer Component -->\n    <DocumentViewer \n      v-if=\"selectedDocument\" \n      :document=\"selectedDocument\" \n      @close=\"closeDocumentViewer\"\n    />\n  </div>\n</template>\n\n<script>\nimport DocumentViewer from './DocumentViewer.vue';\nimport residencyService from '@/services/residencyService';\nimport api from '@/services/api';\n\nexport default {\n  name: 'ResidencyDocumentsModal',\n  components: {\n    DocumentViewer\n  },\n  props: {\n    user: {\n      type: Object,\n      default: null\n    },\n    processing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      documents: [],\n      loading: false,\n      error: null,\n      selectedDocument: null,\n      documentBlobUrls: {}, // Store blob URLs for thumbnails\n      isDestroyed: false // Track component lifecycle\n    };\n  },\n  watch: {\n    user: {\n      handler(newUser) {\n        if (newUser) {\n          this.loadDocuments();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    // Check if all documents are already approved\n    allDocumentsApproved() {\n      if (!this.documents || this.documents.length === 0) return false;\n      // Check if all documents are approved OR if user's residency verification status is approved\n      return this.documents.every(doc => doc.verification_status === 'approved') ||\n             this.user?.residency_verification_status === 'approved';\n    }\n  },\n  beforeUnmount() {\n    // Mark component as destroyed\n    this.isDestroyed = true;\n\n    // Clean up blob URLs to prevent memory leaks\n    Object.values(this.documentBlobUrls).forEach(url => {\n      URL.revokeObjectURL(url);\n    });\n  },\n  methods: {\n    async loadDocuments() {\n      if (!this.user || this.isDestroyed) return;\n\n      this.loading = true;\n      this.error = null;\n      this.documents = [];\n\n      try {\n        // Use the actual account ID, not the composite ID\n        const accountId = this.user.original_id || this.user.id;\n\n        // Extract numeric ID if it's in format like 'client_32'\n        const numericId = typeof accountId === 'string' && accountId.includes('_')\n          ? accountId.split('_')[1]\n          : accountId;\n\n        const response = await residencyService.getAccountDocuments(numericId);\n\n        // Check if component is still mounted before updating state\n        if (this.isDestroyed) return;\n\n        if (response.success) {\n          this.documents = response.data || [];\n          // Load blob URLs for image documents\n          await this.loadDocumentThumbnails();\n        } else {\n          throw new Error(response.message || 'Failed to load documents');\n        }\n      } catch (error) {\n        console.error('Failed to load residency documents:', error);\n\n        // Check if component is still mounted before updating state\n        if (!this.isDestroyed) {\n          this.error = error.message || 'Failed to load documents';\n        }\n      } finally {\n        // Check if component is still mounted before updating state\n        if (!this.isDestroyed) {\n          this.loading = false;\n        }\n      }\n    },\n\n    viewDocument(document) {\n      this.selectedDocument = document;\n    },\n\n    closeDocumentViewer() {\n      this.selectedDocument = null;\n    },\n\n    async loadDocumentThumbnails() {\n      // Load blob URLs for image documents\n      for (const document of this.documents) {\n        // Check if component is still mounted\n        if (this.isDestroyed) return;\n\n        if (this.isImageDocument(document)) {\n          try {\n            const response = await api.get(`/residency/documents/${document.id}/file`, {\n              responseType: 'blob'\n            });\n\n            // Check if component is still mounted before updating state\n            if (!this.isDestroyed) {\n              const blob = new Blob([response.data], { type: document.mime_type });\n              this.documentBlobUrls[document.id] = URL.createObjectURL(blob);\n            }\n          } catch (error) {\n            console.error(`Failed to load thumbnail for document ${document.id}:`, error);\n            // Don't set a blob URL, the template will show loading spinner\n          }\n        }\n      }\n    },\n\n    isImageDocument(document) {\n      const imageTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n      return imageTypes.includes(document.mime_type?.toLowerCase());\n    },\n\n    getDocumentPreviewUrl(documentId) {\n      return residencyService.getDocumentFileUrl(documentId);\n    },\n\n    handleImageError(event) {\n      console.error('Image failed to load:', event.target.src);\n      // You could set a placeholder image here\n      event.target.style.display = 'none';\n    },\n\n    getDocumentIcon(type) {\n      const iconMap = {\n        'utility_bill': 'fas fa-file-invoice text-warning',\n        'barangay_certificate': 'fas fa-certificate text-success',\n        'valid_id': 'fas fa-id-card text-info',\n        'lease_contract': 'fas fa-file-contract text-primary',\n        'other': 'fas fa-file text-secondary'\n      };\n      return iconMap[type] || 'fas fa-file text-secondary';\n    },\n\n    formatDocumentType(type) {\n      return residencyService.formatDocumentType(type);\n    },\n\n    formatDocumentStatus(status) {\n      return residencyService.formatVerificationStatus(status);\n    },\n\n    getDocumentStatusBadgeClass(status) {\n      return residencyService.getStatusBadgeClass(status);\n    },\n\n    getStatusBadgeClass(status) {\n      const classes = {\n        'active': 'bg-success',\n        'inactive': 'bg-secondary',\n        'pending': 'bg-warning',\n        'suspended': 'bg-danger',\n        'pending_verification': 'bg-warning',\n        'pending_residency_verification': 'bg-info',\n        'residency_rejected': 'bg-danger',\n        'residency_approved': 'bg-success',\n        'no_residency_documents': 'bg-warning'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n\n    formatStatus(status) {\n      return status?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()) || 'Unknown';\n    },\n\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    formatFileSize(bytes) {\n      if (!bytes) return 'Unknown size';\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(1024));\n      return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.document-card {\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  cursor: pointer;\n}\n\n.document-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.document-preview {\n  position: relative;\n  height: 200px;\n  overflow: hidden;\n  background: #f8f9fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.2s ease;\n}\n\n.file-icon-preview {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #6c757d;\n}\n\n.preview-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.document-preview:hover .preview-overlay {\n  opacity: 1;\n}\n\n.document-preview:hover .preview-image {\n  transform: scale(1.05);\n}\n\n.loading-preview {\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":";;;AAuKA,OAAOA,cAAa,MAAO,sBAAsB;AACjD,OAAOC,gBAAe,MAAO,6BAA6B;AAC1D,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,gBAAgB,EAAE,IAAI;MACtBC,gBAAgB,EAAE,CAAC,CAAC;MAAE;MACtBC,WAAW,EAAE,KAAI,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLb,IAAI,EAAE;MACJc,OAAOA,CAACC,OAAO,EAAE;QACf,IAAIA,OAAO,EAAE;UACX,IAAI,CAACC,aAAa,CAAC,CAAC;QACtB;MACF,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACZ,SAAQ,IAAK,IAAI,CAACA,SAAS,CAACa,MAAK,KAAM,CAAC,EAAE,OAAO,KAAK;MAChE;MACA,OAAO,IAAI,CAACb,SAAS,CAACc,KAAK,CAACC,GAAE,IAAKA,GAAG,CAACC,mBAAkB,KAAM,UAAU,KAClE,IAAI,CAACvB,IAAI,EAAEwB,6BAA4B,KAAM,UAAU;IAChE;EACF,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd;IACA,IAAI,CAACb,WAAU,GAAI,IAAI;;IAEvB;IACAV,MAAM,CAACwB,MAAM,CAAC,IAAI,CAACf,gBAAgB,CAAC,CAACgB,OAAO,CAACC,GAAE,IAAK;MAClDC,GAAG,CAACC,eAAe,CAACF,GAAG,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EACDG,OAAO,EAAE;IACP,MAAMf,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAAChB,IAAG,IAAK,IAAI,CAACY,WAAW,EAAE;MAEpC,IAAI,CAACJ,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI,CAACF,SAAQ,GAAI,EAAE;MAEnB,IAAI;QACF;QACA,MAAMyB,SAAQ,GAAI,IAAI,CAAChC,IAAI,CAACiC,WAAU,IAAK,IAAI,CAACjC,IAAI,CAACkC,EAAE;;QAEvD;QACA,MAAMC,SAAQ,GAAI,OAAOH,SAAQ,KAAM,QAAO,IAAKA,SAAS,CAACI,QAAQ,CAAC,GAAG,IACrEJ,SAAS,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IACtBL,SAAS;QAEb,MAAMM,QAAO,GAAI,MAAM3C,gBAAgB,CAAC4C,mBAAmB,CAACJ,SAAS,CAAC;;QAEtE;QACA,IAAI,IAAI,CAACvB,WAAW,EAAE;QAEtB,IAAI0B,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAI,CAACjC,SAAQ,GAAI+B,QAAQ,CAAChC,IAAG,IAAK,EAAE;UACpC;UACA,MAAM,IAAI,CAACmC,sBAAsB,CAAC,CAAC;QACrC,OAAO;UACL,MAAM,IAAIC,KAAK,CAACJ,QAAQ,CAACK,OAAM,IAAK,0BAA0B,CAAC;QACjE;MACF,EAAE,OAAOlC,KAAK,EAAE;QACdmC,OAAO,CAACnC,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;;QAE3D;QACA,IAAI,CAAC,IAAI,CAACG,WAAW,EAAE;UACrB,IAAI,CAACH,KAAI,GAAIA,KAAK,CAACkC,OAAM,IAAK,0BAA0B;QAC1D;MACF,UAAU;QACR;QACA,IAAI,CAAC,IAAI,CAAC/B,WAAW,EAAE;UACrB,IAAI,CAACJ,OAAM,GAAI,KAAK;QACtB;MACF;IACF,CAAC;IAEDqC,YAAYA,CAACC,QAAQ,EAAE;MACrB,IAAI,CAACpC,gBAAe,GAAIoC,QAAQ;IAClC,CAAC;IAEDC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACrC,gBAAe,GAAI,IAAI;IAC9B,CAAC;IAED,MAAM+B,sBAAsBA,CAAA,EAAG;MAC7B;MACA,KAAK,MAAMK,QAAO,IAAK,IAAI,CAACvC,SAAS,EAAE;QACrC;QACA,IAAI,IAAI,CAACK,WAAW,EAAE;QAEtB,IAAI,IAAI,CAACoC,eAAe,CAACF,QAAQ,CAAC,EAAE;UAClC,IAAI;YACF,MAAMR,QAAO,GAAI,MAAM1C,GAAG,CAACqD,GAAG,CAAC,wBAAwBH,QAAQ,CAACZ,EAAE,OAAO,EAAE;cACzEgB,YAAY,EAAE;YAChB,CAAC,CAAC;;YAEF;YACA,IAAI,CAAC,IAAI,CAACtC,WAAW,EAAE;cACrB,MAAMuC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACd,QAAQ,CAAChC,IAAI,CAAC,EAAE;gBAAEL,IAAI,EAAE6C,QAAQ,CAACO;cAAU,CAAC,CAAC;cACpE,IAAI,CAAC1C,gBAAgB,CAACmC,QAAQ,CAACZ,EAAE,IAAIL,GAAG,CAACyB,eAAe,CAACH,IAAI,CAAC;YAChE;UACF,EAAE,OAAO1C,KAAK,EAAE;YACdmC,OAAO,CAACnC,KAAK,CAAC,yCAAyCqC,QAAQ,CAACZ,EAAE,GAAG,EAAEzB,KAAK,CAAC;YAC7E;UACF;QACF;MACF;IACF,CAAC;IAEDuC,eAAeA,CAACF,QAAQ,EAAE;MACxB,MAAMS,UAAS,GAAI,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC;MACtF,OAAOA,UAAU,CAACnB,QAAQ,CAACU,QAAQ,CAACO,SAAS,EAAEG,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEDC,qBAAqBA,CAACC,UAAU,EAAE;MAChC,OAAO/D,gBAAgB,CAACgE,kBAAkB,CAACD,UAAU,CAAC;IACxD,CAAC;IAEDE,gBAAgBA,CAACC,KAAK,EAAE;MACtBjB,OAAO,CAACnC,KAAK,CAAC,uBAAuB,EAAEoD,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC;MACxD;MACAF,KAAK,CAACC,MAAM,CAACE,KAAK,CAACC,OAAM,GAAI,MAAM;IACrC,CAAC;IAEDC,eAAeA,CAACjE,IAAI,EAAE;MACpB,MAAMkE,OAAM,GAAI;QACd,cAAc,EAAE,kCAAkC;QAClD,sBAAsB,EAAE,iCAAiC;QACzD,UAAU,EAAE,0BAA0B;QACtC,gBAAgB,EAAE,mCAAmC;QACrD,OAAO,EAAE;MACX,CAAC;MACD,OAAOA,OAAO,CAAClE,IAAI,KAAK,4BAA4B;IACtD,CAAC;IAEDmE,kBAAkBA,CAACnE,IAAI,EAAE;MACvB,OAAON,gBAAgB,CAACyE,kBAAkB,CAACnE,IAAI,CAAC;IAClD,CAAC;IAEDoE,oBAAoBA,CAACC,MAAM,EAAE;MAC3B,OAAO3E,gBAAgB,CAAC4E,wBAAwB,CAACD,MAAM,CAAC;IAC1D,CAAC;IAEDE,2BAA2BA,CAACF,MAAM,EAAE;MAClC,OAAO3E,gBAAgB,CAAC8E,mBAAmB,CAACH,MAAM,CAAC;IACrD,CAAC;IAEDG,mBAAmBA,CAACH,MAAM,EAAE;MAC1B,MAAMI,OAAM,GAAI;QACd,QAAQ,EAAE,YAAY;QACtB,UAAU,EAAE,cAAc;QAC1B,SAAS,EAAE,YAAY;QACvB,WAAW,EAAE,WAAW;QACxB,sBAAsB,EAAE,YAAY;QACpC,gCAAgC,EAAE,SAAS;QAC3C,oBAAoB,EAAE,WAAW;QACjC,oBAAoB,EAAE,YAAY;QAClC,wBAAwB,EAAE;MAC5B,CAAC;MACD,OAAOA,OAAO,CAACJ,MAAM,KAAK,cAAc;IAC1C,CAAC;IAEDK,YAAYA,CAACL,MAAM,EAAE;MACnB,OAAOA,MAAM,EAAEM,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,EAAEC,CAAA,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,KAAK,SAAS;IACvF,CAAC;IAEDC,UAAUA,CAACC,UAAU,EAAE;MACrB,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAEDC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACA,KAAK,EAAE,OAAO,cAAc;MACjC,MAAMC,KAAI,GAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACzC,MAAMC,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACL,KAAK,IAAIG,IAAI,CAACE,GAAG,CAAC,IAAI,CAAC,CAAC;MACtD,OAAOF,IAAI,CAACG,KAAK,CAACN,KAAI,GAAIG,IAAI,CAACI,GAAG,CAAC,IAAI,EAAEL,CAAC,IAAI,GAAG,IAAI,GAAE,GAAI,GAAE,GAAID,KAAK,CAACC,CAAC,CAAC;IAC3E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}