{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport api from '@/services/api';\nimport jsPDF from 'jspdf';\nexport default {\n  name: 'ClientTransactions',\n  data() {\n    return {\n      transactions: [],\n      allTransactions: [],\n      // Store all transactions for client-side search\n      statistics: null,\n      loading: false,\n      error: null,\n      showTransactionModal: false,\n      selectedTransaction: null,\n      downloadingReceipt: false,\n      // Can be boolean or transaction ID for specific loading\n      searchQuery: '',\n      searchTimeout: null,\n      pagination: {\n        page: 1,\n        limit: 10,\n        total: 0,\n        totalPages: 0,\n        hasNext: false,\n        hasPrev: false\n      }\n    };\n  },\n  computed: {\n    visiblePages() {\n      const current = this.pagination.page;\n      const total = this.pagination.totalPages;\n      const delta = 1;\n      const pages = [];\n      const left = current - delta;\n      const right = current + delta;\n      let last;\n      for (let i = 1; i <= total; i++) {\n        if (i === 1 || i === total || i >= left && i <= right) {\n          if (last && i - last > 1) {\n            pages.push('...');\n          }\n          pages.push(i);\n          last = i;\n        }\n      }\n      return pages;\n    }\n  },\n  async mounted() {\n    await this.loadTransactions();\n    await this.loadStatistics();\n  },\n  methods: {\n    async loadTransactions() {\n      try {\n        this.loading = true;\n        this.error = null;\n        const params = {\n          page: this.pagination.page,\n          limit: this.pagination.limit,\n          sortBy: 'receipt_date',\n          sortOrder: 'DESC'\n        };\n        const response = await api.get('/client/receipts', {\n          params\n        });\n        if (response.data.success) {\n          this.allTransactions = response.data.data.receipts || [];\n          this.applySearchAndPagination();\n        } else {\n          throw new Error(response.data.message || 'Failed to load transactions');\n        }\n      } catch (error) {\n        console.error('Failed to load transactions:', error);\n        this.error = error.response?.data?.message || error.message || 'Failed to load transactions';\n        this.transactions = [];\n        this.allTransactions = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadStatistics() {\n      try {\n        const response = await api.get('/client/receipts/statistics');\n        if (response.data.success) {\n          this.statistics = response.data.data;\n        }\n      } catch (error) {\n        console.error('Failed to load statistics:', error);\n        // Don't show error for statistics, it's not critical\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    applySearchAndPagination() {\n      // Filter transactions based on search query\n      let filteredTransactions = this.allTransactions;\n      if (this.searchQuery.trim()) {\n        const query = this.searchQuery.toLowerCase().trim();\n        filteredTransactions = this.allTransactions.filter(transaction => {\n          return transaction.receipt_number?.toLowerCase().includes(query) || transaction.amount?.toString().includes(query) || transaction.status?.toLowerCase().includes(query) || transaction.payment_method?.toLowerCase().includes(query) || transaction.document_type?.toLowerCase().includes(query);\n        });\n      }\n\n      // Calculate pagination\n      const total = filteredTransactions.length;\n      const totalPages = Math.ceil(total / this.pagination.limit);\n      const startIndex = (this.pagination.page - 1) * this.pagination.limit;\n      const endIndex = startIndex + this.pagination.limit;\n\n      // Update pagination info\n      this.pagination.total = total;\n      this.pagination.totalPages = totalPages;\n\n      // Ensure current page is valid\n      if (this.pagination.page > totalPages && totalPages > 0) {\n        this.pagination.page = totalPages;\n        this.applySearchAndPagination(); // Recursive call with corrected page\n        return;\n      }\n\n      // Set current page transactions\n      this.transactions = filteredTransactions.slice(startIndex, endIndex);\n    },\n    handleSearch() {\n      // Clear existing timeout\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n\n      // Debounce search to avoid excessive filtering\n      this.searchTimeout = setTimeout(() => {\n        this.pagination.page = 1; // Reset to first page when searching\n        this.applySearchAndPagination();\n      }, 300);\n    },\n    clearSearch() {\n      this.searchQuery = '';\n      this.pagination.page = 1;\n      this.applySearchAndPagination();\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.pagination.totalPages && page !== this.pagination.page) {\n        this.pagination.page = page;\n        this.applySearchAndPagination();\n      }\n    },\n    async viewTransaction(transaction) {\n      try {\n        this.loading = true;\n        const response = await api.get(`/client/receipts/${transaction.id}`);\n        if (response.data.success) {\n          this.selectedTransaction = response.data.data;\n          this.showTransactionModal = true;\n        } else {\n          throw new Error(response.data.message || 'Failed to load transaction details');\n        }\n      } catch (error) {\n        console.error('Failed to load transaction details:', error);\n        this.$toast.error(error.response?.data?.message || 'Failed to load transaction details');\n      } finally {\n        this.loading = false;\n      }\n    },\n    closeTransactionModal() {\n      this.showTransactionModal = false;\n      this.selectedTransaction = null;\n    },\n    async downloadReceipt() {\n      if (!this.selectedTransaction) return;\n      await this.generatePDF(this.selectedTransaction);\n    },\n    async downloadReceiptDirect(transaction) {\n      await this.generatePDF(transaction);\n    },\n    async generatePDF(transaction) {\n      try {\n        this.downloadingReceipt = transaction.id;\n\n        // Get complete transaction details if not already available\n        let transactionData = transaction;\n        if (!transaction.client_email) {\n          const response = await api.get(`/client/receipts/${transaction.id}`);\n          if (response.data.success) {\n            transactionData = response.data.data;\n          }\n        }\n\n        // Create PDF\n        const pdf = new jsPDF();\n\n        // Set up fonts and colors\n        const primaryColor = [45, 55, 72]; // #2d3748\n        const accentColor = [102, 126, 234]; // #667eea\n        const textColor = [74, 85, 104]; // #4a5568\n\n        // Header\n        pdf.setFillColor(...primaryColor);\n        pdf.rect(0, 0, 210, 40, 'F');\n\n        // Title\n        pdf.setTextColor(255, 255, 255);\n        pdf.setFontSize(24);\n        pdf.setFont('helvetica', 'bold');\n        pdf.text('PAYMENT RECEIPT', 105, 20, {\n          align: 'center'\n        });\n        pdf.setFontSize(12);\n        pdf.setFont('helvetica', 'normal');\n        pdf.text('Barangay Online Services for Document Requests', 105, 30, {\n          align: 'center'\n        });\n\n        // Reset text color\n        pdf.setTextColor(...textColor);\n\n        // Receipt Information Section\n        let yPos = 60;\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(...accentColor);\n        pdf.text('Receipt Information', 20, yPos);\n        yPos += 15;\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(...textColor);\n        const receiptInfo = [['Receipt Number:', transactionData.receipt_number || 'N/A'], ['Receipt Date:', this.formatDate(transactionData.receipt_date)], ['Payment Date:', this.formatDate(transactionData.payment_date || transactionData.receipt_date)], ['Status:', this.formatStatus(transactionData.payment_status)]];\n        receiptInfo.forEach(([label, value]) => {\n          pdf.setFont('helvetica', 'bold');\n          pdf.text(label, 20, yPos);\n          pdf.setFont('helvetica', 'normal');\n          pdf.text(value, 80, yPos);\n          yPos += 8;\n        });\n\n        // Client Information Section\n        yPos += 10;\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(...accentColor);\n        pdf.text('Client Information', 20, yPos);\n        yPos += 15;\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(...textColor);\n        const clientInfo = [['Client Name:', transactionData.client_name || 'N/A'], ['Email:', transactionData.client_email || 'N/A'], ['Phone:', transactionData.client_phone || 'N/A']];\n        clientInfo.forEach(([label, value]) => {\n          pdf.setFont('helvetica', 'bold');\n          pdf.text(label, 20, yPos);\n          pdf.setFont('helvetica', 'normal');\n          pdf.text(value, 80, yPos);\n          yPos += 8;\n        });\n\n        // Document Information Section\n        yPos += 10;\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(...accentColor);\n        pdf.text('Document Information', 20, yPos);\n        yPos += 15;\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(...textColor);\n        const documentInfo = [['Request Number:', transactionData.request_number || 'N/A'], ['Document Type:', transactionData.document_type || 'N/A'], ['Description:', transactionData.description || 'Payment for document request']];\n        documentInfo.forEach(([label, value]) => {\n          pdf.setFont('helvetica', 'bold');\n          pdf.text(label, 20, yPos);\n          pdf.setFont('helvetica', 'normal');\n          // Handle long text wrapping\n          const splitText = pdf.splitTextToSize(value, 110);\n          pdf.text(splitText, 80, yPos);\n          yPos += splitText.length * 6;\n        });\n\n        // Payment Information Section\n        yPos += 10;\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(...accentColor);\n        pdf.text('Payment Information', 20, yPos);\n        yPos += 15;\n        pdf.setFontSize(11);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(...textColor);\n        const paymentInfo = [['Payment Method:', transactionData.payment_method || 'Online Payment'], ['Amount:', `₱${this.formatAmount(transactionData.amount)}`], ['Processing Fee:', `₱${this.formatAmount(transactionData.processing_fee || 0)}`], ['Net Amount:', `₱${this.formatAmount(transactionData.net_amount || transactionData.amount)}`], ['Currency:', transactionData.currency || 'PHP']];\n        paymentInfo.forEach(([label, value]) => {\n          pdf.setFont('helvetica', 'bold');\n          pdf.text(label, 20, yPos);\n          pdf.setFont('helvetica', 'normal');\n          pdf.text(value, 80, yPos);\n          yPos += 8;\n        });\n\n        // Total Amount Highlight\n        yPos += 5;\n        pdf.setFillColor(248, 250, 252); // Light gray background\n        pdf.rect(15, yPos - 5, 180, 15, 'F');\n        pdf.setFontSize(14);\n        pdf.setFont('helvetica', 'bold');\n        pdf.setTextColor(...primaryColor);\n        pdf.text('Total Amount Paid:', 20, yPos + 5);\n        pdf.setTextColor(...accentColor);\n        pdf.text(`₱${this.formatAmount(transactionData.net_amount || transactionData.amount)}`, 120, yPos + 5);\n\n        // Footer\n        yPos += 25; // Position footer after content with a gap\n        if (yPos < 270) {\n          // Ensure footer is at least at the bottom\n          yPos = 270;\n        }\n        pdf.setFontSize(10);\n        pdf.setFont('helvetica', 'normal');\n        pdf.setTextColor(128, 128, 128);\n        pdf.text('This is a computer-generated receipt. No signature required.', 105, yPos, {\n          align: 'center'\n        });\n        pdf.text(`Generated on: ${new Date().toLocaleString()}`, 105, yPos + 8, {\n          align: 'center'\n        });\n\n        // Transaction ID footer\n        if (transactionData.external_transaction_id) {\n          pdf.text(`Transaction ID: ${transactionData.external_transaction_id}`, 105, yPos + 16, {\n            align: 'center'\n          });\n        }\n\n        // Generate filename\n        const filename = `Receipt_${transactionData.receipt_number || transactionData.id}_${new Date().toISOString().split('T')[0]}.pdf`;\n\n        // Save the PDF\n        pdf.save(filename);\n\n        // Show success message\n        if (this.$toast) {\n          this.$toast.success('Receipt downloaded successfully!');\n        }\n      } catch (error) {\n        console.error('Failed to generate PDF:', error);\n        if (this.$toast) {\n          this.$toast.error('Failed to generate PDF receipt');\n        }\n      } finally {\n        this.downloadingReceipt = false;\n      }\n    },\n    formatAmount(amount) {\n      if (!amount) return '0.00';\n      return parseFloat(amount).toFixed(2);\n    },\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n    formatDateTime(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatStatus(status) {\n      const statusMap = {\n        'succeeded': 'Successful',\n        'pending': 'Pending',\n        'processing': 'Processing',\n        'failed': 'Failed',\n        'cancelled': 'Cancelled',\n        'refunded': 'Refunded'\n      };\n      return statusMap[status] || status;\n    }\n  }\n};","map":{"version":3,"names":["api","jsPDF","name","data","transactions","allTransactions","statistics","loading","error","showTransactionModal","selectedTransaction","downloadingReceipt","searchQuery","searchTimeout","pagination","page","limit","total","totalPages","hasNext","hasPrev","computed","visiblePages","current","delta","pages","left","right","last","i","push","mounted","loadTransactions","loadStatistics","methods","params","sortBy","sortOrder","response","get","success","receipts","applySearchAndPagination","Error","message","console","goBack","$router","go","filteredTransactions","trim","query","toLowerCase","filter","transaction","receipt_number","includes","amount","toString","status","payment_method","document_type","length","Math","ceil","startIndex","endIndex","slice","handleSearch","clearTimeout","setTimeout","clearSearch","changePage","viewTransaction","id","$toast","closeTransactionModal","downloadReceipt","generatePDF","downloadReceiptDirect","transactionData","client_email","pdf","primaryColor","accentColor","textColor","setFillColor","rect","setTextColor","setFontSize","setFont","text","align","yPos","receiptInfo","formatDate","receipt_date","payment_date","formatStatus","payment_status","forEach","label","value","clientInfo","client_name","client_phone","documentInfo","request_number","description","splitText","splitTextToSize","paymentInfo","formatAmount","processing_fee","net_amount","currency","Date","toLocaleString","external_transaction_id","filename","toISOString","split","save","parseFloat","toFixed","dateString","date","toLocaleDateString","year","month","day","formatDateTime","hour","minute","statusMap"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\client\\ClientTransactions.vue"],"sourcesContent":["<template>\r\n  <div class=\"transactions-page\">\r\n    <!-- Header -->\r\n    <div class=\"page-header\">\r\n      <div class=\"container\">\r\n        <div class=\"header-content\">\r\n          <div class=\"header-text\">\r\n            <button\r\n              class=\"btn btn-outline-secondary back-button\"\r\n              @click=\"goBack\"\r\n              title=\"Go back to previous page\"\r\n            >\r\n              <i class=\"fas fa-arrow-left\"></i>\r\n              Back\r\n            </button>\r\n            <div class=\"title-section\">\r\n              <h1 class=\"page-title\">Online Transactions</h1>\r\n              <p class=\"page-description\">View your payment receipts and transaction history</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"container\">\r\n\r\n      <!-- I will not use the statics for now -->\r\n      <!-- Statistics Cards -->\r\n      <!-- <div class=\"stats-grid\" v-if=\"statistics\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"fas fa-receipt\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ statistics.total_receipts || 0 }}</div>\r\n            <div class=\"stat-label\">Total Receipts</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"fas fa-check-circle\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ statistics.successful_payments || 0 }}</div>\r\n            <div class=\"stat-label\">Successful Payments</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"fas fa-peso-sign\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">₱{{ formatAmount(statistics.total_amount_paid) }}</div>\r\n            <div class=\"stat-label\">Total Amount Paid</div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n\r\n      <!-- Search Section -->\r\n      <div class=\"search-section\">\r\n        <div class=\"search-container\">\r\n          <div class=\"search-input-group\">\r\n            <i class=\"fas fa-search search-icon\"></i>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"searchQuery\"\r\n              @input=\"handleSearch\"\r\n              placeholder=\"Search transactions by receipt number, amount, or status...\"\r\n              class=\"search-input\"\r\n            >\r\n            <button\r\n              v-if=\"searchQuery\"\r\n              @click=\"clearSearch\"\r\n              class=\"clear-search-btn\"\r\n              type=\"button\"\r\n            >\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Transactions Table -->\r\n      <div class=\"transactions-section\">\r\n        <div class=\"section-header\">\r\n          <h2>Payment Receipts</h2>\r\n          <div class=\"section-actions\">\r\n            <span class=\"results-count\" v-if=\"pagination.total\">\r\n              Showing {{ ((pagination.page - 1) * pagination.limit) + 1 }} -\r\n              {{ Math.min(pagination.page * pagination.limit, pagination.total) }}\r\n              of {{ pagination.total }} receipts\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Loading State -->\r\n        <div v-if=\"loading\" class=\"loading-state\">\r\n          <div class=\"loading-spinner\">\r\n            <i class=\"fas fa-spinner fa-spin\"></i>\r\n          </div>\r\n          <p>Loading transactions...</p>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div v-else-if=\"error\" class=\"error-state\">\r\n          <div class=\"error-icon\">\r\n            <i class=\"fas fa-exclamation-triangle\"></i>\r\n          </div>\r\n          <h3>Error Loading Transactions</h3>\r\n          <p>{{ error }}</p>\r\n          <button class=\"btn btn-primary\" @click=\"loadTransactions\">\r\n            <i class=\"fas fa-retry\"></i>\r\n            Try Again\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Empty State -->\r\n        <div v-else-if=\"!transactions.length\" class=\"empty-state\">\r\n          <div class=\"empty-icon\">\r\n            <i class=\"fas fa-receipt\"></i>\r\n          </div>\r\n          <h3>No Transactions Found</h3>\r\n          <p>You haven't made any online payments yet.</p>\r\n          <router-link to=\"/client/home\" class=\"btn btn-primary\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            Make a Request\r\n          </router-link>\r\n        </div>\r\n\r\n        <!-- Transactions Table - Desktop View -->\r\n        <div v-else class=\"transactions-container\">\r\n          <!-- Desktop Table View -->\r\n          <div class=\"table-responsive desktop-table\">\r\n            <table class=\"table transactions-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Receipt #</th>\r\n                  <th>Client Name</th>\r\n                  <th>Document Type</th>\r\n                  <th>Amount</th>\r\n                  <th>Payment Method</th>\r\n                  <th>Date</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"transaction in transactions\" :key=\"transaction.id\" class=\"transaction-row\">\r\n                  <td>\r\n                    <span class=\"receipt-number\">{{ transaction.receipt_number }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"client-name\">{{ transaction.client_name }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"document-type\">{{ transaction.document_type }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"amount\">₱{{ formatAmount(transaction.amount) }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"payment-method\">{{ transaction.payment_method }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"date\">{{ formatDate(transaction.receipt_date) }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      class=\"status-badge\"\r\n                      :class=\"`status-${transaction.payment_status}`\"\r\n                    >\r\n                      {{ formatStatus(transaction.payment_status) }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"action-buttons\">\r\n                      <button\r\n                        class=\"btn btn-sm btn-primary\"\r\n                        @click=\"viewTransaction(transaction)\"\r\n                        title=\"View Details\"\r\n                      >\r\n                        <i class=\"fas fa-eye\"></i>\r\n                        View\r\n                      </button>\r\n                      <button\r\n                        class=\"btn btn-sm btn-success\"\r\n                        @click=\"downloadReceiptDirect(transaction)\"\r\n                        :disabled=\"downloadingReceipt === transaction.id\"\r\n                        title=\"Download Receipt\"\r\n                      >\r\n                        <i class=\"fas fa-download\" :class=\"{ 'fa-spin': downloadingReceipt === transaction.id }\"></i>\r\n                        <span class=\"btn-text\">PDF</span>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <!-- Mobile Card View -->\r\n          <div class=\"mobile-cards\">\r\n            <div\r\n              v-for=\"transaction in transactions\"\r\n              :key=\"transaction.id\"\r\n              class=\"transaction-card\"\r\n            >\r\n              <div class=\"card-header\">\r\n                <div class=\"receipt-info\">\r\n                  <span class=\"receipt-number\">{{ transaction.receipt_number }}</span>\r\n                  <span\r\n                    class=\"status-badge\"\r\n                    :class=\"`status-${transaction.payment_status}`\"\r\n                  >\r\n                    {{ formatStatus(transaction.payment_status) }}\r\n                  </span>\r\n                </div>\r\n                <div class=\"amount\">₱{{ formatAmount(transaction.amount) }}</div>\r\n              </div>\r\n\r\n              <div class=\"card-body\">\r\n                <div class=\"transaction-info\">\r\n                  <div class=\"info-row\">\r\n                    <span class=\"label\">Client:</span>\r\n                    <span class=\"value\">{{ transaction.client_name }}</span>\r\n                  </div>\r\n                  <div class=\"info-row\">\r\n                    <span class=\"label\">Document:</span>\r\n                    <span class=\"value\">{{ transaction.document_type }}</span>\r\n                  </div>\r\n                  <div class=\"info-row\">\r\n                    <span class=\"label\">Payment Method:</span>\r\n                    <span class=\"value\">{{ transaction.payment_method }}</span>\r\n                  </div>\r\n                  <div class=\"info-row\">\r\n                    <span class=\"label\">Date:</span>\r\n                    <span class=\"value\">{{ formatDate(transaction.receipt_date) }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"card-footer\">\r\n                <button\r\n                  class=\"btn btn-sm btn-primary\"\r\n                  @click=\"viewTransaction(transaction)\"\r\n                >\r\n                  <i class=\"fas fa-eye\"></i>\r\n                  View Details\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-sm btn-success\"\r\n                  @click=\"downloadReceiptDirect(transaction)\"\r\n                  :disabled=\"downloadingReceipt === transaction.id\"\r\n                >\r\n                  <i class=\"fas fa-download\" :class=\"{ 'fa-spin': downloadingReceipt === transaction.id }\"></i>\r\n                  Download PDF\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div v-if=\"pagination.totalPages > 1\" class=\"pagination-section\">\r\n          <nav aria-label=\"Transactions pagination\">\r\n            <ul class=\"pagination\">\r\n              <li class=\"page-item\" :class=\"{ disabled: !pagination.hasPrev }\">\r\n                <button\r\n                  class=\"page-link\"\r\n                  @click=\"changePage(pagination.page - 1)\"\r\n                  :disabled=\"!pagination.hasPrev\"\r\n                >\r\n                  <i class=\"fas fa-chevron-left\"></i>\r\n                  Previous\r\n                </button>\r\n              </li>\r\n\r\n              <li\r\n                v-for=\"page in visiblePages\"\r\n                :key=\"page\"\r\n                class=\"page-item\"\r\n                :class=\"{ active: page === pagination.page }\"\r\n              >\r\n                <button class=\"page-link\" @click=\"changePage(page)\">\r\n                  {{ page }}\r\n                </button>\r\n              </li>\r\n\r\n              <li class=\"page-item\" :class=\"{ disabled: !pagination.hasNext }\">\r\n                <button\r\n                  class=\"page-link\"\r\n                  @click=\"changePage(pagination.page + 1)\"\r\n                  :disabled=\"!pagination.hasNext\"\r\n                >\r\n                  Next\r\n                  <i class=\"fas fa-chevron-right\"></i>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Transaction Details Modal -->\r\n    <div v-if=\"showTransactionModal\" class=\"modal-overlay\" @click=\"closeTransactionModal\">\r\n      <div class=\"modal-content transaction-modal\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>Transaction Details</h3>\r\n          <button class=\"modal-close\" @click=\"closeTransactionModal\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"modal-body\" v-if=\"selectedTransaction\">\r\n          <div class=\"transaction-details\">\r\n            <!-- Receipt Information -->\r\n            <div class=\"detail-section\">\r\n              <h4>Receipt Information</h4>\r\n              <div class=\"detail-grid\">\r\n                <div class=\"detail-item\">\r\n                  <label>Receipt Number</label>\r\n                  <span class=\"receipt-number\">{{ selectedTransaction.receipt_number }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Receipt Date</label>\r\n                  <span>{{ formatDateTime(selectedTransaction.receipt_date) }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Payment Date</label>\r\n                  <span>{{ formatDateTime(selectedTransaction.payment_date) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Client Information -->\r\n            <div class=\"detail-section\">\r\n              <h4>Client Information</h4>\r\n              <div class=\"detail-grid\">\r\n                <div class=\"detail-item\">\r\n                  <label>Full Name</label>\r\n                  <span>{{ selectedTransaction.client_name }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Email</label>\r\n                  <span>{{ selectedTransaction.client_email }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Phone</label>\r\n                  <span>{{ selectedTransaction.client_phone }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Request Information -->\r\n            <div class=\"detail-section\">\r\n              <h4>Request Information</h4>\r\n              <div class=\"detail-grid\">\r\n                <div class=\"detail-item\">\r\n                  <label>Request Number</label>\r\n                  <span>{{ selectedTransaction.request_number }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Document Type</label>\r\n                  <span>{{ selectedTransaction.document_type }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Payment Information -->\r\n            <div class=\"detail-section\">\r\n              <h4>Payment Information</h4>\r\n              <div class=\"detail-grid\">\r\n                <div class=\"detail-item\">\r\n                  <label>Payment Method</label>\r\n                  <span>{{ selectedTransaction.payment_method }}</span>\r\n                </div>\r\n                <div class=\"detail-item\">\r\n                  <label>Amount</label>\r\n                  <span class=\"amount\">₱{{ formatAmount(selectedTransaction.amount) }}</span>\r\n                </div>\r\n                <!-- <div class=\"detail-item\">\r\n                  <label>Processing Fee</label>\r\n                  <span>₱{{ formatAmount(selectedTransaction.processing_fee) }}</span>\r\n                </div> -->\r\n                <!-- <div class=\"detail-item\">\r\n                  <label>Net Amount</label>\r\n                  <span class=\"net-amount\">₱{{ formatAmount(selectedTransaction.net_amount) }}</span>\r\n                </div> -->\r\n                <!-- <div class=\"detail-item\">\r\n                  <label>Status</label>\r\n                  <span\r\n                    class=\"status-badge\"\r\n                    :class=\"`status-${selectedTransaction.payment_status}`\"\r\n                  >\r\n                    {{ formatStatus(selectedTransaction.payment_status) }}\r\n                  </span>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Transaction IDs -->\r\n            <div class=\"detail-section\" v-if=\"selectedTransaction.external_transaction_id\">\r\n              <h4>Transaction References</h4>\r\n              <div class=\"detail-grid\">\r\n                <div class=\"detail-item\" v-if=\"selectedTransaction.external_transaction_id\">\r\n                  <label>External Transaction ID</label>\r\n                  <span class=\"transaction-id\">{{ selectedTransaction.external_transaction_id }}</span>\r\n                </div>\r\n                <div class=\"detail-item\" v-if=\"selectedTransaction.paymongo_payment_intent_id\">\r\n                  <label>PayMongo Payment Intent</label>\r\n                  <span class=\"transaction-id\">{{ selectedTransaction.paymongo_payment_intent_id }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Description -->\r\n            <div class=\"detail-section\" v-if=\"selectedTransaction.description\">\r\n              <h4>Description</h4>\r\n              <p class=\"description\">{{ selectedTransaction.description }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn btn-outline-primary\" @click=\"downloadReceipt\" :disabled=\"downloadingReceipt\">\r\n            <i class=\"fas fa-download\" :class=\"{ 'fa-spin': downloadingReceipt }\"></i>\r\n            {{ downloadingReceipt ? 'Preparing...' : 'Download Receipt' }}\r\n          </button>\r\n          <button class=\"btn btn-secondary\" @click=\"closeTransactionModal\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api'\r\nimport jsPDF from 'jspdf'\r\n\r\nexport default {\r\n  name: 'ClientTransactions',\r\n  data() {\r\n    return {\r\n      transactions: [],\r\n      allTransactions: [], // Store all transactions for client-side search\r\n      statistics: null,\r\n      loading: false,\r\n      error: null,\r\n      showTransactionModal: false,\r\n      selectedTransaction: null,\r\n      downloadingReceipt: false, // Can be boolean or transaction ID for specific loading\r\n      searchQuery: '',\r\n      searchTimeout: null,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0,\r\n        hasNext: false,\r\n        hasPrev: false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    visiblePages() {\r\n      const current = this.pagination.page\r\n      const total = this.pagination.totalPages\r\n      const delta = 1\r\n      const pages = []\r\n\r\n      const left = current - delta\r\n      const right = current + delta\r\n\r\n      let last\r\n\r\n      for (let i = 1; i <= total; i++) {\r\n        if (i === 1 || i === total || (i >= left && i <= right)) {\r\n          if (last && i - last > 1) {\r\n            pages.push('...')\r\n          }\r\n          pages.push(i)\r\n          last = i\r\n        }\r\n      }\r\n      return pages\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.loadTransactions()\r\n    await this.loadStatistics()\r\n  },\r\n  methods: {\r\n\r\n    async loadTransactions() {\r\n      try {\r\n        this.loading = true\r\n        this.error = null\r\n\r\n        const params = {\r\n          page: this.pagination.page,\r\n          limit: this.pagination.limit,\r\n          sortBy: 'receipt_date',\r\n          sortOrder: 'DESC'\r\n        }\r\n\r\n        const response = await api.get('/client/receipts', { params })\r\n\r\n        if (response.data.success) {\r\n          this.allTransactions = response.data.data.receipts || []\r\n          this.applySearchAndPagination()\r\n        } else {\r\n          throw new Error(response.data.message || 'Failed to load transactions')\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load transactions:', error)\r\n        this.error = error.response?.data?.message || error.message || 'Failed to load transactions'\r\n        this.transactions = []\r\n        this.allTransactions = []\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async loadStatistics() {\r\n      try {\r\n        const response = await api.get('/client/receipts/statistics')\r\n\r\n        if (response.data.success) {\r\n          this.statistics = response.data.data\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load statistics:', error)\r\n        // Don't show error for statistics, it's not critical\r\n      }\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.go(-1)\r\n    },\r\n\r\n    applySearchAndPagination() {\r\n      // Filter transactions based on search query\r\n      let filteredTransactions = this.allTransactions\r\n\r\n      if (this.searchQuery.trim()) {\r\n        const query = this.searchQuery.toLowerCase().trim()\r\n        filteredTransactions = this.allTransactions.filter(transaction => {\r\n          return (\r\n            transaction.receipt_number?.toLowerCase().includes(query) ||\r\n            transaction.amount?.toString().includes(query) ||\r\n            transaction.status?.toLowerCase().includes(query) ||\r\n            transaction.payment_method?.toLowerCase().includes(query) ||\r\n            transaction.document_type?.toLowerCase().includes(query)\r\n          )\r\n        })\r\n      }\r\n\r\n      // Calculate pagination\r\n      const total = filteredTransactions.length\r\n      const totalPages = Math.ceil(total / this.pagination.limit)\r\n      const startIndex = (this.pagination.page - 1) * this.pagination.limit\r\n      const endIndex = startIndex + this.pagination.limit\r\n\r\n      // Update pagination info\r\n      this.pagination.total = total\r\n      this.pagination.totalPages = totalPages\r\n\r\n      // Ensure current page is valid\r\n      if (this.pagination.page > totalPages && totalPages > 0) {\r\n        this.pagination.page = totalPages\r\n        this.applySearchAndPagination() // Recursive call with corrected page\r\n        return\r\n      }\r\n\r\n      // Set current page transactions\r\n      this.transactions = filteredTransactions.slice(startIndex, endIndex)\r\n    },\r\n\r\n    handleSearch() {\r\n      // Clear existing timeout\r\n      if (this.searchTimeout) {\r\n        clearTimeout(this.searchTimeout)\r\n      }\r\n\r\n      // Debounce search to avoid excessive filtering\r\n      this.searchTimeout = setTimeout(() => {\r\n        this.pagination.page = 1 // Reset to first page when searching\r\n        this.applySearchAndPagination()\r\n      }, 300)\r\n    },\r\n\r\n    clearSearch() {\r\n      this.searchQuery = ''\r\n      this.pagination.page = 1\r\n      this.applySearchAndPagination()\r\n    },\r\n\r\n    changePage(page) {\r\n      if (page >= 1 && page <= this.pagination.totalPages && page !== this.pagination.page) {\r\n        this.pagination.page = page\r\n        this.applySearchAndPagination()\r\n      }\r\n    },\r\n\r\n    async viewTransaction(transaction) {\r\n      try {\r\n        this.loading = true\r\n        const response = await api.get(`/client/receipts/${transaction.id}`)\r\n\r\n        if (response.data.success) {\r\n          this.selectedTransaction = response.data.data\r\n          this.showTransactionModal = true\r\n        } else {\r\n          throw new Error(response.data.message || 'Failed to load transaction details')\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load transaction details:', error)\r\n        this.$toast.error(error.response?.data?.message || 'Failed to load transaction details')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    closeTransactionModal() {\r\n      this.showTransactionModal = false\r\n      this.selectedTransaction = null\r\n    },\r\n\r\n    async downloadReceipt() {\r\n      if (!this.selectedTransaction) return\r\n      await this.generatePDF(this.selectedTransaction)\r\n    },\r\n\r\n    async downloadReceiptDirect(transaction) {\r\n      await this.generatePDF(transaction)\r\n    },\r\n\r\n    async generatePDF(transaction) {\r\n      try {\r\n        this.downloadingReceipt = transaction.id\r\n\r\n        // Get complete transaction details if not already available\r\n        let transactionData = transaction\r\n        if (!transaction.client_email) {\r\n          const response = await api.get(`/client/receipts/${transaction.id}`)\r\n          if (response.data.success) {\r\n            transactionData = response.data.data\r\n          }\r\n        }\r\n\r\n        // Create PDF\r\n        const pdf = new jsPDF()\r\n\r\n        // Set up fonts and colors\r\n        const primaryColor = [45, 55, 72] // #2d3748\r\n        const accentColor = [102, 126, 234] // #667eea\r\n        const textColor = [74, 85, 104] // #4a5568\r\n\r\n        // Header\r\n        pdf.setFillColor(...primaryColor)\r\n        pdf.rect(0, 0, 210, 40, 'F')\r\n\r\n        // Title\r\n        pdf.setTextColor(255, 255, 255)\r\n        pdf.setFontSize(24)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.text('PAYMENT RECEIPT', 105, 20, { align: 'center' })\r\n\r\n        pdf.setFontSize(12)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.text('Barangay Online Services for Document Requests', 105, 30, { align: 'center' })\r\n\r\n        // Reset text color\r\n        pdf.setTextColor(...textColor)\r\n\r\n        // Receipt Information Section\r\n        let yPos = 60\r\n        pdf.setFontSize(16)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.setTextColor(...accentColor)\r\n        pdf.text('Receipt Information', 20, yPos)\r\n\r\n        yPos += 15\r\n        pdf.setFontSize(11)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.setTextColor(...textColor)\r\n\r\n        const receiptInfo = [\r\n          ['Receipt Number:', transactionData.receipt_number || 'N/A'],\r\n          ['Receipt Date:', this.formatDate(transactionData.receipt_date)],\r\n          ['Payment Date:', this.formatDate(transactionData.payment_date || transactionData.receipt_date)],\r\n          ['Status:', this.formatStatus(transactionData.payment_status)]\r\n        ]\r\n\r\n        receiptInfo.forEach(([label, value]) => {\r\n          pdf.setFont('helvetica', 'bold')\r\n          pdf.text(label, 20, yPos)\r\n          pdf.setFont('helvetica', 'normal')\r\n          pdf.text(value, 80, yPos)\r\n          yPos += 8\r\n        })\r\n\r\n        // Client Information Section\r\n        yPos += 10\r\n        pdf.setFontSize(16)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.setTextColor(...accentColor)\r\n        pdf.text('Client Information', 20, yPos)\r\n\r\n        yPos += 15\r\n        pdf.setFontSize(11)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.setTextColor(...textColor)\r\n\r\n        const clientInfo = [\r\n          ['Client Name:', transactionData.client_name || 'N/A'],\r\n          ['Email:', transactionData.client_email || 'N/A'],\r\n          ['Phone:', transactionData.client_phone || 'N/A']\r\n        ]\r\n\r\n        clientInfo.forEach(([label, value]) => {\r\n          pdf.setFont('helvetica', 'bold')\r\n          pdf.text(label, 20, yPos)\r\n          pdf.setFont('helvetica', 'normal')\r\n          pdf.text(value, 80, yPos)\r\n          yPos += 8\r\n        })\r\n\r\n        // Document Information Section\r\n        yPos += 10\r\n        pdf.setFontSize(16)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.setTextColor(...accentColor)\r\n        pdf.text('Document Information', 20, yPos)\r\n\r\n        yPos += 15\r\n        pdf.setFontSize(11)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.setTextColor(...textColor)\r\n\r\n        const documentInfo = [\r\n          ['Request Number:', transactionData.request_number || 'N/A'],\r\n          ['Document Type:', transactionData.document_type || 'N/A'],\r\n          ['Description:', transactionData.description || 'Payment for document request']\r\n        ]\r\n\r\n        documentInfo.forEach(([label, value]) => {\r\n          pdf.setFont('helvetica', 'bold')\r\n          pdf.text(label, 20, yPos)\r\n          pdf.setFont('helvetica', 'normal')\r\n          // Handle long text wrapping\r\n          const splitText = pdf.splitTextToSize(value, 110)\r\n          pdf.text(splitText, 80, yPos)\r\n          yPos += splitText.length * 6\r\n        })\r\n\r\n        // Payment Information Section\r\n        yPos += 10\r\n        pdf.setFontSize(16)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.setTextColor(...accentColor)\r\n        pdf.text('Payment Information', 20, yPos)\r\n\r\n        yPos += 15\r\n        pdf.setFontSize(11)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.setTextColor(...textColor)\r\n\r\n        const paymentInfo = [\r\n          ['Payment Method:', transactionData.payment_method || 'Online Payment'],\r\n          ['Amount:', `₱${this.formatAmount(transactionData.amount)}`],\r\n          ['Processing Fee:', `₱${this.formatAmount(transactionData.processing_fee || 0)}`],\r\n          ['Net Amount:', `₱${this.formatAmount(transactionData.net_amount || transactionData.amount)}`],\r\n          ['Currency:', transactionData.currency || 'PHP']\r\n        ]\r\n\r\n        paymentInfo.forEach(([label, value]) => {\r\n          pdf.setFont('helvetica', 'bold')\r\n          pdf.text(label, 20, yPos)\r\n          pdf.setFont('helvetica', 'normal')\r\n          pdf.text(value, 80, yPos)\r\n          yPos += 8\r\n        })\r\n\r\n        // Total Amount Highlight\r\n        yPos += 5\r\n        pdf.setFillColor(248, 250, 252) // Light gray background\r\n        pdf.rect(15, yPos - 5, 180, 15, 'F')\r\n        pdf.setFontSize(14)\r\n        pdf.setFont('helvetica', 'bold')\r\n        pdf.setTextColor(...primaryColor)\r\n        pdf.text('Total Amount Paid:', 20, yPos + 5)\r\n        pdf.setTextColor(...accentColor)\r\n        pdf.text(`₱${this.formatAmount(transactionData.net_amount || transactionData.amount)}`, 120, yPos + 5)\r\n\r\n        // Footer\r\n        yPos += 25 // Position footer after content with a gap\r\n        if (yPos < 270) {\r\n          // Ensure footer is at least at the bottom\r\n          yPos = 270\r\n        }\r\n        pdf.setFontSize(10)\r\n        pdf.setFont('helvetica', 'normal')\r\n        pdf.setTextColor(128, 128, 128)\r\n        pdf.text('This is a computer-generated receipt. No signature required.', 105, yPos, { align: 'center' })\r\n        pdf.text(`Generated on: ${new Date().toLocaleString()}`, 105, yPos + 8, { align: 'center' })\r\n\r\n        // Transaction ID footer\r\n        if (transactionData.external_transaction_id) {\r\n          pdf.text(`Transaction ID: ${transactionData.external_transaction_id}`, 105, yPos + 16, { align: 'center' })\r\n        }\r\n\r\n        // Generate filename\r\n        const filename = `Receipt_${transactionData.receipt_number || transactionData.id}_${new Date().toISOString().split('T')[0]}.pdf`\r\n\r\n        // Save the PDF\r\n        pdf.save(filename)\r\n\r\n        // Show success message\r\n        if (this.$toast) {\r\n          this.$toast.success('Receipt downloaded successfully!')\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Failed to generate PDF:', error)\r\n        if (this.$toast) {\r\n          this.$toast.error('Failed to generate PDF receipt')\r\n        }\r\n      } finally {\r\n        this.downloadingReceipt = false\r\n      }\r\n    },\r\n\r\n    formatAmount(amount) {\r\n      if (!amount) return '0.00'\r\n      return parseFloat(amount).toFixed(2)\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A'\r\n      const date = new Date(dateString)\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      })\r\n    },\r\n\r\n    formatDateTime(dateString) {\r\n      if (!dateString) return 'N/A'\r\n      const date = new Date(dateString)\r\n      return date.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      })\r\n    },\r\n\r\n    formatStatus(status) {\r\n      const statusMap = {\r\n        'succeeded': 'Successful',\r\n        'pending': 'Pending',\r\n        'processing': 'Processing',\r\n        'failed': 'Failed',\r\n        'cancelled': 'Cancelled',\r\n        'refunded': 'Refunded'\r\n      }\r\n      return statusMap[status] || status\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.transactions-page {\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n/* Header Styles */\r\n.page-header {\r\n  background: #f8f9fa;\r\n  color: #2d3748;\r\n  padding: 2rem 0;\r\n  margin-bottom: 2rem;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.header-text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.back-button {\r\n  background: #2d3748;\r\n  border: 1px solid #2d3748;\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.375rem;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.back-button:hover {\r\n  background: #4a5568;\r\n  border-color: #4a5568;\r\n  color: white;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.back-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n.title-section {\r\n  flex: 1;\r\n}\r\n\r\n.page-title {\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n  margin: 0;\r\n}\r\n\r\n.page-description {\r\n  font-size: 1.1rem;\r\n  opacity: 0.9;\r\n  margin: 0.5rem 0 0 0;\r\n}\r\n\r\n\r\n\r\n/* Statistics Cards */\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n}\r\n\r\n.stat-card:nth-child(1) .stat-icon {\r\n  background: linear-gradient(135deg, #667eea, #764ba2);\r\n}\r\n\r\n.stat-card:nth-child(2) .stat-icon {\r\n  background: linear-gradient(135deg, #f093fb, #f5576c);\r\n}\r\n\r\n.stat-card:nth-child(3) .stat-icon {\r\n  background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n  line-height: 1;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.9rem;\r\n  color: #718096;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n/* Search Section */\r\n.search-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.search-input-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  left: 1rem;\r\n  color: #a0aec0;\r\n  z-index: 2;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n  border: 2px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  transition: all 0.2s ease;\r\n  background: #f7fafc;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  border-color: #4299e1;\r\n  background: white;\r\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\r\n}\r\n\r\n.clear-search-btn {\r\n  position: absolute;\r\n  right: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  color: #a0aec0;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: color 0.2s ease;\r\n}\r\n\r\n.clear-search-btn:hover {\r\n  color: #718096;\r\n}\r\n\r\n/* Transactions Section */\r\n.transactions-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 2px solid #f7fafc;\r\n}\r\n\r\n.section-header h2 {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n  margin: 0;\r\n}\r\n\r\n.results-count {\r\n  font-size: 0.9rem;\r\n  color: #718096;\r\n}\r\n\r\n/* State Styles */\r\n.loading-state,\r\n.error-state,\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 3rem 1rem;\r\n}\r\n\r\n.loading-spinner,\r\n.error-icon,\r\n.empty-icon {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.loading-spinner {\r\n  color: #667eea;\r\n}\r\n\r\n.error-icon {\r\n  color: #f56565;\r\n}\r\n\r\n.empty-icon {\r\n  color: #a0aec0;\r\n}\r\n\r\n.loading-state p,\r\n.error-state p,\r\n.empty-state p {\r\n  color: #718096;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.error-state h3,\r\n.empty-state h3 {\r\n  color: #4a5568;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* Table Styles */\r\n.table-responsive {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.transactions-table {\r\n  margin: 0;\r\n  background: white;\r\n}\r\n\r\n.transactions-table thead {\r\n  background: #f7fafc;\r\n}\r\n\r\n.transactions-table th {\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  border-bottom: 2px solid #e2e8f0;\r\n  padding: 1rem 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n.transactions-table td {\r\n  padding: 1rem 0.75rem;\r\n  border-bottom: 1px solid #f1f5f9;\r\n  vertical-align: middle;\r\n}\r\n\r\n.transaction-row:hover {\r\n  background-color: #f8fafc;\r\n}\r\n\r\n.receipt-number {\r\n  font-family: 'Courier New', monospace;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n}\r\n\r\n.client-name {\r\n  font-weight: 500;\r\n  color: #2d3748;\r\n}\r\n\r\n.document-type {\r\n  color: #4a5568;\r\n}\r\n\r\n.amount {\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.payment-method {\r\n  color: #4a5568;\r\n}\r\n\r\n.date {\r\n  color: #718096;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* Status Badges */\r\n.status-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n.status-succeeded {\r\n  background-color: #c6f6d5;\r\n  color: #22543d;\r\n}\r\n\r\n.status-pending {\r\n  background-color: #fef5e7;\r\n  color: #c05621;\r\n}\r\n\r\n.status-processing {\r\n  background-color: #e6fffa;\r\n  color: #234e52;\r\n}\r\n\r\n.status-failed {\r\n  background-color: #fed7d7;\r\n  color: #742a2a;\r\n}\r\n\r\n.status-cancelled {\r\n  background-color: #e2e8f0;\r\n  color: #4a5568;\r\n}\r\n\r\n.status-refunded {\r\n  background-color: #e6fffa;\r\n  color: #234e52;\r\n}\r\n\r\n/* Action Buttons */\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n}\r\n\r\n.action-buttons .btn {\r\n  min-width: auto;\r\n  padding: 0.375rem 0.75rem;\r\n}\r\n\r\n.action-buttons .btn-text {\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n/* Responsive Design */\r\n.transactions-container {\r\n  position: relative;\r\n}\r\n\r\n/* Desktop Table - Hidden on mobile */\r\n.desktop-table {\r\n  display: block;\r\n}\r\n\r\n/* Mobile Cards - Hidden on desktop */\r\n.mobile-cards {\r\n  display: none;\r\n}\r\n\r\n/* Mobile Card Styles */\r\n.transaction-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 1rem;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.transaction-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.card-header {\r\n  background: #f7fafc;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.receipt-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.card-header .receipt-number {\r\n  font-family: 'Courier New', monospace;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.card-header .amount {\r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n}\r\n\r\n.card-body {\r\n  padding: 1rem;\r\n}\r\n\r\n.transaction-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem 0;\r\n  border-bottom: 1px solid #f1f5f9;\r\n}\r\n\r\n.info-row:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.info-row .label {\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.info-row .value {\r\n  color: #2d3748;\r\n  font-size: 0.9rem;\r\n  text-align: right;\r\n  flex: 1;\r\n  margin-left: 1rem;\r\n}\r\n\r\n.card-footer {\r\n  padding: 1rem;\r\n  background: #f8fafc;\r\n  border-top: 1px solid #e2e8f0;\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.card-footer .btn {\r\n  flex: 1;\r\n  max-width: 120px;\r\n}\r\n\r\n/* Pagination */\r\n.pagination-section {\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  gap: 0.25rem;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n.page-item {\r\n  display: flex;\r\n}\r\n\r\n.page-link {\r\n  padding: 0.75rem 1rem;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  color: #4a5568;\r\n  text-decoration: none;\r\n  border-radius: 8px;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-link:hover:not(:disabled) {\r\n  background: #f7fafc;\r\n  border-color: #cbd5e0;\r\n  color: #2d3748;\r\n}\r\n\r\n.page-item.active .page-link {\r\n  background: #667eea;\r\n  border-color: #667eea;\r\n  color: white;\r\n}\r\n\r\n.page-item.disabled .page-link {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 1rem;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 12px;\r\n  max-width: 800px;\r\n  width: 100%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal-header {\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n}\r\n\r\n.modal-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #a0aec0;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  border-radius: 50%;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.modal-close:hover {\r\n  background: #f7fafc;\r\n  color: #4a5568;\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 1.5rem;\r\n  border-top: 1px solid #e2e8f0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n}\r\n\r\n/* Transaction Details */\r\n.transaction-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.detail-section h4 {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #f7fafc;\r\n}\r\n\r\n.detail-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.detail-item label {\r\n  font-size: 0.9rem;\r\n  font-weight: 600;\r\n  color: #718096;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n.detail-item span {\r\n  font-size: 1rem;\r\n  color: #2d3748;\r\n}\r\n\r\n.detail-item .receipt-number {\r\n  font-family: 'Courier New', monospace;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n}\r\n\r\n.detail-item .amount,\r\n.detail-item .net-amount {\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.detail-item .transaction-id {\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 0.9rem;\r\n  color: #4a5568;\r\n  word-break: break-all;\r\n}\r\n\r\n.description {\r\n  color: #4a5568;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .page-title {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .header-content {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    text-align: left;\r\n  }\r\n\r\n  .header-text {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  .back-button {\r\n    align-self: flex-start;\r\n  }\r\n\r\n  .title-section {\r\n    width: 100%;\r\n  }\r\n\r\n  .stats-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .search-container {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .section-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n\r\n  /* Hide desktop table, show mobile cards */\r\n  .desktop-table {\r\n    display: none;\r\n  }\r\n\r\n  .mobile-cards {\r\n    display: block;\r\n  }\r\n\r\n  .detail-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .modal-content {\r\n    margin: 1rem;\r\n    max-height: calc(100vh - 2rem);\r\n  }\r\n\r\n  .modal-footer {\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n\r\n  .modal-footer .btn {\r\n    width: 100%;\r\n  }\r\n\r\n  .pagination {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .page-header {\r\n    padding: 1.5rem 0;\r\n  }\r\n\r\n  .page-title {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .page-description {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  .back-button {\r\n    font-size: 0.7rem;\r\n    padding: 0.3rem 0.6rem;\r\n  }\r\n\r\n  .container {\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  .stat-card {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .stat-value {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .search-section,\r\n  .transactions-section {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .modal-overlay {\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .modal-header,\r\n  .modal-body,\r\n  .modal-footer {\r\n    padding: 1rem;\r\n  }\r\n\r\n  /* Mobile card adjustments */\r\n  .transaction-card {\r\n    margin-bottom: 0.75rem;\r\n  }\r\n\r\n  .card-header {\r\n    padding: 0.75rem;\r\n  }\r\n\r\n  .card-body {\r\n    padding: 0.75rem;\r\n  }\r\n\r\n  .card-footer {\r\n    padding: 0.75rem;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .card-footer .btn {\r\n    max-width: none;\r\n    width: 100%;\r\n  }\r\n\r\n  .info-row {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.25rem;\r\n  }\r\n\r\n  .info-row .value {\r\n    text-align: left;\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n/* Tablet responsive adjustments */\r\n@media (max-width: 1024px) and (min-width: 769px) {\r\n  .action-buttons {\r\n    flex-direction: column;\r\n    gap: 0.25rem;\r\n  }\r\n\r\n  .action-buttons .btn {\r\n    font-size: 0.8rem;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n\r\n  .action-buttons .btn-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}