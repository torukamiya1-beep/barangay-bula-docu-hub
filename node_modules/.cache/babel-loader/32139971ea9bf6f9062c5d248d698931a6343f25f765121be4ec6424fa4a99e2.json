{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"viewer-header\"\n};\nconst _hoisted_2 = {\n  class: \"image-info\"\n};\nconst _hoisted_3 = {\n  class: \"image-title\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"image-meta\"\n};\nconst _hoisted_5 = {\n  class: \"filename\"\n};\nconst _hoisted_6 = {\n  class: \"image-type\"\n};\nconst _hoisted_7 = {\n  class: \"viewer-controls\"\n};\nconst _hoisted_8 = {\n  class: \"main-controls\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  class: \"zoom-level me-2\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  class: \"viewer-content\",\n  ref: \"viewerContent\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"debug-info\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"loading-state\"\n};\nconst _hoisted_15 = {\n  class: \"error-state\"\n};\nconst _hoisted_16 = {\n  class: \"text-muted\"\n};\nconst _hoisted_17 = {\n  class: \"image-display\"\n};\nconst _hoisted_18 = [\"src\", \"alt\"];\nconst _hoisted_19 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"image-viewer-overlay\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.handleOverlayClick && $options.handleOverlayClick(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"image-viewer-container\",\n    onClick: _cache[14] || (_cache[14] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h4\", _hoisted_3, [_cache[16] || (_cache[16] = _createElementVNode(\"i\", {\n    class: \"fas fa-image me-2\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.title || 'Document Image'), 1 /* TEXT */)]), $props.showMeta ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($props.filename), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($props.imageType), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm me-2\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.zoomOut && $options.zoomOut(...args)),\n    disabled: $data.zoomLevel <= 0.5\n  }, _cache[17] || (_cache[17] = [_createElementVNode(\"i\", {\n    class: \"fas fa-search-minus\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_9), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(Math.round($data.zoomLevel * 100)) + \"%\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm me-2\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.zoomIn && $options.zoomIn(...args)),\n    disabled: $data.zoomLevel >= 3\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    class: \"fas fa-search-plus\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm me-2\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.resetZoom && $options.resetZoom(...args))\n  }, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    class: \"fas fa-expand-arrows-alt\"\n  }, null, -1 /* HOISTED */)])), $props.downloadUrl ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn btn-outline-primary btn-sm me-2\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.downloadImage && $options.downloadImage(...args))\n  }, _cache[20] || (_cache[20] = [_createElementVNode(\"i\", {\n    class: \"fas fa-download me-1\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm close-button\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.$emit('close'))\n  }, _cache[21] || (_cache[21] = [_createElementVNode(\"i\", {\n    class: \"fas fa-times me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Close \")]))])]), _createElementVNode(\"div\", _hoisted_12, [_createCommentVNode(\" Debug Info (only in development) \"), _ctx.$root.$data && _ctx.$root.$data.isDevelopment ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"small\", null, \"Loading: \" + _toDisplayString($data.loading) + \", Error: \" + _toDisplayString($data.error) + \", URL: \" + _toDisplayString($props.imageUrl ? $props.imageUrl.substring(0, 30) + '...' : 'none'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Loading State \"), $data.loading && !$data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_cache[23] || (_cache[23] = _createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"sr-only\"\n  }, \"Loading...\")], -1 /* HOISTED */)), _cache[24] || (_cache[24] = _createElementVNode(\"p\", {\n    class: \"mt-2\"\n  }, \"Loading image...\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary btn-sm mt-2\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.debugImageState && $options.debugImageState(...args))\n  }, _cache[22] || (_cache[22] = [_createElementVNode(\"i\", {\n    class: \"fas fa-bug me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Debug Info \")]))])) : $data.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Error State \"), _createElementVNode(\"div\", _hoisted_15, [_cache[26] || (_cache[26] = _createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-triangle fa-3x text-danger mb-3\"\n  }, null, -1 /* HOISTED */)), _cache[27] || (_cache[27] = _createElementVNode(\"h5\", null, \"Unable to Load Image\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_16, _toDisplayString($data.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.retryLoad && $options.retryLoad(...args))\n  }, _cache[25] || (_cache[25] = [_createElementVNode(\"i\", {\n    class: \"fas fa-redo me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Try Again \")]))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Image Display \"), _withDirectives(_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"img\", {\n    src: $props.imageUrl,\n    alt: $props.title || 'Document Image',\n    style: _normalizeStyle({\n      transform: `scale(${$data.zoomLevel})`\n    }),\n    class: \"main-image\",\n    onLoad: _cache[7] || (_cache[7] = (...args) => $options.onImageLoad && $options.onImageLoad(...args)),\n    onError: _cache[8] || (_cache[8] = (...args) => $options.onImageError && $options.onImageError(...args)),\n    onWheel: _cache[9] || (_cache[9] = (...args) => $options.handleWheel && $options.handleWheel(...args)),\n    onLoadstart: _cache[10] || (_cache[10] = (...args) => $options.onImageLoadStart && $options.onImageLoadStart(...args)),\n    onLoadend: _cache[11] || (_cache[11] = (...args) => $options.onImageLoadEnd && $options.onImageLoadEnd(...args)),\n    draggable: \"false\",\n    ref: \"mainImage\"\n  }, null, 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_18)], 512 /* NEED_PATCH */), [[_vShow, $options.shouldShowImage]]), _createCommentVNode(\" Always render image for debugging (hidden) \"), $props.imageUrl && $data.loading ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 3,\n    src: $props.imageUrl,\n    style: {\n      \"position\": \"absolute\",\n      \"opacity\": \"0\",\n      \"pointer-events\": \"none\",\n      \"width\": \"1px\",\n      \"height\": \"1px\"\n    },\n    onLoad: _cache[12] || (_cache[12] = (...args) => $options.onImageLoad && $options.onImageLoad(...args)),\n    onError: _cache[13] || (_cache[13] = (...args) => $options.onImageError && $options.onImageError(...args)),\n    ref: \"hiddenImage\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_19)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","onClick","_cache","args","$options","handleOverlayClick","_createElementVNode","_withModifiers","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$props","title","showMeta","_hoisted_4","_hoisted_5","filename","_hoisted_6","imageType","_hoisted_7","_hoisted_8","zoomOut","disabled","$data","zoomLevel","_hoisted_10","Math","round","zoomIn","resetZoom","downloadUrl","downloadImage","$event","_ctx","$emit","_hoisted_12","_createCommentVNode","$root","isDevelopment","_hoisted_13","loading","error","imageUrl","substring","_hoisted_14","role","debugImageState","_Fragment","key","_hoisted_15","_hoisted_16","retryLoad","_hoisted_17","src","alt","style","_normalizeStyle","transform","onLoad","onImageLoad","onError","onImageError","onWheel","handleWheel","onLoadstart","onImageLoadStart","onLoadend","onImageLoadEnd","draggable","shouldShowImage"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\common\\ImageViewer.vue"],"sourcesContent":["<template>\n  <div class=\"image-viewer-overlay\" @click=\"handleOverlayClick\">\n    <div class=\"image-viewer-container\" @click.stop>\n      <div class=\"viewer-header\">\n        <div class=\"image-info\">\n          <h4 class=\"image-title\">\n            <i class=\"fas fa-image me-2\"></i>\n            {{ title || 'Document Image' }}\n          </h4>\n          <div class=\"image-meta\" v-if=\"showMeta\">\n            <span class=\"filename\">{{ filename }}</span>\n            <span class=\"image-type\">{{ imageType }}</span>\n          </div>\n        </div>\n        \n        <div class=\"viewer-controls\">\n          <div class=\"main-controls\">\n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"zoomOut\"\n              :disabled=\"zoomLevel <= 0.5\"\n            >\n              <i class=\"fas fa-search-minus\"></i>\n            </button>\n            \n            <span class=\"zoom-level me-2\">{{ Math.round(zoomLevel * 100) }}%</span>\n            \n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"zoomIn\"\n              :disabled=\"zoomLevel >= 3\"\n            >\n              <i class=\"fas fa-search-plus\"></i>\n            </button>\n            \n            <button \n              class=\"btn btn-outline-secondary btn-sm me-2\" \n              @click=\"resetZoom\"\n            >\n              <i class=\"fas fa-expand-arrows-alt\"></i>\n            </button>\n            \n            <button \n              v-if=\"downloadUrl\" \n              class=\"btn btn-outline-primary btn-sm me-2\" \n              @click=\"downloadImage\"\n            >\n              <i class=\"fas fa-download me-1\"></i>\n            </button>\n          </div>\n          \n          <button class=\"btn btn-outline-secondary btn-sm close-button\" @click=\"$emit('close')\">\n            <i class=\"fas fa-times me-1\"></i>\n            Close\n          </button>\n        </div>\n      </div>\n\n      <div class=\"viewer-content\" ref=\"viewerContent\">\n        <!-- Debug Info (only in development) -->\n        <div v-if=\"$root.$data && $root.$data.isDevelopment\" class=\"debug-info\">\n          <small>Loading: {{ loading }}, Error: {{ error }}, URL: {{ imageUrl ? imageUrl.substring(0, 30) + '...' : 'none' }}</small>\n        </div>\n\n        <!-- Loading State -->\n        <div v-if=\"loading && !error\" class=\"loading-state\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <p class=\"mt-2\">Loading image...</p>\n          <button class=\"btn btn-outline-secondary btn-sm mt-2\" @click=\"debugImageState\">\n            <i class=\"fas fa-bug me-1\"></i>\n            Debug Info\n          </button>\n        </div>\n\n        <!-- Error State -->\n        <div v-else-if=\"error\" class=\"error-state\">\n          <i class=\"fas fa-exclamation-triangle fa-3x text-danger mb-3\"></i>\n          <h5>Unable to Load Image</h5>\n          <p class=\"text-muted\">{{ error }}</p>\n          <button class=\"btn btn-primary\" @click=\"retryLoad\">\n            <i class=\"fas fa-redo me-1\"></i>\n            Try Again\n          </button>\n        </div>\n\n        <!-- Image Display -->\n        <div v-show=\"shouldShowImage\" class=\"image-display\">\n          <img\n            :src=\"imageUrl\"\n            :alt=\"title || 'Document Image'\"\n            :style=\"{ transform: `scale(${zoomLevel})` }\"\n            class=\"main-image\"\n            @load=\"onImageLoad\"\n            @error=\"onImageError\"\n            @wheel=\"handleWheel\"\n            @loadstart=\"onImageLoadStart\"\n            @loadend=\"onImageLoadEnd\"\n            draggable=\"false\"\n            ref=\"mainImage\"\n          />\n        </div>\n\n        <!-- Always render image for debugging (hidden) -->\n        <img\n          v-if=\"imageUrl && loading\"\n          :src=\"imageUrl\"\n          style=\"position: absolute; opacity: 0; pointer-events: none; width: 1px; height: 1px;\"\n          @load=\"onImageLoad\"\n          @error=\"onImageError\"\n          ref=\"hiddenImage\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageViewer',\n  props: {\n    imageUrl: {\n      type: String,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    filename: {\n      type: String,\n      default: ''\n    },\n    imageType: {\n      type: String,\n      default: ''\n    },\n    downloadUrl: {\n      type: String,\n      default: ''\n    },\n    showMeta: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      error: null,\n      zoomLevel: 1,\n      minZoom: 0.5,\n      maxZoom: 3,\n      zoomStep: 0.25,\n      imageLoadAttempts: 0,\n      maxLoadAttempts: 3\n    };\n  },\n  computed: {\n    shouldShowImage() {\n      return !this.loading && !this.error && this.imageUrl;\n    }\n  },\n  watch: {\n    imageUrl: {\n      handler(newUrl, oldUrl) {\n        console.log('🔄 ImageViewer: imageUrl changed:', {\n          oldUrl: oldUrl ? oldUrl.substring(0, 50) + '...' : 'none',\n          newUrl: newUrl ? newUrl.substring(0, 50) + '...' : 'none',\n          isBlobUrl: newUrl?.startsWith('blob:'),\n          isDataUrl: newUrl?.startsWith('data:')\n        });\n\n        if (newUrl) {\n          this.loading = true;\n          this.error = null;\n          this.imageLoadAttempts = 0;\n\n          // Preload the image manually to ensure it works\n          this.preloadImage(newUrl);\n        }\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    // Add keyboard event listeners\n    document.addEventListener('keydown', this.handleKeydown);\n\n    // Add touch event listeners for mobile gestures\n    this.addTouchListeners();\n\n    // Check if image is already loaded (for cached blob URLs)\n    this.$nextTick(() => {\n      const img = this.$el?.querySelector('.main-image');\n      if (img) {\n        console.log('🔍 ImageViewer mounted, checking image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight\n        });\n\n        // If image is already loaded (cached), update loading state\n        if (img.complete && img.naturalWidth > 0) {\n          console.log('✅ Image was already loaded, updating state');\n          this.loading = false;\n          this.error = null;\n        } else if (this.imageUrl) {\n          // Validate blob URL\n          this.validateImageUrl(this.imageUrl);\n\n          // Set multiple timeout checks for robust loading\n          setTimeout(() => this.checkImageLoadingState(), 1000);  // Quick check\n          setTimeout(() => this.checkImageLoadingState(), 3000);  // Medium check\n          setTimeout(() => this.checkImageLoadingState(), 5000);  // Final check\n        }\n      }\n    });\n  },\n  beforeUnmount() {\n    // Remove keyboard event listeners\n    document.removeEventListener('keydown', this.handleKeydown);\n\n    // Remove touch event listeners\n    this.removeTouchListeners();\n  },\n  methods: {\n    handleOverlayClick() {\n      this.$emit('close');\n    },\n\n    onImageLoadStart(event) {\n      console.log('🔄 ImageViewer: Image load started:', {\n        src: event.target.src.substring(0, 50) + '...',\n        loadingState: this.loading\n      });\n    },\n\n    onImageLoadEnd(event) {\n      console.log('🏁 ImageViewer: Image load ended:', {\n        src: event.target.src.substring(0, 50) + '...',\n        complete: event.target.complete,\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight\n      });\n    },\n\n    onImageLoad(event) {\n      console.log('✅ ImageViewer: Image loaded successfully:', {\n        src: event.target.src.substring(0, 50) + '...',\n        naturalWidth: event.target.naturalWidth,\n        naturalHeight: event.target.naturalHeight,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = null;\n        console.log('✅ ImageViewer: Loading state updated to false');\n      });\n    },\n\n    onImageError(event) {\n      console.error('❌ ImageViewer: Image failed to load:', {\n        src: event.target.src.substring(0, 50) + '...',\n        error: event.target.error,\n        currentLoadingState: this.loading\n      });\n\n      // Force Vue reactivity update\n      this.$nextTick(() => {\n        this.loading = false;\n        this.error = 'Failed to load image. The image file may be missing or corrupted.';\n        console.log('❌ ImageViewer: Error state updated');\n      });\n    },\n\n    retryLoad() {\n      console.log('🔄 ImageViewer: Retrying image load');\n      this.loading = true;\n      this.error = null;\n\n      // Force image reload\n      const img = this.$el.querySelector('.main-image');\n      if (img) {\n        // For blob URLs, we can't add query parameters, so force reload differently\n        if (this.imageUrl.startsWith('blob:')) {\n          console.log('🔄 Retrying blob URL load');\n          img.src = '';\n          this.$nextTick(() => {\n            img.src = this.imageUrl;\n          });\n        } else {\n          console.log('🔄 Retrying regular URL load with cache bust');\n          img.src = this.imageUrl + '?t=' + Date.now();\n        }\n      }\n    },\n\n    zoomIn() {\n      if (this.zoomLevel < this.maxZoom) {\n        this.zoomLevel = Math.min(this.maxZoom, this.zoomLevel + this.zoomStep);\n      }\n    },\n\n    zoomOut() {\n      if (this.zoomLevel > this.minZoom) {\n        this.zoomLevel = Math.max(this.minZoom, this.zoomLevel - this.zoomStep);\n      }\n    },\n\n    resetZoom() {\n      this.zoomLevel = 1;\n    },\n\n    handleWheel(event) {\n      event.preventDefault();\n      if (event.deltaY < 0) {\n        this.zoomIn();\n      } else {\n        this.zoomOut();\n      }\n    },\n\n    handleKeydown(event) {\n      switch (event.key) {\n        case 'Escape':\n          this.$emit('close');\n          break;\n        case '+':\n        case '=':\n          event.preventDefault();\n          this.zoomIn();\n          break;\n        case '-':\n          event.preventDefault();\n          this.zoomOut();\n          break;\n        case '0':\n          event.preventDefault();\n          this.resetZoom();\n          break;\n      }\n    },\n\n    async downloadImage() {\n      if (!this.downloadUrl) return;\n\n      try {\n        // If downloadUrl is already a blob URL, use it directly\n        if (this.downloadUrl.startsWith('blob:')) {\n          const link = document.createElement('a');\n          link.href = this.downloadUrl;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else {\n          // For regular URLs, fetch with authentication\n          const api = (await import('@/services/api.js')).default;\n          const response = await api.get(this.downloadUrl, { responseType: 'blob' });\n          const blob = response.data;\n          const url = URL.createObjectURL(blob);\n\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = this.filename || 'image.jpg';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          URL.revokeObjectURL(url);\n        }\n      } catch (error) {\n        console.error('Error downloading image:', error);\n        this.$emit('error', 'Failed to download image');\n      }\n    },\n\n    validateImageUrl(url) {\n      console.log('🔍 ImageViewer: Validating image URL:', {\n        url: url.substring(0, 50) + '...',\n        isBlobUrl: url.startsWith('blob:'),\n        isDataUrl: url.startsWith('data:'),\n        isHttpUrl: url.startsWith('http')\n      });\n\n      // For blob URLs, try to validate they're still valid\n      if (url.startsWith('blob:')) {\n        try {\n          // Create a test image to validate the blob URL\n          const testImg = new Image();\n          testImg.onload = () => {\n            console.log('✅ Blob URL validation: URL is accessible');\n          };\n          testImg.onerror = () => {\n            console.error('❌ Blob URL validation: URL is not accessible');\n          };\n          testImg.src = url;\n        } catch (error) {\n          console.error('❌ Blob URL validation error:', error);\n        }\n      }\n    },\n\n    debugImageState() {\n      const img = this.$refs.mainImage;\n      if (img) {\n        console.log('🔍 ImageViewer: Current image state:', {\n          src: img.src ? img.src.substring(0, 50) + '...' : 'none',\n          complete: img.complete,\n          naturalWidth: img.naturalWidth,\n          naturalHeight: img.naturalHeight,\n          readyState: img.readyState,\n          loading: this.loading,\n          error: this.error\n        });\n      } else {\n        console.log('🔍 ImageViewer: No image ref found');\n      }\n    },\n\n    forceImageReload() {\n      console.log('🔄 ImageViewer: Force reloading image');\n      this.imageLoadAttempts++;\n\n      if (this.imageLoadAttempts > this.maxLoadAttempts) {\n        console.error('❌ ImageViewer: Max load attempts reached, giving up');\n        this.loading = false;\n        this.error = 'Image failed to load after multiple attempts';\n        return;\n      }\n\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n\n      [img, hiddenImg].forEach(imgEl => {\n        if (imgEl && this.imageUrl) {\n          // Clear the src and reload\n          imgEl.src = '';\n          this.$nextTick(() => {\n            imgEl.src = this.imageUrl;\n            console.log('🔄 ImageViewer: Image src reset and reloaded');\n          });\n        }\n      });\n    },\n\n    checkImageLoadingState() {\n      if (!this.loading) {\n        return; // Already loaded or errored\n      }\n\n      const img = this.$refs.mainImage;\n      const hiddenImg = this.$refs.hiddenImage;\n\n      // Check both visible and hidden images\n      [img, hiddenImg].forEach((imgEl, index) => {\n        if (imgEl) {\n          const imgType = index === 0 ? 'main' : 'hidden';\n          console.log(`🔍 Checking ${imgType} image state:`, {\n            complete: imgEl.complete,\n            naturalWidth: imgEl.naturalWidth,\n            naturalHeight: imgEl.naturalHeight,\n            src: imgEl.src ? imgEl.src.substring(0, 30) + '...' : 'none'\n          });\n\n          // If image is actually loaded but events didn't fire\n          if (imgEl.complete && imgEl.naturalWidth > 0 && this.loading) {\n            console.log(`✅ ${imgType} image is loaded but state not updated, fixing...`);\n            this.loading = false;\n            this.error = null;\n            return;\n          }\n        }\n      });\n\n      // If still loading after checks, provide more info\n      if (this.loading) {\n        console.log('⏰ Image still loading, current state:', {\n          loading: this.loading,\n          error: this.error,\n          imageUrl: this.imageUrl ? this.imageUrl.substring(0, 50) + '...' : 'none',\n          attempts: this.imageLoadAttempts\n        });\n      }\n    },\n\n    preloadImage(url) {\n      console.log('🔄 ImageViewer: Preloading image manually:', url.substring(0, 50) + '...');\n\n      // Create a new image element for preloading\n      const preloadImg = new Image();\n\n      preloadImg.onload = () => {\n        console.log('✅ ImageViewer: Preload successful, updating component state');\n        this.loading = false;\n        this.error = null;\n\n        // Update the actual image elements\n        this.$nextTick(() => {\n          const img = this.$refs.mainImage;\n          const hiddenImg = this.$refs.hiddenImage;\n\n          [img, hiddenImg].forEach(imgEl => {\n            if (imgEl && imgEl.src !== url) {\n              imgEl.src = url;\n            }\n          });\n        });\n      };\n\n      preloadImg.onerror = (error) => {\n        console.error('❌ ImageViewer: Preload failed:', error);\n        this.loading = false;\n        this.error = 'Failed to load image. The image may be corrupted or unavailable.';\n      };\n\n      // Start preloading\n      preloadImg.src = url;\n\n      // Fallback timeout\n      setTimeout(() => {\n        if (this.loading) {\n          console.log('⏰ Preload timeout, checking if image actually loaded...');\n          if (preloadImg.complete && preloadImg.naturalWidth > 0) {\n            console.log('✅ Image was loaded but events may have been missed');\n            this.loading = false;\n            this.error = null;\n          }\n        }\n      }, 10000);\n    },\n\n    addTouchListeners() {\n      // Add touch gesture support for mobile devices\n      const imageDisplay = this.$refs.viewerContent;\n      if (imageDisplay) {\n        let initialDistance = 0;\n        let initialZoom = 1;\n        let lastTouchTime = 0;\n\n        // Handle pinch-to-zoom\n        imageDisplay.addEventListener('touchstart', (e) => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            initialDistance = Math.hypot(\n              touch2.clientX - touch1.clientX,\n              touch2.clientY - touch1.clientY\n            );\n            initialZoom = this.zoomLevel;\n          } else if (e.touches.length === 1) {\n            // Handle double-tap to reset zoom\n            const currentTime = new Date().getTime();\n            const tapLength = currentTime - lastTouchTime;\n            if (tapLength < 500 && tapLength > 0) {\n              e.preventDefault();\n              this.resetZoom();\n            }\n            lastTouchTime = currentTime;\n          }\n        }, { passive: false });\n\n        imageDisplay.addEventListener('touchmove', (e) => {\n          if (e.touches.length === 2) {\n            e.preventDefault();\n            const touch1 = e.touches[0];\n            const touch2 = e.touches[1];\n            const currentDistance = Math.hypot(\n              touch2.clientX - touch1.clientX,\n              touch2.clientY - touch1.clientY\n            );\n\n            const scale = currentDistance / initialDistance;\n            const newZoom = Math.max(this.minZoom, Math.min(this.maxZoom, initialZoom * scale));\n            this.zoomLevel = newZoom;\n          }\n        }, { passive: false });\n      }\n    },\n\n    removeTouchListeners() {\n      // Touch listeners are added with anonymous functions, so they'll be cleaned up automatically\n      // when the component is destroyed\n    }\n  }\n};\n</script>\n\n<style scoped>\n.image-viewer-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1060;\n  backdrop-filter: blur(2px);\n  overflow: hidden; /* Prevent scrolling on mobile */\n  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */\n}\n\n.image-viewer-container {\n  background: white;\n  border-radius: 8px;\n  width: 95%;\n  height: 95%;\n  max-width: 1400px;\n  max-height: 900px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n}\n\n.viewer-header {\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid #dee2e6;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f8f9fa;\n  border-radius: 8px 8px 0 0;\n  flex-shrink: 0;\n}\n\n.image-title {\n  margin: 0;\n  color: #495057;\n  font-size: 1.25rem;\n}\n\n.image-meta {\n  display: flex;\n  gap: 1rem;\n  font-size: 0.875rem;\n  color: #6c757d;\n  margin-top: 0.25rem;\n}\n\n.viewer-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.zoom-level {\n  font-size: 0.875rem;\n  color: #6c757d;\n  min-width: 50px;\n  text-align: center;\n  font-weight: 500;\n}\n\n.viewer-content {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  background: #f8f9fa;\n  position: relative;\n}\n\n.loading-state,\n.error-state {\n  text-align: center;\n  padding: 2rem;\n}\n\n.image-display {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  padding: 1rem;\n}\n\n.main-image {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  transition: transform 0.2s ease;\n  cursor: grab;\n  border-radius: 4px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.main-image:active {\n  cursor: grabbing;\n}\n\n.debug-info {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  z-index: 10;\n}\n\n.header-top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.close-btn-mobile {\n  min-height: 44px;\n  min-width: 44px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem;\n}\n\n/* Tablet responsiveness */\n@media (max-width: 768px) {\n  .image-viewer-overlay {\n    padding: 0;\n    /* Ensure full viewport coverage */\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    height: 100vh;\n  }\n\n  .image-viewer-container {\n    width: 100vw;\n    height: 100vh;\n    border-radius: 0;\n    max-width: none;\n    max-height: none;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    /* Ensure container takes full space */\n    position: relative;\n  }\n\n  .viewer-header {\n    padding: 1rem;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n    border-radius: 0;\n    /* Optimize header height for mobile */\n    min-height: auto;\n    flex-shrink: 0;\n  }\n\n  .image-info {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .image-title {\n    font-size: 1.1rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .image-meta {\n    flex-direction: column;\n    gap: 0.25rem;\n    font-size: 0.8rem;\n  }\n\n  .viewer-controls {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n    align-items: stretch;\n  }\n\n  .main-controls {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    flex-wrap: wrap;\n  }\n\n  .viewer-controls .btn {\n    min-height: 48px; /* Larger touch-friendly size */\n    min-width: 48px;\n    padding: 0.75rem;\n    font-size: 0.9rem;\n    border-radius: 8px;\n    transition: all 0.2s ease;\n  }\n\n  .close-button {\n    width: 100%;\n    background-color: #dc3545;\n    border-color: #dc3545;\n    color: white;\n    font-weight: 600;\n    margin-top: 0.5rem;\n  }\n\n  .close-button:hover {\n    background-color: #c82333;\n    border-color: #bd2130;\n  }\n\n  .zoom-level {\n    order: -1;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 0.75rem;\n    font-size: 1.1rem;\n    font-weight: 600;\n    background: rgba(0, 123, 255, 0.1);\n    padding: 0.5rem;\n    border-radius: 6px;\n    border: 1px solid rgba(0, 123, 255, 0.2);\n  }\n\n  .viewer-content {\n    padding: 0;\n    flex: 1;\n    overflow: hidden;\n    /* Ensure content area uses remaining space */\n    height: calc(100vh - 120px); /* Account for header height */\n  }\n\n  .image-display {\n    padding: 0.5rem;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    /* Prevent horizontal scrolling */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .main-image {\n    max-width: calc(100vw - 1rem); /* Account for padding */\n    max-height: calc(100vh - 140px); /* Account for header and padding */\n    width: auto;\n    height: auto;\n    object-fit: contain;\n    /* Prevent image from causing horizontal scroll */\n    display: block;\n  }\n}\n\n/* Mobile phone responsiveness */\n@media (max-width: 480px) {\n  .image-viewer-overlay {\n    padding: 0;\n    background-color: rgba(0, 0, 0, 0.95); /* Darker background for better focus */\n    /* Ensure full viewport coverage on mobile */\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    height: 100vh;\n    /* Prevent any scrolling */\n    overflow: hidden;\n  }\n\n  .image-viewer-container {\n    height: 100vh; /* Full viewport height */\n    width: 100vw; /* Full viewport width */\n    border-radius: 0;\n    position: relative;\n    /* Remove any margins or padding that could cause issues */\n    margin: 0;\n    padding: 0;\n    /* Ensure container fills entire screen */\n    max-width: 100vw;\n    max-height: 100vh;\n  }\n\n  .viewer-header {\n    padding: 0.75rem;\n    gap: 0.75rem;\n    flex-shrink: 0; /* Prevent header from shrinking */\n    background: rgba(255, 255, 255, 0.98);\n    backdrop-filter: blur(10px);\n    /* Set CSS custom property for header height calculation */\n    --header-height: 160px;\n    min-height: var(--header-height);\n  }\n\n  .image-title {\n    font-size: 1rem;\n    line-height: 1.3;\n  }\n\n  .image-meta {\n    font-size: 0.75rem;\n  }\n\n  .viewer-controls {\n    gap: 0.25rem;\n  }\n\n  .viewer-controls {\n    flex-wrap: wrap;\n    gap: 0.75rem;\n    justify-content: center;\n    width: 100%;\n  }\n\n  .main-controls {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 100%;\n    gap: 0.5rem;\n    margin-bottom: 0.75rem;\n  }\n\n  .main-controls .btn {\n    min-height: 52px; /* Extra large touch targets for phones */\n    min-width: 52px;\n    padding: 0.875rem;\n    font-size: 1rem;\n    flex: 1;\n    max-width: 80px;\n    border-radius: 12px;\n    transition: all 0.2s ease;\n    font-weight: 500;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .main-controls .btn:active {\n    transform: scale(0.92);\n    background-color: rgba(0, 123, 255, 0.3);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  }\n\n  .main-controls .btn i {\n    font-size: 1.1rem;\n  }\n\n  .close-button {\n    width: 100%;\n    min-height: 52px;\n    padding: 0.875rem;\n    font-size: 1rem;\n    font-weight: 600;\n    border-radius: 12px;\n    background-color: #dc3545;\n    border-color: #dc3545;\n    color: white;\n    box-shadow: 0 3px 6px rgba(220, 53, 69, 0.3);\n    transition: all 0.2s ease;\n  }\n\n  .close-button:active {\n    transform: scale(0.95);\n    background-color: #c82333;\n    box-shadow: 0 2px 4px rgba(220, 53, 69, 0.4);\n  }\n\n  .zoom-level {\n    font-size: 0.9rem;\n    margin-bottom: 0.75rem;\n    padding: 0.5rem;\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n  }\n\n  .viewer-content {\n    padding: 0;\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* Calculate available height more precisely */\n    height: calc(100vh - var(--header-height, 160px));\n    position: relative;\n  }\n\n  .image-display {\n    padding: 0.25rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    /* Prevent any scrolling */\n    position: relative;\n  }\n\n  .main-image {\n    max-width: calc(100vw - 0.5rem); /* Account for minimal padding */\n    max-height: calc(100vh - var(--header-height, 160px) - 0.5rem);\n    width: auto;\n    height: auto;\n    object-fit: contain; /* Ensure image fits without distortion */\n    touch-action: pan-x pan-y pinch-zoom; /* Enable touch gestures */\n    /* Prevent image from overflowing */\n    display: block;\n    margin: 0 auto;\n    /* Smooth transitions for zoom */\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .loading-state,\n  .error-state {\n    padding: 1rem;\n    text-align: center;\n  }\n\n  .loading-state .spinner-border {\n    width: 3rem;\n    height: 3rem;\n  }\n\n  .error-state .btn {\n    min-height: 48px;\n    padding: 0.75rem 1.5rem;\n    font-size: 1rem;\n  }\n\n  /* Debug info positioning for mobile */\n  .debug-info {\n    position: relative;\n    top: 0;\n    left: 0;\n    margin-bottom: 0.5rem;\n    font-size: 10px;\n  }\n}\n\n/* Extra small devices */\n@media (max-width: 360px) {\n  .viewer-header {\n    padding: 0.5rem;\n    --header-height: 140px;\n    min-height: var(--header-height);\n    gap: 0.5rem;\n  }\n\n  .image-title {\n    font-size: 0.9rem;\n    line-height: 1.2;\n    margin-bottom: 0.25rem;\n  }\n\n  .image-meta {\n    font-size: 0.7rem;\n    gap: 0.125rem;\n  }\n\n  .main-controls {\n    gap: 0.25rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .main-controls .btn {\n    padding: 0.625rem 0.5rem;\n    font-size: 0.85rem;\n    min-height: 48px;\n    min-width: 48px;\n    max-width: 70px;\n  }\n\n  .main-controls .btn .me-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .close-button {\n    min-height: 48px;\n    font-size: 0.9rem;\n    padding: 0.75rem;\n  }\n\n  .zoom-level {\n    font-size: 0.85rem;\n    padding: 0.375rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .viewer-content {\n    height: calc(100vh - var(--header-height));\n  }\n\n  .main-image {\n    max-width: calc(100vw - 0.25rem);\n    max-height: calc(100vh - var(--header-height) - 0.25rem);\n  }\n}\n\n/* Touch device optimizations */\n@media (hover: none) and (pointer: coarse) {\n  .main-controls .btn {\n    min-height: 52px;\n    min-width: 52px;\n    padding: 0.875rem;\n    /* Enhanced touch feedback */\n    -webkit-tap-highlight-color: rgba(0, 123, 255, 0.3);\n  }\n\n  .close-button {\n    min-height: 56px;\n    padding: 1rem;\n    /* Enhanced close button for touch */\n    -webkit-tap-highlight-color: rgba(220, 53, 69, 0.3);\n  }\n\n  .viewer-controls .btn:hover {\n    background-color: initial; /* Remove hover effects on touch */\n  }\n\n  .viewer-controls .btn:active {\n    background-color: rgba(0, 123, 255, 0.2);\n    transform: scale(0.92);\n  }\n\n  .close-button:active {\n    background-color: rgba(220, 53, 69, 0.8);\n    transform: scale(0.95);\n  }\n\n  .main-image {\n    touch-action: pan-x pan-y pinch-zoom;\n    user-select: none;\n    -webkit-user-select: none;\n    /* Improve touch responsiveness */\n    -webkit-touch-callout: none;\n    -webkit-user-drag: none;\n  }\n\n  /* Improve zoom level display on touch devices */\n  .zoom-level {\n    -webkit-tap-highlight-color: transparent;\n    user-select: none;\n  }\n}\n\n/* Landscape orientation on mobile */\n@media (max-width: 768px) and (orientation: landscape) {\n  .viewer-header {\n    padding: 0.5rem 1rem;\n    --header-height: 100px;\n    min-height: var(--header-height);\n    flex-direction: row;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .image-info {\n    flex: 1;\n    margin-bottom: 0;\n  }\n\n  .image-title {\n    font-size: 0.9rem;\n    margin-bottom: 0.25rem;\n  }\n\n  .image-meta {\n    flex-direction: row;\n    gap: 0.5rem;\n    font-size: 0.75rem;\n  }\n\n  .viewer-controls {\n    flex-direction: row;\n    width: auto;\n    gap: 0.5rem;\n  }\n\n  .main-controls {\n    flex-direction: row;\n    margin-bottom: 0;\n    gap: 0.25rem;\n  }\n\n  .main-controls .btn {\n    min-height: 44px;\n    min-width: 44px;\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    max-width: 60px;\n  }\n\n  .close-button {\n    width: auto;\n    min-width: 80px;\n    margin-top: 0;\n    min-height: 44px;\n    padding: 0.5rem 1rem;\n    font-size: 0.85rem;\n  }\n\n  .zoom-level {\n    order: 0;\n    width: auto;\n    margin-bottom: 0;\n    margin-right: 0.5rem;\n    font-size: 0.8rem;\n    padding: 0.25rem 0.5rem;\n  }\n\n  .viewer-content {\n    height: calc(100vh - var(--header-height));\n  }\n\n  .main-image {\n    max-height: calc(100vh - var(--header-height) - 0.5rem);\n    max-width: calc(100vw - 0.5rem);\n  }\n}\n\n/* Additional mobile optimizations */\n@media (max-width: 768px) {\n  /* Prevent zoom on double-tap for better UX */\n  .image-viewer-overlay {\n    touch-action: manipulation;\n  }\n\n  /* Optimize scrolling behavior */\n  .viewer-content {\n    -webkit-overflow-scrolling: touch;\n    overscroll-behavior: contain;\n  }\n\n  /* Improve button accessibility */\n  .viewer-controls .btn {\n    /* Ensure buttons are easily tappable */\n    position: relative;\n    z-index: 1;\n  }\n\n  /* Prevent text selection on mobile */\n  .viewer-header,\n  .viewer-controls {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  /* Optimize image container for mobile */\n  .image-display {\n    /* Prevent any potential overflow issues */\n    position: relative;\n    overflow: hidden;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}