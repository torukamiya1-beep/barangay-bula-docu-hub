{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_3 = {\n  class: \"container-fluid p-4\"\n};\nconst _hoisted_4 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"col-12\"\n};\nconst _hoisted_6 = {\n  class: \"card shadow\"\n};\nconst _hoisted_7 = {\n  class: \"card-body\"\n};\nconst _hoisted_8 = {\n  class: \"row\"\n};\nconst _hoisted_9 = {\n  class: \"col-lg-4 mb-3\"\n};\nconst _hoisted_10 = {\n  class: \"border rounded p-3 h-100\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-center text-muted py-3\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = {\n  class: \"text-muted\"\n};\nconst _hoisted_14 = {\n  class: \"fw-bold\"\n};\nconst _hoisted_15 = {\n  class: \"text-info\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = {\n  key: 0,\n  class: \"text-center mt-2\"\n};\nconst _hoisted_18 = {\n  class: \"col-lg-4 mb-3\"\n};\nconst _hoisted_19 = {\n  class: \"border rounded p-3 h-100\"\n};\nconst _hoisted_20 = {\n  class: \"mb-2\"\n};\nconst _hoisted_21 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_22 = {\n  class: \"badge bg-warning\"\n};\nconst _hoisted_23 = {\n  class: \"progress mb-2\",\n  style: {\n    \"height\": \"4px\"\n  }\n};\nconst _hoisted_24 = {\n  class: \"mb-2\"\n};\nconst _hoisted_25 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_26 = {\n  class: \"badge bg-info\"\n};\nconst _hoisted_27 = {\n  class: \"progress mb-2\",\n  style: {\n    \"height\": \"4px\"\n  }\n};\nconst _hoisted_28 = {\n  class: \"mb-2\"\n};\nconst _hoisted_29 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_30 = {\n  class: \"badge bg-success\"\n};\nconst _hoisted_31 = {\n  class: \"progress mb-2\",\n  style: {\n    \"height\": \"4px\"\n  }\n};\nconst _hoisted_32 = {\n  class: \"text-center mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AdminHeader = _resolveComponent(\"AdminHeader\");\n  const _component_AdminSidebar = _resolveComponent(\"AdminSidebar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AdminHeader, {\n    userName: $data.adminData?.first_name || 'Admin',\n    showUserDropdown: $data.showUserDropdown,\n    sidebarCollapsed: $data.sidebarCollapsed,\n    activeMenu: $options.activeMenu,\n    onSidebarToggle: $options.handleSidebarToggle,\n    onUserDropdownToggle: $options.handleUserDropdownToggle,\n    onMenuAction: $options.handleMenuAction,\n    onLogout: $options.handleLogout\n  }, null, 8 /* PROPS */, [\"userName\", \"showUserDropdown\", \"sidebarCollapsed\", \"activeMenu\", \"onSidebarToggle\", \"onUserDropdownToggle\", \"onMenuAction\", \"onLogout\"]), _createCommentVNode(\" Mobile Overlay \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"mobile-overlay\", {\n      active: !$data.sidebarCollapsed && $data.isMobile\n    }]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeMobileSidebar && $options.closeMobileSidebar(...args))\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_AdminSidebar, {\n    collapsed: $data.sidebarCollapsed,\n    activeMenu: $options.activeMenu,\n    totalUsers: $data.stats.totalUsers,\n    pendingRequests: $data.stats.activeRequests,\n    totalReports: $data.stats.completedToday,\n    onMenuChange: $options.handleMenuChange,\n    onLogout: $options.handleLogout,\n    onToggleSidebar: $options.handleSidebarToggle\n  }, null, 8 /* PROPS */, [\"collapsed\", \"activeMenu\", \"totalUsers\", \"pendingRequests\", \"totalReports\", \"onMenuChange\", \"onLogout\", \"onToggleSidebar\"]), _createElementVNode(\"main\", {\n    class: _normalizeClass([\"main-content\", {\n      'sidebar-collapsed': $data.sidebarCollapsed\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" I comment these buttosn because I dont need it \"), _createCommentVNode(\" <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"d-flex justify-content-between align-items-center flex-wrap\\\">\\n\\n                <div class=\\\"d-flex gap-2\\\">\\n                  <button class=\\\"btn btn-outline-success btn-sm\\\" @click=\\\"refreshDashboard\\\" :disabled=\\\"loading\\\">\\n                    <i class=\\\"fas fa-sync-alt me-1\\\" :class=\\\"{ 'fa-spin': loading }\\\"></i>\\n                    Refresh\\n                  </button>\\n                  <div class=\\\"dropdown\\\">\\n                    <button class=\\\"btn btn-success btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\">\\n                      <i class=\\\"fas fa-plus me-1\\\"></i>\\n                      Quick Actions\\n                    </button>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                      <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateTo('/admin/users')\\\">\\n                        <i class=\\\"fas fa-user-plus me-2\\\"></i>Add User\\n                      </a></li>\\n                      <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateTo('/admin/requests')\\\">\\n                        <i class=\\\"fas fa-file-alt me-2\\\"></i>New Request\\n                      </a></li>\\n                      <li><hr class=\\\"dropdown-divider\\\"></li>\\n                      <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateTo('/admin/reports')\\\">\\n                        <i class=\\\"fas fa-chart-bar me-2\\\"></i>Generate Report\\n                      </a></li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div> \"), _createCommentVNode(\" I comment these because I dont need it \"), _createCommentVNode(\" Enhanced Request Management Dashboard Stats \"), _createCommentVNode(\" <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n              <div class=\\\"card border-left-primary shadow h-100 py-2 stat-card\\\" @click=\\\"navigateTo('/admin/requests')\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row no-gutters align-items-center\\\">\\n                    <div class=\\\"col mr-2\\\">\\n                      <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">\\n                        Total Requests\\n                      </div>\\n                      <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{ stats.totalRequests || 0 }}</div>\\n                      <div class=\\\"text-xs text-muted mt-1\\\">\\n                        <i class=\\\"fas fa-file-alt text-primary me-1\\\"></i>\\n                        All document requests\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-auto\\\">\\n                      <div class=\\\"icon-circle bg-primary\\\">\\n                        <i class=\\\"fas fa-file-alt text-white\\\"></i>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n     \\n            <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n              <div class=\\\"card border-left-warning shadow h-100 py-2 stat-card\\\" @click=\\\"filterRequestsByStatus('pending')\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row no-gutters align-items-center\\\">\\n                    <div class=\\\"col mr-2\\\">\\n                      <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">\\n                        Pending Requests\\n                      </div>\\n                      <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{ stats.pendingRequests || 0 }}</div>\\n                      <div class=\\\"text-xs text-muted mt-1\\\">\\n                        <i class=\\\"fas fa-clock text-warning me-1\\\"></i>\\n                        <span class=\\\"badge badge-danger ms-1\\\" v-if=\\\"stats.urgentRequests > 0\\\">{{ stats.urgentRequests }} urgent</span>\\n                        <span v-else>Awaiting review</span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-auto\\\">\\n                      <div class=\\\"icon-circle bg-warning\\\">\\n                        <i class=\\\"fas fa-clock text-white\\\"></i>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n              <div class=\\\"card border-left-info shadow h-100 py-2 stat-card\\\" @click=\\\"filterRequestsByStatus('processing')\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row no-gutters align-items-center\\\">\\n                    <div class=\\\"col mr-2\\\">\\n                      <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">\\n                        Processing\\n                      </div>\\n                      <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{ stats.processingRequests || 0 }}</div>\\n                      <div class=\\\"text-xs text-muted mt-1\\\">\\n                        <i class=\\\"fas fa-cog text-info me-1\\\"></i>\\n                        Currently being processed\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-auto\\\">\\n                      <div class=\\\"icon-circle bg-info\\\">\\n                        <i class=\\\"fas fa-cog text-white\\\"></i>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n              <div class=\\\"card border-left-success shadow h-100 py-2 stat-card\\\" @click=\\\"filterRequestsByDate('today')\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row no-gutters align-items-center\\\">\\n                    <div class=\\\"col mr-2\\\">\\n                      <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">\\n                        Completed Today\\n                      </div>\\n                      <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{ stats.todayRequests || 0 }}</div>\\n                      <div class=\\\"text-xs text-muted mt-1\\\">\\n                        <i class=\\\"fas fa-check-circle text-success me-1\\\"></i>\\n                        ₱{{ (stats.todayRevenue || 0).toLocaleString() }} revenue\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-auto\\\">\\n                      <div class=\\\"icon-circle bg-success\\\">\\n                        <i class=\\\"fas fa-check-circle text-white\\\"></i>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div> \"), _createCommentVNode(\" Request Management Quick Actions \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"card-header py-3 d-flex justify-content-between align-items-center\"\n  }, [_createElementVNode(\"h6\", {\n    class: \"m-0 font-weight-bold text-primary\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-tasks me-2\"\n  }), _createTextVNode(\" Request Management Center \")]), _createCommentVNode(\" I comment these buttosn because I dont need it \"), _createCommentVNode(\" <div class=\\\"d-flex gap-2\\\">\\n                    <button class=\\\"btn btn-outline-primary btn-sm\\\" @click=\\\"refreshDashboard\\\" :disabled=\\\"loading\\\">\\n                      <i class=\\\"fas fa-sync-alt me-1\\\" :class=\\\"{ 'fa-spin': loading }\\\"></i>\\n                      Refresh\\n                    </button>\\n                    <div class=\\\"dropdown\\\">\\n                      <button class=\\\"btn btn-primary btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\">\\n                        <i class=\\\"fas fa-bolt me-1\\\"></i>\\n                        Quick Actions\\n                      </button>\\n                      <ul class=\\\"dropdown-menu\\\">\\n                        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateToRequests('pending')\\\">\\n                          <i class=\\\"fas fa-clock me-2 text-warning\\\"></i>Review Pending Requests\\n                        </a></li>\\n                        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateToRequests('urgent')\\\">\\n                          <i class=\\\"fas fa-exclamation-triangle me-2 text-danger\\\"></i>Handle Urgent Requests\\n                        </a></li>\\n                        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateToRequests('processing')\\\">\\n                          <i class=\\\"fas fa-cog me-2 text-info\\\"></i>Monitor Processing\\n                        </a></li>\\n                        <li><hr class=\\\"dropdown-divider\\\"></li>\\n                        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" @click=\\\"navigateTo('/admin/reports')\\\">\\n                          <i class=\\\"fas fa-chart-bar me-2 text-success\\\"></i>Generate Reports\\n                        </a></li>\\n                      </ul>\\n                    </div>\\n                  </div> \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" i comment the priority request for now \"), _createCommentVNode(\" Priority Requests \"), _createCommentVNode(\" <div class=\\\"col-lg-4 mb-3\\\">\\n                      <div class=\\\"border rounded p-3 h-100\\\">\\n                        <h6 class=\\\"text-danger mb-3\\\">\\n                          <i class=\\\"fas fa-exclamation-triangle me-2\\\"></i>\\n                          Priority Requests\\n                        </h6>\\n                        <div v-if=\\\"priorityRequests.length === 0\\\" class=\\\"text-center text-muted py-3\\\">\\n                          <i class=\\\"fas fa-check-circle fa-2x mb-2 text-success\\\"></i>\\n                          <p class=\\\"mb-0\\\">No urgent requests</p>\\n                        </div>\\n                        <div v-else>\\n                          <div v-for=\\\"request in priorityRequests.slice(0, 3)\\\" :key=\\\"request.id\\\"\\n                               class=\\\"d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded\\\">\\n                            <div>\\n                              <small class=\\\"text-muted\\\">{{ request.request_number }}</small>\\n                              <div class=\\\"fw-bold\\\">{{ request.document_type }}</div>\\n                              <small class=\\\"text-danger\\\">{{ request.priority }} Priority</small>\\n                            </div>\\n                            <button class=\\\"btn btn-sm btn-outline-primary\\\" @click=\\\"viewRequestDetails(request.id)\\\">\\n                              <i class=\\\"fas fa-eye\\\"></i>\\n                            </button>\\n                          </div>\\n                          <div v-if=\\\"priorityRequests.length > 3\\\" class=\\\"text-center mt-2\\\">\\n                            <button class=\\\"btn btn-sm btn-outline-danger\\\" @click=\\\"navigateToRequests('urgent')\\\">\\n                              View {{ priorityRequests.length - 3 }} more urgent\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div> \"), _createCommentVNode(\" Recent Submissions \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[5] || (_cache[5] = _createElementVNode(\"h6\", {\n    class: \"text-info mb-3\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clock me-2\"\n  }), _createTextVNode(\" Recent Submissions \")], -1 /* HOISTED */)), $data.recentRequests.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n    class: \"fas fa-inbox fa-2x mb-2 text-gray-300\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"mb-0\"\n  }, \"No recent submissions\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recentRequests.slice(0, 3), request => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: request.id,\n      class: \"d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded\"\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"small\", _hoisted_13, _toDisplayString($options.formatTimeAgo(request.requested_at)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(request.document_type), 1 /* TEXT */), _createElementVNode(\"small\", _hoisted_15, _toDisplayString(request.client_name), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-outline-primary\",\n      onClick: $event => $options.viewRequestDetails(request.id)\n    }, [...(_cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"fas fa-eye\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_16)]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.recentRequests.length > 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-outline-info\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.navigateToRequests('recent'))\n  }, \" View \" + _toDisplayString($data.recentRequests.length - 3) + \" more recent \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]))])]), _createCommentVNode(\" Processing Overview \"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[10] || (_cache[10] = _createElementVNode(\"h6\", {\n    class: \"text-success mb-3\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-cogs me-2\"\n  }), _createTextVNode(\" Processing Overview \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    class: \"small\"\n  }, \"Pending Review\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_22, _toDisplayString($data.stats.pendingRequests || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", {\n    class: \"progress-bar bg-warning\",\n    style: _normalizeStyle({\n      width: $options.getProgressPercentage('pending') + '%'\n    })\n  }, null, 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n    class: \"small\"\n  }, \"Processing\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_26, _toDisplayString($data.stats.processingRequests || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", {\n    class: \"progress-bar bg-info\",\n    style: _normalizeStyle({\n      width: $options.getProgressPercentage('processing') + '%'\n    })\n  }, null, 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n    class: \"small\"\n  }, \"Completed\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_30, _toDisplayString($data.stats.completedRequests || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", {\n    class: \"progress-bar bg-success\",\n    style: _normalizeStyle({\n      width: $options.getProgressPercentage('completed') + '%'\n    })\n  }, null, 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-success\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.navigateTo('/admin/requests'))\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    class: \"fas fa-list me-1\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" View All Requests \")]))])])])])])])])])])], 2 /* CLASS */)])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_AdminHeader","userName","$data","adminData","first_name","showUserDropdown","sidebarCollapsed","activeMenu","$options","onSidebarToggle","handleSidebarToggle","onUserDropdownToggle","handleUserDropdownToggle","onMenuAction","handleMenuAction","onLogout","handleLogout","_createCommentVNode","_createElementVNode","_normalizeClass","active","isMobile","onClick","_cache","args","closeMobileSidebar","_hoisted_2","_component_AdminSidebar","collapsed","totalUsers","stats","pendingRequests","activeRequests","totalReports","completedToday","onMenuChange","handleMenuChange","onToggleSidebar","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","recentRequests","length","_hoisted_11","_hoisted_12","_Fragment","_renderList","slice","request","key","id","_hoisted_13","_toDisplayString","formatTimeAgo","requested_at","_hoisted_14","document_type","_hoisted_15","client_name","$event","viewRequestDetails","_hoisted_17","navigateToRequests","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_normalizeStyle","width","getProgressPercentage","_hoisted_24","_hoisted_25","_hoisted_26","processingRequests","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","completedRequests","_hoisted_31","_hoisted_32","navigateTo"],"sources":["D:\\brgy_docu_hub\\BOSFDR\\src\\components\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-dashboard\">\n    <AdminHeader\n      :userName=\"adminData?.first_name || 'Admin'\"\n      :showUserDropdown=\"showUserDropdown\"\n      :sidebarCollapsed=\"sidebarCollapsed\"\n      :activeMenu=\"activeMenu\"\n      @sidebar-toggle=\"handleSidebarToggle\"\n      @user-dropdown-toggle=\"handleUserDropdownToggle\"\n      @menu-action=\"handleMenuAction\"\n      @logout=\"handleLogout\"\n    />\n\n    <!-- Mobile Overlay -->\n    <div\n      class=\"mobile-overlay\"\n      :class=\"{ active: !sidebarCollapsed && isMobile }\"\n      @click=\"closeMobileSidebar\"\n    ></div>\n\n    <div class=\"dashboard-container\">\n      <AdminSidebar\n        :collapsed=\"sidebarCollapsed\"\n        :activeMenu=\"activeMenu\"\n        :totalUsers=\"stats.totalUsers\"\n        :pendingRequests=\"stats.activeRequests\"\n        :totalReports=\"stats.completedToday\"\n        @menu-change=\"handleMenuChange\"\n        @logout=\"handleLogout\"\n        @toggle-sidebar=\"handleSidebarToggle\"\n      />\n      <main class=\"main-content\" :class=\"{ 'sidebar-collapsed': sidebarCollapsed }\">\n        <div class=\"container-fluid p-4\">\n\n          <!-- I comment these buttosn because I dont need it -->\n          <!-- <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n\n                <div class=\"d-flex gap-2\">\n                  <button class=\"btn btn-outline-success btn-sm\" @click=\"refreshDashboard\" :disabled=\"loading\">\n                    <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                    Refresh\n                  </button>\n                  <div class=\"dropdown\">\n                    <button class=\"btn btn-success btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n                      <i class=\"fas fa-plus me-1\"></i>\n                      Quick Actions\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                      <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateTo('/admin/users')\">\n                        <i class=\"fas fa-user-plus me-2\"></i>Add User\n                      </a></li>\n                      <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateTo('/admin/requests')\">\n                        <i class=\"fas fa-file-alt me-2\"></i>New Request\n                      </a></li>\n                      <li><hr class=\"dropdown-divider\"></li>\n                      <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateTo('/admin/reports')\">\n                        <i class=\"fas fa-chart-bar me-2\"></i>Generate Report\n                      </a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> -->\n\n          <!-- I comment these because I dont need it -->\n          <!-- Enhanced Request Management Dashboard Stats -->\n          <!-- <div class=\"row mb-4\">\n            <div class=\"col-xl-3 col-md-6 mb-4\">\n              <div class=\"card border-left-primary shadow h-100 py-2 stat-card\" @click=\"navigateTo('/admin/requests')\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-2\">\n                      <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                        Total Requests\n                      </div>\n                      <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{ stats.totalRequests || 0 }}</div>\n                      <div class=\"text-xs text-muted mt-1\">\n                        <i class=\"fas fa-file-alt text-primary me-1\"></i>\n                        All document requests\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <div class=\"icon-circle bg-primary\">\n                        <i class=\"fas fa-file-alt text-white\"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n     \n            <div class=\"col-xl-3 col-md-6 mb-4\">\n              <div class=\"card border-left-warning shadow h-100 py-2 stat-card\" @click=\"filterRequestsByStatus('pending')\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-2\">\n                      <div class=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                        Pending Requests\n                      </div>\n                      <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{ stats.pendingRequests || 0 }}</div>\n                      <div class=\"text-xs text-muted mt-1\">\n                        <i class=\"fas fa-clock text-warning me-1\"></i>\n                        <span class=\"badge badge-danger ms-1\" v-if=\"stats.urgentRequests > 0\">{{ stats.urgentRequests }} urgent</span>\n                        <span v-else>Awaiting review</span>\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <div class=\"icon-circle bg-warning\">\n                        <i class=\"fas fa-clock text-white\"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-xl-3 col-md-6 mb-4\">\n              <div class=\"card border-left-info shadow h-100 py-2 stat-card\" @click=\"filterRequestsByStatus('processing')\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-2\">\n                      <div class=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                        Processing\n                      </div>\n                      <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{ stats.processingRequests || 0 }}</div>\n                      <div class=\"text-xs text-muted mt-1\">\n                        <i class=\"fas fa-cog text-info me-1\"></i>\n                        Currently being processed\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <div class=\"icon-circle bg-info\">\n                        <i class=\"fas fa-cog text-white\"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-xl-3 col-md-6 mb-4\">\n              <div class=\"card border-left-success shadow h-100 py-2 stat-card\" @click=\"filterRequestsByDate('today')\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-2\">\n                      <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                        Completed Today\n                      </div>\n                      <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{ stats.todayRequests || 0 }}</div>\n                      <div class=\"text-xs text-muted mt-1\">\n                        <i class=\"fas fa-check-circle text-success me-1\"></i>\n                        ₱{{ (stats.todayRevenue || 0).toLocaleString() }} revenue\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <div class=\"icon-circle bg-success\">\n                        <i class=\"fas fa-check-circle text-white\"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> -->\n\n          <!-- Request Management Quick Actions -->\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"card shadow\">\n                <div class=\"card-header py-3 d-flex justify-content-between align-items-center\">\n                  <h6 class=\"m-0 font-weight-bold text-primary\">\n                    <i class=\"fas fa-tasks me-2\"></i>\n                    Request Management Center\n                  </h6>\n\n              <!-- I comment these buttosn because I dont need it -->\n                  <!-- <div class=\"d-flex gap-2\">\n                    <button class=\"btn btn-outline-primary btn-sm\" @click=\"refreshDashboard\" :disabled=\"loading\">\n                      <i class=\"fas fa-sync-alt me-1\" :class=\"{ 'fa-spin': loading }\"></i>\n                      Refresh\n                    </button>\n                    <div class=\"dropdown\">\n                      <button class=\"btn btn-primary btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n                        <i class=\"fas fa-bolt me-1\"></i>\n                        Quick Actions\n                      </button>\n                      <ul class=\"dropdown-menu\">\n                        <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateToRequests('pending')\">\n                          <i class=\"fas fa-clock me-2 text-warning\"></i>Review Pending Requests\n                        </a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateToRequests('urgent')\">\n                          <i class=\"fas fa-exclamation-triangle me-2 text-danger\"></i>Handle Urgent Requests\n                        </a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateToRequests('processing')\">\n                          <i class=\"fas fa-cog me-2 text-info\"></i>Monitor Processing\n                        </a></li>\n                        <li><hr class=\"dropdown-divider\"></li>\n                        <li><a class=\"dropdown-item\" href=\"#\" @click=\"navigateTo('/admin/reports')\">\n                          <i class=\"fas fa-chart-bar me-2 text-success\"></i>Generate Reports\n                        </a></li>\n                      </ul>\n                    </div>\n                  </div> -->\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <!-- i comment the priority request for now -->\n                    <!-- Priority Requests -->\n                    <!-- <div class=\"col-lg-4 mb-3\">\n                      <div class=\"border rounded p-3 h-100\">\n                        <h6 class=\"text-danger mb-3\">\n                          <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                          Priority Requests\n                        </h6>\n                        <div v-if=\"priorityRequests.length === 0\" class=\"text-center text-muted py-3\">\n                          <i class=\"fas fa-check-circle fa-2x mb-2 text-success\"></i>\n                          <p class=\"mb-0\">No urgent requests</p>\n                        </div>\n                        <div v-else>\n                          <div v-for=\"request in priorityRequests.slice(0, 3)\" :key=\"request.id\"\n                               class=\"d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded\">\n                            <div>\n                              <small class=\"text-muted\">{{ request.request_number }}</small>\n                              <div class=\"fw-bold\">{{ request.document_type }}</div>\n                              <small class=\"text-danger\">{{ request.priority }} Priority</small>\n                            </div>\n                            <button class=\"btn btn-sm btn-outline-primary\" @click=\"viewRequestDetails(request.id)\">\n                              <i class=\"fas fa-eye\"></i>\n                            </button>\n                          </div>\n                          <div v-if=\"priorityRequests.length > 3\" class=\"text-center mt-2\">\n                            <button class=\"btn btn-sm btn-outline-danger\" @click=\"navigateToRequests('urgent')\">\n                              View {{ priorityRequests.length - 3 }} more urgent\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div> -->\n\n                    <!-- Recent Submissions -->\n                    <div class=\"col-lg-4 mb-3\">\n                      <div class=\"border rounded p-3 h-100\">\n                        <h6 class=\"text-info mb-3\">\n                          <i class=\"fas fa-clock me-2\"></i>\n                          Recent Submissions\n                        </h6>\n                        <div v-if=\"recentRequests.length === 0\" class=\"text-center text-muted py-3\">\n                          <i class=\"fas fa-inbox fa-2x mb-2 text-gray-300\"></i>\n                          <p class=\"mb-0\">No recent submissions</p>\n                        </div>\n                        <div v-else>\n                          <div v-for=\"request in recentRequests.slice(0, 3)\" :key=\"request.id\"\n                               class=\"d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded\">\n                            <div>\n                              <small class=\"text-muted\">{{ formatTimeAgo(request.requested_at) }}</small>\n                              <div class=\"fw-bold\">{{ request.document_type }}</div>\n                              <small class=\"text-info\">{{ request.client_name }}</small>\n                            </div>\n                            <button class=\"btn btn-sm btn-outline-primary\" @click=\"viewRequestDetails(request.id)\">\n                              <i class=\"fas fa-eye\"></i>\n                            </button>\n                          </div>\n                          <div v-if=\"recentRequests.length > 3\" class=\"text-center mt-2\">\n                            <button class=\"btn btn-sm btn-outline-info\" @click=\"navigateToRequests('recent')\">\n                              View {{ recentRequests.length - 3 }} more recent\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Processing Overview -->\n                    <div class=\"col-lg-4 mb-3\">\n                      <div class=\"border rounded p-3 h-100\">\n                        <h6 class=\"text-success mb-3\">\n                          <i class=\"fas fa-cogs me-2\"></i>\n                          Processing Overview\n                        </h6>\n                        <div class=\"mb-2\">\n                          <div class=\"d-flex justify-content-between\">\n                            <span class=\"small\">Pending Review</span>\n                            <span class=\"badge bg-warning\">{{ stats.pendingRequests || 0 }}</span>\n                          </div>\n                          <div class=\"progress mb-2\" style=\"height: 4px;\">\n                            <div class=\"progress-bar bg-warning\" :style=\"{ width: getProgressPercentage('pending') + '%' }\"></div>\n                          </div>\n                        </div>\n                        <div class=\"mb-2\">\n                          <div class=\"d-flex justify-content-between\">\n                            <span class=\"small\">Processing</span>\n                            <span class=\"badge bg-info\">{{ stats.processingRequests || 0 }}</span>\n                          </div>\n                          <div class=\"progress mb-2\" style=\"height: 4px;\">\n                            <div class=\"progress-bar bg-info\" :style=\"{ width: getProgressPercentage('processing') + '%' }\"></div>\n                          </div>\n                        </div>\n                        <div class=\"mb-2\">\n                          <div class=\"d-flex justify-content-between\">\n                            <span class=\"small\">Completed</span>\n                            <span class=\"badge bg-success\">{{ stats.completedRequests || 0 }}</span>\n                          </div>\n                          <div class=\"progress mb-2\" style=\"height: 4px;\">\n                            <div class=\"progress-bar bg-success\" :style=\"{ width: getProgressPercentage('completed') + '%' }\"></div>\n                          </div>\n                        </div>\n                        <div class=\"text-center mt-3\">\n                          <button class=\"btn btn-sm btn-success\" @click=\"navigateTo('/admin/requests')\">\n                            <i class=\"fas fa-list me-1\"></i>\n                            View All Requests\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport unifiedAuthService from '@/services/unifiedAuthService';\nimport adminDocumentService from '@/services/adminDocumentService';\nimport notificationService from '@/services/notificationService';\nimport AdminHeader from './AdminHeader.vue';\nimport AdminSidebar from './AdminSidebar.vue';\n\nexport default {\n  name: 'AdminDashboard',\n  components: {\n    AdminHeader,\n    AdminSidebar\n  },\n  data() {\n    return {\n      loading: true,\n      // UI State\n      sidebarCollapsed: false,\n      showUserDropdown: false,\n      isMobile: false,\n      adminData: null,\n      // Dashboard Data\n      stats: {\n        totalRequests: 0,\n        pendingRequests: 0,\n        approvedRequests: 0,\n        completedRequests: 0,\n        processingRequests: 0,\n        urgentRequests: 0,\n        totalRevenue: 0,\n        todayRequests: 0,\n        todayRevenue: 0,\n        totalUsers: 0,\n        activeRequests: 0,\n        completedToday: 0,\n        pendingApproval: 0\n      },\n      recentActivity: [],\n      priorityRequests: [],\n      recentRequests: [],\n      errorMessage: ''\n    };\n  },\n\n  async mounted() {\n    // Check authentication\n    if (!unifiedAuthService.isLoggedIn() || unifiedAuthService.getUserType() !== 'admin') {\n      this.$router.push('/login');\n      return;\n    }\n\n    // Initialize UI state\n    this.initializeUI();\n\n    // Load dashboard data\n    await this.loadDashboardData();\n\n    // Initialize real-time features\n    this.initializeRealTimeFeatures();\n  },\n\n  beforeUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n\n    // Clean up real-time features\n    this.cleanupRealTimeFeatures();\n  },\n\n  computed: {\n    activeMenu() {\n      const path = this.$route.path;\n      if (path.includes('/admin/users')) return 'users';\n      if (path.includes('/admin/requests')) return 'requests';\n      if (path.includes('/admin/reports')) return 'reports';\n      if (path.includes('/admin/settings')) return 'settings';\n      if (path.includes('/admin/activity-logs')) return 'activity';\n      if (path.includes('/admin/profile')) return 'profile';\n      return 'dashboard';\n    }\n  },\n\n  methods: {\n    // Initialize UI state\n    initializeUI() {\n      this.isMobile = window.innerWidth <= 768;\n\n      // Load saved sidebar state (only on desktop)\n      if (!this.isMobile) {\n        const saved = localStorage.getItem('adminSidebarCollapsed');\n        this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n      } else {\n        this.sidebarCollapsed = true; // Always collapsed on mobile\n      }\n\n      // Setup resize listener\n      this.handleResize = () => {\n        const wasMobile = this.isMobile;\n        this.isMobile = window.innerWidth <= 768;\n\n        if (this.isMobile && !wasMobile) {\n          this.sidebarCollapsed = true; // Collapse when switching to mobile\n        } else if (!this.isMobile && wasMobile) {\n          // Restore saved state when switching to desktop\n          const saved = localStorage.getItem('adminSidebarCollapsed');\n          this.sidebarCollapsed = saved ? JSON.parse(saved) : false;\n        }\n      };\n      window.addEventListener('resize', this.handleResize);\n    },\n\n    // Sidebar toggle\n    handleSidebarToggle() {\n      this.sidebarCollapsed = !this.sidebarCollapsed;\n      localStorage.setItem('adminSidebarCollapsed', JSON.stringify(this.sidebarCollapsed));\n    },\n\n    // Menu navigation\n    handleMenuChange(menu) {\n      const routes = {\n        'dashboard': '/admin/dashboard',\n        'users': '/admin/users',\n        'requests': '/admin/requests',\n        'reports': '/admin/reports',\n        'settings': '/admin/settings',\n        'activity': '/admin/activity-logs',\n        'profile': '/admin/profile'\n      };\n\n      // Close sidebar on mobile after navigation\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n\n      if (routes[menu]) {\n        this.$router.push(routes[menu]);\n      }\n    },\n\n    // User dropdown toggle\n    handleUserDropdownToggle() {\n      this.showUserDropdown = !this.showUserDropdown;\n    },\n\n    // Menu actions\n    handleMenuAction(action) {\n      if (action === 'profile') {\n        this.$router.push('/admin/profile');\n      } else if (action === 'settings') {\n        this.$router.push('/admin/settings');\n      }\n      this.showUserDropdown = false;\n    },\n\n    // Close mobile sidebar\n    closeMobileSidebar() {\n      if (this.isMobile) {\n        this.sidebarCollapsed = true;\n      }\n    },\n\n    // Logout\n    handleLogout() {\n      unifiedAuthService.logout();\n      this.$router.push('/login');\n    },\n\n    // Load dashboard data\n    async loadDashboardData() {\n      this.loading = true;\n\n      try {\n        // Load admin profile\n        await this.loadAdminProfile();\n\n        // Load dashboard statistics\n        await this.loadDashboardStats();\n\n        // Load recent activity\n        await this.loadRecentActivity();\n\n      } catch (error) {\n        console.error('Failed to load dashboard data:', error);\n        const errorData = unifiedAuthService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load dashboard data';\n\n        // If unauthorized, redirect to login\n        if (errorData.status === 401) {\n          unifiedAuthService.logout();\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // Load admin profile\n    async loadAdminProfile() {\n      try {\n        const currentUser = unifiedAuthService.getCurrentUser();\n        if (currentUser && currentUser.profile) {\n          this.adminData = currentUser.profile;\n        } else {\n          // Fallback to basic user data\n          this.adminData = {\n            first_name: currentUser?.username || 'Admin',\n            role: currentUser?.role || 'admin'\n          };\n        }\n      } catch (error) {\n        console.error('Failed to load admin profile:', error);\n        const currentUser = unifiedAuthService.getCurrentUser();\n        this.adminData = {\n          first_name: currentUser?.username || 'Admin',\n          role: currentUser?.role || 'admin'\n        };\n      }\n    },\n\n\n\n    // Load dashboard statistics\n    async loadDashboardStats() {\n      try {\n        const response = await adminDocumentService.getDashboardStats();\n        if (response.success) {\n          // Update stats with enhanced request management data\n          this.stats = {\n            totalRequests: response.data.totalRequests || 0,\n            pendingRequests: response.data.pendingRequests || 0,\n            approvedRequests: response.data.approvedRequests || 0,\n            completedRequests: response.data.completedRequests || 0,\n            processingRequests: response.data.processingRequests || 0,\n            urgentRequests: response.data.urgentRequests || 0,\n            totalRevenue: response.data.totalRevenue || 0,\n            todayRequests: response.data.todayRequests || 0,\n            todayRevenue: response.data.todayRevenue || 0,\n            // Keep legacy fields for backward compatibility\n            totalUsers: response.data.totalUsers || 0,\n            activeRequests: response.data.pendingRequests || 0,\n            completedToday: response.data.todayRequests || 0,\n            pendingApproval: response.data.pendingRequests || 0\n          };\n        }\n\n        // Load priority and recent requests\n        await this.loadPriorityRequests();\n        await this.loadRecentRequests();\n      } catch (error) {\n        console.error('Failed to load dashboard stats:', error);\n        const errorData = adminDocumentService.parseError(error);\n        this.errorMessage = errorData.message || 'Failed to load dashboard statistics';\n      }\n    },\n\n    // Load priority requests\n    async loadPriorityRequests() {\n      try {\n        const response = await adminDocumentService.getAllRequests({\n          priority: 'high',\n          limit: 5,\n          status: 'pending'\n        });\n        if (response.success) {\n          this.priorityRequests = response.data.requests || [];\n        }\n      } catch (error) {\n        console.error('Failed to load priority requests:', error);\n        this.priorityRequests = [];\n      }\n    },\n\n    // Load recent requests\n    async loadRecentRequests() {\n      try {\n        const response = await adminDocumentService.getAllRequests({\n          limit: 5,\n          sort: 'requested_at',\n          order: 'desc'\n        });\n        if (response.success) {\n          this.recentRequests = response.data.requests || [];\n        }\n      } catch (error) {\n        console.error('Failed to load recent requests:', error);\n        this.recentRequests = [];\n      }\n    },\n\n    // Load recent activity\n    async loadRecentActivity() {\n      try {\n        const response = await adminDocumentService.getRecentActivity(10);\n        if (response.success) {\n          this.recentActivity = response.data || [];\n        }\n      } catch (error) {\n        console.error('Failed to load recent activity:', error);\n        const errorData = adminDocumentService.parseError(error);\n        console.error('Recent activity error details:', errorData);\n        this.recentActivity = [];\n      }\n    },\n\n    // Navigate to specific route\n    navigateTo(route) {\n      try {\n        console.log('Navigating to:', route);\n        this.$router.push(route);\n      } catch (error) {\n        console.error('Navigation error:', error);\n        this.errorMessage = 'Navigation failed. Please try again.';\n      }\n    },\n\n    // Format date for display\n    formatDate(dateString) {\n      if (!dateString) return '';\n\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n\n      if (diffInMinutes < 1) {\n        return 'Just now';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;\n      } else if (diffInMinutes < 1440) {\n        const hours = Math.floor(diffInMinutes / 60);\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n      } else {\n        const days = Math.floor(diffInMinutes / 1440);\n        return `${days} day${days > 1 ? 's' : ''} ago`;\n      }\n    },\n\n    // Format time for display\n    formatTime(dateString) {\n      if (!dateString) return '';\n\n      const date = new Date(dateString);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    },\n\n    // Refresh dashboard data\n    async refreshDashboard() {\n      await this.loadDashboardData();\n    },\n\n    // Export activity logs\n    exportActivity() {\n      // Implement export functionality\n      console.log('Exporting activity logs...');\n      // This would typically generate and download a CSV/Excel file\n    },\n\n    // Get activity icon based on type\n    getActivityIcon(type) {\n      const icons = {\n        'user_registration': 'fas fa-user-plus',\n        'document_request': 'fas fa-file-alt',\n        'document_approved': 'fas fa-check-circle',\n        'document_rejected': 'fas fa-times-circle',\n        'system_update': 'fas fa-cog',\n        'login': 'fas fa-sign-in-alt',\n        'logout': 'fas fa-sign-out-alt',\n        'default': 'fas fa-info-circle'\n      };\n      return icons[type] || icons.default;\n    },\n\n    // Get activity icon circle class based on type\n    getActivityIconClass(type) {\n      const classes = {\n        'user_registration': 'bg-success',\n        'document_request': 'bg-primary',\n        'document_approved': 'bg-success',\n        'document_rejected': 'bg-danger',\n        'system_update': 'bg-warning',\n        'login': 'bg-info',\n        'logout': 'bg-secondary',\n        'default': 'bg-primary'\n      };\n      return classes[type] || classes.default;\n    },\n\n    // Get activity badge class based on status\n    getActivityBadgeClass(status) {\n      const classes = {\n        'completed': 'badge-success',\n        'pending': 'badge-warning',\n        'failed': 'badge-danger',\n        'in_progress': 'badge-info',\n        'default': 'badge-secondary'\n      };\n      return classes[status?.toLowerCase()] || classes.default;\n    },\n\n    // Enhanced Request Management Methods\n\n    // Format time ago for display\n    formatTimeAgo(dateString) {\n      if (!dateString) return '';\n\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n\n      if (diffInMinutes < 1) {\n        return 'Just now';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes}m ago`;\n      } else if (diffInMinutes < 1440) {\n        const hours = Math.floor(diffInMinutes / 60);\n        return `${hours}h ago`;\n      } else {\n        const days = Math.floor(diffInMinutes / 1440);\n        return `${days}d ago`;\n      }\n    },\n\n    // Filter requests by status and navigate\n    filterRequestsByStatus(status) {\n      this.$router.push({\n        path: '/admin/requests',\n        query: { status: status }\n      });\n    },\n\n    // Filter requests by date and navigate\n    filterRequestsByDate(period) {\n      const query = {};\n      const today = new Date();\n\n      if (period === 'today') {\n        query.date_from = today.toISOString().split('T')[0];\n        query.date_to = today.toISOString().split('T')[0];\n      }\n\n      this.$router.push({\n        path: '/admin/requests',\n        query: query\n      });\n    },\n\n    // Navigate to requests with specific filters\n    navigateToRequests(filter) {\n      const query = {};\n\n      switch (filter) {\n        case 'pending':\n          query.status = 'pending';\n          break;\n        case 'urgent':\n          query.priority = 'high';\n          query.status = 'pending';\n          break;\n        case 'processing':\n          query.status = 'processing';\n          break;\n        case 'recent':\n          query.sort = 'requested_at';\n          query.order = 'desc';\n          break;\n      }\n\n      this.$router.push({\n        path: '/admin/requests',\n        query: query\n      });\n    },\n\n    // View request details\n    viewRequestDetails(requestId) {\n      this.$router.push({\n        path: '/admin/requests',\n        query: { view: requestId }\n      });\n    },\n\n    // Get progress percentage for processing overview\n    getProgressPercentage(type) {\n      const total = this.stats.totalRequests || 1; // Avoid division by zero\n\n      switch (type) {\n        case 'pending':\n          return Math.round((this.stats.pendingRequests / total) * 100);\n        case 'processing':\n          return Math.round((this.stats.processingRequests / total) * 100);\n        case 'completed':\n          return Math.round((this.stats.completedRequests / total) * 100);\n        default:\n          return 0;\n      }\n    },\n\n    // Format currency for display\n    formatCurrency(amount) {\n      if (!amount) return '0.00';\n      return parseFloat(amount).toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n    },\n\n    // Real-time features\n    async initializeRealTimeFeatures() {\n      console.log('Initializing real-time features for AdminDashboard');\n\n      try {\n        // Initialize notification service\n        await notificationService.init('admin');\n\n        // Listen for dashboard-relevant notifications\n        notificationService.on('notification', this.handleRealTimeNotification);\n        notificationService.on('new_request', this.handleNewRequest);\n        notificationService.on('request_status_changed', this.handleStatusChange);\n        notificationService.on('dashboard_update', this.handleDashboardUpdate);\n      } catch (error) {\n        console.error('Failed to initialize real-time features:', error);\n      }\n    },\n\n    cleanupRealTimeFeatures() {\n      console.log('Cleaning up real-time features for AdminDashboard');\n\n      // Remove notification listeners\n      notificationService.off('notification', this.handleRealTimeNotification);\n      notificationService.off('new_request', this.handleNewRequest);\n      notificationService.off('request_status_changed', this.handleStatusChange);\n      notificationService.off('dashboard_update', this.handleDashboardUpdate);\n\n      // Cleanup (simplified)\n      notificationService.cleanup();\n    },\n\n    handleRealTimeNotification(notification) {\n      console.log('Dashboard received real-time notification:', notification);\n\n      // Handle different notification types\n      switch (notification.type) {\n        case 'new_request':\n          this.handleNewRequest(notification.data);\n          break;\n        case 'request_status_changed':\n          this.handleStatusChange(notification.data);\n          break;\n        case 'dashboard_update':\n          this.handleDashboardUpdate(notification.data);\n          break;\n        default:\n          console.log('Unhandled notification type:', notification.type);\n      }\n    },\n\n    handleNewRequest(data) {\n      console.log('New request received on dashboard:', data);\n\n      // Update statistics\n      this.stats.totalRequests++;\n      this.stats.pendingRequests++;\n      this.stats.todayRequests++;\n\n      // Refresh dashboard data to get accurate counts\n      this.loadDashboardStats();\n      this.loadRecentActivity();\n      this.loadRecentRequests();\n    },\n\n    handleStatusChange(data) {\n      console.log('Request status changed on dashboard:', data);\n\n      // Refresh dashboard statistics and recent activity\n      this.loadDashboardStats();\n      this.loadRecentActivity();\n      this.loadPriorityRequests();\n      this.loadRecentRequests();\n    },\n\n    handleDashboardUpdate(data) {\n      console.log('Dashboard update received:', data);\n\n      // Refresh all dashboard data\n      this.loadDashboardData();\n    }\n\n  },\n\n  // Auto-refresh dashboard data every 5 minutes\n  created() {\n    this.refreshInterval = setInterval(() => {\n      this.loadDashboardStats();\n      this.loadRecentActivity();\n      this.loadPriorityRequests();\n      this.loadRecentRequests();\n    }, 5 * 60 * 1000); // 5 minutes\n  }\n};\n</script>\n\n<style scoped>\n@import './css/adminDashboard.css';\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAmBrBA,KAAK,EAAC;AAAqB;;EAYvBA,KAAK,EAAC;AAAqB;;EAyIzBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAa;;EAoCjBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EAmCTA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAA0B;;;EAKKA,KAAK,EAAC;;;;;;EAQjCA,KAAK,EAAC;AAAY;;EACpBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAW;;;;EAMUA,KAAK,EAAC;;;EAU7CA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAA0B;;EAK9BA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAgC;;EAEnCA,KAAK,EAAC;AAAkB;;EAE3BA,KAAK,EAAC,eAAe;EAACC,KAAoB,EAApB;IAAA;EAAA;;;EAIxBD,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAgC;;EAEnCA,KAAK,EAAC;AAAe;;EAExBA,KAAK,EAAC,eAAe;EAACC,KAAoB,EAApB;IAAA;EAAA;;;EAIxBD,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAgC;;EAEnCA,KAAK,EAAC;AAAkB;;EAE3BA,KAAK,EAAC,eAAe;EAACC,KAAoB,EAApB;IAAA;EAAA;;;EAIxBD,KAAK,EAAC;AAAkB;;;;uBAnTnDE,mBAAA,CAoUM,OApUNC,UAoUM,GAnUJC,YAAA,CASEC,sBAAA;IARCC,QAAQ,EAAEC,KAAA,CAAAC,SAAS,EAAEC,UAAU;IAC/BC,gBAAgB,EAAEH,KAAA,CAAAG,gBAAgB;IAClCC,gBAAgB,EAAEJ,KAAA,CAAAI,gBAAgB;IAClCC,UAAU,EAAEC,QAAA,CAAAD,UAAU;IACtBE,eAAc,EAAED,QAAA,CAAAE,mBAAmB;IACnCC,oBAAoB,EAAEH,QAAA,CAAAI,wBAAwB;IAC9CC,YAAW,EAAEL,QAAA,CAAAM,gBAAgB;IAC7BC,QAAM,EAAEP,QAAA,CAAAQ;sKAGXC,mBAAA,oBAAuB,EACvBC,mBAAA,CAIO;IAHLvB,KAAK,EAAAwB,eAAA,EAAC,gBAAgB;MAAAC,MAAA,GACHlB,KAAA,CAAAI,gBAAgB,IAAIJ,KAAA,CAAAmB;IAAQ;IAC9CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEhB,QAAA,CAAAiB,kBAAA,IAAAjB,QAAA,CAAAiB,kBAAA,IAAAD,IAAA,CAAkB;2BAG5BN,mBAAA,CAgTM,OAhTNQ,UAgTM,GA/SJ3B,YAAA,CASE4B,uBAAA;IARCC,SAAS,EAAE1B,KAAA,CAAAI,gBAAgB;IAC3BC,UAAU,EAAEC,QAAA,CAAAD,UAAU;IACtBsB,UAAU,EAAE3B,KAAA,CAAA4B,KAAK,CAACD,UAAU;IAC5BE,eAAe,EAAE7B,KAAA,CAAA4B,KAAK,CAACE,cAAc;IACrCC,YAAY,EAAE/B,KAAA,CAAA4B,KAAK,CAACI,cAAc;IAClCC,YAAW,EAAE3B,QAAA,CAAA4B,gBAAgB;IAC7BrB,QAAM,EAAEP,QAAA,CAAAQ,YAAY;IACpBqB,eAAc,EAAE7B,QAAA,CAAAE;wJAEnBQ,mBAAA,CAoSO;IApSDvB,KAAK,EAAAwB,eAAA,EAAC,cAAc;MAAA,qBAAgCjB,KAAA,CAAAI;IAAgB;MACxEY,mBAAA,CAkSM,OAlSNoB,UAkSM,GAhSJrB,mBAAA,oDAAuD,EACvDA,mBAAA,goDA8BU,EAEVA,mBAAA,4CAA+C,EAC/CA,mBAAA,iDAAoD,EACpDA,mBAAA,84JAiGU,EAEVA,mBAAA,sCAAyC,EACzCC,mBAAA,CAuJM,OAvJNqB,UAuJM,GAtJJrB,mBAAA,CAqJM,OArJNsB,UAqJM,GApJJtB,mBAAA,CAmJM,OAnJNuB,UAmJM,G,4BAlJJvB,mBAAA,CAkCM;IAlCDvB,KAAK,EAAC;EAAoE,IAC7EuB,mBAAA,CAGK;IAHDvB,KAAK,EAAC;EAAmC,IAC3CuB,mBAAA,CAAiC;IAA9BvB,KAAK,EAAC;EAAmB,I,iBAAK,6BAEnC,E,GAEJsB,mBAAA,oDAAuD,EACnDA,mBAAA,8vDA0BU,C,sBAEZC,mBAAA,CA8GM,OA9GNwB,UA8GM,GA7GJxB,mBAAA,CA4GM,OA5GNyB,UA4GM,GA3GJ1B,mBAAA,4CAA+C,EAC/CA,mBAAA,uBAA0B,EAC1BA,mBAAA,+4DA6BU,EAEVA,mBAAA,wBAA2B,EAC3BC,mBAAA,CA6BM,OA7BN0B,UA6BM,GA5BJ1B,mBAAA,CA2BM,OA3BN2B,WA2BM,G,0BA1BJ3B,mBAAA,CAGK;IAHDvB,KAAK,EAAC;EAAgB,IACxBuB,mBAAA,CAAiC;IAA9BvB,KAAK,EAAC;EAAmB,I,iBAAK,sBAEnC,E,sBACWO,KAAA,CAAA4C,cAAc,CAACC,MAAM,U,cAAhClD,mBAAA,CAGM,OAHNmD,WAGM,EAAAzB,MAAA,QAAAA,MAAA,OAFJL,mBAAA,CAAqD;IAAlDvB,KAAK,EAAC;EAAuC,4BAChDuB,mBAAA,CAAyC;IAAtCvB,KAAK,EAAC;EAAM,GAAC,uBAAqB,oB,qBAEvCE,mBAAA,CAiBM,OAAAoD,WAAA,I,kBAhBJpD,mBAAA,CAUMqD,SAAA,QAAAC,WAAA,CAViBjD,KAAA,CAAA4C,cAAc,CAACM,KAAK,QAA/BC,OAAO;yBAAnBxD,mBAAA,CAUM;MAV8CyD,GAAG,EAAED,OAAO,CAACE,EAAE;MAC9D5D,KAAK,EAAC;QACTuB,mBAAA,CAIM,cAHJA,mBAAA,CAA2E,SAA3EsC,WAA2E,EAAAC,gBAAA,CAA9CjD,QAAA,CAAAkD,aAAa,CAACL,OAAO,CAACM,YAAY,mBAC/DzC,mBAAA,CAAsD,OAAtD0C,WAAsD,EAAAH,gBAAA,CAA9BJ,OAAO,CAACQ,aAAa,kBAC7C3C,mBAAA,CAA0D,SAA1D4C,WAA0D,EAAAL,gBAAA,CAA9BJ,OAAO,CAACU,WAAW,iB,GAEjD7C,mBAAA,CAES;MAFDvB,KAAK,EAAC,gCAAgC;MAAE2B,OAAK,EAAA0C,MAAA,IAAExD,QAAA,CAAAyD,kBAAkB,CAACZ,OAAO,CAACE,EAAE;uCAClFrC,mBAAA,CAA0B;MAAvBvB,KAAK,EAAC;IAAY,2B;kCAGdO,KAAA,CAAA4C,cAAc,CAACC,MAAM,Q,cAAhClD,mBAAA,CAIM,OAJNqE,WAIM,GAHJhD,mBAAA,CAES;IAFDvB,KAAK,EAAC,6BAA6B;IAAE2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAyC,MAAA,IAAExD,QAAA,CAAA2D,kBAAkB;KAAY,QAC3E,GAAAV,gBAAA,CAAGvD,KAAA,CAAA4C,cAAc,CAACC,MAAM,QAAO,eACtC,gB,+CAMR9B,mBAAA,yBAA4B,EAC5BC,mBAAA,CAwCM,OAxCNkD,WAwCM,GAvCJlD,mBAAA,CAsCM,OAtCNmD,WAsCM,G,4BArCJnD,mBAAA,CAGK;IAHDvB,KAAK,EAAC;EAAmB,IAC3BuB,mBAAA,CAAgC;IAA7BvB,KAAK,EAAC;EAAkB,I,iBAAK,uBAElC,E,sBACAuB,mBAAA,CAQM,OARNoD,WAQM,GAPJpD,mBAAA,CAGM,OAHNqD,WAGM,G,0BAFJrD,mBAAA,CAAyC;IAAnCvB,KAAK,EAAC;EAAO,GAAC,gBAAc,sBAClCuB,mBAAA,CAAsE,QAAtEsD,WAAsE,EAAAf,gBAAA,CAApCvD,KAAA,CAAA4B,KAAK,CAACC,eAAe,sB,GAEzDb,mBAAA,CAEM,OAFNuD,WAEM,GADJvD,mBAAA,CAAsG;IAAjGvB,KAAK,EAAC,yBAAyB;IAAEC,KAAK,EAAA8E,eAAA;MAAAC,KAAA,EAAWnE,QAAA,CAAAoE,qBAAqB;IAAA;+BAG/E1D,mBAAA,CAQM,OARN2D,WAQM,GAPJ3D,mBAAA,CAGM,OAHN4D,WAGM,G,0BAFJ5D,mBAAA,CAAqC;IAA/BvB,KAAK,EAAC;EAAO,GAAC,YAAU,sBAC9BuB,mBAAA,CAAsE,QAAtE6D,WAAsE,EAAAtB,gBAAA,CAAvCvD,KAAA,CAAA4B,KAAK,CAACkD,kBAAkB,sB,GAEzD9D,mBAAA,CAEM,OAFN+D,WAEM,GADJ/D,mBAAA,CAAsG;IAAjGvB,KAAK,EAAC,sBAAsB;IAAEC,KAAK,EAAA8E,eAAA;MAAAC,KAAA,EAAWnE,QAAA,CAAAoE,qBAAqB;IAAA;+BAG5E1D,mBAAA,CAQM,OARNgE,WAQM,GAPJhE,mBAAA,CAGM,OAHNiE,WAGM,G,0BAFJjE,mBAAA,CAAoC;IAA9BvB,KAAK,EAAC;EAAO,GAAC,WAAS,sBAC7BuB,mBAAA,CAAwE,QAAxEkE,WAAwE,EAAA3B,gBAAA,CAAtCvD,KAAA,CAAA4B,KAAK,CAACuD,iBAAiB,sB,GAE3DnE,mBAAA,CAEM,OAFNoE,WAEM,GADJpE,mBAAA,CAAwG;IAAnGvB,KAAK,EAAC,yBAAyB;IAAEC,KAAK,EAAA8E,eAAA;MAAAC,KAAA,EAAWnE,QAAA,CAAAoE,qBAAqB;IAAA;+BAG/E1D,mBAAA,CAKM,OALNqE,WAKM,GAJJrE,mBAAA,CAGS;IAHDvB,KAAK,EAAC,wBAAwB;IAAE2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAyC,MAAA,IAAExD,QAAA,CAAAgF,UAAU;gCACvDtE,mBAAA,CAAgC;IAA7BvB,KAAK,EAAC;EAAkB,4B,iBAAK,qBAElC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}